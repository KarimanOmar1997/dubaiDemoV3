/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{S as e}from"./BooleanBindUniform.js";import{l as t,d as r,k as a,Y as o,m as i,R as s}from"./Matrix4PassUniform.js";import{R as n}from"./Float4DrawUniform.js";import{g as c}from"./glsl.js";import{_ as l}from"./tslib.es6.js";import{p as u,S as p,N as m}from"./ShaderTechniqueConfiguration.js";import{S as d}from"./ShaderBuilder.js";import{l as h}from"../core/lang.js";import{m as f,d as g,p as b,u as _}from"./renderState.js";import{p as x}from"./enums.js";var y;!function(e){e[e.None=0]="None",e[e.Alpha=1]="Alpha",e[e.PremultipliedAlpha=2]="PremultipliedAlpha",e[e.Depth=3]="Depth",e[e.COUNT=4]="COUNT"}(y||(y={}));class F extends p{constructor(){super(...arguments),this.blitMode=y.None,this.hasOpacityFactor=!1}}l([u({count:y.COUNT})],F.prototype,"blitMode",void 0),l([u()],F.prototype,"hasOpacityFactor",void 0);class C extends m{constructor(){super(...arguments),this.opacity=1}}const O=Object.freeze(Object.defineProperty({__proto__:null,CompositingPassParameters:C,build:function(i){const s=new d;s.include(e),s.fragment.uniforms.add(new t("tex",(e=>e.texture))),i.hasOpacityFactor&&s.fragment.uniforms.add(new r("opacity",(e=>e.opacity)));const l=i.blitMode===y.Depth;return l&&(s.fragment.uniforms.add(new a("nearFar",(e=>e.camera.nearFar))),s.fragment.include(o),s.fragment.include(n)),s.fragment.main.add(c`
    ${l?c`
          float normalizedLinearDepth = (-linearDepthFromTexture(tex, uv) - nearFar[0]) / (nearFar[1] - nearFar[0]);
          fragColor = float2rgba(normalizedLinearDepth);`:c`
          fragColor = texture(tex, uv) ${i.hasOpacityFactor?"* opacity":""};`}`),s}},Symbol.toStringTag,{value:"Module"}));class j extends i{constructor(e,t){super(e,t,new s(O,(()=>Promise.resolve().then((()=>O)))))}initializePipeline(e){switch(e.blitMode){case y.None:case y.Depth:return f({colorWrite:g});case y.Alpha:return f({blending:_,colorWrite:g});default:h(e.blitMode);case y.PremultipliedAlpha:case y.COUNT:return f({blending:b,colorWrite:g})}}}class w{constructor(e,t=y.None){this._techniques=e,this._parameters=new C,this._configuration=new F,this._configuration.blitMode=t,e.precompile(j,this._configuration)}blit(e,t,r,a){e.bindFramebuffer(r.fbo),e.setClearColor(0,0,0,1),e.clear(x.COLOR),this._parameters.texture=t.getTexture();const o=this._techniques.get(j,this._configuration);e.bindTechnique(o,a,this._parameters),e.screen.draw()}blend(e,t,r,a,o=1){this._configuration.hasOpacityFactor=o<1;const i=this._techniques.get(j,this._configuration);return!!i.compiled&&(e.bindFramebuffer(r.fbo),this._parameters.texture=t.getTexture(),this._parameters.opacity=o,e.bindTechnique(i,a,this._parameters),e.screen.draw(),!0)}}function T(e){e.code.add("\n  vec4 blendColorsPremultiplied(vec4 source, vec4 dest) {\n    float oneMinusSourceAlpha = 1.0 - source.a;\n    return source + dest * oneMinusSourceAlpha;\n  }\n  ")}function v(e,t){return e[0]=t[0]*t[3],e[1]=t[1]*t[3],e[2]=t[2]*t[3],e[3]=t[3],e}export{T as B,F as C,w as a,y as b,C as c,j as d,v as p};
