/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../Graphic.js";import{X as i}from"./hash.js";import{l as r}from"../core/lang.js";import{m as s}from"./handleUtils.js";import{r as n,d as a}from"./maybe.js";import o from"../core/Promise.js";import{throwIfNotAbortError as l,throwIfAborted as u,throwIfAbortError as p,logOnError as h}from"../core/promiseUtils.js";import{initial as c,watch as d,when as y}from"../core/reactiveUtils.js";import{property as g}from"../core/accessorSupport/decorators/property.js";import{L as m}from"./Logger.js";import{subclass as f}from"../core/accessorSupport/decorators/subclass.js";import{d as _}from"./diffUtils.js";import{U as b}from"./UpdatingHandles.js";import{canProject as E,project as x}from"../geometry/support/webMercatorUtils.js";import{g as w,a as C}from"./renderingInfoUtils.js";import S from"../rest/support/Query.js";import{m as F}from"../layers/support/fieldUtils.js";import{D as v}from"./GridLocalOriginFactory.js";import{s as O}from"./TextureCompressionTracker.js";import{G as R,a as V,D as I}from"./ExtentSet.js";import{G as j,a as Q,b as U}from"./Graphics3DObjectStates.js";import{e as G}from"./graphicUtils.js";import{a as T}from"./attributeUtils.js";import H from"../core/Accessor.js";import{sqlAnd as q}from"../core/sql.js";import A from"../layers/support/FeatureFilter.js";import{a as P}from"./floorFilterUtils.js";import M from"../geometry/Extent.js";import{f as N}from"./typeUtils2.js";import{a as D}from"./QueryEngine.js";import J from"../layers/support/FieldsIndex.js";import L from"../rest/support/FeatureSet.js";import{c as k}from"./featureServiceUtils.js";import{f as z,d as B}from"./memoryEstimations.js";import{T as Z}from"./Scheduler.js";import{e as W,n as Y,i as X}from"./highlightUtils2.js";import{U as $}from"./RibbonLineMaterial.js";import{d as K}from"./HighlightDefaults.js";class ee{constructor(e){this._cache=e.newCache("QueryEngine",null,-1)}clear(){this._cache.clear()}destroy(){this._cache.destroy()}get(e){return this._cache.get(e)?.items}put(e,t){this._cache.put(e,new te(t))}get test(){}}class te{constructor(e){this.items=e}get cachedMemory(){return this.items.reduce(((e,t)=>e+t.usedMemory),z+B)}}const ie=D;let re=class extends H{constructor(e){super(e),this._dataQueryEngineInstance=null}destroy(){this.clear()}get layer(){return this.context.layer}get spatialReference(){return this.context.spatialReference}get _queryGeometryType(){switch(this.layer.geometryType){case"multipoint":case"point":case"polygon":case"polyline":return this.layer.geometryType;case"mesh":return"polygon";default:return}}get defaultQueryJSON(){return new S({outSpatialReference:this.spatialReference}).toJSON()}clear(){return!!this._dataQueryEngineInstance&&(this._dataQueryEngineInstance.destroy(),this._dataQueryEngineInstance=null,!0)}async executeQueryForIdSet(e,t,i){return this._dataQueryEngine.executeQueryForIdSet(this._ensureQueryJSON(e,t),i)}async executeQueryForCount(e,t){return this._dataQueryEngine.executeQueryForCount(this._ensureQueryJSON(e),t)}async executeQueryForExtent(e,t){const{count:i,extent:r}=await this._dataQueryEngine.executeQueryForExtent(this._ensureQueryJSON(e),t);return{count:i,extent:M.fromJSON(r)}}async executeQueryForIds(e,t){return this._dataQueryEngine.executeQueryForIds(this._ensureQueryJSON(e),t)}async executeQueryForLatestObservations(e,t){const i=await this._dataQueryEngine.executeQueryForLatestObservations(this._ensureQueryJSON(e),t),r=L.fromJSON(i);return r.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),r}async executeQuery(e,t){const i=await this._dataQueryEngine.executeQuery(this._ensureQueryJSON(e),t),r=L.fromJSON(i);return r.features.forEach((e=>{e.layer=this.layer,e.sourceLayer=this.layer})),r}_ensureQueryJSON(e,t){let i=this.defaultQueryJSON;if(null!=e&&("outSpatialReference"in e&&!e.outSpatialReference&&(e.outSpatialReference=this.spatialReference),i=e.toJSON(),i.cacheHint=!0),null!=t){const e=t.geometries.map((e=>e.toJSON())).reduce(((e,t)=>(e.rings=e.rings.concat(t.rings),e)));i={...i,cacheHint:!0,sceneFilter:{...t,geometry:e}}}return i}get _dataQueryEngine(){if(this._dataQueryEngineInstance)return this._dataQueryEngineInstance;const{priority:e,layer:t}=this,i="timeInfo"in t&&t.timeInfo?.toJSON()||null,r=k(t),s=N.toJSON(this._queryGeometryType),n=t.fieldsIndex?.toJSON()||new J([]),a=this.spatialReference.toJSON(),{hasZ:o,hasM:l,featureStore:u,scheduler:p,memoryController:h}=this.context,c=new ee(h);return this._dataQueryEngineInstance=new ie({hasZ:o,hasM:l,geometryType:s,fieldsIndex:n,timeInfo:i,spatialReference:a,featureIdInfo:r,featureStore:u,scheduler:p,cache:c,priority:e}),this._dataQueryEngineInstance}};e([g({constructOnly:!0})],re.prototype,"context",void 0),e([g({constructOnly:!0})],re.prototype,"priority",void 0),e([g()],re.prototype,"layer",null),e([g()],re.prototype,"spatialReference",null),e([g()],re.prototype,"_queryGeometryType",null),e([g()],re.prototype,"defaultQueryJSON",null),re=e([f("esri.views.3d.layers.graphics.QueryEngine")],re);class se{constructor(e,t,i,r,s,n){this.spatialReference=e,this.layer=t,this.resourceController=i,this._getFeatureStore=r,this.hasZ=s,this.hasM=n}get scheduler(){return this.resourceController.scheduler}get memoryController(){return this.resourceController.memoryController}get featureStore(){return this._getFeatureStore()}}let ne=class extends H{constructor(e){super(e),this._frameTask=null,this._queryEngine=null,this._updateRequested=!0,this._updatingHandles=new b,this._abortController=new AbortController}initialize(){const e=Z.FILTER_VISIBILITY,{layer:t,view:i}=this._configuration,{featureStore:r}=this.context,{spatialReference:s,resourceController:n}=i,a=this._configuration.hasZ??!1,o=this._configuration.hasM??!1,u=new se(s,t,n,(()=>r),a,o);this._queryEngine=new re({context:u,priority:e}),this._frameTask=i.resourceController.scheduler.registerTask(e),this._updatingHandles.add((()=>[this._compositedFeatureFilter,this._sceneFilter]),(()=>this._updateRequested=!0),c),this._updatingHandles.addWhen((()=>!this._frameTask.updating&&this._updateRequested),(()=>{this._frameTask.schedule((()=>this._updateVisibility()),this._abortController.signal).catch(l),this._updateRequested=!1}),c)}destroy(){this._abortController.abort(),this._updatingHandles.destroy(),this.clear(),this._frameTask=n(this._frameTask),this._queryEngine=a(this._queryEngine),this._set("context",null)}get updating(){return this._updateRequested||this._updatingHandles.updating||this._frameTask.updating}get defaultVisibility(){return null==this._compositedFeatureFilter&&null==this._sceneFilter}get _featureFilter(){return"filter"in this._configuration?this._configuration.filter:null}get _effectiveDisplayFilter(){return"effectiveDisplayFilter"in this._configuration?this._configuration.effectiveDisplayFilter:null}get _sceneFilter(){return"layerFilter"in this._configuration?this._configuration.layerFilter:null}get _floorFilter(){return P(this._configuration)}get _timeExtent(){return"timeExtent"in this._configuration?this._configuration.timeExtent:null}get _compositedFeatureFilter(){const{_featureFilter:e,_effectiveDisplayFilter:t,_timeExtent:i,_floorFilter:r}=this;let s=e?.clone();if(null!=t&&(s??=new A,s.where=q(s.where,t.where)),null!=i&&(s??=new A,s.timeExtent=s.timeExtent?.intersection(i)??i),null!=r){s??=new A;const e=null==s.where||""===s.where;s.where=e?r:q(s.where,r)}return s}get _configuration(){return this.context.configuration}reapply(){this._updateRequested=!0}clear(){this._queryEngine.clear(),this.context.clearFeaturesVisibility()}async _updateVisibility(){const{signal:e}=this._abortController,{context:t,_frameTask:i,_sceneFilter:r,_compositedFeatureFilter:s}=this;if(u(e),null==s&&null==r||0===t.getFeatureCount())return await i.schedule((()=>this.clear()),e);try{const n=await this._updatingHandles.addPromise(this._queryEngine.executeQueryForIdSet(s,r,e));return u(e),await i.schedule((()=>{t.updateFeatureVisibilities((e=>n.has(e)))}),e)}catch(r){return p(r),m.getLogger(this).warn(`FeatureFilter query failed: ${r}`,{error:r}),await i.schedule((()=>{t.setAllFeaturesVisibility(!0)}),e)}}};e([g({constructOnly:!0})],ne.prototype,"context",void 0),e([g()],ne.prototype,"updating",null),e([g()],ne.prototype,"defaultVisibility",null),e([g()],ne.prototype,"_featureFilter",null),e([g()],ne.prototype,"_effectiveDisplayFilter",null),e([g()],ne.prototype,"_sceneFilter",null),e([g()],ne.prototype,"_floorFilter",null),e([g()],ne.prototype,"_timeExtent",null),e([g()],ne.prototype,"_compositedFeatureFilter",null),e([g()],ne.prototype,"_configuration",null),e([g()],ne.prototype,"_updateRequested",void 0),ne=e([f("esri.views.3d.layers.support.FeatureVisibilityFilter")],ne);let ae=class extends o{constructor(e){super(e),this.type="graphics-3d",this._updatingHandles=new b,this.elevationFeatureExpressionEnabled=!1,this.scaleVisibilityEnabled=!1,this.filterVisibilityEnabled=!1,this.frustumVisibilityEnabled=!1,this.elevationAlignmentEnabled=!1,this.timeExtentEnabled=!1,this.setUidToIdOnAdd=!0,this.dataExtent=null,this.drapeSourceType=v.Features,this.preferredUpdatePolicy=$.ASYNC,this._suspendResumeExtent=null}initialize(){const e=this.owner,t=(this.filterVisibilityEnabled||this.timeExtentEnabled)&&"multipatch"!==e.layer.geometryType,i=new R({owner:this,layer:this.layer,preferredUpdatePolicy:this.preferredUpdatePolicy,elevationFeatureExpressionEnabled:this.elevationFeatureExpressionEnabled,graphicSymbolSupported:!1,hasZ:e.hasZ,hasM:e.hasM,setUidToIdOnAdd:this.setUidToIdOnAdd,componentFactories:{deconflictor:t=>e.view.deconflictor.addGraphicsOwner(t),labeler:(t,i)=>e.view.labeler.addGraphicsOwner(t,i),elevationAlignment:this.elevationAlignmentEnabled?(t,i)=>new Q({graphicsCoreOwner:this,graphicsCore:t,queryGraphicUIDsInExtent:i,elevationProvider:e.view.elevationProvider}):null,scaleVisibility:this.scaleVisibilityEnabled?(t,i)=>new V({graphicsCoreOwner:this,layer:this.layer,queryGraphicUIDsInExtent:i,graphicsCore:t,basemapTerrain:e.view.basemapTerrain}):null,filterVisibility:t?t=>new ne({context:{...t,configuration:e}}):null,objectStates:e=>new j(e)}});this._set("graphicsCore",i),this.frustumVisibilityEnabled&&this._set("frustumVisibility",new U({graphicsCoreOwner:this})),this.elevationAlignment&&this._updatingHandles.add((()=>this.layer.elevationInfo),((e,t)=>{_(e,t)&&this._updatingHandles.addPromise(this.graphicsCore.elevationInfoChange())})),this._updatingHandles.add((()=>this.layer.labelsVisible),(()=>this.graphicsCore.updateVisibilityInfo())),this._updatingHandles.add((()=>this.layer.labelingInfo),((e,t)=>{_(e,t)&&this.graphicsCore.updateLabelingInfo()})),this._updatingHandles.add((()=>this.preferredUpdatePolicy),(e=>this.graphicsCore.preferredUpdatePolicy=e)),this.addResolvingPromise(this._initializeAsync())}async _initializeAsync(){await h(this.graphicsCore.initializePromise);const e=this.owner;this._updatingHandles.add((()=>this.renderer),(e=>this._updatingHandles.addPromise(this.graphicsCore.rendererChange(e)))),this._updatingHandles.add((()=>e.fullOpacity),(()=>this.graphicsCore.opacityChange())),this._setupSuspendResumeExtent(),this.updateClippingExtent&&(this._updatingHandles.add((()=>e.view.clippingArea),(()=>this._updateClippingExtent())),this._updateClippingExtent()),this.graphicsCore.startCreateGraphics(),this.graphicsCore.labelsEnabled&&await h(this.graphicsCore.updateLabelingInfo())}destroy(){this._updatingHandles.destroy(),this._set("frustumVisibility",a(this.frustumVisibility)),this._set("graphicsCore",a(this.graphicsCore)),this._set("owner",null)}get layer(){return this.owner.layer}get layerViewUid(){return this.owner.layerViewUid}get dataUpdating(){return this.graphicsCore?.dataUpdating??!1}get renderer(){const{renderer:e,objectIdField:t}=this.layer;if(!e||!t||"heatmap"===e.type||!e.visualVariables)return e;const i=e.visualVariables.findIndex((e=>"rotation"===e.type&&null!=e.valueExpression&&F(e.valueExpression)===t&&(null==e.axis||"heading"===e.axis)&&"geographic"===e.rotationType));if(i<0)return e;const r=e.clone();return r.visualVariables?(r.visualVariables.splice(i,1),this._randomRotationRenderers??=new WeakMap,this._randomRotationRenderers.set(r,t),r):e}get scaleVisibility(){return this.graphicsCore?.scaleVisibility}get filterVisibility(){return this.graphicsCore?.filterVisibility}get elevationAlignment(){return this.graphicsCore?.elevationAlignment}get suspendResumeExtentMode(){return this.owner.suspendResumeExtentMode??"computed"}get scaleVisibilitySuspended(){return null!=this.scaleVisibility&&this.scaleVisibility.suspended}get suspended(){return this.owner.suspended}get legendEnabled(){return null==this.frustumVisibility||!this.frustumVisibility.suspended}get suspendInfo(){const e={};return this.scaleVisibilitySuspended&&(e.outsideScaleRange=!0),null!=this.frustumVisibility&&this.frustumVisibility.suspended&&(e.outsideOfView=!0),e}get updating(){return!!(this.graphicsCore?.updating||this.frustumVisibility?.updating||this._updatingHandles.updating)}get updatingRemaining(){return this.graphicsCore?.updatingRemaining??0}get featureStore(){return this.graphicsCore?.featureStore}get view(){return this.owner.view}get loadedGraphics(){return this.owner.loadedGraphics}get fullOpacity(){return this.owner?.fullOpacity}get filter(){return"filter"in this.owner?this.owner.filter:null}get slicePlaneEnabled(){return this.owner.slicePlaneEnabled}get updatePolicy(){return this.owner.updatePolicy}get featureSpatialReference(){return"featureSpatialReference"in this.owner?this.owner.featureSpatialReference:this.owner.view.spatialReference}get graphics3DGraphics(){return this.graphicsCore?.graphics3DGraphics}get graphics3DGraphicsByObjectID(){return this.graphicsCore?.graphics3DGraphicsByObjectID}get symbolUpdateType(){return this.graphicsCore?.symbolUpdateType}get displayFeatureLimit(){const e=this.view.quality,t=this.graphicsCore?.displayFeatureLimit;if(1===e)return t;const i=Math.ceil(t.maximumNumberOfFeatures*e);return new I(t.maximumTotalNumberOfVertices,i,t.averageSymbolComplexity)}get usedMemory(){return this.graphicsCore?.usedMemory??0}get loadedFeatures(){return this.graphicsCore?.numberOfGraphics??0}get usedMemoryPerFeature(){return this.graphicsCore?.usedMemoryPerGraphic??0}get unprocessedMemoryEstimate(){return this.graphicsCore?.unprocessedMemoryEstimate??0}get performanceInfo(){return this.graphicsCore.performanceInfo}maskOccludee(e){const t=this.graphicsCore?.objectStates;if(!t)return s();const{set:i,handle:r}=t.acquireOccludeeSet(null);return t.setUid(i,e.uid),r}highlight(e,i=null,r){const s=this.graphicsCore?.objectStates;if(!s)return W;if(r??=K,e instanceof S){const{set:t,handle:n}=s.acquireHighlightSet(r,i);return this.owner.queryObjectIds(e).then((e=>s.setObjectIds(t,e))),n}let n=Y(e);if(0===n.length)return W;if(n[0]instanceof t){const e=n;if(null==T(this.layer.fieldsIndex,e[0].attributes,i)){const t=e.map((e=>e.uid)),{set:i,handle:n}=s.acquireHighlightSet(r,null);return s.setUids(i,t),n}n=e.map((e=>T(this.layer.fieldsIndex,e.attributes,i)))}if(X(n[0])){const e=n,{set:t,handle:a}=s.acquireHighlightSet(r,i);return s.setObjectIds(t,e),a}return W}resetObjectStates(){this.graphicsCore?.objectStates?.reset()}whenGraphicBounds(e,t){return this.graphicsCore?.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.graphicsCore?.computeAttachmentOrigin(e,t)}notifyGraphicGeometryChanged(e){this.graphicsCore.notifyGraphicGeometryChanged(e)}notifyGraphicVisibilityChanged(e){this.graphicsCore.notifyGraphicVisibilityChanged(e)}notifyContentGeometryUpdate(){this.owner.notifyContentGeometryUpdate?.()}getRenderingInfo(e,t,r){const s=w(e,{renderer:t,arcade:r});if(s?.color){const e=s.color;e[0]=e[0]/255,e[1]=e[1]/255,e[2]=e[2]/255}if(null!=s&&null!=t&&this._randomRotationRenderers?.has(t)){const r=this._randomRotationRenderers.get(t),n=e.attributes[r],a=new i(0);a.updateFloatArray([n]),a.updateUint8Array([173]),s.heading=8.381e-8*a.digest()}return s}getRenderingInfoAsync(e,t,i,r){return C(e,{renderer:t,arcade:i,...r})}getSymbolLayerSize(e,t){return this.graphicsCore?.getSymbolLayerSize(e,t)}setObjectIdVisibility(e,t){this.graphicsCore?.setObjectIdVisibility(e,t)}refreshFilter(){null!=this.filterVisibility&&this.filterVisibility.reapply()}getGraphics3DGraphicByObjectId(e){return this.graphicsCore?.getGraphics3DGraphicByObjectId(e)}_updateClippingExtent(){const e=this.owner.view.clippingArea;this.graphicsCore.setClippingExtent(e,this.owner.view.spatialReference)&&(this.updateClippingExtent(e)||this.graphicsCore.recreateAllGraphics())}_setupSuspendResumeExtent(){(this.frustumVisibility||this.scaleVisibility)&&this.addHandles(d((()=>this.suspendResumeExtentMode),(()=>{switch(this.removeHandles(oe),this.suspendResumeExtentMode){case"computed":this.addHandles([d((()=>this.graphicsCore.computedExtent),(e=>this._updateSuspendResumeExtent(e)),c),d((()=>this.graphicsCore.extentPadding),(()=>this._updateSuspendResumeExtent(this.graphicsCore.computedExtent)))],oe);break;case"data":this.addHandles([y((()=>this.dataExtent),(e=>this._updateSuspendResumeExtent(e)),c),d((()=>this.graphicsCore.extentPadding),(()=>this._updateSuspendResumeExtent(this.dataExtent)))],oe);break;default:r(this.suspendResumeExtentMode)}}),c))}_updateSuspendResumeExtent(e){e?this._suspendResumeExtentChanged(this._extentToSuspendResumeRect(e,this._suspendResumeExtent)):this._suspendResumeExtentChanged(null)}_extentToSuspendResumeRect(e,t){const i=this.owner.view.spatialReference;if(!e.spatialReference.equals(i)){if(!E(e,i))return;e=x(e,i)}return G(e,t,O,this.graphicsCore.extentPadding)}_suspendResumeExtentChanged(e){null!=this.frustumVisibility&&this.frustumVisibility.setExtent(e),null!=this.scaleVisibility&&this.scaleVisibility.setExtent(e)}};e([g()],ae.prototype,"type",void 0),e([g({constructOnly:!0})],ae.prototype,"owner",void 0),e([g()],ae.prototype,"layer",null),e([g()],ae.prototype,"layerViewUid",null),e([g({readOnly:!0})],ae.prototype,"dataUpdating",null),e([g()],ae.prototype,"renderer",null),e([g({constructOnly:!0})],ae.prototype,"updateClippingExtent",void 0),e([g({constructOnly:!0})],ae.prototype,"elevationFeatureExpressionEnabled",void 0),e([g({constructOnly:!0})],ae.prototype,"graphicsCore",void 0),e([g({constructOnly:!0})],ae.prototype,"scaleVisibilityEnabled",void 0),e([g({constructOnly:!0})],ae.prototype,"filterVisibilityEnabled",void 0),e([g({constructOnly:!0})],ae.prototype,"frustumVisibilityEnabled",void 0),e([g({constructOnly:!0})],ae.prototype,"elevationAlignmentEnabled",void 0),e([g({constructOnly:!0})],ae.prototype,"timeExtentEnabled",void 0),e([g({constructOnly:!0})],ae.prototype,"setUidToIdOnAdd",void 0),e([g()],ae.prototype,"scaleVisibility",null),e([g()],ae.prototype,"filterVisibility",null),e([g()],ae.prototype,"elevationAlignment",null),e([g({constructOnly:!0})],ae.prototype,"frustumVisibility",void 0),e([g()],ae.prototype,"suspendResumeExtentMode",null),e([g()],ae.prototype,"dataExtent",void 0),e([g()],ae.prototype,"scaleVisibilitySuspended",null),e([g()],ae.prototype,"suspended",null),e([g()],ae.prototype,"legendEnabled",null),e([g()],ae.prototype,"suspendInfo",null),e([g()],ae.prototype,"updating",null),e([g()],ae.prototype,"updatingRemaining",null),e([g()],ae.prototype,"featureStore",null),e([g()],ae.prototype,"view",null),e([g()],ae.prototype,"loadedGraphics",null),e([g()],ae.prototype,"fullOpacity",null),e([g()],ae.prototype,"filter",null),e([g()],ae.prototype,"slicePlaneEnabled",null),e([g()],ae.prototype,"drapeSourceType",void 0),e([g()],ae.prototype,"updatePolicy",null),e([g()],ae.prototype,"preferredUpdatePolicy",void 0),e([g({readOnly:!0})],ae.prototype,"displayFeatureLimit",null),ae=e([f("esri.views.3d.layers.graphics.Graphics3DFeatureProcessor")],ae);const oe="suspendResumeExtentMode";export{ne as F,ae as G,re as Q,se as a};
