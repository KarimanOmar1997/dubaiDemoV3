/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import e from"../core/Accessor.js";import{h as s,i}from"../core/lang.js";import r from"../core/Identifiable.js";import{b as n}from"./maybe.js";import{ignoreAbortErrors as o,throwIfAborted as a}from"../core/promiseUtils.js";import{watch as h}from"../core/reactiveUtils.js";import{property as c}from"../core/accessorSupport/decorators/property.js";import"./Logger.js";import{subclass as u}from"../core/accessorSupport/decorators/subclass.js";import{e as d,w as l,o as p,c as m,k as f,h as y}from"./aaBoundingRect.js";import{getJsonType as g,isExtent as _,isPolyline as b,isPolygon as S}from"../geometry/support/jsonUtils.js";import v from"../layers/support/FieldsIndex.js";import{c as w,H as I,d as M,e as x,s as R,C as P}from"./CIMSymbolHelper.js";import{OverrideHelper as j}from"./OverrideHelper.js";import{e as E,f as C,h as T}from"./defaults.js";import{p as k,B as G,C as D,D as U,x as F}from"./definitions.js";import{F as z}from"./WGLContainer.js";import{F as A,C as O,a as B,G as q,R as V,M as L}from"./FeatureMetadata.js";import{g as H,c as $,a as W,b as Z,d as N,e as X,f as Q,h as Y,i as J,j as K,k as tt,l as et,n as st,F as it,m as rt}from"./FeatureCommandQueue.js";import{r as nt,p as ot}from"../geometry/Polygon.js";import{b as at,h as ht,q as ct}from"./featureConversionUtils.js";import{O as ut}from"./OptimizedGeometry.js";import{p as dt}from"./screenUtils.js";import{r as lt}from"./rbush.js";import{normalizeMapX as pt}from"../geometry/support/normalizeUtils.js";import{l as mt}from"./unitUtils.js";import{b as ft}from"./memoryEstimations.js";import{c as yt}from"./boundsUtils.js";import{j as gt}from"./coordsUtils.js";import{a as _t}from"./normalizeUtilsSync.js";import{f as bt,o as St}from"./mathUtils.js";import"../geometry/Extent.js";import{s as vt,k as wt}from"./mat3.js";import{c as It}from"./mat3f64.js";import{p as Mt}from"./vec2.js";import{b as xt,d as Rt,i as Pt,j as jt,k as Et}from"./dehydratedFeatures.js";import{c as Ct,p as Tt}from"./projectionSupport.js";import{U as kt}from"./UpdateTracking2D.js";class Gt extends A{static from(t,e,s){return new Gt(t,e,s)}constructor(t,e,s){super(s),this._items=t,this._tile=e,this._index=-1,this._cachedGeometry=null;const i=e.lod;i.wrap&&(this._wrappingInfo={worldSizeX:i.worldSize[0]})}get _current(){return this._items[this._index]}getItem(){return this._current}getZOrder(){return this._current.zOrder}getMeshWriters(){return this._current.symbolResource?.symbolInfo.meshWriters??[]}hasField(t){return null!=this._current.attributes[t]}field(t){return this.readAttribute(t)}get geometryType(){const t=g(this._current.geometry);return"esriGeometryPoint"===t?"esriGeometryMultipoint":t}getCursor(){return this.copy()}copy(){const t=new Gt(this._items,this._tile,this.metadata);return this.copyInto(t),t}copyInto(t){super.copyInto(t),t._cachedGeometry=this._cachedGeometry,t._index=this._index}get fields(){throw new Error("Fields reading not supported to graphics.")}get hasFeatures(){return!!this._items.length}get hasNext(){return this._index+1<this._items.length}get exceededTransferLimit(){throw new Error("InternalError: exceededTransferLimit not implemented for graphics.")}get hasZ(){return!1}get hasM(){return!1}get usedMemory(){return this._current.usedMemory}getInTransform(){return this._tile.transform}getSize(){return this._items.length}getAttributeHash(){let t="";for(const e in this._current.attributes)t+=this._current.attributes[e];return t}getObjectId(){return this._items[this._index].objectId}getDisplayId(){return this._current.displayId}setDisplayId(t){throw new Error("InternalError: Setting displayId not supported for graphics.")}setIndex(t){this._index=t}getIndex(){return this._index}next(){for(this._cachedGeometry=null;++this._index<this._items.length&&!this._getExists(););return this._index<this._items.length}readGeometryArea(){throw new Error("InternalError: readGeometryArea not supported for graphics.")}_readGeometry(){if(!this._cachedGeometry){let t=at(this._current.projectedGeometry,this.hasZ,this.hasM);if("esriGeometryPolyline"===this.geometryType&&(t=ht(new ut,t,this.hasZ,this.hasM,this.geometryType,this._tile.transform.scale[0])),this._cachedGeometry=ct(new ut,t,this.hasZ,this.hasM,this.geometryType,this._tile.transform),!this._cachedGeometry)return null;this._wrapGeometry(this._cachedGeometry)}return this._cachedGeometry}_wrapGeometry(t){if(!this._wrappingInfo)return;const{worldSizeX:e}=this._wrappingInfo;if(t.isPoint)return 1===e?(t.coords.push(k,0),t.coords.push(-1024,0),void t.lengths.push(3)):2===e?(t.coords.push(2*k,0),t.coords.push(-2048,0),void t.lengths.push(3)):void this._wrapVertex(t.coords,0,2,e);if("esriGeometryMultipoint"!==this.geometryType);else{if(1===e){const e=t.coords.slice();e[0]-=512;const s=t.coords.slice();s[0]+=512,t.coords.push(...e,...s);const i=t.lengths[0];return void t.lengths.push(i,i)}this._wrapVertex(t.coords,0,2,e)}}_wrapVertex(t,e,s,i){const r=e*s,n=t[r];n<-k*(i-2)?t[r]=n+k*i:n>k*(i-1)&&(t[r]=n-k*i)}_readX(){const t=this._readGeometry();return null!=t?t.coords[0]:0}_readY(){const t=this._readGeometry();return null!=t?t.coords[1]:0}_readServerCentroid(){switch(this.geometryType){case"esriGeometryPolygon":{const t=ot(this._current.projectedGeometry),e=new ut([],t);return ct(new ut,e,this.hasZ,this.hasM,this.geometryType,this._tile.transform)}case"esriGeometryPolyline":{const t=this._current.projectedGeometry,e=nt(t.paths,this.hasZ),s=new ut([],e);return ct(new ut,s,this.hasZ,this.hasM,this.geometryType,this._tile.transform)}}return null}_readAttribute(t,e){const s=this._current.attributes[t];if(void 0!==s)return s;const i=t.toLowerCase();for(const t in this._current.attributes)if(t.toLowerCase()===i)return this._current.attributes[t]}_readAttributes(){return this._current.attributes}}function Dt(t){return"curveRings"in t&&!!t.curveRings?.length||"curvePaths"in t&&!!t.curvePaths?.length}function Ut(t){return"b"in t}function Ft(t){return"c"in t}function zt(t){return"a"in t}function At(t,e,s,i){return t[0]=e[0]*(1-i)+s[0]*i,t[1]=e[1]*(1-i)+s[1]*i,t}function Ot(t,e){return Mt(t,e)}function Bt(t,e,s){const i=Ot(e,s);if(0===i)return Ot(e,t);const r=(e[0]-t[0])*(s[1]-t[1])-(e[1]-t[1])*(s[0]-t[0]);return r*r/i}function qt(t,e){const s=Math.atan2(t,e);return s<0?s+2*Math.PI:s}function Vt(t,e,s){const[i,r,n,o]=s.a,a=Math.abs(t-e),h=a>Math.PI,c=a<Math.PI,u=bt(a,Math.PI);return(!u&&(h&&n||c&&!n)||u&&(t>e&&o||t<e&&!o))&&(t+=2*(Math.sign(e-t)||1)*Math.PI),t}class Lt{constructor(t,e,s,i,r,n){this.cx=t,this.cy=e,this.radius=s,this.thetaStart=i,this.thetaEnd=r,this.isInvalid=n}}const Ht=It();class $t{constructor(t,e,s,i,r,n,o,a,h){this.cx=t,this.cy=e,this.a=s,this.b=i,this.cosR=r,this.sinR=n,this.u1=o,this.u2=a,this.isInvalid=h}}const Wt={maxSegmentLength:1/0,maxDeviation:1/0,maxSegmentsPerCurve:12e3,minSegmentsPerCurve:1},Zt=1e-6,Nt=[0,0];class Xt{constructor(t,e){this.curveStart=t,this.curveEnd=e,this.tStart=0,this.tEnd=0,this.tEndStack=[],this.arcEndStack=[]}get stackSize(){return this.tEndStack.length}initialize(t,e){this.tStart=0,this.arcStart=t,this.tEndStack.push(1),this.arcEndStack.push(e)}splitAt(t){this.tEndStack.push(this.tEnd),this.arcEndStack.push(this.arcEnd),this.tEndStack.push(t),this.arcEndStack.push(this.interpolate(t))}splitInHalf(){return this.splitAt((this.tStart+this.tEnd)/2)}pop(){this.tEnd=this.tEndStack.pop(),this.arcEnd=this.arcEndStack.pop()}next(){this.tStart=this.tEnd,this.arcStart=this.arcEnd}densify(t,{maxDeviation:e,maxSegmentLength:s,maxSegmentsPerCurve:i,minSegmentsPerCurve:r}){const n=s*s,o=e*e,a=1/i,h=this.interpolate(0),c=this.interpolate(1);Ot(this.curveStart,h)>Zt&&t.push(h),this.initialize(h,c);const u=1/r;for(let t=r-1;t>0;t--){const e=t*u;this.pop(),this.splitAt(e)}for(;this.stackSize>0;)this.pop(),this.tStart===this.tEnd||this.tEnd-this.tStart<a||(0===n||!isFinite(n)||Ot(this.arcStart,this.arcEnd)<n)&&(0===o||!isFinite(o)||this.getDeviation2()<o)?(t.push(this.arcEnd),this.next()):this.splitInHalf();return Ot(this.curveEnd,c)>Zt&&t.push([...this.curveEnd]),t}}class Qt extends Xt{constructor(t,e){const[s,i,r]=e.b;super(t,s),this._controlPointsStack=[],this._curveControlPoints=[i,r],this._arcControlPoints=[i,r],this._controlPointsStack.push(this._arcControlPoints)}splitAt(t){const{arcStart:e,arcEnd:s,tStart:i,tEnd:r}=this,[n,o]=this._arcControlPoints,a=(t-i)/(r-i),h=At([],e,n,a),c=At(Nt,n,o,a),u=At([],o,s,a),d=At([],h,c,a),l=At([],c,u,a),p=At([],d,l,a);this.tEndStack.push(this.tEnd),this.arcEndStack.push(this.arcEnd),this._controlPointsStack.push([l,u]),this.tEndStack.push(t),this.arcEndStack.push(p),this._arcControlPoints[0]=h,this._arcControlPoints[1]=d,this._controlPointsStack.push(this._arcControlPoints)}pop(){super.pop(),this._arcControlPoints=this._controlPointsStack.pop()}interpolate(t){const{curveStart:e,curveEnd:s}=this,[i,r]=this._curveControlPoints;return function(t,e,s,i,r){const n=1-r,o=n*n,a=r*r,h=o*n,c=3*r*o,u=3*a*n,d=a*r;return[t[0]*h+e[0]*c+s[0]*u+i[0]*d,t[1]*h+e[1]*c+s[1]*u+i[1]*d]}(e,i,r,s,t)}getDeviation2(){const{arcStart:t,arcEnd:e}=this,[s,i]=this._arcControlPoints;return Math.max(Bt(s,t,e),Bt(i,t,e))}}class Yt extends Xt{constructor(t,e){const[s]=e.a;super(t,s),this._derivedEllipse=function(t,e){const[s,i,r,n,o,a,h]=e.a,[c,u]=t,[d,l]=s,[p,m]=i,f=a*h,y=Math.cos(o),g=Math.sin(o),_=qt(1/f*(u-m)*y-1/f*(c-p)*g,1/a*(u-m)*g+1/a*(c-p)*y),b=Vt(qt(1/f*(l-m)*y-1/f*(d-p)*g,1/a*(l-m)*g+1/a*(d-p)*y),_,e);return new $t(p,m,a,f,y,g,_,b,0===a||0===f)}(t,e)}pop(){super.pop(),this._tMid=(this.tStart+this.tEnd)/2,this._arcMid=this.interpolate(this._tMid)}splitInHalf(){this.tEndStack.push(this.tEnd),this.arcEndStack.push(this.arcEnd),this.tEndStack.push(this._tMid),this.arcEndStack.push(this._arcMid)}interpolate(t){return function(t,e){const{u1:s,u2:i}=t;return function(t,e){const{a:s,b:i,cosR:r,sinR:n,cx:o,cy:a}=t,h=Math.cos(e),c=Math.sin(e);return[s*h*r-i*c*n+o,s*h*n+i*c*r+a]}(t,s*(1-e)+i*e)}(this._derivedEllipse,t)}getDeviation2(){return Bt(this._arcMid,this.arcStart,this.arcEnd)}}function Jt(t,e,s,{cx:i,cy:r,radius:n,thetaStart:o,thetaEnd:a,isInvalid:h},{maxDeviation:c,maxSegmentLength:u,maxSegmentsPerCurve:d,minSegmentsPerCurve:l}){if(h)return t.push([...s]),t;const p=2*n,m=[i+n*Math.cos(o),r+n*Math.sin(o)],f=[i+n*Math.cos(a),r+n*Math.sin(a)];Ot(e,m)>Zt&&t.push(m);const y=Math.abs(a-o),g=u<p?2*Math.asin(u/p):y,_=c<=n?2*Math.acos(1-c/n):y,b=Math.min(g,_),S=Math.min(d,Math.max(l,Math.ceil(Math.abs(y/b)))),v=1/S;for(let e=1;e<S;e++){const s=e*v,h=o*(1-s)+a*s;t.push([i+n*Math.cos(h),r+n*Math.sin(h)])}return t.push(f),Ot(s,f)>Zt&&t.push([...s]),t}function Kt(t,e,s,i){if(function(t){return Array.isArray(t)}(s))return t.push([...s]),t;if(Ut(s))return function(t,e,s,i){return new Qt(e,s).densify(t,i)}(t,e,s,i);if(Ft(s))return function(t,e,s,i){const r=function(t,e){const[s,i]=e.c,r=function(t,e,s){const[i,r]=t,[n,o]=e,[a,h]=s,c=i*i+r*r,u=n*n+o*o,d=a*a+h*h;vt(Ht,i,n,a,r,o,h,1,1,1);const l=wt(Ht);if(0===l)return null;vt(Ht,c,u,d,r,o,h,1,1,1);const p=wt(Ht);return vt(Ht,c,u,d,i,n,a,1,1,1),[p/l*.5,wt(Ht)/l*-.5]}(t,i,s),n=null==r,o=r??At([],t,s,.5),[a,h]=t,[c,u]=i,[d,l]=s,[p,m]=o,f=a-p,y=h-m,g=Math.sqrt(f*f+y*y),_=qt(h-m,a-p),b=qt(u-m,c-p);let S=qt(l-m,d-p);return(b-_)*(S-b)<0&&(S+=2*Math.sign(_-S)*Math.PI),new Lt(p,m,g,_,S,n)}(e,s),[n]=s.c;return Jt(t,e,n,r,i)}(t,e,s,i);if(zt(s)){if(function(t){return 4===t.a.length}(s))return function(t,e,s,i){const r=function(t,e){const[s,i]=e.a,[r,n]=t,[o,a]=s,[h,c]=i,u=r-h,d=n-c,l=Math.sqrt(u*u+d*d),p=o-h,m=a-c,f=Math.sqrt(p*p+m*m),y=0===l||0===f||!St(l,f),g=l,_=qt(n-c,r-h),b=Vt(qt(a-c,o-h),_,e);return new Lt(h,c,g,_,b,y)}(e,s),[n]=s.a;return Jt(t,e,n,r,i)}(t,e,s,i);if(function(t){return 7===t.a.length}(s))return function(t,e,s,i){const[r,n,o,a,h,c,u]=s.a;return 0===c||0===u?(t.push([...r]),t):new Yt(e,s).densify(t,i)}(t,e,s,i)}return t}function te(t,e){if(!Dt(t))return t;const s=function(t){return"curveRings"in t?t.curveRings:t.curvePaths}(t),i=[];for(const t of s){const s=[];for(let i=0,n=1;n<t.length;i=n++){const o=Ut(r=t[i])?r.b[0]:Ft(r)?r.c[0]:zt(r)?r.a[0]:r;0===i&&s.push(o),Kt(s,o,t[n],{maxSegmentLength:e.maxSegmentLength??Wt.maxSegmentLength,maxDeviation:e.maxDeviation??Wt.maxDeviation,maxSegmentsPerCurve:e.maxSegmentsPerCurve??Wt.maxSegmentsPerCurve,minSegmentsPerCurve:Math.max(e.minSegmentsPerCurve??Wt.minSegmentsPerCurve,1)})}i.push(s)}var r;return"curvePaths"in t?{paths:i,spatialReference:t.spatialReference}:{rings:i,spatialReference:t.spatialReference}}class ee{static fromGraphic(t,e,s,i){return new ee(t.geometry,e,t.attributes,t.visible,t.uid,t.version,s,i)}constructor(t,e,s,i,r,n,o,a){this.geometry=t,this.symbol=e,this.attributes=s,this.visible=i,this.objectId=r,this._version=n,this.zOrder=o,this.displayId=a,this.symbolBounds=d(),this.prevSymbolBounds=d(),this.size=[0,0,0,0],this.geometryBounds=d(),this._isDensificationDirty=!1,this._densificationDeviation=1/0}get projectedGeometry(){return this._projectedGeometry}get linearCIM(){return this.symbolResource?.symbolInfo.linearCIM}get usedMemory(){return 128+ft(this.attributes)+xt(this.geometry)}get hasAnimations(){const{linearCIM:t}=this;return!!t&&t.some((t=>"animationParams"in t&&!!t.animationParams))}get hasCurvedGeoemtry(){return null!=this.geometry&&"mesh"!==this.geometry.type&&Dt(this.geometry)}update(t,e,s){return(this._version!==t.version||this.zOrder!==s||this.symbol!==e)&&(this.prevSymbolBounds=this.symbolBounds,this.symbolBounds=d(),this.zOrder=s,this.geometry=t.geometry,this.attributes=t.attributes,this.symbol=e,this.visible=t.visible,this._version=t.version,this.symbolResource=null,this._projectedGeometry=null,d(this.geometryBounds),this._minDensificationDeviation=null,this._isDensificationDirty=!0,!0)}updateDensificationResolution(t){if(!this.hasCurvedGeoemtry)return!1;const e=Math.max(function(t){return 2**Math.round(Math.log2(t))*jt()}(t),this._minDensificationDeviation??0);return e!==this._densificationDeviation&&(this._densificationDeviation=e,this._isDensificationDirty=!0,!0)}async projectAndNormalize(t){let e,s=this.geometry;if(s&&s.spatialReference&&"mesh"!==s.type&&("extent"===s.type&&(s=w(s)),e=Dt(s)?te(s,{maxSegmentLength:1/0,minSegmentsPerCurve:Rt()}):s.toJSON(),this._projectedGeometry=await se(e,s.spatialReference,t),yt(this.geometryBounds,this._projectedGeometry),this.hasCurvedGeoemtry&&null!=this._projectedGeometry)){const t=l(this.geometryBounds),e=p(this.geometryBounds);this._minDensificationDeviation=function(t,e){if(t>0&&e>0){const s=Math.min(t,e)/2,i=2*Math.PI/Et();return s*(1-Math.cos(i/2))}return null}(t,e)}}async densifyCurvedGeometryForDisplay(t){if(!this.hasCurvedGeoemtry||!this._isDensificationDirty)return;this._isDensificationDirty=!1;const e=this.geometry;if(!e||!e.spatialReference||"mesh"===e.type)return;const s=t.metersPerUnit/e.spatialReference.metersPerUnit,i=te(e,{maxDeviation:this._densificationDeviation*s,minSegmentsPerCurve:Pt()});this._projectedGeometry=await se(i,e.spatialReference,t)}}async function se(t,e,s){await Ct(t.spatialReference,s);const i=_t(t);if(!i)return;const r=Tt(i,e,s);return r&&gt(r),_(r)?w(r):r}class ie{constructor(t,e,s){this.added=t,this.updated=e,this.removed=s}hasAnyUpdate(){return!!(this.added.length||this.updated.length||this.removed.length)}}const re=1e-5;function ne(t,e){return e.zOrder-t.zOrder}class oe{constructor(t,e,s,i,r){this._items=new Map,this._boundsDirty=!1,this._outSpatialReference=t,this._cimResourceManager=e,this._hittestDrawHelper=new I(e),this._tileInfoView=s,this._store=r;const n=s.getClosestInfoForScale(i);this._resolution=this._tileInfoView.getTileResolution(n.level)}destroy(){this._hittestDrawHelper.destroy()}items(){return this._items.values()}getItem(t){return this._items.get(t)}async update(t,e,s){const i=[],r=[],n=[],o=new Set,a=[];let h=0;for(const n of t.items){h++;const t=n.uid,c=this._items.get(t),u=e(n);if(o.add(t),c){const t=c.update(n,u,h),e=c.updateDensificationResolution(this._resolution);t&&a.push(this._updateItem(c,s)),(t||e)&&r.push(c);continue}const d=this._store.createDisplayIdForObjectId(t),l=ee.fromGraphic(n,u,h,d);l.updateDensificationResolution(this._resolution),a.push(this._updateItem(l,s)),this._items.set(l.objectId,l),i.push(l)}for(const[t,e]of this._items.entries())o.has(t)||(this._store.releaseDisplayIdForObjectId(t),this._items.delete(t),n.push(e));return await Promise.all(a),this._index=null,new ie(i,r,n)}updateLevel(t){if(this._resolution===t)return!1;this._index=null,this._boundsDirty=!0,this._resolution=t;for(const t of this.items())if(t.hasCurvedGeoemtry)return!0;return!1}hitTest(t,e,i,r,n){const o=s("esri-mobile"),a=o?D:U,h=a+(o?0:G);t=pt(t,this._tileInfoView.spatialReference);const c=r*window.devicePixelRatio*h,u=m();u[0]=t-c,u[1]=e-c,u[2]=t+c,u[3]=e+c;const d=r*window.devicePixelRatio*a,l=m();l[0]=t-d,l[1]=e-d,l[2]=t+d,l[3]=e+d;const p=.5*r*(h+M),y=this._searchIndex(t-p,e-p,t+p,e+p);if(!y||0===y.length)return[];const g=[],_=m(),b=m();for(const t of y){if(!t.visible)continue;const{geometryBounds:e,symbolResource:s}=t;this._getSymbolBounds(_,s,e,b,n),b[3]=b[2]=b[1]=b[0]=0,f(_,u)&&g.push(t)}if(0===g.length)return[];const S=this._hittestDrawHelper,v=[];for(const t of g){const{projectedGeometry:e,symbolResource:s}=t;if(!s)continue;const{textInfo:i,symbolInfo:o}=s,a=o.cimSymbol;S.hitTest(l,a.symbol,e,i,n,r)&&v.push(t)}return v.sort(ne),v.map((t=>t.objectId))}queryItems(t){return 0===this._items.size?[]:this._searchForItems(t)}clear(){this._items.clear(),this._index=null}async _updateItem(t,e){await t.projectAndNormalize(this._outSpatialReference),await e(t);const{size:s}=t;s[0]=s[1]=s[2]=s[3]=0,this._getSymbolBounds(t.symbolBounds,t.symbolResource,t.geometryBounds,t.size,0)}_searchIndex(t,e,s,i){return this._boundsDirty&&(this._items.forEach((t=>this._getSymbolBounds(t.symbolBounds,t.symbolResource,t.geometryBounds,t.size,0))),this._boundsDirty=!1),this._index||(this._index=lt(9,(t=>({minX:t.symbolBounds[0],minY:t.symbolBounds[1],maxX:t.symbolBounds[2],maxY:t.symbolBounds[3]}))),this._index.load(Array.from(this._items.values()))),this._index.search({minX:t,minY:e,maxX:s,maxY:i})}_searchForItems(t){const e=this._tileInfoView.spatialReference,s=t.bounds,i=mt(e);if(i&&e.isWrappable){const[e,r]=i.valid,n=Math.abs(s[2]-r)<re,o=Math.abs(s[0]-e)<re;if((!n||!o)&&(n||o)){const i=t.resolution;let o;o=m(n?[e,s[1],e+i*M,s[3]]:[r-i*M,s[1],r,s[3]]);const a=this._searchIndex(s[0],s[1],s[2],s[3]),h=this._searchIndex(o[0],o[1],o[2],o[3]);return[...new Set([...a,...h])]}}return this._searchIndex(s[0],s[1],s[2],s[3])}_getSymbolBounds(t,e,s,i,r){if(!e||!e.symbolInfo.linearCIM)return null;if(t||(t=m()),y(t,s),!i||0===i[0]&&0===i[1]&&0===i[2]&&0===i[3]){const{textInfo:t,symbolInfo:s}=e,n=s.cimSymbol;i||(i=[0,0,0,0]);const o=x.getSymbolInflateSize(i,n.symbol,this._cimResourceManager,r,t);i[0]=dt(o[0]),i[1]=dt(o[1]),i[2]=dt(o[2]),i[3]=dt(o[3])}const n=this._resolution,o=x.safeSize(i);return t[0]-=o*n,t[1]-=o*n,t[2]+=o*n,t[3]+=o*n,t}}class ae{static getOrCreate(t,e,s){let i=e.get(t.id);return i||(i=new ae(t,s),e.set(t.id,i)),i}static fromItems(t,e,s){const i=new ae(t,s);for(const t of e)i.append(t);return i}constructor(t,e){this.tile=t,this.metadata=e,this.addedOrModified=[],this.removed=[],this.objectIdMap=null}get reader(){return this._reader||(this._reader=Gt.from(this.addedOrModified,this.tile,this.metadata)),this._reader}append(t){this.addedOrModified.push(t),t.hasAnimations&&(this.objectIdMap=this.objectIdMap||{},this.objectIdMap[t.displayId]=t.objectId)}}let he=class extends(r.IdentifiableMixin(e)){constructor(t){super(t),this._attached=!1,this._tiles=new Map,this._controller=new AbortController,this._hashToSymbolInfo=new Map,this._lastCleanup=performance.now(),this._cleanupRequired=!0,this.lastUpdateId=-1,this.renderer=null,this._updateTracking=new kt({debugName:"GraphicsView2D"}),this.updateRequested=!1,this.defaultPointSymbolEnabled=!0,this._commandQueue=new it({process:t=>{if("update"===t.type)return this._update();throw new Error("InternalError: Unsupported command")}}),this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this.container.destroy(),this.view=null,this.renderer=null,this._set("graphics",null),this._controller.abort(),this._graphicStore.clear(),this._graphicStore.destroy(),this._attributeStore=null,this._hashToSymbolInfo.clear(),this._updateTracking.destroy(),this._commandQueue.destroy()}_initAttributeStore(){this._storage=new O({spatialReference:this.view.spatialReference,fields:new v}),this._attributeStore=new B({isLocal:!0,update:t=>{s("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView2D.AttributeStoreView.updateStart`,{message:t}),this.container.attributeView.requestUpdate(t),this.container.requestRender(),s("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView2D.AttributeStoreView.updateEnd`,{message:t})}});const t=rt(null,[]);this._attributeStore.update(t,this._storage,null),this.container.checkHighlight=()=>this._attributeStore.hasHighlight}initialize(){this._initAttributeStore(),this._metadata=q.createGraphics(this.view.spatialReference),this._resourceProxy=new V({fetch:t=>Promise.all(t.map((t=>this.view.stage.textureManager.rasterizeItem(t)))),fetchDictionary:t=>{throw new Error("InternalError: Graphics do not support Dictionary requests")}}),this.addHandles([h((()=>this._effectiveRenderer),(()=>this._pushUpdate())),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{this.addHandles([this.graphics.on("change",(()=>this._pushUpdate()))]),this._graphicStore?.destroy(),this._graphicStore=new oe(this.view.spatialReference,this._cimResourceManager,this.view.featuresTilingScheme,this.view.state.scale,this._attributeStore),this._attached=!0,this.requestUpdate(),this._pushUpdate()}))]),this._updateTracking.addUpdateTracking("CommandQueue",this._commandQueue.updateTracking);const t=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:t,removed:[]})}get _effectiveRenderer(){return"function"==typeof this.renderer?this.renderer():this.renderer}get _cimResourceManager(){return this.view.stage.textureManager.resourceManager}get updating(){const t=!this._attached||this._updateTracking.updating;return s("esri-2d-log-updating")&&console.log(`Updating GraphicsView2D: ${t}\n  -> attaching ${!this._attached}\n  -> updateTracking ${this._updateTracking.updating}`),t}hitTest(t){if(!this.view||this.view.suspended)return[];const{resolution:e,rotation:s}=this.view.state,r=this._graphicStore.hitTest(t.x,t.y,2,e,s),n=new Set(r),o=this.graphics.items.reduce(((t,e)=>(n.has(e.uid)&&t.set(e.uid,e),t)),new Map);return r.map((t=>o.get(t))).filter(i)}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback()),this.notifyChange("updating")}processUpdate(t){this.updateRequested&&(this.updateRequested=!1,this.update(t))}viewChange(){this.requestUpdate()}setHighlight(t){const e=[];for(const{objectId:s,highlightFlags:i}of t){const t=this._graphicStore.getItem(s)?.displayId;e.push({objectId:s,highlightFlags:i,displayId:t})}this._attributeStore.setHighlight(e,t),this._pushUpdate()}graphicUpdateHandler(t){this._pushUpdate()}update(t){this.updateRequested=!1,this._attached&&this._graphicStore.updateLevel(t.state.resolution)&&this.pushUpdate()}pushUpdate(){this._pushUpdate()}_pushUpdate(){o(this._commandQueue.push({type:"update"}))}async _update(){try{s("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView._update start`);const t=await this._graphicStore.update(this.graphics,(t=>this._getSymbolForGraphic(t)),(t=>this._ensureSymbolResource(t)));for(const e of t.updated)this.container.restartAnimation(e.objectId);if(!t.hasAnyUpdate())return void this._attributeStore.sendUpdates();t.removed.length&&(this._cleanupRequired=!0),s("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView updateMessage`,t);const e=this._createTileMessages(t);await this._densifyItemsForDisplay(e),await this._fetchResources(e),this._write(e);for(const e of t.added)this._setFilterState(e);for(const e of t.updated)this._setFilterState(e);s("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView sendUpdate`,t),this._attributeStore.sendUpdates(),s("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView sendUpdate.await`,t)}catch(t){}this._cleanupSharedResources()}_createTileMessages(t){const e=new Map;for(const s of t.added){const t=this.view.graphicsTileStore.getIntersectingTiles(s.symbolBounds);for(const i of t)ae.getOrCreate(i,e,this._metadata).append(s)}for(const s of t.updated){const t=this.view.graphicsTileStore.getIntersectingTiles(s.prevSymbolBounds),i=this.view.graphicsTileStore.getIntersectingTiles(s.symbolBounds);for(const i of t)ae.getOrCreate(i,e,this._metadata).removed.push(s.displayId);for(const t of i)ae.getOrCreate(t,e,this._metadata).append(s)}for(const s of t.removed){const t=this.view.graphicsTileStore.getIntersectingTiles(s.symbolBounds);for(const i of t)ae.getOrCreate(i,e,this._metadata).removed.push(s.displayId)}return Array.from(e.values())}async _densifyItemsForDisplay(t){const e=new Map;for(const s of t)for(const t of s.addedOrModified)e.has(t)||e.set(t,t.densifyCurvedGeometryForDisplay(this.view.spatialReference));await Promise.all(e.values())}async _fetchResources(t){const e={timeZone:null,timeExtent:null};for(const{tile:i,reader:r}of t){s("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${i.id}] GraphicsView fetchResources`,t);const n=r.getCursor();for(;n.next();)for(const t of n.getMeshWriters())t.enqueueRequest(this._resourceProxy,n,i.createArcadeEvaluationOptions(e))}await this._resourceProxy.fetchEnqueuedResources()}_write(t){for(const e of t){s("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${e.tile.id}] GraphicsView write`,e);const t=this._writeMeshes(e);let i=this._tiles.get(e.tile.key);i||(i=this._createFeatureTile(e.tile.key)),s("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${e.tile.id}] GraphicsView onTileData`,e),this.container.onTileData(i,{type:"update",modify:t,remove:e.removed,end:!1,attributeEpoch:this._attributeStore.epoch,objectIdMap:e.objectIdMap}),this.container.requestRender()}}_writeMeshes(t){const e={timeZone:null,timeExtent:null},s=new L(t.tile.id),i=t.reader.getCursor();for(;i.next();){s.entityStart(i.getDisplayId(),i.getZOrder());for(const r of i.getMeshWriters())r.write(s,this._resourceProxy,i,t.tile.createArcadeEvaluationOptions(e),t.tile.level);s.entityEnd()}return{...s.serialize().message,tileId:t.tile.id}}_setFilterState(t){const e=t.displayId,s=this._attributeStore.getHighlightFlags(t.objectId);this._attributeStore.setData(e,0,0,s|(t.visible?F:0))}_getSymbolForGraphic(t){return null!=t.symbol?t.symbol:null!=this._effectiveRenderer?this._effectiveRenderer.getSymbol(t):this._getNullSymbol(t)}async _ensureSymbolResource(t){if(!t.symbol)return;const e=await this._getSymbolInfo(t.symbol);if(!e)return;const s=e.linearCIM.filter((t=>"text"===t.type));if(s.length>0){const i=await this._getTextResources(t,s);t.symbolResource={symbolInfo:e,textInfo:i}}else t.symbolResource={symbolInfo:e}}_getSymbolInfo(t){const e=t.hash();return this._hashToSymbolInfo.has(e)||this._hashToSymbolInfo.set(e,this._createSymbolInfo(e,t).catch((t=>null))),this._hashToSymbolInfo.get(e)}async _createSymbolInfo(t,e){const s=await this._convertToCIMSymbol(e),i=await this._createLinearCIM(s);return{hash:t,cimSymbol:s,linearCIM:i,meshWriters:await this._createMeshWriters(s,i)}}async _convertToCIMSymbol(t){const e=R(t);return"web-style"===e.type?this._convertToCIMSymbol(await e.fetchSymbol({acceptedFormats:["cim","web"]})):e}async _createLinearCIM(t){return await Promise.all(P.fetchResources(t.symbol,this._cimResourceManager,[])),this.view.stage.cimAnalyzer.analyzeSymbolReference(t,!1)}async _createMeshWriters(t,e){a(this._controller.signal);const s=this.container.instanceStore,i=this.view.stage.meshWriterRegistry,r=await async function(t,e,s){const i=[],r={scaleInfo:H(t),scaleExpression:null};for(const t of e)switch(t.type){case"marker":if(t.animationParams){if(t.animationParams.params.hasShiftAnimation){i.push(...tt(s.instances.animatedMarkerShift,t,st,r));break}i.push(...tt(s.instances.animatedMarker,t,st,r));break}i.push(...et(s.instances.marker,t,st,r));break;case"fill":if(t.animationParams){i.push(...X(s.instances.animatedPolygon,t,st,r));break}null==t.spriteRasterizationParam?i.push(...J(s.instances.fill,t,r)):i.push(...K(s.instances.complexFill,t,!1,r));break;case"line":if(t.animationParams){if(t.animationParams.params.hasShiftAnimation){i.push(...X(s.instances.animatedPolylineShift,t,st,r));break}i.push(...X(s.instances.animatedPolyline,t,st,r));break}t.spriteRasterizationParam?i.push(...Q(s.instances.texturedLine,t,!1,r)):i.push(...Y(s.instances.line,t,!1,r));break;case"text":i.push(...N(s.instances.text,t,st,r));break;case"gradientFill":i.push(...Z(s.instances.gradientFill,t,r));break;case"gradientStroke":i.push(...W(s.instances.gradientStroke,t,r));break;case"outlineFill":i.push(...$(s.instances.outlineFill,t,r))}return i}(t,e,s);return Promise.all(r.map((t=>i.createMeshWriter(this._storage,this._resourceProxy,{tileInfo:this.view.featuresTilingScheme.tileInfo},t,null))))}_onTileUpdate(t){if(t.added&&t.added.length>0)for(const e of t.added)this._updateTracking.addPromise(this._addTile(e));if(t.removed&&t.removed.length>0)for(const e of t.removed)this._removeTile(e.key)}_createFeatureTile(t){const e=this.view.featuresTilingScheme.getTileBounds(m(),t),s=this.view.featuresTilingScheme.getTileResolution(t.level),i=new z(t,s,e[0],e[3]);return this._tiles.set(t,i),this.container.addChild(i),i}async _addTile(t){if(!this._attached)return;const e=this._graphicStore.queryItems(t);if(!e.length)return;const s=this._createFeatureTile(t.key),i=ae.fromItems(t,e,this._metadata);await this._densifyItemsForDisplay([i]),await this._fetchResources([i]);const r=this._writeMeshes(i);s.onMessage({type:"append",append:r,clear:!1,end:!0,attributeEpoch:this._attributeStore.epoch,objectIdMap:i.objectIdMap})}_removeTile(t){if(!this._tiles.has(t))return;const e=this._tiles.get(t);this.container.removeChild(e),e.destroy(),this._tiles.delete(t)}_getNullSymbol(t){const e=t.geometry;return e?b(e)?C:S(e)||_(e)?T:this.defaultPointSymbolEnabled?E:null:this.defaultPointSymbolEnabled?E:null}async _getTextResources(t,e){const s=new Array,i=new Array;for(let r=0;r<e.length;r++){const n=e[r],{resource:o,overrides:a}=n.textRasterizationParam;if(a?.length>0){const e=j.resolveSymbolOverrides({type:"CIMSymbolReference",primitiveOverrides:a,symbol:{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,size:o.symbol.height,anchorPointUnits:"Relative",frame:{xmin:-5,ymin:-5,xmax:5,ymax:5},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{x:0,y:0},symbol:o.symbol,textString:o.textString}],scaleSymbolsProportionally:!0,respectFrame:!0}]}},t,this.view.spatialReference,null,g(t.projectedGeometry),null,null);e.then((t=>{const e=t.symbolLayers[0],{textString:s}=e.markerGraphics[0];i.push({type:"cim-rasterization-info",resource:{type:"text",textString:s||"",font:o.font}}),n.text=o.textString=s||""})),s.push(e)}else i.push({type:"cim-rasterization-info",resource:o})}s.length>0&&await Promise.all(s);const r=i.map((t=>this.view.stage.textureManager.rasterizeItem(t))),o=await Promise.all(r);n(o);const a=new Map;for(let t=0;t<e.length;t++){const s=e[t];a.set(s.textRasterizationParam.resource.symbol,{text:s.text,glyphMosaicItems:o[t]})}return a}_cleanupSharedResources(){if(!this._cleanupRequired)return;const t=performance.now();if(t-this._lastCleanup<5e3)return;this._cleanupRequired=!1,this._lastCleanup=t;const e=new Set;for(const t of this._graphicStore.items()){const s=t.symbolResource?.symbolInfo.hash;e.add(s)}const s=new Set(this._hashToSymbolInfo.keys());for(const t of s.values())e.has(t)||this._hashToSymbolInfo.delete(t)}};t([c()],he.prototype,"_effectiveRenderer",null),t([c({constructOnly:!0})],he.prototype,"layerId",void 0),t([c({constructOnly:!0})],he.prototype,"requestUpdateCallback",void 0),t([c()],he.prototype,"container",void 0),t([c({constructOnly:!0})],he.prototype,"graphics",void 0),t([c()],he.prototype,"renderer",void 0),t([c()],he.prototype,"_updateTracking",void 0),t([c()],he.prototype,"updating",null),t([c()],he.prototype,"view",void 0),t([c()],he.prototype,"updateRequested",void 0),t([c()],he.prototype,"defaultPointSymbolEnabled",void 0),he=t([u("esri.views.2d.layers.graphics.GraphicsView2D")],he);export{he as G};
