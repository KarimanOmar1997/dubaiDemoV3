/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e,c as t}from"./tslib.es6.js";import{L as s}from"./Logger.js";import{debounce as i,isAbortError as r}from"../core/promiseUtils.js";import{watch as o,sync as a,initial as n}from"../core/reactiveUtils.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import{h as p}from"../core/lang.js";import{subclass as u}from"../core/accessorSupport/decorators/subclass.js";import{l as c}from"./multidimensionalUtils.js";import{R as d,B as h,F as m}from"./RasterVFDisplayObject.js";import{L as y}from"./LayerView2D.js";import{i as g}from"./datasetUtils.js";import{d as f}from"./pixelRangeUtils.js";import{b}from"./clipUtils.js";import{c as w}from"./aaBoundingRect.js";import{g as x}from"./viewpointUtils.js";import{c as _}from"./mat3f32.js";import{f as v,b as C}from"./maybe.js";import{c as j,d as T,r as S,h as R,m as P,s as I}from"./mat3.js";import{f as z}from"./vec2f32.js";import{D as k}from"./DisplayObject.js";import{b as M,q as F,r as D,S as V,P as B,T as O,a as U}from"./enums.js";import{c as L,h as A,e as G,f as q}from"./rasterUtils.js";import{T as E}from"./TiledDisplayObject.js";import{W}from"./enums4.js";import{T as N}from"./TileContainer.js";import{e as Z,W as H,O as Q,X as $,f as J,m as K,a as X,t as Y,B as ee,V as te,Y as se,Z as ie,l as re,x as oe,D as ae,h as ne,u as le,S as pe,U as ue,G as ce,n as de,_ as he,o as me,M as ye,F as ge,w as fe,$ as be,p as we,q as xe,r as _e,y as ve,E as Ce,A as je,z as Te,a0 as Se,H as Re,J as Pe,T as Ie,a1 as ze,d as ke,I as Me,b as Fe,j as De,a2 as Ve,a3 as Be,g as Oe,a4 as Ue,a5 as Le,a6 as Ae,a7 as Ge,a8 as qe,a9 as Ee,aa as We,ab as Ne,ac as Ze,ad as He,ae as Qe,af as $e,s as Je,ag as Ke,L as Xe,ah as Ye,ai as et,aj as tt,ak as st,al as it,am as rt,an as ot,ao as at,ap as nt,c as lt,C as pt,aq as ut,ar as ct,as as dt}from"./GraphShaderModule.js";import{R as ht}from"./TechniqueType.js";import{s as mt}from"./bitmapUtils.js";import{o as yt,u as gt}from"./utils26.js";import{p as ft}from"./definitions.js";import{F as bt}from"./FramebufferObject.js";import{a as wt,T as xt}from"./Texture.js";import{y as _t,E as vt}from"./vectorFieldUtils.js";import Ct from"../core/Accessor.js";import{U as jt}from"./UpdatingHandles.js";import Tt from"../geometry/Extent.js";import St from"../geometry/Point.js";import Rt from"../layers/support/PixelBlock.js";import Pt from"../layers/support/TileInfo.js";import{u as It,c as zt,g as kt,r as Mt}from"./RawBlockCache.js";import{d as Ft,m as Dt}from"./rasterProjectionHelper.js";import{b as Vt,T as Bt,a as Ot}from"./TileStrategy.js";import"./TileKey2.js";import{T as Ut}from"./Scheduler.js";import{g as Lt}from"./capabilities2.js";import{e as At}from"./util.js";import Gt from"../views/layers/ImageryTileLayerView.js";import qt from"../views/layers/LayerView.js";import{R as Et}from"./RefreshableLayerView.js";import"../config.js";import"./handleUtils.js";import"../core/Error.js";import"./events.js";import"./watch.js";import"./ObjectPool.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"./SetUtils.js";import"./get.js";import"./utils.js";import"./Lifecycle.js";import"./tracking.js";import"./SimpleTrackingTarget.js";import"./ensureType.js";import"./MapUtils.js";import"./metadata.js";import"./Warning.js";import"../layers/support/DimensionalDefinition.js";import"../core/JSONSupport.js";import"../core/Handles.js";import"./ObservableBase.js";import"../Graphic.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../core/Collection.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"./jsonUtils.js";import"../core/accessorSupport/decorators/cast.js";import"./reader.js";import"./writer.js";import"../layers/support/fieldUtils.js";import"../core/sql.js";import"./guards.js";import"./datetime.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/support/AttachmentsOrderByInfo.js";import"./jsonMap.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./locale.js";import"./constants.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../Color.js";import"./colorUtils2.js";import"./mathUtils.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/content/UtilityNetworkAssociationsContent.js";import"../popup/support/UtilityNetworkAssociationType.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../geometry/support/jsonUtils.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./Axis.js";import"./extentUtils.js";import"./boundsUtils.js";import"../geometry/Polyline.js";import"./typeUtils2.js";import"./createFeatureId.js";import"./typeUtils.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../core/Loadable.js";import"../core/Promise.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils5.js";import"../symbols/edges/Edges3D.js";import"./screenUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils6.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./vec3f64.js";import"./aaBoundingBox.js";import"../symbols/IconSymbol3DLayer.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"./lineMarkers.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/Font.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/MarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./utils31.js";import"./VertexArrayObject.js";import"./memoryEstimations.js";import"./VertexElementDescriptor.js";import"./dataUtils.js";import"./WGLBrushVTLSymbol.js";import"./vec4f32.js";import"./StyleDefinition.js";import"./enums2.js";import"./config.js";import"./WGLContainer.js";import"./utils30.js";import"./getDataTypeBytes.js";import"./BoundingBox.js";import"./ShaderCompiler.js";import"./ProgramTemplate.js";import"./Program.js";import"./mat2df32.js";import"./mat2d.js";import"./vec3.js";import"./common.js";import"./vec3f32.js";import"./Container.js";import"./EffectView.js";import"./parser.js";import"./utils2.js";import"./mat4.js";import"./earcut.js";import"./vec2.js";import"./vec2f64.js";import"./featureConversionUtils.js";import"./OptimizedFeature.js";import"./OptimizedGeometry.js";import"./OptimizedFeatureSet.js";import"./clippingUtils.js";import"./utils23.js";import"./ReactiveMap.js";import"./highlightOptionsUtils.js";import"../views/support/HighlightOptions.js";import"./HighlightDefaults.js";import"./ClipRect.js";import"./layerViewUtils.js";import"../Viewpoint.js";import"../Camera.js";import"../CameraLayout.js";import"./Cyclical.js";import"./mat2df64.js";import"./projectionUtils.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"./projectXYZToVector.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"./utils10.js";import"./utils11.js";import"./FBOAttachmentType.js";import"./ShaderBuilder.js";import"./BindType.js";import"./constants3.js";import"../layers/support/LOD.js";import"./TileKey.js";import"./ScheduledQueueProcessor.js";import"./Queue.js";import"./signal.js";import"./debugFlags.js";import"./rasterFieldUtils.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"./timeSupport2.js";import"../support/timeUtils.js";import"./timeUtils.js";import"../time/TimeExtent.js";import"./utils8.js";import"./Version2.js";import"./Version.js";import"./tagSymbols.js";import"./popupUtils.js";const Wt={bandCount:3,minOutput:0,maxOutput:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class Nt extends k{constructor(e=null,t=null,s=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._maskTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this._mask=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=t,this.interpolation=s}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(e){this._processedTexture!==e&&(this._disposeTextures(!0),this._processedTexture=e)}get rasterTexture(){return this._rasterTexture}set rasterTexture(e){this._rasterTexture!==e&&(this._rasterTexture?.dispose(),this._rasterTexture=e),null==e&&(this.projected=!1)}get processed(){return this._processed}set processed(e){this._processed=e,e||(this.processedTexture=v(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||Wt}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture=v(this._rasterTexture),this._rasterTextureBandIds=null),this.projected=!1,this.invalidateTexture())}get mask(){return this._mask}set mask(e){this._mask!==e&&(this._mask=e,this._maskTexture=v(this._maskTexture))}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdsChanged(e)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode("bilinear"===this._getTextureSamplingMethod(e||"nearest")?M.LINEAR:M.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid!==e&&(this._transformGrid=e,this._transformGridTexture=v(this._transformGridTexture))}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}getRasterTextureSize(e=!1){const t=e||this.projected;return[t?this.width:this.source?.width||this.width,t?this.height:this.source?.height||this.height]}getRasterCellSize(){const e=this.rawPixelData?.srcPixelSize,{projected:t,resolution:s}=this;return e&&!t?[e.x,e.y]:[s,s]}_createTransforms(){return{displayViewScreenMat3:_()}}setTransform(e){const t=j(this.transforms.displayViewScreenMat3),[s,i]=e.toScreenNoRotation([0,0],[this.x,this.y]),r=this.resolution/this.pixelRatio/e.resolution,o=r*this.width,a=r*this.height,n=Math.PI*this.rotation/180;T(t,t,z(s,i)),T(t,t,z(o/2,a/2)),S(t,t,-n),T(t,t,z(-o/2,-a/2)),R(t,t,z(o,a)),P(this.transforms.displayViewScreenMat3,e.displayViewMat3,t)}getTextures({forProcessing:e=!1,useProcessedTexture:t=!1}={}){const s=t?this._processedTexture??this._rasterTexture:this._rasterTexture,i=[],r=[];return s?(this._transformGridTexture&&!this.projected&&(r.push(this._transformGridTexture),i.push("u_transformGrid")),r.push(s),i.push("u_image"),!this._colormapTexture||!t&&e||(r.push(this._colormapTexture),i.push("u_colormap")),this._maskTexture&&(r.push(this._maskTexture),i.push("u_mask")),{names:i,textures:r}):{names:i,textures:r}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:e}){if(!this.stage)return void this._disposeTextures();const t=this._isValidSource(this.source);t&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(e)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(e),this._rasterTexture&&(t?(this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=L(e,this.transformGrid)),this._mask&&!this._maskTexture&&(this._maskTexture=A(e,this._mask,[this.width,this.height]))):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:e}=this;0!==e.length&&(this.processedTexture=e.shift(),e.forEach((e=>e?.dispose())),e.length=0,this.processed=!!this.processedTexture)}_createOrDestroyRasterTexture(e){const t=this.source?.extractBands(this.bandIds);if(!this._isValidSource(t))return void(this._rasterTexture&&(this._rasterTexture=v(this._rasterTexture),this._rasterTextureBandIds=null));const s=!this._isBandIdsChanged(this.bandIds);if(this._rasterTexture){if(s)return;this._rasterTexture=v(this._rasterTexture),this._rasterTextureBandIds=null}this._supportsBilinearTexture=!!e.capabilities.textureFloatLinear;const i=this._getTextureSamplingMethod(this.interpolation),r=this.isRendereredSource;this._rasterTexture=G(e,t,i,r),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdsChanged(e){const t=this._rasterTextureBandIds;return!(null==t&&null==e||t&&e&&t.join("")===e.join(""))}_isValidSource(e){return null!=e&&e.pixels?.length>0}_getTextureSamplingMethod(e){const{type:t}=this.symbolizerParameters,s="lut"===t&&!this.symbolizerParameters.isClassBreaks||"hillshade"===t||"stretch"===t&&1===this.symbolizerParameters.bandCount;return!this._supportsBilinearTexture||s||"bilinear"!==e&&"cubic"!==e?"nearest":"bilinear"}_updateColormapTexture(e){const t=this._colormap,s=this.symbolizerParameters.colormap;return s?t?s.length!==t.length||s.some(((e,s)=>e!==t[s]))?(this._colormapTexture&&(this._colormapTexture=v(this._colormapTexture)),this._colormapTexture=q(e,s),void(this._colormap=s)):void 0:(this._colormapTexture=q(e,s),void(this._colormap=s)):(this._colormapTexture&&(this._colormapTexture=v(this._colormapTexture)),void(this._colormap=null))}_disposeTextures(e=!1){e?this.projected&&(this._transformGridTexture=v(this._transformGridTexture)):(this._rasterTexture=v(this._rasterTexture),this._colormapTexture=v(this._colormapTexture),this._transformGridTexture=v(this._transformGridTexture),this._maskTexture=v(this._maskTexture),this._rasterTextureBandIds=null,this._colormap=null,this._colormapTextureInvalidated=!0),this._processedTexture=v(this._processedTexture)}}class Zt extends E{constructor(e,t,s,i,r,o,a=null){super(e,t,s,i,r,o),this.bitmap=null,this.bitmap=new Nt(a,null,null),this.bitmap.coordScale=[r,o],this.bitmap.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e){super.setTransform(e),this.bitmap.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}_createTransforms(){return{displayViewScreenMat3:_(),tileMat3:_()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}class Ht extends ue{}function Qt(e,t,s=!1){return t?s?function(e,t){const s=Y(t.transformTexture,e);return new te(s.r,s.g)}(e,t):function(e,t){const{transformTexture:s,targetImageSize:i,transformSpacing:r}=t,o=Z(e.multiply(i)),a=new te(4,1),n=Z(o.divide(r)).multiply(a),l=J(o.add(new te(.5,.5)).divide(r)),p=new H(ie(n.x),ie(n.y)),u=new re(l,1);return oe(ae(l.x,l.y),function(e,t,s){const i=$(e,t,new Q(0)),r=new H(t.x.add(1),t.y),o=$(e,r,new Q(0));return new te(ne(i.rgb,s),ne(o.rgb,s))}(s,p,u),function(e,t,s){const i=new H(t.x.add(2),t.y),r=$(e,i,new Q(0)),o=new H(t.x.add(3),t.y),a=$(e,o,new Q(0));return new te(ne(r.rgb,s),ne(a.rgb,s))}(s,p,u))}(e,t):e}function $t(e,t,s){const{bicubic:i=!1,bilinear:r=!1,nearestOnEdge:o=!1}=s??{};return i||r?i?mt(t.texture,e,t.srcImageSize):function(e,t,s,i){const r=Z(t.multiply(s)),o=new H(new Q(r.x),new Q(r.y)),a=new H(o.x.add(1),o.y),n=new H(o.x,o.y.add(1)),l=new H(o.x.add(1),o.y.add(1)),p=$(e,o,new Q(0)),u=$(e,a,new Q(0)),c=$(e,n,new Q(0)),d=$(e,l,new Q(0)),h=J(t.multiply(s)),m=K(p,u,h.x),y=K(c,d,h.x),g=K(m,y,h.y);if(!i)return g;const f=new X(p.a,u.a,c.a,d.a),b=f.xy.multiply(f.zw),w=Z(b.x.multiply(b.y).add(.5)),x=g.multiply(w),_=yt(w).multiply(Y(e,t));return x.add(_)}(t.texture,e,t.srcImageSize,o):Y(t.texture,e)}e([le(pe)],Ht.prototype,"transformTexture",void 0),e([le(te)],Ht.prototype,"targetImageSize",void 0),e([le(te)],Ht.prototype,"transformSpacing",void 0),e([le(te)],Ht.prototype,"transformGridSize",void 0);class Jt extends xe{}e([me(0,te)],Jt.prototype,"position",void 0);class Kt extends ue{}e([le(pe)],Kt.prototype,"texture",void 0),e([le(ye)],Kt.prototype,"dvsMat3",void 0),e([le(te)],Kt.prototype,"coordScale",void 0),e([le(te)],Kt.prototype,"srcImageSize",void 0),e([le(ge)],Kt.prototype,"opacity",void 0);class Xt extends ue{}e([le(pe)],Xt.prototype,"maskTexture",void 0);class Yt extends ce{constructor(){super(...arguments),this.applyProjection=!0,this.lookupProjection=!1,this.bilinear=!1,this.bicubic=!1,this.nearestOnEdge=!1,this.applyPixelMask=!1}vertex(e){const t=e.position,{dvsMat3:s,coordScale:i}=this.config,r=s.multiply(new re(t.multiply(i),1));return{uv:t,glPosition:new X(r,1)}}fragment(e){const t=new de,s=Qt(e.uv,this.applyProjection?this.projectionConfig:void 0,this.lookupProjection),i=oe(function(e){const t=ee(new te(-1e-5,-1e-5),e).multiply(ee(e,new te(1.00001,1.00001))),s=yt(t.x.multiply(t.y));return new se(s)}(s),new X(0,0,0,0),this._colorize(s));let r=i.a.multiply(this.config.opacity);if(this.applyPixelMask){const t=this._getPixelMask(e.uv);r=r.multiply(t)}return t.fragColor=new X(i.rgb,1).multiply(r),t}_getPixel(e){const{config:t,bicubic:s,bilinear:i,nearestOnEdge:r}=this;return $t(e,t,{bicubic:s,bilinear:i,nearestOnEdge:r})}_getPixelMask(e){const{maskTexture:t}=this.pixelMaskConfig,s=Y(t,e);return he(s.a)}}e([fe],Yt.prototype,"applyProjection",void 0),e([fe],Yt.prototype,"lookupProjection",void 0),e([fe],Yt.prototype,"bilinear",void 0),e([fe],Yt.prototype,"bicubic",void 0),e([fe],Yt.prototype,"nearestOnEdge",void 0),e([fe],Yt.prototype,"applyPixelMask",void 0),e([le(Kt)],Yt.prototype,"config",void 0),e([be(Ht)],Yt.prototype,"projectionConfig",void 0),e([be(Xt)],Yt.prototype,"pixelMaskConfig",void 0),e([t(0,we(Jt))],Yt.prototype,"vertex",null),e([t(0,we(class extends _e{}))],Yt.prototype,"fragment",null);class es extends ue{}function ts(e,t,s,i=!0){const{colormapTexture:r,colormapOffset:o,colormapMaxIndex:a}=s,n=e.r.multiply(t).subtract(o),l=ve(n,new ge(0),a),p=new te(l.add(.5).divide(a.add(1)),0),u=Y(r,p),c=new X(u.rgb,u.a.multiply(e.a));if(i)return c;const d=ee(new ge(0),n).multiply(ee(n,s.colormapMaxIndex));return c.multiply(d)}e([le(pe)],es.prototype,"colormapTexture",void 0),e([le(ge)],es.prototype,"colormapOffset",void 0),e([le(ge)],es.prototype,"colormapMaxIndex",void 0);class ss extends Yt{constructor(){super(...arguments),this.type="RasterColorizerLUTShader"}_colorize(e){return ts(this._getPixel(e),new ge(1),this.colormapConfig,!1)}}function is(e){const t=new X(0,-1/3,2/3,-1),s=oe(Ce(e.y,e.z),new X(e.zy,t.wz),new X(e.yz,t.xy)),i=oe(Ce(e.x,s.x),new X(s.xyw,e.x),new X(e.x,s.yzx)),r=i.x.subtract(je(i.w,i.y)),o=new ge(1e-10),a=i.w.subtract(i.y),n=r.multiply(6).add(o),l=Te(a.divide(n).add(i.z)),p=i.x.add(o),u=je(r.divide(p),new ge(1));return new re(l,u,i.x)}function rs(e){const t=new X(1,2/3,1/3,3),s=Te(J(e.xxx.add(t.xyz)).multiply(6).subtract(t.www)),i=ve(s.subtract(t.xxx),new re(0,0,0),new re(1));return e.z.multiply(K(t.xxx,i,e.y))}e([le(es)],ss.prototype,"colormapConfig",void 0);class os extends ue{}function as(e){const t=Te(e),s=ee(t,new te(1,1)).multiply(t),i=new ge(2).subtract(t),r=ee(new ge(1),t).multiply(i);return s.add(r)}function ns(e,t,s){const i=new ge(1).divide(s),r=Y(e,as(i.multiply(new te(-1,-1)).add(t))),o=Y(e,as(i.multiply(new te(0,-1)).add(t))),a=Y(e,as(i.multiply(new te(1,-1)).add(t))),n=Y(e,as(i.multiply(new te(-1,0)).add(t))),l=Y(e,as(t)),p=Y(e,as(i.multiply(new te(1,0)).add(t))),u=Y(e,as(i.multiply(new te(-1,1)).add(t))),c=Y(e,as(i.multiply(new te(0,1)).add(t))),d=Y(e,as(i.multiply(new te(1,1)).add(t))),h=new X(r.a,o.a,a.a,n.a),m=new X(p.a,u.a,c.a,d.a),y=h.multiply(m),g=y.xy.multiply(y.zw),f=g.x.multiply(g.y).multiply(l.a),b=new Se(new ge(0),10);return b[0]=r.r,b[1]=o.r,b[2]=a.r,b[3]=n.r,b[4]=l.r,b[5]=p.r,b[6]=u.r,b[7]=c.r,b[8]=d.r,b[9]=f,b}function ls(e,t){const s=new X(e[5],e[3],e[7],e[1]).multiply(2),i=new re(e[2],s[0],e[8]),r=new re(e[0],s[1],e[6]),o=ne(i.subtract(r),new re(1)),a=new re(e[6],s[2],e[8]),n=new re(e[0],s[3],e[2]),l=ne(a.subtract(n),new re(1));return new te(o,l).multiply(t)}function ps(e,t,s){const{factor:i}=t,r=ls(e,i),o=Re(ne(r,r).add(1)),a=e[9],{sinZsinAs:n,sinZcosAs:l,cosZs:p,weights:u}=t;if(!s){const e=us({sinZsinA:n[0],sinZcosA:l[0],cosZ:p[0],weights:new ge(1),dzxy:r,dzd:o});return new X(e,e,e,a)}const c=us({sinZsinA:new re(n[0],n[1],n[2]),sinZcosA:new re(l[0],l[1],l[2]),cosZ:new re(p[0],p[1],p[2]),weights:new re(u[0],u[1],u[2]),dzxy:r,dzd:o}),d=us({sinZsinA:new re(n[3],n[4],n[5]),sinZcosA:new re(l[3],l[5],l[5]),cosZ:new re(p[3],p[4],p[5]),weights:new re(u[3],u[4],u[5]),dzxy:r,dzd:o}),h=ne(c.add(d),new re(1));return new X(h,h,h,a)}function us(e){const t=e.sinZsinA.multiply(e.dzxy.y),s=e.sinZcosA.multiply(e.dzxy.x),i=t.subtract(s),r=e.cosZ.add(i).divide(e.dzd);return r.multiply(ee(new ge(0),r)).multiply(e.weights)}function cs(e,t){const{pixelSizeFactor:s}=e,i=[e.factor[0]/t[0],e.factor[1]/t[1]];if(s>0){const{zFactor:r,pixelSizePower:o,gcsFactor:a}=e,n=t[0]*a,l=t[1]*a;i[0]=(r+n**o*s)/(8*n),i[1]=(r+l**o*s)/(8*l)}return i}e([le(Se.ofType(ge,6))],os.prototype,"sinZcosAs",void 0),e([le(Se.ofType(ge,6))],os.prototype,"sinZsinAs",void 0),e([le(Se.ofType(ge,6))],os.prototype,"cosZs",void 0),e([le(Se.ofType(ge,6))],os.prototype,"weights",void 0),e([le(ge)],os.prototype,"minValue",void 0),e([le(ge)],os.prototype,"maxValue",void 0),e([le(te)],os.prototype,"factor",void 0);class ds extends Yt{constructor(){super(...arguments),this.type="RasterColorizerShadedReliefShader",this.applyColormap=!1,this.isMultidirectional=!1}_colorize(e){const{texture:t}=this.config,s=ps(ns(t,e,this.config.srcImageSize),this.hillshadeConfig,this.isMultidirectional);if(!this.applyColormap)return new X(s.x,s.x,s.x,s.a);const{minValue:i,maxValue:r}=this.hillshadeConfig,o=this._getPixel(e),a=r.subtract(i),n=o.r.subtract(i),l=ve(n.divide(a),new ge(0),new ge(1)),p=ts(new X(l,l,l,1),new ge(255),this.colormapConfig),u=is(p.xyz),c=rs(new re(u.xy,s.x));return new X(c,p.a.multiply(s.a))}}e([fe],ds.prototype,"applyColormap",void 0),e([fe],ds.prototype,"isMultidirectional",void 0),e([le(os)],ds.prototype,"hillshadeConfig",void 0),e([be(es)],ds.prototype,"colormapConfig",void 0);class hs extends ue{}function ms(e,t,s,i=255){const r=s?function(e,t){const{minCutOff:s,maxCutOff:i,minOutput:r,maxOutput:o,gamma:a,gammaCorrection:n}=t,l=ve(e,s,i).subtract(s),p=i.subtract(s),u=l.divide(p),c=ee(new ge(1),a),d=he(a.subtract(1)),h=o.subtract(r),m=new re(1),y=Pe(m.divide(h),u.multiply(n)),g=yt(c.multiply(d).multiply(y)),f=Pe(u,m.divide(a)),b=g.multiply(h).multiply(f).add(r);return ve(b,r,o)}(e.rgb,t).divide(i):function(e,t){const{minCutOff:s,maxCutOff:i,factor:r,minOutput:o}=t;return ve(e,s,i).subtract(s).multiply(r).add(o)}(e.rgb,t);return new X(r,e.a)}e([le(ge)],hs.prototype,"minOutput",void 0),e([le(ge)],hs.prototype,"maxOutput",void 0),e([le(re)],hs.prototype,"minCutOff",void 0),e([le(re)],hs.prototype,"maxCutOff",void 0),e([le(re)],hs.prototype,"factor",void 0),e([le(re)],hs.prototype,"gamma",void 0),e([le(re)],hs.prototype,"gammaCorrection",void 0);class ys extends Yt{constructor(){super(...arguments),this.type="RasterColorizerStretchShader",this.isMultiband=!0,this.applyColormap=!1,this.useGamma=!1,this.noOp=!1}_colorize(e){const t=this._getPixel(e);if(this.noOp)return t;let s=ms(t,this.stretchConfig,this.useGamma);if(this.isMultiband)return s;if(s=new X(s.rrr,s.a),this.applyColormap){const e=this.useGamma?255:1;s=ts(s,new ge(e),this.colormapConfig)}return s}}e([fe],ys.prototype,"isMultiband",void 0),e([fe],ys.prototype,"applyColormap",void 0),e([fe],ys.prototype,"useGamma",void 0),e([fe],ys.prototype,"noOp",void 0),e([le(hs)],ys.prototype,"stretchConfig",void 0),e([be(es)],ys.prototype,"colormapConfig",void 0);class gs extends Ie{constructor(){super(...arguments),this.name="BrushRasterColorizer",this.type=ht.RasterColorizer,this.shaders={lut:new ss,stretch:new ys,shadedRelief:new ds}}render(e,t){for(const s of t.bitmaps){if(!s.source||s.suspended)continue;e.timeline.begin(this.name);const{painter:t}=e;t.setPipelineState({depth:!1,stencil:{test:{mask:255,ref:s.stencilRef,compare:D.EQUAL,op:{fail:F.KEEP,zFail:F.KEEP,zPass:F.KEEP}},write:!1},color:{write:[!0,!0,!0,!0],blendMode:"composite"}}),s.updateTexture(e),s.processedTexture||s.updateProcessedTexture();const{type:i}=s.symbolizerParameters,r="stretch"===i?this._getStretchOptions(s):"lut"===i?this._getLutOptions(s):this._getShadedReliefOptions(s);"bilinear"!==s.interpolation||e.context.capabilities.textureFloatLinear||(r.defines.bilinear=!0),t.submitDrawMesh(e.context,r,t.quadMesh),e.timeline.end(this.name)}}_getLutOptions(e){const{config:t,projectionConfig:s,colormapConfig:i,pixelMaskConfig:r,projectionDefines:o}=this._getCommonConfig(e),a=this._getInterpolationDefines("nearest",!1);return{shader:this.shaders.lut,uniforms:{projectionConfig:s,config:t,colormapConfig:i,pixelMaskConfig:r},defines:{...o,...a,applyPixelMask:!!r},optionalAttributes:null,useComputeBuffer:!1}}_getStretchOptions(e){const t=e.symbolizerParameters,{config:s,projectionConfig:i,colormapConfig:r,pixelMaskConfig:o,projectionDefines:a}=this._getCommonConfig(e),n=this._getInterpolationDefines(e.interpolation,1===t.bandCount);return{shader:this.shaders.stretch,uniforms:{projectionConfig:i,config:s,stretchConfig:t,colormapConfig:r,pixelMaskConfig:o},defines:{...a,...n,isMultiband:t.bandCount>1,applyColormap:!!r,useGamma:t.useGamma,noOp:e.isRendereredSource&&!e.processed,applyPixelMask:!!o},optionalAttributes:null,useComputeBuffer:!1}}_getShadedReliefOptions(e){const t=e.symbolizerParameters,{config:s,projectionConfig:i,colormapConfig:r,pixelMaskConfig:o,projectionDefines:a}=this._getCommonConfig(e),n=this._getInterpolationDefines(e.interpolation,!0);return{shader:this.shaders.shadedRelief,uniforms:{projectionConfig:i,config:s,hillshadeConfig:t,colormapConfig:r,pixelMaskConfig:o},defines:{...a,...n,isMultidirectional:t.hillshadeType>0,applyColormap:!!r,applyPixelMask:!!o},optionalAttributes:null,useComputeBuffer:!1}}_getCommonConfig(e){const{coordScale:t,computedOpacity:s,transforms:i}=e,{names:r,textures:o}=e.getTextures({useProcessedTexture:e.processed}),a=o[r.indexOf("u_image")],n=e.getRasterTextureSize(),l={texture:{texture:a,unit:0},dvsMat3:i.displayViewScreenMat3,coordScale:t,srcImageSize:n,opacity:s},p=o[r.indexOf("u_transformGrid")],{transformGrid:u}=e,c=!(!p||!u),d=c?{transformTexture:{texture:p,unit:2},targetImageSize:[e.width,e.height],transformSpacing:u.spacing,transformGridSize:u.size}:void 0,h=o[r.indexOf("u_colormap")],{colormap:m,colormapOffset:y}=e.symbolizerParameters,g=h&&m?{colormapTexture:{texture:h,unit:1},colormapOffset:y??0,colormapMaxIndex:m.length/4-1}:void 0,f=o[r.indexOf("u_mask")];return{config:l,projectionConfig:d,colormapConfig:g,pixelMaskConfig:f?{maskTexture:{texture:f,unit:3}}:void 0,projectionDefines:{applyProjection:c,lookupProjection:c&&1===u.spacing[0]}}}_getInterpolationDefines(e,t){const s="bilinear"===e&&t;return{bilinear:s,bicubic:"cubic"===e,nearestOnEdge:s}}}function fs(e,t){const s=new wt;return s.width=e,s.height=t,s.internalFormat=V.RGBA32F,s.samplingMode=M.NEAREST,s.dataType=B.FLOAT,s.isImmutable=!0,s.wrapMode=O.CLAMP_TO_EDGE,s}function bs(e,t,s){const i=fs(t,s);return new xt(e,i)}function ws(e,t,s){const i=fs(t,s);return new bt(e,i)}class xs extends Ie{shutdown(e){super.shutdown(e),this._fbo?.dispose(),this._fbo=void 0}render(e,t){const{rasterFunction:s}=e;if(!s)return;const{context:i}=e,r="indexedColormap"in s.parameters?q(i,s.parameters.indexedColormap):void 0,o="Reproject"===s.name,a=i.getBoundFramebufferObject(),n=i.getViewport();for(const a of t.bitmaps){const n=o?!(a.rasterTexture&&a.projected):!a.processed;if(!a.source||!n||a.suspended)continue;e.timeline.begin(this.name);const{painter:l}=e;l.setPipelineState({depth:!1,stencil:{test:!1,write:!1},color:{write:[!0,!0,!0,!0],blendMode:"custom",blendParameters:{srcRGB:U.ONE,dstRGB:U.ZERO,srcAlpha:U.ONE,dstAlpha:U.ZERO}}}),o||(a.processedTexture=v(a.processedTexture)),a.updateTexture(e);const[p,u]=a.getRasterTextureSize(o),c=p===ft&&u===ft,d=c?t.processorFbo:ws(i,p,u);i.bindFramebuffer(d),i.setViewport(0,0,d.width,d.height),this._process(e,a,r);const h=bs(e.context,p,u);if(d.copyToTexture(0,0,p,u,0,0,h),o)a.rasterTexture=h;else{const t=e.hasBranches?s.id:0;a.functionTextures[t]=h}c||d.dispose(),e.timeline.end(this.name)}r?.dispose(),i.bindFramebuffer(a),i.setViewport(n.x,n.y,n.width,n.height)}_getCommonConfig(e,t){const{rasterFunction:s,hasBranches:i}=e,{raster:r,rasters:o}=s.parameters,a=i?r?.id??o?.filter((e=>"Constant"!==e.name))?.[0]?.id??-1:0,n=t.functionTextures[a]??t.rasterTexture,l="Reproject"===s.name;return{texture:{texture:n,unit:0},srcImageSize:t.getRasterTextureSize(l)}}_getMultipleInputConfig(e,t){return t?.length?2===t.length?{twoRasterConfig:this._getTwoInputConfig(t,e)}:3===t.length?{threeRasterConfig:this._getThreeInputConfig(t,e)}:{}:{}}_getConstantCount(e){return e?.filter((e=>"Constant"===e.name)).length??0}_getTextures(e,t){return e.filter((e=>"Constant"!==e.name)).map((e=>null!=e.id&&"Identity"!==e.name?t.functionTextures[e.id]:t.rasterTexture))}_getTwoInputConfig(e,t){const s=this._getTextures(e,t),i=s[1]?{texture:s[1],unit:1}:void 0,r=e.findIndex((e=>"Constant"===e.name)),o=0===r?new Float32Array([0,1,0,1,0,0,0,0,0]):new Float32Array([1,0,0,0,1,0,0,0,0]);return{image1:i,image1Const:r>-1?e[r].parameters.value:0,imageSwap:o}}_getThreeInputConfig(e,t){const s=this._getTextures(e,t);let i=0,r=0,o=new Float32Array([1,0,0,0,1,0,0,0,1]);const a=s[1]?{texture:s[1],unit:1}:void 0,n=s[2]?{texture:s[2],unit:2}:void 0,l=[];if(e.forEach(((e,t)=>"Constant"===e.name&&l.push(t))),1===l.length)i=e[l[0]].parameters.value,o=0===l[0]?new Float32Array([0,1,0,0,0,1,1,0,0]):1===l[0]?new Float32Array([1,0,0,0,0,1,0,1,0]):new Float32Array([1,0,0,0,1,0,0,0,1]);else if(2===l.length){i=e[l[0]].parameters.value,r=e[l[1]].parameters.value;const t=e.findIndex((e=>"Constant"!==e.name));o=0===t?new Float32Array([1,0,0,0,1,0,0,0,1]):1===t?new Float32Array([0,1,0,1,0,0,0,0,1]):new Float32Array([0,0,1,1,0,0,0,1,0])}return{image1:a,image2:n,image1Const:i,image2Const:r,imageSwap:o}}}class _s extends xe{}e([me(0,te)],_s.prototype,"position",void 0);class vs extends ue{}e([le(pe)],vs.prototype,"texture",void 0),e([le(te)],vs.prototype,"srcImageSize",void 0);class Cs extends ce{vertex(e){return{uv:e.position,glPosition:new X(gt(e.position),0,1)}}fragment(e){const t=new de,s=Qt(e.uv),i=this._process(s);return t.fragColor=new X(i.rgb,1).multiply(i.a),t}_getPixel(e){return $t(e,this.config)}}e([le(vs)],Cs.prototype,"config",void 0),e([t(0,we(_s))],Cs.prototype,"vertex",null),e([t(0,we(class extends _e{}))],Cs.prototype,"fragment",null);class js extends ue{}e([le(te)],js.prototype,"cellSize",void 0);class Ts extends Cs{constructor(){super(...arguments),this.type="AspectShader"}_process(e){const{texture:t}=this.config,s=ns(t,e,this.config.srcImageSize),i=new te(1).divide(this.aspectConfig.cellSize.multiply(8)),{x:r,y:o}=ls(s,i),a=ze(o),n=s[9].multiply(he(Te(r).add(Te(a)))),l=Te(he(r)),p=new ge(3.14159265359),u=new ge(0),c=ee(u,a).multiply(.5).multiply(p).add(ee(a,u).multiply(1.5).multiply(p)),d=ke(new ge(2.5).multiply(p).add(Me(a,ze(r))),new ge(2).multiply(p)),h=K(c,d,l).multiply(180).divide(p);return new X(h,h,h,n)}}function Ss(e){const t=he(e),s=e.add(Te(t).subtract(1));return t.multiply(t).divide(s)}function Rs(e){return new X(Z(e.rgb.add(.5)),e.a)}function Ps(e,t){return ee(t.x,e).multiply(ee(e,t.y))}e([le(js)],Ts.prototype,"aspectConfig",void 0);class Is extends ue{}e([le(ye)],Is.prototype,"bandIndexMat3",void 0);class zs extends ue{}e([le(re)],zs.prototype,"adjustments",void 0);class ks extends Cs{constructor(){super(...arguments),this.type="BandArithmeticShader",this.isOutputRounded=!1}_process(e){const t=this._getPixel(e),s=this.bandArithmeticConfig.bandIndexMat3.multiply(t.rgb),i=this._processIndex(s),r=new X(i,i,i,t.a);return this.isOutputRounded?Rs(r):r}_processIndex(e){const{r:t,g:s}=e,i=this.adjustmentConfig?.adjustments;switch(this.indexType){case"ndxi":{const e=t.subtract(s),i=t.add(s);return e.multiply(Ss(i))}case"sr":return t.multiply(Ss(s));case"ci":return t.multiply(Ss(s)).subtract(1);case"savi":{const{x:e}=i,r=t.subtract(s),o=t.add(s).add(e);return r.multiply(Ss(o)).multiply(e.add(1))}case"tsavi":{const{x:e,y:r,z:o}=i,a=o.multiply(e.multiply(e).add(1)).subtract(r.multiply(e)),n=e.multiply(t.subtract(e.multiply(s)).subtract(r)),l=r.multiply(t).add(s).add(a);return n.multiply(Ss(l))}case"msavi":{const e=t.multiply(2).add(1),i=e.multiply(e).subtract(t.subtract(s).multiply(8));return e.subtract(Re(i)).multiply(.5)}case"gemi":{const e=t.multiply(t).subtract(s.multiply(s)).multiply(2).add(t.multiply(1.5)).add(s.multiply(.5)),i=t.add(s).add(.5),r=e.multiply(Ss(i)),o=r.multiply(yt(r.multiply(.25))),a=s.subtract(.125).multiply(Ss(yt(s)));return o.subtract(a)}case"pvi":{const{x:e,y:r}=i,o=Re(e.multiply(e).add(1));return t.subtract(s.multiply(e)).subtract(r).multiply(Ss(o))}case"vari":{const t=e.g.subtract(e.r),s=e.g.add(e.r).subtract(e.b);return t.multiply(Ss(s))}case"rtvicore":return t.subtract(s).multiply(100).subtract(t.subtract(e.b).multiply(10));case"bai":{const e=Pe(new ge(.1).subtract(s),new ge(2)),i=Pe(new ge(.06).subtract(t),new ge(2));return Ss(e.add(i))}case"evi":{const i=e.b,r=t.add(s.multiply(6)).subtract(i.multiply(7.5)).add(1);return t.subtract(s).multiply(2.5).multiply(Ss(r))}case"wndwi":{const{r:t,g:s,b:r}=e,o=i.x,a=o.multiply(s),n=o.multiply(r),l=t.add(a).add(r).subtract(n);return t.subtract(a).subtract(r).add(n).multiply(Ss(l))}case"mtvi":{const i=e.b,r=Pe(t.multiply(2).add(1),new ge(2)),o=t.multiply(6).subtract(Re(s).multiply(5)),a=Re(r.subtract(o).subtract(.5)),n=t.subtract(i).multiply(1.2),l=s.subtract(i).multiply(2.5);return n.subtract(l).multiply(1.5).multiply(Ss(a))}default:return t}}}e([fe],ks.prototype,"indexType",void 0),e([fe],ks.prototype,"isOutputRounded",void 0),e([le(Is)],ks.prototype,"bandArithmeticConfig",void 0),e([be(zs)],ks.prototype,"adjustmentConfig",void 0);class Ms extends Cs{constructor(){super(...arguments),this.type="ColormapToRGBShader"}_process(e){const t=ts(this._getPixel(e),new ge(1),this.colormapConfig,!1);return new X(t.xyz.multiply(255),t.a)}}e([le(es)],Ms.prototype,"colormapConfig",void 0);class Fs extends ue{}e([le(pe)],Fs.prototype,"image1",void 0),e([le(ge)],Fs.prototype,"image1Const",void 0),e([le(ye)],Fs.prototype,"imageSwap",void 0);class Ds extends ue{}e([le(pe)],Ds.prototype,"image1",void 0),e([le(pe)],Ds.prototype,"image2",void 0),e([le(ge)],Ds.prototype,"image1Const",void 0),e([le(ge)],Ds.prototype,"image2Const",void 0),e([le(ye)],Ds.prototype,"imageSwap",void 0);const Vs=t=>{class s extends t{constructor(){super(...arguments),this.constantCount=0,this.imageCount=1}_getRasterValues(e){const{imageCount:t}=this;if(1===t){const t=Y(this.config.texture,e);return{a:t.r,b:t.g,c:t.b,alpha:t.a}}if(2===t){const t=this._getTwoValues(e);return{a:t.a,b:t.b,c:t.b,alpha:t.alpha}}return this._getThreeValues(e)}_getTwoValues(e){const t=Y(this.config.texture,e);if(1===this.constantCount){const{imageSwap:e,image1Const:s}=this.twoRasterConfig,i=e.multiply(new re(t.r,s,0));return{a:i.x,b:i.y,alpha:t.a}}const{image1:s}=this.twoRasterConfig,i=Y(s,e);return{a:t.r,b:i.r,alpha:t.a.multiply(i.a)}}_getThreeValues(e){const t=Y(this.config.texture,e),{imageSwap:s,image1:i,image2:r,image1Const:o,image2Const:a}=this.threeRasterConfig;if(2===this.constantCount){const e=s.multiply(new re(t.r,o,a));return{a:e.x,b:e.y,c:e.z,alpha:t.a}}if(1===this.constantCount){const r=Y(i,e),a=s.multiply(new re(t.r,r.r,o));return{a:a.x,b:a.y,c:a.z,alpha:t.a.multiply(r.a)}}const n=Y(i,e),l=Y(r,e);return{a:t.r,b:n.r,c:l.r,alpha:t.a.multiply(n.a).multiply(l.a)}}}return e([fe],s.prototype,"constantCount",void 0),e([fe],s.prototype,"imageCount",void 0),e([be(Fs)],s.prototype,"twoRasterConfig",void 0),e([be(Ds)],s.prototype,"threeRasterConfig",void 0),s};class Bs extends(Vs(Cs)){constructor(){super(...arguments),this.type="CompositeBandShader"}_process(e){const{a:t,b:s,c:i,alpha:r}=this._getRasterValues(e);return new X(t,s,i,r)}}class Os extends ue{}e([le(te)],Os.prototype,"domainRange",void 0);class Us extends(Vs(Cs)){constructor(){super(...arguments),this.type="LocalShader",this.isOutputRounded=!1}_process(e){if("conditional"===this.operationName)return this._conditional(e);const{a:t,b:s,alpha:i}=this._getRasterValues(e),{value:r,alpha:o}=this._compute(t,s,i);return this._processResult(r,o)}_processResult(e,t){const s=Ps(e,this.domainRangeConfig.domainRange),i=new X(e,e,e,t).multiply(s);return this.isOutputRounded?Rs(i):i}_compute(e,t,s){const{operationName:i}=this;let r;switch(i){case"plus":r=e.add(t);break;case"minus":r=e.subtract(t);break;case"times":r=e.multiply(t);break;case"divide":case"floatdivide":r=e.multiply(Ss(t)),s=s.multiply(Fe(Te(he(t))));break;case"floordivide":r=Z(e.multiply(Ss(t))),s=s.multiply(Fe(Te(he(t))));break;case"square":r=e.multiply(e);break;case"sqrt":r=Re(e);break;case"power":r=Pe(e,t);break;case"ln":r=oe(Oe(e,new ge(0)),nt(e),new ge(0)),s=s.multiply(this._isAboveZero(e));break;case"log10":r=oe(Oe(e,new ge(0)),at(e).multiply(Ss(at(new ge(10)))),new ge(0)),s=s.multiply(this._isAboveZero(e));break;case"log2":r=oe(Oe(e,new ge(0)),at(e),new ge(0)),s=s.multiply(this._isAboveZero(e));break;case"exp":r=ot(e);break;case"exp10":r=Pe(new ge(10),e);break;case"exp2":r=Pe(new ge(2),e);break;case"rounddown":r=Z(e);break;case"roundup":r=rt(e);break;case"int":r=he(e).multiply(Z(Te(e)));break;case"mod":r=ke(e,t);break;case"negate":r=ze(e);break;case"abs":r=Te(e);break;case"acos":{const t=this._isAbsBiggerThanOne(e);r=oe(t,new ge(0),it(e)),s=oe(t,new ge(0),s);break}case"acosh":r=st(e);break;case"asin":{const t=this._isAbsBiggerThanOne(e);r=oe(t,new ge(0),tt(e)),s=oe(t,new ge(0),s);break}case"asinh":r=et(e);break;case"atan":r=Me(e);break;case"atanh":{const t=this._isAbsBiggerThanOne(e);r=oe(t,new ge(0),Ye(e)),s=oe(t,new ge(0),s);break}case"atan2":r=Me(e,t);break;case"cos":r=Xe(e);break;case"cosh":r=Ke(e);break;case"sin":r=Je(e);break;case"sinh":r=$e(e);break;case"tan":r=Qe(e);break;case"tanh":r=He(e);break;case"bitwiseand":r=new ge(Ze(new Q(e),new Q(t)));break;case"bitwiseor":r=new ge(Ne(new Q(e),new Q(t)));break;case"bitwiseleftshift":r=new ge(We(new Q(e),new Q(t)));break;case"bitwiserightshift":r=new ge(Ee(new Q(e),new Q(t)));break;case"bitwisenot":r=new ge(qe(new Q(e)));break;case"bitwisexor":r=new ge(Ge(new Q(e),new Q(t)));break;case"booleanand":r=Fe(Ae(Ve(e,new ge(0)),Ve(t,new ge(0))));break;case"booleanor":r=Fe(Le(Ve(e,new ge(0)),Ve(t,new ge(0))));break;case"booleannot":r=Fe(De(e,new ge(0)));break;case"booleanxor":r=Fe(Ue(Ve(e,new ge(0)),Ve(t,new ge(0))));break;case"greaterthan":r=Fe(Oe(e,t));break;case"greaterthanequal":r=Fe(Be(e,t));break;case"lessthan":r=Fe(Ce(e,t));break;case"lessthanequal":r=Fe(ae(e,t));break;case"equalto":r=Fe(De(e,t));break;case"notequal":r=Fe(Ve(e,t));break;case"isnull":r=Fe(De(s,new ge(0))),s=new ge(1);break;case"setnull":{const i=Fe(De(e,new ge(0)));r=i.multiply(t),s=s.multiply(i);break}default:r=e}return{value:r,alpha:s}}_conditional(e){const{a:t,b:s,c:i,alpha:r}=this._getRasterValues(e),o=new ge(Te(he(t))),a=K(i,s,o);return this._processResult(a,r)}_isAboveZero(e){return Fe(Oe(e,new ge(0)))}_isAbsBiggerThanOne(e){return Oe(Te(e),new ge(1))}}e([fe],Us.prototype,"operationName",void 0),e([fe],Us.prototype,"isOutputRounded",void 0),e([le(Os)],Us.prototype,"domainRangeConfig",void 0);class Ls extends(Vs(Cs)){constructor(){super(...arguments),this.type="ComputeChangeShader",this.isOutputRounded=!1}_process(e){const{a:t,b:s,alpha:i}=this._getRasterValues(e);let r=t.subtract(s);"relative-difference"===this.method&&(r=r.multiply(Ss(lt(Te(t),Te(s)))));const o=Ps(r,this.domainRangeConfig.domainRange),a=new X(r,r,r,i).multiply(o);return this.isOutputRounded?Rs(a):a}}e([fe],Ls.prototype,"method",void 0),e([fe],Ls.prototype,"isOutputRounded",void 0),e([le(Os)],Ls.prototype,"domainRangeConfig",void 0);class As extends ue{}e([le(ge)],As.prototype,"contrastOffset",void 0),e([le(ge)],As.prototype,"brightnessOffset",void 0);class Gs extends Cs{constructor(){super(...arguments),this.type="ContrastBrightnessShader"}_process(e){const{rgb:t,a:s}=this._getPixel(e),{contrastOffset:i,brightnessOffset:r}=this.contrastBrightnessConfig,o=new ge(255),a=new ge(128),n=t.multiply(200),l=o.multiply(100),p=o.multiply(2).multiply(r),u=n.subtract(l).add(p),c=pt([De(i,new ge(-100)),new re(a)],[De(i,new ge(100)),he(u).add(1).divide(2).multiply(o)],[Oe(i,new ge(0)),u.divide(new ge(100).subtract(i).multiply(2)).add(a)],[!0,u.multiply(i.add(100)).divide(2e4).add(a)]);return Rs(new X(c,s))}}e([le(As)],Gs.prototype,"contrastBrightnessConfig",void 0);class qs extends ue{}e([le(ct.ofType(ge,5,5,!0))],qs.prototype,"kernel",void 0),e([le(te)],qs.prototype,"clampRange",void 0);class Es extends Cs{constructor(){super(...arguments),this.type="ConvolutionShader",this.rows=3,this.cols=3}_process(e){const{rows:t,cols:s}=this,i=new te(Math.floor(t/2),Math.floor(s/2)),{texture:r,srcImageSize:o}=this.config,a=new ge(1).divide(o),{kernel:n}=this.convolutionConfig,l=ut(n,{initialValue:new X(0,0,0,1),xRange:[0,t],yRange:[0,s],callback:(t,s,o,n)=>{const l=new te(new ge(o),new ge(n)).subtract(i).multiply(a),p=Y(r,as(e.add(l))),u=p.rgb.multiply(s).add(t.rgb),c=p.a.multiply(t.a);return new X(u,c)}}),{clampRange:p}=this.convolutionConfig;return new X(ve(l.rgb,p.x,p.y),1).multiply(l.a)}}e([fe],Es.prototype,"rows",void 0),e([fe],Es.prototype,"cols",void 0),e([le(qs)],Es.prototype,"convolutionConfig",void 0);class Ws extends ue{}e([le(ge)],Ws.prototype,"zlFactor",void 0);class Ns extends Cs{constructor(){super(...arguments),this.type="CurvatureShader"}_process(e){const{texture:t}=this.config,s=ns(t,e,this.config.srcImageSize),i=s[3].add(s[5]).multiply(.5).subtract(s[4]),r=s[1].add(s[7]).multiply(.5).subtract(s[4]),{zlFactor:o}=this.curvatureConfig,{curvatureType:a}=this;let n;if("standard"===a)n=ze(o).multiply(i.add(r));else{const e=s[2].subtract(s[0]).add(s[6]).subtract(s[8]).divide(4),t=s[5].subtract(s[3]).divide(2),l=s[1].subtract(s[7]).divide(2),p=t.multiply(t),u=l.multiply(l),c=t.multiply(l),d=o.divide(p.add(u));n="profile"===a?ne(new re(i,r,e),new re(p,u,c)).multiply(d):ne(new re(i,r,ze(e)),new re(u,p,c)).multiply(ze(d))}return new X(n,n,n,s[9])}}e([fe],Ns.prototype,"curvatureType",void 0),e([le(Ws)],Ns.prototype,"curvatureConfig",void 0);class Zs extends ue{}e([le(ye)],Zs.prototype,"bandIndexMat3",void 0);class Hs extends Cs{constructor(){super(...arguments),this.type="ExtractBandShader"}_process(e){const t=this._getPixel(e),s=this.extractBandConfig.bandIndexMat3.multiply(t.rgb);return new X(s,t.a)}}e([le(Zs)],Hs.prototype,"extractBandConfig",void 0);class Qs extends ue{}e([le(te)],Qs.prototype,"clampRange",void 0);class $s extends Cs{constructor(){super(...arguments),this.type="FocalStatisticsShader",this.rows=3,this.cols=3,this.fill=!1}_process(e){const t=this._process1(e),s=ee(new ge(1),t.a);if(!this.fill)return this._clamp(t.rgb,s);const i=this._getPixel(e),r=K(t.rgb,i.rgb,i.a);return this._clamp(r,s)}_clamp(e,t){const{clampRange:s}=this.focalStatisticsConfig;return new X(ve(e,s.x,s.y),1).multiply(t)}_process1(e){const{texture:t,srcImageSize:s}=this.config,{rows:i,cols:r}=this,o=new te(Math.floor(i/2),Math.floor(r/2)),a=new ge(1).divide(s),n=this._getPixel(e),{statisticsType:l}=this,p="min"===l||"max"===l?new X(n.rgb,0):new X(0,0,0,0);switch(l){case"min":return this._stat(i,r,p,((s,i,r)=>{const n=new te(new ge(i),new ge(r)).subtract(o).multiply(a),l=Y(t,as(e.add(n))),p=je(s.rgb,l.rgb);return new X(p,s.a.add(l.a))}));case"max":return this._stat(i,r,p,((s,i,r)=>{const n=new te(new ge(i),new ge(r)).subtract(o).multiply(a),l=Y(t,as(e.add(n))),p=lt(s.rgb,l.rgb);return new X(p,s.a.add(l.a))}));case"mean":{const s=this._stat(i,r,p,((s,i,r)=>{const n=new te(new ge(i),new ge(r)).subtract(o).multiply(a),l=Y(t,as(e.add(n))),p=s.rgb.add(l.rgb.multiply(l.a));return new X(p,s.a.add(l.a))})),n=s.rgb.multiply(Ss(s.a));return new X(n,s.a)}case"stddev":{const s=this._stat(i,r,p,((s,i,r)=>{const n=new te(new ge(i),new ge(r)).subtract(o).multiply(a),l=Y(t,as(e.add(n))),p=s.rgb.add(l.rgb.multiply(l.a));return new X(p,s.a.add(l.a))})),n=this._stat(i,r,p,((s,i,r)=>{const n=new te(new ge(i),new ge(r)).subtract(o).multiply(a),l=Y(t,as(e.add(n))),p=s.rgb.add(l.a.multiply(l.rgb).multiply(l.rgb));return new X(p,s.a.add(l.a))})),l=Ss(n.a),u=Re(n.subtract(s.multiply(s).multiply(l)).multiply(l));return new X(u.rgb,s.a)}default:return n}}_stat(e=3,t=3,s,i){const r=new Q(0).setMutable().setDebugName("StatColIterator"),o=new Q(0).setMutable().setDebugName("StatRowIterator"),a=s.setMutable().setDebugName("StatAccumulator"),n=i(a,r,o).setDebugName("StatPredicate"),l=dt({iterX:r,iterY:o,accumulator:a},X,n,(({out:s,iterX:i,iterY:r,accumulator:o,subgraph:a})=>`\n  for (${r} = 0; ${r} < ${e}; ${r}++) {\n    for (${i} = 0; ${i} < ${t}; ${i}++) {\n  \n    ${a.body}\n  \n    ${o} = ${a.varName};\n    }\n  }\n  ${s} = ${o};\n  `)).setDebugName("statBody");return l}}e([fe],$s.prototype,"rows",void 0),e([fe],$s.prototype,"cols",void 0),e([fe],$s.prototype,"statisticsType",void 0),e([fe],$s.prototype,"fill",void 0),e([le(Qs)],$s.prototype,"focalStatisticsConfig",void 0);class Js extends ue{}e([le(re)],Js.prototype,"weights",void 0);class Ks extends Cs{constructor(){super(...arguments),this.type="GrayscaleShader"}_process(e){const t=this._getPixel(e),{weights:s}=this.grayscaleConfig,i=ne(s,t.rgb);return new X(i,i,i,t.a)}}e([le(Js)],Ks.prototype,"grayscaleConfig",void 0);class Xs extends Cs{constructor(){super(...arguments),this.type="HillshadeShader",this.isMultidirectional=!1}_process(e){const{texture:t}=this.config,s=ps(ns(t,e,this.config.srcImageSize),this.hillshadeConfig,this.isMultidirectional);return new X(s.rgb.multiply(255),s.a)}}e([fe],Xs.prototype,"isMultidirectional",void 0),e([le(os)],Xs.prototype,"hillshadeConfig",void 0);class Ys extends ue{}e([le(Se.ofType(ge,6))],Ys.prototype,"includedRanges",void 0),e([le(Se.ofType(ge,_t))],Ys.prototype,"noDataValues",void 0);class ei extends Cs{constructor(){super(...arguments),this.type="MaskShader",this.isMultiband=!0}_process(e){const t=this._getPixel(e),s=this._computeNoDataFactor(t.r),i=this._computeRangeFactor(t.rgb);let r;if(this.isMultiband){const e=this._computeNoDataFactor(t.g),o=this._computeNoDataFactor(t.b),a=new re(s,e,o).multiply(i);r=a.x.multiply(a.y).multiply(a.z)}else r=s.multiply(i.x);return t.multiply(r)}_computeNoDataFactor(e){const{noDataValues:t}=this.maskConfig;let s=new re(1);for(let i=0;i<_t/3;i++){const r=3*i,o=new re(t[r+0],t[r+1],t[r+2]),a=Te(he(o.subtract(e)));s=s.multiply(a)}return s.x.multiply(s.y).multiply(s.z)}_computeRangeFactor(e){const{includedRanges:t}=this.maskConfig,s=new re(t[0],t[2],t[4]),i=new re(t[1],t[3],t[5]);return ee(s,e).multiply(ee(e,i))}}e([fe],ei.prototype,"isMultiband",void 0),e([le(Ys)],ei.prototype,"maskConfig",void 0);class ti extends ue{}e([le(ye)],ti.prototype,"bandIndexMat3",void 0);class si extends Cs{constructor(){super(...arguments),this.type="NDVIShader",this.scaled=!0}_process(e){const t=this._getPixel(e),{r:s,g:i}=this.ndviConfig.bandIndexMat3.multiply(t.rgb),r=s.subtract(i),o=s.add(i),a=r.multiply(Ss(o));if(!this.scaled)return new X(a,a,a,t.a);const n=Z(a.multiply(100).add(100.5));return new X(n,n,n,t.a)}}e([fe],si.prototype,"scaled",void 0),e([le(ti)],si.prototype,"ndviConfig",void 0);class ii extends ue{}e([le(Se.ofType(ge,3*_t))],ii.prototype,"rangeMaps",void 0),e([le(Se.ofType(ge,2*_t))],ii.prototype,"noDataRanges",void 0),e([le(ge)],ii.prototype,"unmatchMask",void 0),e([le(ge)],ii.prototype,"replacementValue",void 0),e([le(te)],ii.prototype,"clampRange",void 0);class ri extends Cs{constructor(){super(...arguments),this.type="RemapShader"}_process(e){const t=this._getPixel(e),{rangeMaps:s,unmatchMask:i,clampRange:r,replacementValue:o}=this.remapConfig,{mapValue:a,includeMask:n}=function(e,t,s){const i=new re(e);let r=new re(0,0,0),o=new ge(0);for(let e=0;e<s/3;e++){const s=9*e,a=new re(t[s],t[s+3],t[s+6]),n=new re(t[s+1],t[s+4],t[s+7]),l=ee(a,i).multiply(ee(i,n)),p=new re(t[s+2],t[s+5],t[s+8]);o=K(o,p.x,l.x),o=K(o,p.y,l.y),o=K(o,p.z,l.z),r=r.add(l)}return{mapValue:o,includeMask:he(ne(r,new re(1,1,1)))}}(t.r,s,_t),l=this.replaceUnmatched?o:i.multiply(t.r),p=K(l,a,n),u=ve(p,r.x,r.y),c=this._computeNoDataFactor(t.rrr).multiply(lt(i,n));return new X(u,u,u,t.a).multiply(c)}_computeNoDataFactor(e){const{noDataRanges:t}=this.remapConfig;let s=new re(0,0,0);for(let i=0;i<_t/3;i++){const r=6*i,o=new re(t[r],t[r+2],t[r+4]),a=new re(t[r+1],t[r+3],t[r+5]);s=s.add(ee(o,e).multiply(ee(e,a)))}return yt(he(ne(s,new re(1,1,1))))}}e([le(ii)],ri.prototype,"remapConfig",void 0),e([fe],ri.prototype,"replaceUnmatched",void 0);class oi extends Yt{constructor(){super(...arguments),this.type="ReprojectShader"}_colorize(e){return this._getPixel(e)}}class ai extends Xs{constructor(){super(...arguments),this.type="ShadedReliefShader"}_process(e){const t=super._process(e),{minValue:s,maxValue:i}=this.hillshadeConfig,r=this._getPixel(e),o=i.subtract(s),a=r.r.subtract(s),n=ve(a.divide(o),new ge(0),new ge(1)),l=ts(new X(n,n,n,1),new ge(255),this.colormapConfig),p=is(l.xyz),u=rs(new re(p.xy,t.x.divide(255))).multiply(255);return new X(u,l.a.multiply(t.a))}}e([le(es)],ai.prototype,"colormapConfig",void 0);class ni extends ue{}e([le(ge)],ni.prototype,"pixelSizePower",void 0),e([le(ge)],ni.prototype,"pixelSizeFactor",void 0),e([le(ge)],ni.prototype,"zFactor",void 0),e([le(te)],ni.prototype,"cellSize",void 0);class li extends Cs{constructor(){super(...arguments),this.type="SlopeShader",this.isOutputRounded=!1,this.percentRise=!1}_process(e){const{cellSize:t,pixelSizePower:s,pixelSizeFactor:i,zFactor:r}=this.slopeConfig,o=Pe(t,new te(s)).multiply(i).add(r).divide(t.multiply(8)),{texture:a}=this.config,n=ns(a,e,this.config.srcImageSize),{x:l,y:p}=ls(n,o),u=Re(l.multiply(l).add(p.multiply(p))),c=this.percentRise?u.multiply(100):Me(u).multiply(57.2957795),d=new X(c,c,c,n[9]);return this.isOutputRounded?Rs(d):d}}e([fe],li.prototype,"isOutputRounded",void 0),e([fe],li.prototype,"percentRise",void 0),e([le(ni)],li.prototype,"slopeConfig",void 0);class pi extends Cs{constructor(){super(...arguments),this.type="StretchShader",this.isMultiband=!0,this.isOutputRounded=!1,this.useGamma=!1}_process(e){let t=ms(this._getPixel(e),this.stretchConfig,this.useGamma,1);return this.isMultiband||(t=new X(t.rrr,t.a)),this.isOutputRounded?Rs(t):t}}e([fe],pi.prototype,"isMultiband",void 0),e([fe],pi.prototype,"isOutputRounded",void 0),e([fe],pi.prototype,"useGamma",void 0),e([le(hs)],pi.prototype,"stretchConfig",void 0);const ui=new Map([["Aspect",class extends xs{constructor(){super(...arguments),this.name="RasterAspectProcessor",this.type=ht.Aspect,this.shaders={aspect:new Ts}}_process(e,t){const s={cellSize:t.getRasterCellSize()},i=this._getCommonConfig(e,t),r={shader:this.shaders.aspect,uniforms:{config:i,aspectConfig:s},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:a}=e;o.submitDrawMesh(a,r,o.quadMesh)}}],["BandArithmetic",class extends xs{constructor(){super(...arguments),this.name="RasterBandArithmeticProcessor",this.type=ht.BandArithmetic,this.shaders={bandArithmetic:new ks}}_process(e,t){const s=e.rasterFunction.parameters,i={indexType:s.indexType,isOutputRounded:s.isOutputRounded},r={bandIndexMat3:s.bandIndexMat3},o=s.adjustments?{adjustments:[...s.adjustments]}:void 0,a=this._getCommonConfig(e,t),n={shader:this.shaders.bandArithmetic,uniforms:{config:a,bandArithmeticConfig:r,adjustmentConfig:o},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:p}=e;l.submitDrawMesh(p,n,l.quadMesh)}}],["ColormapToRGB",class extends xs{constructor(){super(...arguments),this.name="RasterColormapToRGBProcessor",this.type=ht.ColormapToRGB,this.shaders={colormapToRGB:new Ms}}_process(e,t,s){const i=e.rasterFunction.parameters,r={colormapTexture:{texture:s,unit:1},colormapOffset:i.offset,colormapMaxIndex:i.indexedColormap.length/4-1},o=this._getCommonConfig(e,t),a={shader:this.shaders.colormapToRGB,uniforms:{config:o,colormapConfig:r},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=e;n.submitDrawMesh(l,a,n.quadMesh)}}],["CompositeBand",class extends xs{constructor(){super(...arguments),this.name="RasterCompositeBandProcessor",this.type=ht.CompositeBand,this.shaders={compositeBand:new Bs}}_process(e,t){const{rasters:s}=e.rasterFunction.parameters,i={constantCount:this._getConstantCount(s),imageCount:s?.length??1},r=this._getMultipleInputConfig(t,s),o=this._getCommonConfig(e,t),a={shader:this.shaders.compositeBand,uniforms:{config:o,...r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=e;n.submitDrawMesh(l,a,n.quadMesh)}}],["ComputeChange",class extends xs{constructor(){super(...arguments),this.name="RasterComputeChangeProcessor",this.type=ht.ComputeChange,this.shaders={computeChange:new Ls}}_process(e,t){const s=e.rasterFunction.parameters,{rasters:i}=s,r={constantCount:this._getConstantCount(i),imageCount:i.length,method:s.method,isOutputRounded:s.isOutputRounded},o={domainRange:s.domainRange},{twoRasterConfig:a}=this._getMultipleInputConfig(t,i),n=this._getCommonConfig(e,t),l={shader:this.shaders.computeChange,uniforms:{config:n,domainRangeConfig:o,twoRasterConfig:a},defines:r,optionalAttributes:null,useComputeBuffer:!1},{painter:p,context:u}=e;p.submitDrawMesh(u,l,p.quadMesh)}}],["ContrastBrightness",class extends xs{constructor(){super(...arguments),this.name="RasterContrastBrightnessProcessor",this.type=ht.ContrastBrightness,this.shaders={contrastBrightness:new Gs}}_process(e,t){const s=this._getCommonConfig(e,t),i=e.rasterFunction.parameters,r={shader:this.shaders.contrastBrightness,uniforms:{config:s,contrastBrightnessConfig:i},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:a}=e;o.submitDrawMesh(a,r,o.quadMesh)}}],["Convolution",class extends xs{constructor(){super(...arguments),this.name="RasterConvolutionProcessor",this.type=ht.Convolution,this.shaders={convolution:new Es}}_process(e,t){const s=e.rasterFunction.parameters,i={rows:s.kernelRows,cols:s.kernelCols},r={kernel:[...s.kernel],clampRange:s.clampRange},o=this._getCommonConfig(e,t),a={shader:this.shaders.convolution,uniforms:{config:o,convolutionConfig:r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=e;n.submitDrawMesh(l,a,n.quadMesh)}}],["Curvature",class extends xs{constructor(){super(...arguments),this.name="RasterCurvatureProcessor",this.type=ht.Curvature,this.shaders={curvature:new Ns}}_process(e,t){const s=e.rasterFunction.parameters,i={curvatureType:s.curvatureType},r=t.getRasterCellSize(),o={zlFactor:200*s.zFactor/r[0]/r[1]},a=this._getCommonConfig(e,t),n={shader:this.shaders.curvature,uniforms:{config:a,curvatureConfig:o},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:p}=e;l.submitDrawMesh(p,n,l.quadMesh)}}],["ExtractBand",class extends xs{constructor(){super(...arguments),this.name="RasterExtractBandProcessor",this.type=ht.ExtractBand,this.shaders={extractBand:new Hs}}_process(e,t){const s={bandIndexMat3:e.rasterFunction.parameters.bandIndexMat3},i=this._getCommonConfig(e,t),r={shader:this.shaders.extractBand,uniforms:{config:i,extractBandConfig:s},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:a}=e;o.submitDrawMesh(a,r,o.quadMesh)}}],["Grayscale",class extends xs{constructor(){super(...arguments),this.name="RasterGrayscaleProcessor",this.type=ht.Grayscale,this.shaders={grayscale:new Ks}}_process(e,t){const s={weights:e.rasterFunction.parameters.weights},i=this._getCommonConfig(e,t),r={shader:this.shaders.grayscale,uniforms:{config:i,grayscaleConfig:s},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:a}=e;o.submitDrawMesh(a,r,o.quadMesh)}}],["Hillshade",class extends xs{constructor(){super(...arguments),this.name="RasterHillshadeProcessor",this.type=ht.Hillshade,this.shaders={hillshade:new Xs}}_process(e,t){const s=e.rasterFunction.parameters,i={isMultidirectional:s.hillshadeType>0},r=cs(s,t.getRasterCellSize()),o={...s,factor:r,minValue:0,maxValue:8e3},a=this._getCommonConfig(e,t),n={shader:this.shaders.hillshade,uniforms:{config:a,hillshadeConfig:o},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:p}=e;l.submitDrawMesh(p,n,l.quadMesh)}}],["Local",class extends xs{constructor(){super(...arguments),this.name="RasterLocalProcessor",this.type=ht.Local,this.shaders={local:new Us}}_process(e,t){const s=e.rasterFunction.parameters,i={constantCount:this._getConstantCount(s.rasters),imageCount:s.imageCount,operationName:s.operationName,isOutputRounded:s.isOutputRounded},r={domainRange:s.domainRange},o="conditional"===s.operationName?s.rasters:s.rasters?.slice(0,2),a=this._getMultipleInputConfig(t,o),n=this._getCommonConfig(e,t),l={shader:this.shaders.local,uniforms:{config:n,domainRangeConfig:r,...a},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:p,context:u}=e;p.submitDrawMesh(u,l,p.quadMesh)}}],["Mask",class extends xs{constructor(){super(...arguments),this.name="RasterMaskProcessor",this.type=ht.Mask,this.shaders={mask:new ei}}_process(e,t){const s=e.rasterFunction.parameters,i={isMultiband:s.bandCount>1},r={includedRanges:[...s.includedRanges],noDataValues:[...s.noDataValues]},o=this._getCommonConfig(e,t),a={shader:this.shaders.mask,uniforms:{config:o,maskConfig:r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=e;n.submitDrawMesh(l,a,n.quadMesh)}}],["NDVI",class extends xs{constructor(){super(...arguments),this.name="RasterNDVIProcessor",this.type=ht.NDVI,this.shaders={ndvi:new si}}_process(e,t){const s=e.rasterFunction.parameters,i={scaled:s.scaled},r={bandIndexMat3:s.bandIndexMat3},o=this._getCommonConfig(e,t),a={shader:this.shaders.ndvi,uniforms:{config:o,ndviConfig:r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=e;n.submitDrawMesh(l,a,n.quadMesh)}}],["Remap",class extends xs{constructor(){super(...arguments),this.name="RasterRemapProcessor",this.type=ht.Remap,this.shaders={remap:new ri}}_process(e,t){const s=e.rasterFunction.parameters,i={replaceUnmatched:s.allowUnmatched&&null!=s.replacementValue},r={rangeMaps:[...s.rangeMaps],noDataRanges:[...s.noDataRanges],unmatchMask:s.allowUnmatched?1:0,replacementValue:s.replacementValue??0,clampRange:s.clampRange},o=this._getCommonConfig(e,t),a={shader:this.shaders.remap,uniforms:{config:o,remapConfig:r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=e;n.submitDrawMesh(l,a,n.quadMesh)}}],["Reproject",class extends xs{constructor(){super(...arguments),this.name="RasterReprojectProcessor",this.type=ht.Reproject,this.shaders={reproject:new oi}}_process(e,t){const s=e.rasterFunction.parameters,i=this._getInterpolationDefines(t.interpolation,!!s.requireNNEdge),{config:r,projectionConfig:o,projectionDefines:a}=this._getReprojectConfig(t),n={shader:this.shaders.reproject,uniforms:{config:r,projectionConfig:o},defines:{...a,...i,applyPixelMask:!1},optionalAttributes:null,useComputeBuffer:!1},{interpolation:l}=t;t.interpolation="nearest";const{painter:p,context:u}=e;p.submitDrawMesh(u,n,p.quadMesh),t.interpolation=l,t.projected=!0}_getReprojectConfig(e){const{source:t}=e,{names:s,textures:i}=e.getTextures({forProcessing:!0}),r={texture:{texture:i[s.indexOf("u_image")],unit:0},dvsMat3:new Float32Array([2,0,0,0,2,0,-1,-1,0]),coordScale:[1,1],srcImageSize:[t.width,t.height],opacity:1},o=i[s.indexOf("u_transformGrid")],{transformGrid:a}=e,n=!(!o||!a);return{config:r,projectionConfig:n?{transformTexture:{texture:o,unit:1},targetImageSize:[e.width,e.height],transformSpacing:a.spacing,transformGridSize:a.size}:void 0,projectionDefines:{applyProjection:n,lookupProjection:n&&1===a.spacing[0]}}}_getInterpolationDefines(e,t){const s="bilinear"===e&&t;return{bilinear:s,bicubic:"cubic"===e,nearestOnEdge:s}}}],["ShadedRelief",class extends xs{constructor(){super(...arguments),this.name="RasterShadedReliefProcessor",this.type=ht.ShadedRelief,this.shaders={shadedRelief:new ai}}_process(e,t,s){const i=e.rasterFunction.parameters,r={isMultidirectional:i.hillshadeType>0},o=cs(i,t.getRasterCellSize()),a={...i,factor:o},n={colormapTexture:{texture:s,unit:1},colormapOffset:i.offset,colormapMaxIndex:i.indexedColormap.length/4-1},l=this._getCommonConfig(e,t),p={shader:this.shaders.shadedRelief,uniforms:{config:l,hillshadeConfig:a,colormapConfig:n},defines:r,optionalAttributes:null,useComputeBuffer:!1},{painter:u,context:c}=e;u.submitDrawMesh(c,p,u.quadMesh)}}],["Slope",class extends xs{constructor(){super(...arguments),this.name="RasterSlopeProcessor",this.type=ht.Slope,this.shaders={slope:new li}}_process(e,t){const s=e.rasterFunction.parameters,i={isOutputRounded:s.isOutputRounded,percentRise:"percent-rise"===s.slopeType},r={cellSize:t.getRasterCellSize(),pixelSizePower:"adjusted"===s.slopeType?s.pixelSizePower:0,pixelSizeFactor:"adjusted"===s.slopeType?s.pixelSizeFactor:0,zFactor:s.zFactor},o=this._getCommonConfig(e,t),a={shader:this.shaders.slope,uniforms:{config:o,slopeConfig:r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=e;n.submitDrawMesh(l,a,n.quadMesh)}}],["Statistics",class extends xs{constructor(){super(...arguments),this.name="RasterFocalStatisticsProcessor",this.type=ht.Statistics,this.shaders={focalStatistics:new $s}}_process(e,t){const s=e.rasterFunction.parameters,i={rows:s.kernelRows,cols:s.kernelCols,statisticsType:s.statisticsType,fill:s.fillNoDataOnly},r={clampRange:s.clampRange},o=this._getCommonConfig(e,t),a={shader:this.shaders.focalStatistics,uniforms:{config:o,focalStatisticsConfig:r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=e;n.submitDrawMesh(l,a,n.quadMesh)}}],["Stretch",class extends xs{constructor(){super(...arguments),this.name="RasterStretchProcessor",this.type=ht.Stretch,this.shaders={stretch:new pi}}_process(e,t){const s=e.rasterFunction.parameters,i={isMultiband:s.bandCount>1,isOutputRounded:s.isOutputRounded,useGamma:s.useGamma},r=this._getCommonConfig(e,t),o={shader:this.shaders.stretch,uniforms:{config:r,stretchConfig:s},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:a,context:n}=e;a.submitDrawMesh(n,o,a.quadMesh)}}]]);class ci extends Ie{constructor(){super(...arguments),this.type=ht.RasterProcessor,this.shaders={},this._techniques=new Map}shutdown(e){super.shutdown(e),this._fbo?.dispose(),this._fbo=void 0;for(const e of this._techniques.values())e.shutdown();this._techniques.clear()}render(e,t){this._fbo??=ws(e.context,ft,ft);let{name:s}=e.rasterFunction;if("Arithmetic"===s&&(s="Local"),!this._techniques.has(s)){const e=ui.get(s);if(!e)return;this._techniques.set(s,new e)}this._techniques.get(s).render(e,{...t,processorFbo:this._fbo})}}class di extends N{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const t=this._getTileBounds(e),[s,i]=this.tileInfoView.tileInfo.size,r=this.tileInfoView.getTileResolution(e.level);return new Zt(e,r,t[0],t[3],s,i)}onAttach(){super.onAttach(),this._colorizerTechnique=new gs,this._processorTechnique=new ci}onDetach(){super.onDetach(),this._colorizerTechnique?.shutdown(),this._colorizerTechnique=void 0,this._processorTechnique?.shutdown(),this._processorTechnique=void 0}doRender(e){if(!this.visible||e.drawPhase!==W.MAP||!this._colorizerTechnique)return;const{rasterFunctionChain:t}=this;if(t?.functions?.length){if(!this._processorTechnique)return;const{functions:s,hasBranches:i}=t;for(const t of s){if("Constant"===t.name||"Identity"===t.name)continue;e.rasterFunction=t,e.hasBranches=i,super.doRender(e);const s=this.children.map((e=>e.bitmap));this._processorTechnique.render(e,{bitmaps:s})}}e.rasterFunction=null,super.doRender(e);const s=this.children.map((e=>e.bitmap));this._colorizerTechnique.render(e,{bitmaps:s})}_getTileBounds(e){const t=this.tileInfoView.getTileBounds(w(),e);if(this.isCustomTilingScheme&&e.world){const{tileInfo:s}=this.tileInfoView,i=x(s.spatialReference);if(i){const r=s.lodAt(e.level);if(!r)return t;const{resolution:o}=r,a=o*s.size[0];t[0]=i*e.world+s.origin.x+e.col*a,t[2]=t[0]+a}}return t}}const hi=[0,0];let mi=class extends Ct{constructor(){super(...arguments),this._updatingHandles=new jt,this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=i((async(e={})=>{const t=this._rasterFunctionState,s=e.reprocess||"gpu"===t&&!this.canUseWebGLForProcessing||"cpu"===t&&this.canUseWebGLForProcessing;if(s&&(await this._updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters()),!this.previousLOD||this.layerView.suspended)return;const i=this._rasterFunctionState,{type:r}=this;return e.refetch||"raster"!==r&&s||"cpu"===i||"cpu"===t?this._updatingHandles.addPromise(this.doRefresh()):this._updatingHandles.addPromise(this._redrawImage(e.signal))}))}destroy(){this._updatingHandles.destroy()}get canUseWebGLForProcessing(){return!1}get canUseLocalSymbolizerParams(){return(this.canUseWebGLForProcessing||"rasterVF"===this.type)&&!this.layerView.hasTilingEffects}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(e){this._set("useWebGLForProcessing",e)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")??!0}set useProgressiveUpdate(e){if(this._tileStrategy&&this.useProgressiveUpdate!==e){this._tileStrategy.destroy(),this.container.removeAllChildren();const t=this._getCacheSize(e);this._tileStrategy=new Vt({cachePolicy:"purge",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:t,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",e),this.layerView.requestUpdate()}}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume();const{extent:t,resolution:s,scale:i}=e.state,r=this._tileInfoView.getClosestInfoForScale(i);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const e=this._srcResolutions[r.level],i="toJSON"in t?t:Tt.fromJSON(t);It(this._blockCacheRegistryUrl,this._blockCacheRegistryId,i,s,e,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,this.previousLOD?.level!==r.level&&(this.previousLOD=r,null!=this._symbolizerParams&&this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,0===this._fetchQueue.length&&this._redrawImage(this._abortController.signal).then((()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()})));const e=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(e),this.layerView.requestUpdate()}get updating(){return this._globalUpdateRequested||this._updatingHandles?.updating}attach(){const e=Lt();this._maxIndexedColormapSize=4*(e.maxTextureSize||4096),this._initializeTileInfo(),this._tileInfoView=new Bt(this.layerView.tileInfo,this.layerView.fullExtent);const t=this._computeFetchConcurrency();this._fetchQueue=new Ot({tileInfoView:this._tileInfoView,concurrency:t,process:(e,t)=>this._fetchTile(e,t),priority:Ut.MAPVIEW_FETCH_QUEUE,scheduler:this.scheduler});const s=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new Vt({cachePolicy:"purge",acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),cacheSize:s,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,zt(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(e){const t=this.container.createTile(e);return this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,t}releaseTile(e){this._fetchQueue.abort(e.key.id),this.container.removeChild(e),e.once("detach",(()=>{e.destroy(),this.layerView.requestUpdate()})),this.layerView.requestUpdate()}createEmptyTilePixelBlock(e=null){const t=null==e||e.join(",")===this._tileInfoView.tileInfo.size.join(",");if(t&&null!=this._emptyTilePixelBlock)return this._emptyTilePixelBlock;e=e||this._tileInfoView.tileInfo.size;const[s,i]=e,r=new Rt({width:s,height:i,pixels:[new Uint8Array(s*i)],mask:new Uint8Array(s*i),pixelType:"u8"});return t&&(this._emptyTilePixelBlock=r),r}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:e,raster:t}=this.layer,s="rasterFunction"in t?t.rasterFunction.rawInputBandIds:null;return e?.length&&s?.length&&1!==t.rasterInfo.bandCount?e.map((e=>s[Math.min(e,s.length-1)])):"rasterFunction"in t?s:e}updateRasterFunctionParameters(){}_fetchTile(e,t){const s=this._getFetchOptions(e.level,t.signal);return this.fetchTile(e,s)}_getFetchOptions(e,t){const{canUseWebGLForProcessing:s}=this,{layerView:i}=this,{tileInfo:r}=i,o=!r.isWrappable&&null!=Ft(i.view.spatialReference),a=s&&this.layer.raster.hasUniqueSourceStorageInfo,{layer:n}=this.layerView,l=n.serviceRasterInfo?.storageInfo.isBsqTile?n.bandIds:void 0;return{allowPartialFill:!0,datumTransformation:i.datumTransformation,interpolation:s?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:a,skipRasterFunction:"raster"===this.type&&null!=this.container.rasterFunctionChain,signal:t,srcResolution:this._srcResolutions[e],timeExtent:i.timeExtent,tileInfo:r,bandIds:l,disableWrapAround:o}}_getCacheSize(e){return e?40:0}_initializeTileInfo(){const{layerView:e}=this,t=e.view.spatialReference;if(this._canUseLayerLODs()){const{origin:s,lods:i}=this.layer.tileInfo,r=i.map((({scale:e})=>e)),o=Pt.create({spatialReference:t,size:ft,scales:r,origin:s});return e.set("tileInfo",o),void(this._srcResolutions=i.map((({resolution:e})=>({x:e,y:e}))))}const{scales:s,srcResolutions:i,isCustomTilingScheme:r}=Dt(this.layer.serviceRasterInfo,t,{tileSize:ft}),o=Pt.create({spatialReference:t,size:ft,scales:s}),a=0===o.origin.x;C(e.fullExtent);const{xmin:n,ymax:l}=e.fullExtent;(a||r&&o.origin.x>n)&&(o.origin=new St({x:n,y:l,spatialReference:t})),this._isCustomTilingScheme=r,e.set("tileInfo",o),this._srcResolutions=i??[]}_canUseLayerLODs(){const{layer:e,layerView:t}=this;if("Map"!==e.raster.tileType)return!1;const{lods:s}=e.tileInfo,i=t.view.constraints?.effectiveLODs;return i?.length===s.length&&i.every((({scale:e},t)=>Math.abs(e-s[t].scale)<.001))}_computeFetchConcurrency(){const{blockBoundary:e}=this.layer.serviceRasterInfo.storageInfo,t=e[e.length-1];return(t.maxCol-t.minCol+1)*(t.maxRow-t.minRow+1)>64?2:10}async _enqueueTileFetch(e,t){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key),i=this._getBandIds();let o=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&0===this._fetchQueue.length){o=!1;try{await this._redrawImage(this._abortController?.signal)}catch(e){r(e)&&s.getLogger(this).error(e)}this._globalUpdateRequested=!1}this.canUseLocalSymbolizerParams&&null==this._symbolizerParams&&this._updateSymbolizerParams();const a=this._tileInfoView.getTileCoords(hi,e.key),n=this._tileInfoView.getTileResolution(e.key);await this.updateTileSource(e,{source:t,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:o,bandIds:i,coords:a,resolution:n}),e.once("attach",(()=>this.layerView.requestUpdate())),this.container.addChild(e)}catch(e){r(e)||s.getLogger(this).error(e)}this.layerView.requestUpdate()}}async _redrawImage(e){if(0===this.container.children.length)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(e):(this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const t=this.container.children.map((async e=>this.updateTileSymbolizerParameters(e,{local:this._symbolizerParams,global:this._globalSymbolizerParams})));await Promise.allSettled(t),this.container.requestRender()}async _updateGlobalSymbolizerParams(e){const t=this._getFetchOptions(this.previousLOD.level,e),s=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,{...t,interpolation:"nearest",requestRawData:!1,skipRasterFunction:!1});if(!s?.pixelBlock)return;const{resolution:i}=this.previousLOD,r=this._getBandIds(),o=this.layer.symbolizer.generateWebGLParameters({pixelBlock:s.pixelBlock.extractBands(r),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:i,y:i},bandIds:r});!this.canUseWebGLForProcessing&&o&&"stretch"===o.type&&this.layer.renderer&&"raster-stretch"===this.layer.renderer.type&&(o.factor=o.factor.map((e=>255*e)),o.minOutput=Math.round(255*o.minOutput),o.maxOutput=Math.round(255*o.maxOutput)),this._globalSymbolizerParams=o}_updateSymbolizerParams(){const{resolution:e}=this.previousLOD,t=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:e,y:e},bandIds:t})}_updateBlockCacheRegistry(e=!1){const{layer:t,layerView:s}=this,{raster:i}=t,{multidimensionalDefinition:r}=t.normalizeRasterFetchOptions({multidimensionalDefinition:t.multidimensionalDefinition,timeExtent:s.timeExtent}),o=i.rasterInfo.multidimensionalInfo?i.getSliceIndex(r):null,a=i.rasterInfo.storageInfo.isBsqTile&&t.bandIds?.length?t.bandIds:null,n=kt(i.rasterId,o,a);if(n!==this._blockCacheRegistryUrl){if(null!=this._blockCacheRegistryUrl&&zt(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=Mt(n,i.rasterInfo),e){const{view:e}=s,t=this._tileInfoView.getClosestInfoForScale(e.scale),r=this._srcResolutions[t.level];It(n,this._blockCacheRegistryId,e.extent,e.resolution,r,i.ioConfig.sampling)}this._blockCacheRegistryUrl=n}}async doRefresh(){if(!this.attached||!this.previousLOD||this.layerView.suspended)return;await this.layer.updateRenderer(),this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const e=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh((t=>e.push(this._enqueueTileFetch(t)))),await this._updatingHandles.addPromise(Promise.allSettled(e))}};e([l()],mi.prototype,"_globalUpdateRequested",void 0),e([l()],mi.prototype,"attached",void 0),e([l()],mi.prototype,"canUseWebGLForProcessing",null),e([l()],mi.prototype,"canUseLocalSymbolizerParams",null),e([l()],mi.prototype,"container",void 0),e([l()],mi.prototype,"layer",void 0),e([l()],mi.prototype,"layerView",void 0),e([l()],mi.prototype,"scheduler",void 0),e([l()],mi.prototype,"type",void 0),e([l()],mi.prototype,"useWebGLForProcessing",null),e([l()],mi.prototype,"useProgressiveUpdate",null),e([l()],mi.prototype,"timeExtent",void 0),e([l()],mi.prototype,"updating",null),mi=e([u("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],mi);let yi=class extends mi{constructor(){super(...arguments),this.type="raster"}get canUseWebGLForProcessing(){const{loaded:e,symbolizer:t}=this.layer;if(!e||!t)return!1;const s=t.lookup.colormapLut?.indexedColormap,i=s&&s.length>this._maxIndexedColormapSize,r=f(this.layer.serviceRasterInfo);return!(p("ios")&&r>4)&&this.useWebGLForProcessing&&t.canRenderInWebGL&&!i&&!("majority"===this.layer.interpolation&&At(this.layer))}attach(){super.attach(),this.container=new di(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}fetchTile(e,t){return this.layer.fetchTile(e.level,e.row,e.col,t)}updateRasterFunctionParameters(){const{raster:e,type:t}=this.layer,{container:s}=this;if("Function"!==e.datasetFormat||"wcs"===t)return s.rasterFunctionChain=null,s.children.forEach((e=>{const{bitmap:t}=e;t&&(t.suspended=!0,t.processed=!1,t.projected&&(t.invalidateTexture(),t.rasterTexture=null))})),void(this._rasterFunctionState="na");const i=this._rasterFunctionState,{rasterFunction:r,primaryRasters:o}=e,a=r.supportsGPU&&(!o||o.rasters.length<=1),n=a?r.flatWebGLFunctionChain:null,{renderer:l}=this.layer,p=!a||!n?.functions.length||"raster-stretch"===l?.type&&l.dynamicRangeAdjustment||!this.canUseWebGLForProcessing;s.rasterFunctionChain=p?null:this._addProjection(n);const u=null==r?"na":s.rasterFunctionChain?"gpu":"cpu",c=i===u||"na"===i&&"cpu"===u&&0===n?.functions?.length;s.children.forEach((e=>{const{bitmap:t}=e;t&&(t.suspended=!c,t.processed=!1,t.processedTexture=null)})),this._rasterFunctionState=u}async updateTileSource(e,t){const s=this._getBandIds(),i=this._getLayerInterpolation(),{canUseWebGLForProcessing:r}=this,{source:o,globalSymbolizerParams:a,suspended:n,coords:l,resolution:p}=t,u=this.layerView.hasTilingEffects?a:t.symbolizerParams,{bitmap:c}=e;if([c.x,c.y]=l,c.resolution=p,null!=o?.pixelBlock){const e={extent:o.extent,pixelBlock:o.pixelBlock,srcPixelSize:o.srcTilePixelSize};if(c.rawPixelData=e,r)c.source=o.pixelBlock,c.isRendereredSource=!1;else{const t=await this.layer.applyRenderer(e,"stretch"===a?.type?a:void 0);c.source=t,c.isRendereredSource=!0}c.symbolizerParameters=r?u:null,c.transformGrid=r?o.transformGrid:null}else{const e=this.createEmptyTilePixelBlock();c.source=e,c.symbolizerParameters=r?u:null,c.transformGrid=null}c.bandIds=r?s:null,c.width=this._tileInfoView.tileInfo.size[0],c.height=this._tileInfoView.tileInfo.size[1],c.interpolation=i,c.suspended=n;const{raster:d}=this.layer;if(g(d)){const t=d.getClippingGeometry(this.layerView.view.spatialReference);if(t){const s=d.getTileExtentFromTileInfo(e.key.level,e.key.row,e.key.col,this._tileInfoView.tileInfo);c.mask=b({srcExtent:s,geometry:t,size:[c.width,c.height]})}}c.invalidateTexture()}async updateTileSymbolizerParameters(e,t){const{local:s,global:i}=t,r=this._getBandIds(),o=this._getLayerInterpolation(),{canUseWebGLForProcessing:a}=this,{bitmap:n}=e,{rawPixelData:l}=n;a||null==l?(n.isRendereredSource&&null!=l&&(n.source=l.pixelBlock),n.isRendereredSource=!1):(n.source=await this.layer.applyRenderer(l,"stretch"===i?.type?i:void 0),n.isRendereredSource=!0),n.symbolizerParameters=a?this.layerView.hasTilingEffects?i:s:null,n.bandIds=a?r:null,n.interpolation=o,n.suspended=!1}_getLayerInterpolation(){const{interpolation:e,renderer:t}=this.layer;if(!t)return e;const s=t.type;return"raster-colormap"===s||"unique-value"===s?"nearest":"raster-stretch"===t.type&&null!=t.colorRamp?"bilinear"===e||"cubic"===e?"bilinear":"nearest":e}_addProjection(e){return e?.functions?.length&&!e.hasFocalFunction&&e.functions.unshift({name:"Reproject",parameters:{targetImageSize:this._tileInfoView.tileInfo.size,requireNNEdge:e.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1}),e}};e([l()],yi.prototype,"canUseWebGLForProcessing",null),e([l()],yi.prototype,"container",void 0),e([l()],yi.prototype,"layer",void 0),e([l()],yi.prototype,"type",void 0),yi=e([u("esri.views.2d.layers.imagery.ImageryTileView2D")],yi);class gi extends E{constructor(e,t,s,i,r,o,a=null){super(e,t,s,i,r,o),this.tileData=new d(a),this.tileData.coordScale=[r,o],this.tileData.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{displayViewScreenMat3:_(),tileMat3:_()}}setTransform(e){super.setTransform(e);const t=this.resolution/(e.resolution*e.pixelRatio),s=this.transforms.tileMat3,[i,r]=this.tileData.offset,o=[this.x+i*this.resolution,this.y-r*this.resolution],[a,n]=e.toScreenNoRotation([0,0],o),{symbolTileSize:l}=this.tileData.symbolizerParameters,p=Math.round((this.width-this.tileData.offset[0])/l)*l,u=Math.round((this.height-this.tileData.offset[1])/l)*l,c=p/this.rangeX*t,d=u/this.rangeY*t;I(s,c,0,0,0,d,0,a,n,1),P(this.transforms.displayViewScreenMat3,e.displayViewMat3,s),this.tileData.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class fi extends N{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const t=this.tileInfoView.getTileBounds(w(),e),[s,i]=this.tileInfoView.tileInfo.size,r=this.tileInfoView.getTileResolution(e.level);return new gi(e,r,t[0],t[3],s,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (vf tile)",brushes:[h],target:()=>this.children.map((e=>e.tileData)),drawPhase:W.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===W.MAP&&this.symbolTypes.forEach((t=>{e.renderPass=t,super.doRender(e)}))}}let bi=class extends mi{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}async fetchTile(e,t){t={...t,interpolation:"nearest",requestProjectedLocalDirections:!0};const s=await this.layer.fetchTile(e.level,e.row,e.col,t);return"vector-magdir"===this.layer.serviceRasterInfo?.dataType&&s?.pixelBlock&&(s.pixelBlock=await this.layer.convertVectorFieldData(s.pixelBlock,"vector-magdir",t)),s}updateTileSource(e,t){const s=t.symbolizerParams,{tileData:i}=e;i.key=e.key,i.width=this._tileInfoView.tileInfo.size[0],i.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:r}=s,{source:o}=t;if(i.offset=this._getTileSymbolOffset(i.key,r),null!=o?.pixelBlock){const e={extent:o.extent,pixelBlock:o.pixelBlock};i.rawPixelData=e,i.symbolizerParameters=s,i.source=this._sampleVectorFieldData(o.pixelBlock,s,i.offset)}else{const e=[Math.round((this._tileInfoView.tileInfo.size[0]-i.offset[0])/r),Math.round((this._tileInfoView.tileInfo.size[1]-i.offset[1])/r)],t=this.createEmptyTilePixelBlock(e);i.source=t,i.symbolizerParameters=s}return i.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(e,t){const s=t.local,{symbolTileSize:i}=s,{tileData:r}=e;r.offset=this._getTileSymbolOffset(r.key,i);const o=r.symbolizerParameters.symbolTileSize;r.symbolizerParameters=s;const a=r.rawPixelData?.pixelBlock;return null!=a&&o!==i&&(r.source=this._sampleVectorFieldData(a,r.symbolizerParameters,r.offset)),Promise.resolve()}attach(){super.attach(),this.container=new fi(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=o((()=>this.layer.renderer),(e=>this._updateSymbolType(e)))}detach(){super.detach(),this.container.removeAllChildren(),this._handle?.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(e,t){const s=e.col*this._tileInfoView.tileInfo.size[0]%t,i=e.row*this._tileInfoView.tileInfo.size[1]%t;return[s>t/2?t-s:-s,i>t/2?t-i:-i]}_sampleVectorFieldData(e,t,s){const{symbolTileSize:i}=t;return vt(e,"vector-uv",i,s)}_updateSymbolType(e){"vector-field"===e?.type&&(this.container.symbolTypes="wind-barb"===e.style?["scalar","triangle"]:"simple-scalar"===e.style?["scalar"]:["triangle"])}};e([l()],bi.prototype,"container",void 0),e([l()],bi.prototype,"layer",void 0),e([l()],bi.prototype,"type",void 0),bi=e([u("esri.views.2d.layers.imagery.VectorFieldTileView2D")],bi);let wi=class extends(Gt(Et(y(qt)))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(e){this._useWebGLForProcessing=e,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=e)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(e){this._useProgressiveUpdate=e,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=e)}get displayParameters(){const{layer:e}=this,t=this._get("displayParameters");return e.renderer&&e.visible?{bandIds:e.bandIds,renderer:e.renderer,interpolation:e.interpolation,multidimensionalDefinition:e.multidimensionalDefinition,rasterFunction:"imagery-tile"===e.type?e.rasterFunction:null}:t}update(e){this.subview?.update(e),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([o((()=>this.displayParameters),((e,t)=>{const i=e.interpolation!==t?.interpolation&&("majority"===e.interpolation||"majority"===t?.interpolation)&&At(this.layer),o=!!this.layer.serviceRasterInfo?.storageInfo?.isBsqTile&&e.bandIds?.join()!==t?.bandIds?.join(),a=e.renderer!==t?.renderer&&this._getSubviewType(t?.renderer)!==this._getSubviewType(e.renderer);a&&this._updateSubview();const n=e.multidimensionalDefinition!==t?.multidimensionalDefinition,l=e.rasterFunction!==t?.rasterFunction,p=l&&!this._useWebGLForProcessing,u=n||i||a||p||o;this.subview.redrawOrRefetch({refetch:u,reprocess:l}).catch((e=>{r(e)||s.getLogger(this).error(e)})),this.notifyChange("updating")})),o((()=>this.layer.multidimensionalSubset??null),((e,t)=>{const{multidimensionalDefinition:i}=this.layer;null!=i&&c(i,e)!==c(i,t)&&(this.subview.redrawOrRefetch({refetch:!0}).catch((e=>{r(e)||s.getLogger(this).error(e)})),this.notifyChange("updating"))}),a),o((()=>this.timeExtent),(()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch((e=>{r(e)||s.getLogger(this).error(e)}))}),n)])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){const{renderer:e}=this.layer;if(!e)return;const t=this._getSubviewType(e);if(this.subview){if(this.subview.type===t)return void this._attachSubview(this.subview);this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}const{layer:s}=this;let i;if(i="rasterVF"===t?new bi({layer:s,layerView:this,scheduler:this.scheduler}):"flow"===t?new m({layer:s,layerView:this,scheduler:this.scheduler}):new yi({layer:s,layerView:this,scheduler:this.scheduler}),"useWebGLForProcessing"in i&&(i.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in i&&(i.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in i){const{subview:e}=this;i.previousLOD=e&&"previousLOD"in e?e.previousLOD:null}this._attachSubview(i),this.subview=i,this.requestUpdate()}_attachSubview(e){e&&!e.attached&&(e.attach(),e.attached=!0,this.container.addChildAt(e.container,0))}_detachSubview(e){e?.attached&&(this.container.removeChild(e.container),e.detach(),e.attached=!1)}_getSubviewType(e){const t=e?.type;return"vector-field"===t?"rasterVF":"flow"===t?"flow":"raster"}};e([l()],wi.prototype,"subview",void 0),e([l()],wi.prototype,"useWebGLForProcessing",null),e([l()],wi.prototype,"useProgressiveUpdate",null),e([l({readOnly:!0})],wi.prototype,"displayParameters",null),wi=e([u("esri.views.2d.layers.ImageryTileLayerView2D")],wi);const xi=wi;export{xi as default};
