/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{J as t,K as s,L as i,i as a}from"../core/lang.js";import r from"../core/Error.js";import{s as n,g as o}from"./MapUtils.js";import{d as h}from"./maybe.js";import{isAborted as l,throwIfAborted as c}from"../core/promiseUtils.js";import{property as d}from"../core/accessorSupport/decorators/property.js";import"./Logger.js";import{subclass as u}from"../core/accessorSupport/decorators/subclass.js";import{c as _}from"./mat4f64.js";import{s as g,t as f,k as m,d as p}from"./vec3.js";import{c as I}from"./vec3f64.js";import{c as y,f as v}from"./vec4f64.js";import{d as E}from"./debugFlags2.js";import{g as T}from"./glUtil.js";import{n as A}from"./InterleavedLayout.js";import b from"../views/3d/webgl/RenderCamera.js";import{S}from"./ShaderOutput.js";import{A as C}from"./RenderGeometry.js";import{d as L,e as R}from"./Material.js";import{D as O}from"./DepthRange.js";import{I as M}from"./IntersectorResult.js";import{O as x}from"./Octree.js";import{E as D}from"./Matrix4PassUniform.js";import{A as w,d as F,j as N,g as H,n as V,m as j,e as U,a as B,i as z,r as G}from"./BufferView.js";import{V as P}from"./VertexAttribute.js";import q from"../core/Accessor.js";import W from"../core/Evented.js";import{f as k,i as J,t as K}from"./mat3.js";import{c as Y}from"./mat3f64.js";import{m as Q}from"./mat4.js";import{c as Z,m as $}from"./mathUtils2.js";import{B as X}from"./VertexArrayObject.js";import{U as ee}from"./enums.js";import{w as te,c as se,g as ie}from"./sphere.js";import{q as ae,e as re,m as ne,z as oe}from"./aaBoundingBox.js";import{G as he}from"./NormalUtils.glsl.js";import{V as le}from"./VertexArrayObject2.js";import{f as ce}from"./RibbonLineMaterial.js";import{b as de}from"./DefaultMaterial.js";import{d as ue}from"./HighlightDefaults.js";import{T as _e,n as ge}from"./Scheduler.js";import{b as fe,u as me}from"./Texture.js";class pe{constructor(e,t,s){this._elementSize=t,this._buffer=X.createVertex(e,ee.STATIC_DRAW),this.resize(s)}destroy(){this._buffer.dispose()}get elementSize(){return this._elementSize}get capacity(){return this._capacity}get array(){return this._array}get buffer(){return this._buffer}get usedMemory(){return this._array.byteLength+this._buffer.usedMemory}copyRange(e,t,s,i=0){const a=new Uint8Array(this.array,e*this.elementSize,(t-e)*this.elementSize);new Uint8Array(s.array,i*this.elementSize).set(a)}transferAll(){this._buffer.setData(this._array)}transferRange(e,t){const s=e*this._elementSize,i=t*this._elementSize;this._buffer.setSubData(new Uint8Array(this._array),s,s,i)}resize(e){const t=e*this._elementSize,s=new ArrayBuffer(t);this._array&&(e>=this._capacity?new Uint8Array(s).set(new Uint8Array(this._array)):new Uint8Array(s).set(new Uint8Array(this._array).subarray(0,e*this._elementSize))),this._array=s,this._buffer.setSize(t),this._capacity=e}}class Ie{constructor(e){this.modelOriginHi=e.getField(P.INSTANCEMODELORIGINHI,F),this.modelOriginLo=e.getField(P.INSTANCEMODELORIGINLO,F),this.model=e.getField(P.INSTANCEMODEL,N),this.modelNormal=e.getField(P.INSTANCEMODELNORMAL,N),this.featureAttribute=e.getField(P.INSTANCEFEATUREATTRIBUTE,H),this.color=e.getField(P.INSTANCECOLOR,V),this.objectAndLayerIdColor=e.getField(P.INSTANCEOBJECTANDLAYERIDCOLOR,V)}}class ye{constructor(e,t){this._rctx=e,this._instanceBufferLayout=t,this._headIndex=0,this._tailIndex=0,this._firstIndex=null,this._captureFirstIndex=!0,this._updating=!1,this._prevHeadIndex=0,this._resized=!1,this._capacity=1}destroy(){this._buffer&&this._buffer.destroy()}get buffer(){return this._buffer.buffer}get view(){return this._view}get capacity(){return this._capacity}get size(){const e=this._headIndex,t=this._tailIndex;return e>=t?e-t:e+this._capacity-t}get isEmpty(){return this._headIndex===this._tailIndex}get isFull(){return this._tailIndex===(this._headIndex+1)%this._capacity}get headIndex(){return this._headIndex}get tailIndex(){return this._tailIndex}get firstIndex(){return this._firstIndex}get usedMemory(){return this._buffer?.usedMemory??0}reset(){this._headIndex=0,this._tailIndex=0,this._firstIndex=null}startUpdateCycle(){this._captureFirstIndex=!0}beginUpdate(){w(!this._updating,"already updating"),this._updating=!0,this._prevHeadIndex=this._headIndex}endUpdate(){w(this._updating,"not updating"),this.size<t*this.capacity&&this._shrink(),this._resized?(this._buffer.transferAll(),this._resized=!1):this._transferRange(this._prevHeadIndex,this._headIndex),this._updating=!1}allocateHead(){w(this._updating,"not updating"),this.isFull&&this._grow();const e=this.headIndex;return this._captureFirstIndex&&(this._firstIndex=e,this._captureFirstIndex=!1),this._incrementHead(),w(this._headIndex!==this._tailIndex,"invalid pointers"),e}freeTail(){w(this._updating,"not updating"),w(this.size>0,"invalid size");const e=this._tailIndex===this._firstIndex;this._incrementTail(),e&&(this._firstIndex=this._tailIndex)}_grow(){const e=Math.max(ve,Math.floor(this._capacity*s));this._resize(e)}_shrink(){const e=Math.max(ve,Math.floor(this._capacity*i));this._resize(e)}_resize(e){if(w(this._updating,"not updating"),e===this._capacity)return;const t=new pe(this._rctx,this._instanceBufferLayout.stride,e);if(this._buffer){this._firstIndex&&(this._firstIndex=(this._firstIndex+this._capacity-this._tailIndex)%this._capacity);const e=this.size,s=this._compactInstances(t);w(s===e,"invalid compaction"),this._buffer.destroy(),this._tailIndex=0,this._headIndex=s,this._prevHeadIndex=0}this._resized=!0,this._capacity=e,this._buffer=t,this._view=new Ie(this._instanceBufferLayout.createView(this._buffer.array))}_compactInstances(e){const t=this._headIndex,s=this._tailIndex;return s<t?(this._buffer.copyRange(s,t,e),t-s):s>t?(this._buffer.copyRange(s,this._capacity,e),t>0&&this._buffer.copyRange(0,t,e,this._capacity-s),t+(this._capacity-s)):0}_incrementHead(e=1){this._headIndex=(this._headIndex+e)%this._capacity}_incrementTail(e=1){this._tailIndex=(this._tailIndex+e)%this._capacity}_transferRange(e,t){e<t?this._buffer.transferRange(e,t):e>t&&(t>0&&this._buffer.transferRange(0,t),this._buffer.transferRange(e,this._capacity))}}const ve=64;var Ee;!function(e){e[e.ALLOCATED=1]="ALLOCATED",e[e.DEFAULT_ACTIVE=2]="DEFAULT_ACTIVE",e[e.VISIBLE=4]="VISIBLE",e[e.HIGHLIGHT=8]="HIGHLIGHT",e[e.HIGHLIGHT_ACTIVE=16]="HIGHLIGHT_ACTIVE",e[e.REMOVE=32]="REMOVE",e[e.TRANSFORM_CHANGED=64]="TRANSFORM_CHANGED",e[e.ACTIVE=18]="ACTIVE"}(Ee||(Ee={}));class Te{constructor(e){this.localTransform=e.getField(P.LOCALTRANSFORM,j),this.globalTransform=e.getField(P.GLOBALTRANSFORM,j),this.modelOrigin=e.getField(P.MODELORIGIN,U),this.model=e.getField(P.INSTANCEMODEL,N),this.modelNormal=e.getField(P.INSTANCEMODELNORMAL,N),this.modelScaleFactors=e.getField(P.MODELSCALEFACTORS,B),this.boundingSphere=e.getField(P.BOUNDINGSPHERE,z),this.featureAttribute=e.getField(P.FEATUREATTRIBUTE,H),this.color=e.getField(P.COLOR,V),this.objectAndLayerIdColor=e.getField(P.OLIDCOLOR,V),this.state=e.getField(P.STATE,G),this.lodLevel=e.getField(P.LODLEVEL,G)}}let Ae=class extends q{constructor(e,t){super(e),this.events=new W,this._capacity=0,this._size=0,this._next=0,this._highlightOptionsMap=new Map,this._highlightOptionsMapPrev=new Map,this._layout=function(e){let t=A().mat4f64(P.LOCALTRANSFORM).mat4f64(P.GLOBALTRANSFORM).vec4f64(P.BOUNDINGSPHERE).vec3f64(P.MODELORIGIN).mat3f(P.INSTANCEMODEL).mat3f(P.INSTANCEMODELNORMAL).vec2f(P.MODELSCALEFACTORS);return e.includes(P.FEATUREATTRIBUTE)&&(t=t.vec4f(P.FEATUREATTRIBUTE)),e.includes(P.COLOR)&&(t=t.vec4u8(P.COLOR)),e.includes(P.OLIDCOLOR)&&(t=t.vec4u8(P.OLIDCOLOR)),t=t.u8(P.STATE).u8(P.LODLEVEL),t}(t),this._capacity=ve,this._buffer=this._layout.createBuffer(this._capacity),this._view=new Te(this._buffer)}get capacity(){return this._capacity}get size(){return this._size}get view(){return this._view}addInstance(){this._size+1>this._capacity&&this._grow();const e=this._findSlot();return this._view.state.set(e,Ee.ALLOCATED),this._size++,this.events.emit("instances-changed"),e}removeInstance(e){const t=this._view.state;w(e>=0&&e<this._capacity&&0!==(t.get(e)&Ee.ALLOCATED),"invalid instance handle"),this._getStateFlag(e,Ee.ACTIVE)?this._setStateFlags(e,Ee.REMOVE):this.freeInstance(e),this.events.emit("instances-changed")}freeInstance(e){const t=this._view.state;w(e>=0&&e<this._capacity&&0!==(t.get(e)&Ee.ALLOCATED),"invalid instance handle"),t.set(e,0),this._size--}setLocalTransform(e,t,s=!0){this._view.localTransform.setMat(e,t),s&&this.updateModelTransform(e)}getLocalTransform(e,t){this._view.localTransform.getMat(e,t)}setGlobalTransform(e,t,s=!0){this._view.globalTransform.setMat(e,t),s&&this.updateModelTransform(e)}getGlobalTransform(e,t){this._view.globalTransform.getMat(e,t)}updateModelTransform(e){const t=this._view,s=be,i=Se;t.localTransform.getMat(e,Ce),t.globalTransform.getMat(e,Le);const a=Q(Le,Le,Ce);g(s,a[12],a[13],a[14]),t.modelOrigin.setVec(e,s),k(i,a),t.model.setMat(e,i);const r=Z(be,a);r.sort(),t.modelScaleFactors.set(e,0,r[1]),t.modelScaleFactors.set(e,1,r[2]),J(i,i),K(i,i),t.modelNormal.setMat(e,i),this._setStateFlags(e,Ee.TRANSFORM_CHANGED),this.events.emit("instance-transform-changed",{index:e})}getModelTransform(e,t){const s=this._view;s.model.getMat(e,Se),s.modelOrigin.getVec(e,be),t[0]=Se[0],t[1]=Se[1],t[2]=Se[2],t[3]=0,t[4]=Se[3],t[5]=Se[4],t[6]=Se[5],t[7]=0,t[8]=Se[6],t[9]=Se[7],t[10]=Se[8],t[11]=0,t[12]=be[0],t[13]=be[1],t[14]=be[2],t[15]=1}applyShaderTransformation(e,t){null!=this.shaderTransformation&&this.shaderTransformation.applyTransform(this,e,t)}getCombinedModelTransform(e,t){return this.getModelTransform(e,t),null!=this.shaderTransformation&&this.shaderTransformation.applyTransform(this,e,t),t}getCombinedLocalTransform(e,t){this._view.localTransform.getMat(e,t),null!=this.shaderTransformation&&this.shaderTransformation.applyTransform(this,e,t)}getCombinedMaxScaleFactor(e){let t=this._view.modelScaleFactors.get(e,1);return null!=this.shaderTransformation&&(this.shaderTransformation.scaleFactor(be,this,e),t*=Math.max(be[0],be[1],be[2])),t}getCombinedMedianScaleFactor(e){let t=this._view.modelScaleFactors.get(e,0);var s,i,a;return null!=this.shaderTransformation&&(this.shaderTransformation.scaleFactor(be,this,e),t*=(s=be[0],i=be[1],a=be[2],Math.max(Math.min(s,i),Math.min(Math.max(s,i),a)))),t}getModel(e,t){this._view.model.getMat(e,t)}setFeatureAttribute(e,t){this._view.featureAttribute.setVec(e,t)}getFeatureAttribute(e,t){this._view.featureAttribute.getVec(e,t)}setColor(e,t){this._view.color.setVec(e,t)}setObjectAndLayerIdColor(e,t){this._view.objectAndLayerIdColor.setVec(e,t)}setVisible(e,t){t!==this.getVisible(e)&&(this._setStateFlag(e,Ee.VISIBLE,t),this.events.emit("instance-visibility-changed",{index:e}))}getVisible(e){return this._getStateFlag(e,Ee.VISIBLE)}setHighlight(e,t){const{_highlightOptionsMap:s}=this,i=s.get(e);t?t!==i&&(s.set(e,t),this._setStateFlag(e,Ee.HIGHLIGHT,!0),this.events.emit("instance-highlight-changed")):i&&(s.delete(e),this._setStateFlag(e,Ee.HIGHLIGHT,!1),this.events.emit("instance-highlight-changed"))}get highlightOptionsMap(){return this._highlightOptionsMap}getHighlightStateFlag(e){return this._getStateFlag(e,Ee.HIGHLIGHT)}geHighlightOptionsPrev(e){const t=this._highlightOptionsMapPrev.get(e)??null;return this._highlightOptionsMapPrev.delete(e),t}getHighlightName(e){const t=this.highlightOptionsMap.get(e)??null;return t?this._highlightOptionsMapPrev.set(e,t):this._highlightOptionsMapPrev.delete(e),t}getState(e){return this._view.state.get(e)}getLodLevel(e){return this._view.lodLevel.get(e)}countFlags(e){let t=0;for(let s=0;s<this._capacity;++s)this.getState(s)&e&&++t;return t}_setStateFlags(e,t){const s=this._view.state;t=s.get(e)|t,s.set(e,t)}_clearStateFlags(e,t){const s=this._view.state;t=s.get(e)&~t,s.set(e,t)}_setStateFlag(e,t,s){s?this._setStateFlags(e,t):this._clearStateFlags(e,t)}_getStateFlag(e,t){return!!(this._view.state.get(e)&t)}_grow(){this._capacity=Math.max(ve,Math.floor(this._capacity*s)),this._buffer=this._layout.createBuffer(this._capacity).copyFrom(this._buffer),this._view=new Te(this._buffer)}_findSlot(){const e=this._view.state;let t=this._next;for(;e.get(t)&Ee.ALLOCATED;)t=t+1===this._capacity?0:t+1;return this._next=t+1===this._capacity?0:t+1,t}};e([d({constructOnly:!0})],Ae.prototype,"shaderTransformation",void 0),e([d()],Ae.prototype,"_size",void 0),e([d({readOnly:!0})],Ae.prototype,"size",null),Ae=e([u("esri.views.3d.webgl-engine.lib.lodRendering.InstanceData")],Ae);const be=I(),Se=Y(),Ce=_(),Le=_();class Re extends x{constructor(e,t){super((e=>te(this._instanceData.view.boundingSphere.getVec(e,this._tmpSphere))),{maximumDepth:25}),this._instanceData=e,this._boundingSphere=t,this._tmpSphere=se(),this._tmpMat4=_()}addInstance(e){const t=this._instanceData.view.boundingSphere,s=this._instanceData.getCombinedModelTransform(e,this._tmpMat4);f(ie(this._tmpSphere),this._boundingSphere.center,s),this._tmpSphere[3]=this._boundingSphere.radius*$(s),t.setVec(e,this._tmpSphere),this.add([e])}removeInstance(e){this.remove([e])}}class Oe{constructor(e,t){this._worldSpaceRadius=e,this._minScreenSpaceRadii=t}selectLevel(e,t,s){const i=s.computeScreenPixelSizeAt(e),a=this._worldSpaceRadius*t/i;let r=0;for(let e=1;e<this._minScreenSpaceRadii.length;++e)a>=this._minScreenSpaceRadii[e]&&(r=e);return r}}class Me{constructor(e,t){const s=e.renderContext.rctx,i=t.geometry,a=t.geometry.getRenderGeometry(),r=a.material;this._materials=e.materials,r.setParameters({instancedDoublePrecision:!0}),this.geometry=i,this.material=r,this.glMaterials=new he(r,this._materials),this.vertexBufferLayout=a.vertexBufferLayout,this.vbo=X.createVertex(s,ee.STATIC_DRAW,a.buffer),this.vao=new le(s,L,new Map([["geometry",T(a.vertexBufferLayout)]]),new Map([["geometry",this.vbo]])),this.vertexCount=a.elementCount}destroy(){this.glMaterials.dispose(),this.vbo.dispose(),this.vao.dispose()}get boundingInfo(){return this.geometry.boundingInfo}get triangleCount(){return this.vertexCount/3}get usedMemory(){return 128+this.vbo.usedMemory+this.vao.usedMemory}intersect(e,t,s,i,a,r,n,o){return this.geometry.intersect(e,t,s,i,a,r,n,o)}}class xe{static async create(e,t,s){const i=await Promise.allSettled(t.components.map((t=>e.controller.schedule((()=>new Me(e,t)),s)))),r=i.map((e=>"fulfilled"===e.status?e.value:null)).filter(a);if(l(s)||r.length!==i.length){r.forEach((e=>e.destroy())),c(s);for(const e of i)if("rejected"===e.status)throw e.reason}return new xe(t.minScreenSpaceRadius,r)}constructor(e,t){this.minScreenSpaceRadius=e,this.components=t}destroy(){this.components.forEach((e=>e.destroy()))}intersect(e,t,s,i,a,r,n){this.components.forEach((o=>o.intersect(e,t,s,i,a,r,this.boundingSphere,n)))}get boundingBox(){if(null==this._boundingBox){const e=ae();this.components.forEach((t=>{null!=t.boundingInfo&&(re(e,t.boundingInfo.bbMin),re(e,t.boundingInfo.bbMax))})),this._boundingBox=e}return this._boundingBox}get boundingSphere(){if(null==this._boundingSphere){const e=this.boundingBox,t=I();ne(e,t),this._boundingSphere={center:t,radius:.5*oe(e)}}return this._boundingSphere}get triangleCount(){return this.components.reduce(((e,t)=>e+t.triangleCount),0)}}let De=class extends C{constructor(e,t){super(e),this.type=M.LOD,this.isGround=!1,this._levels=[],this._defaultRenderInstanceData=new Array,this._highlightRenderInstanceDataMap=new Map,this._instanceIndex=0,this._cycleStartIndex=0,this._slicePlane=!1,this._camera=new b,this._updateCyclesWithStaticCamera=-1,this._needFullCycle=!1,this.produces=new Map([[D.OPAQUE_MATERIAL,e=>this._produces(e)],[D.TRANSPARENT_MATERIAL,e=>!!this._hasTransparentLevels()&&this._produces(e)]]),this._instanceData=new Ae({shaderTransformation:e.shaderTransformation},e.optionalFields),this.addHandles(t.registerTask(_e.LOD_RENDERER,this))}initialize(){this._instanceBufferLayout=function(e){let t=A().vec3f(P.INSTANCEMODELORIGINHI).vec3f(P.INSTANCEMODELORIGINLO).mat3f(P.INSTANCEMODEL).mat3f(P.INSTANCEMODELNORMAL);return null!=e&&e.includes("featureAttribute")&&(t=t.vec4f(P.INSTANCEFEATUREATTRIBUTE)),null!=e&&e.includes("color")&&(t=t.vec4u8(P.INSTANCECOLOR)),null!=e&&e.includes("objectAndLayerIdColor")&&(t=t.vec4u8(P.INSTANCEOBJECTANDLAYERIDCOLOR)),t}(this.optionalFields),this._glInstanceBufferLayout=T(this._instanceBufferLayout,1),this.addHandles([this._instanceData.events.on("instances-changed",(()=>this._requestUpdateCycle())),this._instanceData.events.on("instance-transform-changed",(({index:e})=>{this._requestUpdateCycle(),this.metadata.notifyGraphicGeometryChanged(e)})),this._instanceData.events.on("instance-visibility-changed",(({index:e})=>{this._requestUpdateCycle(!0),this.metadata.notifyGraphicVisibilityChanged(e)})),this._instanceData.events.on("instance-highlight-changed",(()=>this._requestUpdateCycle(!0)))])}get _allRenderInstanceData(){return[this._defaultRenderInstanceData,...this._highlightRenderInstanceDataMap.values()]}get _allRenderInstanceDataExceptHighlightShadow(){const e=[this._defaultRenderInstanceData];for(const t of this._highlightRenderInstanceDataMap)t[0]!==ue&&e.push(t[1]);return e}hasHighlight(e){return this._highlightRenderInstanceDataMap.has(e)}get _enableLevelSelection(){return this.symbol.levels.length>1}get levels(){return this._levels}get baseBoundingBox(){return this._levels[this._levels.length-1].boundingBox}get baseBoundingSphere(){return this._levels[this._levels.length-1].boundingSphere}get baseMaterial(){return this._levels[this._levels.length-1].components[0].material}get slicePlaneEnabled(){return this._slicePlane}set slicePlaneEnabled(e){this._slicePlane=e}get layerViewUid(){return this.metadata.layerViewUid}get instanceData(){return this._instanceData}get hasEmissions(){return this._levels.some((e=>e.components.some((e=>e.material.hasEmissions))))}get usedMemory(){return this._allRenderInstanceData.reduce(((e,t)=>t.reduce(((e,t)=>e+t.usedMemory),e)),this._levels.reduce(((e,t)=>e+t.components.reduce(((e,t)=>e+t.usedMemory),0)),0))}get renderStats(){const e=this._instanceData.size,t=[];return this._levels.forEach(((e,s)=>{const i=this._allRenderInstanceData[0][s].size+this._allRenderInstanceData[1][s].size,a=e.triangleCount;t.push({renderedInstances:i,renderedTriangles:i*a,trianglesPerInstance:a})})),{totalInstances:e,renderedInstances:t.reduce(((e,t)=>e+t.renderedInstances),0),renderedTriangles:t.reduce(((e,t)=>e+t.renderedTriangles),0),levels:t}}_createRenderInstanceDataArray(e=[]){const{rctx:t}=this._context.renderContext;return this.symbol.levels.map((s=>{e.push(new ye(t,this._instanceBufferLayout))})),e}async initializeRenderContext(e,t){this._context=e,this._createRenderInstanceDataArray(this._defaultRenderInstanceData);const s=await Promise.allSettled(this.symbol.levels.map((s=>xe.create(e,s,t)))),i=s.map((e=>"fulfilled"===e.status?e.value:null)).filter(a);if(l(t)||i.length!==s.length){i.forEach((e=>e.destroy())),c(t);for(const e of s)if("rejected"===e.status)throw e.reason}this._levels=i,this._levelSelector=(e=>{const t=e.baseBoundingSphere.radius,s=e.levels.map((e=>e.minScreenSpaceRadius));return new Oe(t,s)})(this)}uninitializeRenderContext(){this._invalidateOctree(),this._levels.forEach((e=>e.destroy())),this._defaultRenderInstanceData.forEach((e=>e.destroy())),this._highlightRenderInstanceDataMap.forEach((e=>e.forEach((e=>e.destroy()))))}_hasTransparentLevels(){return this._levels.some((e=>e.components.some((e=>{const t=e.material.produces.get(D.TRANSPARENT_MATERIAL);return t?.(S.Color)}))))}hasHighlights(){return n(this._highlightRenderInstanceDataMap,(e=>e.some((e=>e.size>0))))}_produces(e){return(e!==S.Highlight||this.hasHighlights())&&(e!==S.ShadowHighlight||this.hasHighlight(ue))}prepareRender(e){if(!E.LOD_INSTANCE_RENDERER_DISABLE_UPDATES){if(this._enableLevelSelection){const t=e.bind.contentCamera.equals(this._camera);this._camera.copyFrom(e.bind.contentCamera),t||this._requestUpdateCycle()}this._needFullCycle&&(this.runTask(ge),this._needFullCycle=!1)}}acquireTechniques(e){if(!this.baseMaterial.visible||!this.baseMaterial.isVisibleForOutput(e.output))return null;const t=this._getInstanceDatas(e);if(!t)return null;const s=new Array,i=this.levels;return t.forEach((t=>i.forEach((({components:i},a)=>i.forEach((i=>s.push(this._beginComponent(e,t[a],i)))))))),s}render(e,t){const s=this._getInstanceDatas(e);if(!s||null==t)return;let i=0;e.rctx.bindVAO();const a=this.levels;s.forEach((s=>a.forEach((({components:a},r)=>a.forEach((a=>this._renderComponent(e,t[i++],s[r],a,r)))))))}_getInstanceDatas(e){const{output:t,bind:s}=e,i=t===S.Highlight,a=t===S.ShadowHighlight,r=!i&&!a,n=t!==S.ShadowExcludeHighlight;if(r)return n?this._allRenderInstanceData:this._allRenderInstanceDataExceptHighlightShadow;const{_highlightRenderInstanceDataMap:o}=this;if(n){if(i){const e=s.highlight?.name;if(!e)return null;const t=o.get(e);return t?[t]:null}const e=o.get(ue);return a?e?[e]:null:Array.from(o.values())}return null}intersect(e,t,s,i){if(!this.baseMaterial.visible||null==this._octree)return;const a=I();m(a,i,s);const r=a=>{this._instanceData.getCombinedModelTransform(a,He),e.transform.set(He),f(Ve,s,e.transform.inverse),f(je,i,e.transform.inverse);const r=this._instanceData.getState(a),n=this._instanceData.getLodLevel(a),o=this._levels.length;w(0!==(r&Ee.ACTIVE),"invalid instance state"),w(n>=0&&n<o,"invaid lod level"),this._levels[n].intersect(e,t,Ve,je,a,this.metadata,o)};this.baseMaterial.parameters.verticalOffset?this._octree.forEach(r):this._octree.forEachAlongRay(s,a,r)}notifyShaderTransformationChanged(){this._invalidateOctree(),this._requestUpdateCycle()}get _octree(){if(null==this._octreeCached){const e=this._instanceData,t=e.view?.state;if(!t)return null;this._octreeCached=new Re(e,this.baseBoundingSphere);for(let s=0;s<e.capacity;++s)t.get(s)&Ee.ACTIVE&&this._octreeCached.addInstance(s)}return this._octreeCached}_invalidateOctree(){this._octreeCached=h(this._octreeCached)}queryDepthRange(e){if(null==this._octree)return new O;const t=e.viewForward,s=this._octree.findClosest(t,x.DepthOrder.FRONT_TO_BACK,e.frustum),i=this._octree.findClosest(t,x.DepthOrder.BACK_TO_FRONT,e.frustum);if(null==s||null==i)return new O;const a=e.eye,r=this._instanceData.view;r.boundingSphere.getVec(s,Ne),m(Ne,Ne,a);const n=p(Ne,t)-Ne[3];r.boundingSphere.getVec(i,Ne),m(Ne,Ne,a);const o=p(Ne,t)+Ne[3];return new O(n,o)}_requestUpdateCycle(e=!1){this._updateCyclesWithStaticCamera=-1,this._cycleStartIndex=this._instanceIndex,e&&(this._needFullCycle=!0,this._context.requestRender())}_startUpdateCycle(){this._updateCyclesWithStaticCamera++,this._allRenderInstanceData.forEach((e=>e.forEach((e=>e.startUpdateCycle()))))}get running(){return this._instanceData.size>0&&this._updateCyclesWithStaticCamera<1}runTask(e){const{_enableLevelSelection:t,_camera:s,_levelSelector:i}=this;this._allRenderInstanceData.forEach((e=>e.forEach((e=>e.beginUpdate()))));const a=this._instanceData,n=a.view;let h=a.size;const l=a.capacity;let c=this._instanceIndex;const d=Math.ceil(l/500),{_highlightRenderInstanceDataMap:u}=this;for(let _=0;_<h&&!e.done;++_){c===this._cycleStartIndex&&this._startUpdateCycle();const _=n.state.get(c);let g=0;if(!(_&Ee.ALLOCATED)){c=c+1===l?0:c+1,h++;continue}const f=n.lodLevel.get(c);if(_&Ee.DEFAULT_ACTIVE&&this._defaultRenderInstanceData[f].freeTail(),_&Ee.HIGHLIGHT_ACTIVE){const e=a.geHighlightOptionsPrev(c);if(e){const t=u.get(e);if(!t)throw new r("internal:lod-renderer","Internal error in lodRenderer");t[f].freeTail(),t.every((e=>e.isEmpty))&&(t.forEach((e=>e.destroy())),u.delete(e))}}if(_&Ee.REMOVE)a.freeInstance(c);else if(_&Ee.VISIBLE){let e=0;if(t&&(n.modelOrigin.getVec(c,Fe),e=i.selectLevel(Fe,a.getCombinedMedianScaleFactor(c),s)),g=_&~(Ee.ACTIVE|Ee.TRANSFORM_CHANGED),e>=0)if(_&Ee.HIGHLIGHT){const t=a.getHighlightName(c);if(t){const s=()=>{const e=this._createRenderInstanceDataArray();return e.forEach((e=>e.beginUpdate())),e},i=o(u,t,s);if(e>=i.length)throw new r("internal:lod-renderer",`LodRenderer internal error - missing lodLevel ${e}`);we(i[e],n,c)}g|=Ee.HIGHLIGHT_ACTIVE}else we(this._defaultRenderInstanceData[e],n,c),g|=Ee.DEFAULT_ACTIVE;n.state.set(c,g),n.lodLevel.set(c,e)}else g=_&~(Ee.ACTIVE|Ee.TRANSFORM_CHANGED),n.state.set(c,g);if(null!=this._octreeCached){const e=!!(_&Ee.ACTIVE),t=!!(g&Ee.ACTIVE);!e&&t?this._octreeCached.addInstance(c):e&&!t?this._octreeCached.removeInstance(c):e&&t&&_&Ee.TRANSFORM_CHANGED&&(this._octreeCached.removeInstance(c),this._octreeCached.addInstance(c))}c=c+1===l?0:c+1,c%d===0&&e.madeProgress()}this._instanceIndex=c,this._allRenderInstanceData.forEach((e=>e.forEach((e=>e.endUpdate())))),this._context.requestRender()}_beginComponent(e,t,s){if(0===t.size)return null;const i=s.glMaterials.load(e.rctx,e.bind.slot,e.output);return i?.beginSlot(e.bind)}_renderComponent(e,t,s,i,a){if(!t)return;const{bind:r,rctx:n}=e;n.runAppleAmdDriverHelper();const o=n.bindTechnique(t,r,i.material.parameters,Be);n.bindVAO(i.vao),t.ensureAttributeLocations(i.vao),E.LOD_INSTANCE_RENDERER_COLORIZE_BY_LEVEL&&e.output===S.Color&&(o.setUniform4fv("externalColor",Ue[Math.min(a,Ue.length-1)]),o.setUniform1i("colorMixMode",R.replace));const h=s.capacity,l=s.headIndex,c=s.tailIndex,d=s.firstIndex,u=this._glInstanceBufferLayout,_=(e,a)=>{fe(n,L,s.buffer,u,e),n.drawArraysInstanced(t.primitiveType,0,i.vertexCount,a-e),me(n,L,s.buffer,u)};i.material.transparent&&null!=d?l>c?(w(d>=c&&d<=l,"invalid firstIndex"),_(d,l),_(c,d)):l<c&&(d<=l?(w(d>=0&&d<=l,"invalid firstIndex"),_(d,l),_(c,h),_(0,d)):(w(d>=c&&d<=h,"invalid firstIndex"),_(d,h),_(0,l),_(c,d))):l>c?_(c,l):l<c&&(_(0,l),_(c,h)),n.bindVAO(null)}};function we(e,t,s){const i=e.allocateHead();var a,r,n,o;a=t,r=s,n=e.view,o=i,ce(a.modelOrigin,r,n.modelOriginHi,n.modelOriginLo,o),n.model.copyFrom(o,a.model,r),n.modelNormal.copyFrom(o,a.modelNormal,r),a.color&&n.color&&n.color.copyFrom(o,a.color,r),a.objectAndLayerIdColor&&n.objectAndLayerIdColor&&n.objectAndLayerIdColor.copyFrom(o,a.objectAndLayerIdColor,r),a.featureAttribute&&n.featureAttribute&&n.featureAttribute.copyFrom(o,a.featureAttribute,r)}e([d({constructOnly:!0})],De.prototype,"symbol",void 0),e([d({constructOnly:!0})],De.prototype,"optionalFields",void 0),e([d({constructOnly:!0})],De.prototype,"metadata",void 0),e([d({constructOnly:!0})],De.prototype,"shaderTransformation",void 0),e([d()],De.prototype,"_instanceData",void 0),e([d()],De.prototype,"_cycleStartIndex",void 0),e([d({readOnly:!0})],De.prototype,"_enableLevelSelection",null),e([d()],De.prototype,"_updateCyclesWithStaticCamera",void 0),e([d({readOnly:!0})],De.prototype,"running",null),De=e([u("esri.views.3d.webgl-engine.lib.lodRendering.LodRenderer")],De);const Fe=I(),Ne=y(),He=_(),Ve=I(),je=I(),Ue=[v(1,0,1,1),v(0,0,1,1),v(0,1,0,1),v(1,1,0,1),v(1,0,0,1)],Be=new de;export{De as L};
