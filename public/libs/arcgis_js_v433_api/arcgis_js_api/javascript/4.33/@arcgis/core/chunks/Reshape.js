/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import e from"../Graphic.js";import{c as i}from"./asyncUtils.js";import s from"../core/Collection.js";import o from"../core/Error.js";import r from"../core/Evented.js";import{L as n}from"./Logger.js";import{d as p,b as a,a as l}from"./maybe.js";import{whenOnce as c,watch as h,syncAndInitial as m,sync as d,pausable as y,when as u,initial as v}from"../core/reactiveUtils.js";import{property as g}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import{subclass as j}from"../core/accessorSupport/decorators/subclass.js";import _ from"../geometry/Point.js";import f from"../geometry/Polyline.js";import{j as b,h as x,g as G}from"./coordsUtils.js";import M from"../layers/GraphicsLayer.js";import S from"../symbols/SimpleMarkerSymbol.js";import{V as w}from"./ViewingMode.js";import{S as V}from"./SnappingVisualizer2D.js";import I from"../core/Accessor.js";import{m as U,h as T}from"./handleUtils.js";import{g as C}from"./MapUtils.js";import{throwIfAborted as L}from"../core/promiseUtils.js";import{a as E}from"./SetUtils.js";import{U as O}from"./UpdatingHandles.js";import{b as k,h as R}from"./layerUtils.js";import{getDisplayedSymbol as P}from"../symbols/support/symbolUtils.js";import{G as F}from"./GraphicState.js";import{c as H}from"./drawUtils.js";import A from"./GraphicMover.js";import D from"../views/draw/support/HighlightHelper.js";import{a as z,i as B}from"./layerUtils2.js";import{z as q}from"./quantityUtils.js";import{c as N}from"./screenUtils.js";import{S as Z,c as W,g as Q,m as X,e as Y}from"./SketchTooltipInfo.js";import{S as J,M as K}from"./SelectedVertexTooltipInfo.js";import{T as $}from"./TranslateTooltipInfo.js";import{d as tt}from"./geodesicLengthMeasurementUtils.js";import{s as et}from"./settings3.js";import{V as it}from"./InputManager.js";import{c as st,E as ot}from"./EditGeometryOperations.js";import{s as rt}from"./keybindings.js";import{S as nt}from"./SketchOptions.js";import{S as pt}from"./SnappingContext.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"./utils.js";import"../core/Handles.js";import"./get.js";import"./Lifecycle.js";import"./metadata.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./tracking.js";import"./ensureType.js";import"../config.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"./events.js";import"./SimpleTrackingTarget.js";import"./Warning.js";import"../core/JSONSupport.js";import"../core/accessorSupport/decorators/cast.js";import"./reader.js";import"./writer.js";import"../layers/support/fieldUtils.js";import"../core/sql.js";import"./guards.js";import"./datetime.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/support/AttachmentsOrderByInfo.js";import"./jsonMap.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./locale.js";import"./constants.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../Color.js";import"./colorUtils2.js";import"./mathUtils.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/content/UtilityNetworkAssociationsContent.js";import"../popup/support/UtilityNetworkAssociationType.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"./shared.js";import"./SimpleObservable.js";import"./jsonUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"./boundsUtils.js";import"./aaBoundingRect.js";import"./Axis.js";import"./typeUtils2.js";import"./createFeatureId.js";import"./typeUtils.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../core/Loadable.js";import"../core/Promise.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils5.js";import"../symbols/edges/Edges3D.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils6.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./vec3f64.js";import"./aaBoundingBox.js";import"../symbols/IconSymbol3DLayer.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"./lineMarkers.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/Font.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/MarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./GraphicsCollection.js";import"../layers/Layer.js";import"../time/TimeExtent.js";import"./timeUtils.js";import"../layers/mixins/BlendLayer.js";import"./layerContainerType.js";import"./jsonUtils2.js";import"./parser.js";import"./utils2.js";import"./mat4.js";import"./common.js";import"../layers/mixins/ScaleRangeLayer.js";import"./ElevationInfo.js";import"./unitConversionUtils.js";import"./lengthUtils.js";import"./vec2.js";import"./vec2f64.js";import"./enums2.js";import"./normalizedPoint.js";import"./dehydratedPoint.js";import"./elevationInfoUtils.js";import"./Settings.js";import"./SnappingVisualizer.js";import"./RightAngleSnappingHint.js";import"./vec3.js";import"./PointSnappingHint.js";import"../layers/catalog/catalogUtils.js";import"./gfxUtils.js";import"./LRUCache.js";import"./MemCache.js";import"../symbols/support/cimSymbolUtils.js";import"./utils3.js";import"./defaultCIMValues.js";import"./renderUtils.js";import"./colorUtils.js";import"./vec4.js";import"./vec4f64.js";import"./projector.js";import"./sanitizerUtils.js";import"./svgUtils.js";import"./mat2df32.js";import"./mat2d.js";import"./widgetUtils.js";import"./jsxFactory.js";import"./jsxWidgetSupport.js";import"./utils4.js";import"./webStyleSymbolUtils.js";import"./devEnvironmentUtils.js";import"../symbols/support/jsonUtils.js";import"./defaults.js";import"./defaultsJSON.js";import"./styleUtils.js";import"./GraphicManipulator.js";import"./projectionUtils.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"./projectXYZToVector.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./projectPointToVector.js";import"./drapedUtils.js";import"./screenUtils2.js";import"./HighlightDefaults.js";import"./layerViewUtils.js";import"./editableLayers.js";import"./Queue.js";import"./signal.js";import"../geometry/coordinateFormatter.js";import"./number2.js";import"../geometry/support/MeshTransform.js";import"./mat4f64.js";import"./quat.js";import"./quatf64.js";import"./axisAngleDegrees.js";import"./meshVertexSpaceUtils.js";import"../geometry/support/MeshGeoreferencedVertexSpace.js";import"../geometry/support/MeshLocalVertexSpace.js";import"../views/interactive/Tooltip.js";import"./modeUtils.js";import"../widgets/Widget.js";import"../intl.js";import"./substitute.js";import"./messages.js";import"./domUtils.js";import"./uuid.js";import"./componentsUtils.js";import"./a11yUtils.js";import"./memoize.js";import"./unitFormatUtils.js";import"./ByteSizeUnit.js";import"./Cyclical.js";import"./getDefaultUnitForView.js";import"./quantityFormatUtils.js";import"./angularMeasurementUtils.js";import"./projectVectorToVector.js";import"../geometry/support/geodesicUtils.js";import"./messageBundle.js";import"./directionModeIcons.js";import"./TooltipInfoWithCoordinates.js";import"./geodesicMeasurementUtils.js";import"./spatialReferenceEllipsoidUtils.js";import"../geometry/operators/geodeticLengthOperator.js";import"./geodeticCurveType.js";import"./plane.js";import"./vector.js";import"./mat3f64.js";import"./mathUtils2.js";import"./geometry2dUtils.js";import"../views/interactive/sketch/SketchLabelOptions.js";import"../views/interactive/sketch/SketchTooltipOptions.js";import"./SketchTooltipVisibleElements.js";import"../views/interactive/sketch/SketchValueOptions.js";var at;!function(t){t[t.FeatureMove=0]="FeatureMove",t[t.VertexMove=1]="VertexMove"}(at||(at={}));const lt=Symbol();let ct=class extends I{constructor(t){super(t),this.activeOperationType=null,this.providerFactories=[],this.view=null,this._activeProviders=new Set,this._graphics=new Map,this._modifiedFeatures=new Map,this._modifiedGraphicsLayer=new M({listMode:"hide",internal:!0,title:"Connected Reshape Modified Graphics (Internal)"}),this._pendingGraphicsLayer=new M({listMode:"hide",internal:!0,title:"Connected Reshape Pending Graphics (Internal)"}),this._pendingFeatures=new Map,this._updatingHandles=new O}initialize(){this.view.map.addMany([this._modifiedGraphicsLayer,this._pendingGraphicsLayer])}destroy(){this.view.destroyed||this.view.map.removeMany([this._modifiedGraphicsLayer,this._pendingGraphicsLayer]),this._modifiedGraphicsLayer.destroy(),this._pendingGraphicsLayer.destroy(),this._updatingHandles.destroy()}get updating(){return this._updatingHandles.updating||Array.from(this._activeProviders).some((t=>t.updating))}startFeatureMove(t){this.activeOperationType=at.FeatureMove,this._activeProviders.clear();for(const e of this.providerFactories)E(this._activeProviders,e.getFeatureReshapeProvider(t))}startVertexMove(t,e){this.activeOperationType=at.VertexMove,this._activeProviders.clear();for(const i of this.providerFactories)E(this._activeProviders,i.getVertexReshapeProvider(t,e))}finish(){this.activeOperationType=null,this._activeProviders.clear();for(const[t,e]of this._pendingFeatures){this._pendingFeatures.delete(t),this._modifiedFeatures.set(t,e);const i=this._graphics.get(t);i&&(this._modifiedGraphicsLayer.add(i),this._pendingGraphicsLayer.remove(i))}}translate(t,e,i=0){if(null===this.activeOperationType)return;const s=dt(t),o=dt(e),r=dt(i);for(const t of this._activeProviders){const e=t.translate(s,o,r);this._update(e)}}async _initializeGraphic(t,e){t.symbol??=await this._updatingHandles.addPromise(P(t,{scale:this.view.scale,useSourceLayer:!0})),this._pendingFeatures.has(e.uniqueId)?this._pendingGraphicsLayer.add(t):this._modifiedFeatures.has(e.uniqueId)&&this._modifiedGraphicsLayer.add(t),this.addHandles(await async function(t,e,s){const o=t.sourceLayer,r=t.getObjectId();if(null==r)return n.getLogger("esri.views.draw.support.ConnectedReshapeManager").error("editing:cannot-hide-graphic","Unable to hide original graphic because it has no objectId."),U();let p=null;function a(t){p?.abort(),p=i((async e=>{const i=await mt(s,o);L(e),i&&i.setVisibility?.(r,t)}))}return await async function(t,e){if("3d"===t.type){const i=new F({graphic:e}),s=t.trackGraphicState(i);await c((()=>i.displaying||i.error)),s.remove()}else await c((()=>e.visible))}(s,e),a(!1),T([ht(s,e,(t=>a(!t))),U((async()=>{a(!0);const t=await mt(s,o);await c((()=>!t?.updating))}))])}(e.originalGraphic,t,this.view),lt)}_update(t){for(const e of t){const t=this._modifiedFeatures.delete(e.uniqueId);this._pendingFeatures.set(e.uniqueId,e);const i=C(this._graphics,e.uniqueId,(()=>{const t=e.graphic.cloneShallow();return this._initializeGraphic(t,e),t}));i.geometry=e.graphic.geometry,t&&(this._modifiedGraphicsLayer.remove(i),this._pendingGraphicsLayer.add(i))}}get test(){return{activeProviders:this._activeProviders,modifiedFeatures:this._modifiedFeatures,modifiedGraphicsLayer:this._modifiedGraphicsLayer,pendingFeatures:this._pendingFeatures,pendingGraphicsLayer:this._pendingGraphicsLayer}}};function ht(t,e,i){if("3d"===t.type){const s=new F({graphic:e});return T([t.trackGraphicState(s),h((()=>s.displaying),i)])}return h((()=>e.visible),i)}async function mt(t,e){const i=k(e)||R(e)?e.parent:e;return i?t.whenLayerView(i):null}function dt(t){return isNaN(t)?0:t}t([g()],ct.prototype,"activeOperationType",void 0),t([g()],ct.prototype,"providerFactories",void 0),t([g()],ct.prototype,"updating",null),t([g({constructOnly:!0})],ct.prototype,"view",void 0),ct=t([j("esri.views.draw.support.ConnectedReshapeManager")],ct);let yt=class extends Z{constructor(t){super(t),this.type="translate-vertex",this.distance=q,this.elevation=null,this.area=null,this.totalLength=null}clear(){this.distance=q,this.elevation=null,this.area=null,this.totalLength=null}};function ut(t,e){function i(){const t=e(),i=t.sketchOptions.tooltips.effectiveEnabled?t.activeTooltipInfo:null;return{...t,activeTooltipInfo:i}}let s=!1;function o(t){s||(s=!0,t(),s=!1)}return T([h((()=>{const t=i();return{context:t,geometry:t.graphic?.geometry,vertexGeometry:t.selectedVertex?.geometry}}),(({context:e})=>{o((()=>{!function(t){const e=t.activeTooltipInfo;if(e){switch(e?.type){case"move-point":return function(t,{graphic:e}){vt(t,e,e?.geometry)}(e,t);case"selected-vertex":return function(t,{graphic:e,selectedVertex:i,automaticAreaMeasurementUtils:s,automaticLengthMeasurementUtils:o}){vt(t,e,i?.geometry);const r=e?.geometry;switch(r?.type){case"polygon":t.geometryType="polygon",t.totalLength.visible=!1,t.area.actual=s.autoArea2D(r);break;case"polyline":t.geometryType="polyline",t.totalLength.actual=o.autoLength2D(r),t.area.visible=!1}}(e,t)}e.sketchOptions=t.sketchOptions}}(e),t.info=e.activeTooltipInfo}))}),m),h((()=>{const t=i(),{activeTooltipInfo:e}=t;if(e&&"key"in e)return{context:t,key:e.key}}),((t,e)=>{t&&e&&t.key!==e.key&&o((()=>gt(t.context)))}),d),W(t,{onBeforePaste:()=>{s=!0},onAfterPaste:()=>{gt(i()),s=!1}})])}function vt(t,e,i){e&&"point"===i?.type&&(t.setLocationFromPoint(i),t.elevation.actual=tt(i),t.elevation.visible=!!e.geometry?.hasZ,t.elevation.readOnly=!1,t.elevation.showAsZ=!0)}function gt(t){function e(e,i){const s=i?.geometry;if(!s||"point"!==s.type)return;const{dx:o,dy:r,dz:n}=Q(e,s);if(0===o&&0===r&&0===n)return;const{x:p,y:a,z:l,m:c,spatialReference:h}=s,m=new _({x:p+o,y:a+r,z:null!=l?l+n:void 0,m:c,spatialReference:h});t.updateGeometry(i,m,s,o,r)}const{activeTooltipInfo:i,graphic:s,selectedVertex:o}=t;switch(i?.type){case"move-point":return e(i,s);case"selected-vertex":return e(i,o)}}function jt(t,e,i,{automaticLengthMeasurementUtils:s}){if(!i)return;const{x:o,y:r}=i.origin,n=e.toMap(i),p=e.toMap(N(o,r)),a=s.autoDistanceBetweenPoints2D(p,n);t.distance=null!=a?a:q}t([g()],yt.prototype,"type",void 0),t([g()],yt.prototype,"distance",void 0),t([g()],yt.prototype,"elevation",void 0),t([g()],yt.prototype,"area",void 0),t([g()],yt.prototype,"totalLength",void 0),yt=t([j("esri.views.interactive.tooltip.infos.TranslateVertexTooltipInfo")],yt);class _t{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape-start"}}class ft{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape"}}class bt{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape-stop"}}class xt{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move-start"}}class Gt{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move"}}class Mt{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move-stop"}}class St{constructor(t){this.added=t,this.type="vertex-select"}}class wt{constructor(t){this.removed=t,this.type="vertex-deselect"}}class Vt{constructor(t,e,i,s){this.added=t,this.graphic=e,this.oldGraphic=i,this.vertices=s,this.type="vertex-add"}}class It{constructor(t,e,i,s){this.removed=t,this.graphic=e,this.oldGraphic=i,this.vertices=s,this.type="vertex-remove"}}const Ut=et.reshapeGraphics,Tt={vertices:{default:new S({style:"circle",size:Ut.vertex.size,color:Ut.vertex.color,outline:{color:Ut.vertex.outlineColor,width:1}}),hover:new S({style:"circle",size:Ut.vertex.hoverSize,color:Ut.vertex.hoverColor,outline:{color:Ut.vertex.hoverOutlineColor,width:1}}),selected:new S({style:"circle",size:Ut.selected.size,color:Ut.selected.color,outline:{color:Ut.selected.outlineColor,width:1}})},midpoints:{default:new S({style:"circle",size:Ut.midpoint.size,color:Ut.midpoint.color,outline:{color:Ut.midpoint.outlineColor,width:1}}),hover:new S({style:"circle",size:Ut.midpoint.size,color:Ut.midpoint.color,outline:{color:Ut.midpoint.outlineColor,width:1}})}};let Ct=class extends r.EventedAccessor{constructor(t){super(t),this._updateHandlesOnExternalGeometryChange=null,this._activeOperationInfo=null,this._connectedReshapeManager=null,this._editGeometryOperations=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingContext=null,this._snappingGraphicsLayer=null,this._hoverGraphic=null,this._snappingTask=null,this._stagedVertex=null,this.tooltip=null,this.activeTooltipInfo=null,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.connectedReshapeProviders=[],this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.highlightName=null,this.highlightsEnabled=!0,this.layer=null,this.midpointGraphics=new s,this.midpointSymbol=new S({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=new s,this.snappingManager=null,this.symbols=Tt,this.sketchOptions=new nt,this.type="reshape",this.vertexGraphics=new s,this.view=null}initialize(){const t=this.view;this._highlightHelper=new D({view:t}),this._setup(),this._updateHandlesOnExternalGeometryChange=y((()=>this.graphic?.geometry),(t=>{if(!t)return;const e=new Set(this.selectedVertices.map((t=>t.attributes?.pointIndex)));this._highlightHelper.removeAll(),this._setUpHighlights(),this._setupGraphics(),this._clearSelection(),this.vertexGraphics.filter((t=>e.has(t.attributes.pointIndex))).forEach((t=>this._addToSelection(t)));const{enableMovement:i,_mover:s,graphic:o,midpointGraphics:r,vertexGraphics:n}=this,p=n.concat(r).items;i&&p.push(o),s?.set("graphics",p)}),d),this.tooltip=X((()=>({view:t,options:this.sketchOptions.tooltips}))),this.tooltipInfos=function(t){const e={sketchOptions:t,viewType:"2d"};return{movePoint:new K(e),selectedVertex:new J(e),translateGraphic:new $(e),translateVertices:new yt(e)}}(this.sketchOptions),this.addHandles([u((()=>t?.ready),(()=>{const{layer:t,view:e}=this;z(e,t),this.addHandles(e.on("key-down",(t=>this._keyDownHandler(t)),it.TOOL))}),{once:!0,initial:!0}),h((()=>this.graphic),(()=>this.refresh())),h((()=>this.layer),((t,e)=>{e&&(this._clearSelection(),this._resetGraphics(e)),this.refresh()})),h((()=>[this.highlightsEnabled,this.highlightName]),(()=>{this._highlightHelper?.removeAll(),this._setUpHighlights()})),h((()=>this.enableMidpoints),(()=>this.refresh())),ut(this.tooltip,(()=>this._tooltipsContext)),h((()=>this.view.effectiveTheme.accentColor),(()=>this._updateSymbolsForTheme()),v),this._updateHandlesOnExternalGeometryChange]),this._updateTooltip()}destroy(){this._reset(),this._mover?.destroy(),this._mover=null,this._connectedReshapeManager=p(this._connectedReshapeManager),this.tooltip=p(this.tooltip)}get _coordinateHelper(){return this._editGeometryOperations?.data.coordinateHelper??st(!!this.graphic.geometry?.hasZ,!!this.graphic.geometry?.hasM,this.view.spatialReference)}get _selectedVertex(){return 1===this.selectedVertices.length?this.selectedVertices.at(0):void 0}get _tooltipsContext(){const{automaticAreaMeasurementUtils:t,automaticLengthMeasurementUtils:e,sketchOptions:i,activeTooltipInfo:s,graphic:o}=this;return{sketchOptions:i,activeTooltipInfo:s,graphic:o,selectedVertex:this._selectedVertex,automaticAreaMeasurementUtils:t,automaticLengthMeasurementUtils:e,updateGeometry:(t,e,i,s,o)=>{this._setUpGeometryHelper();const r=t===this.graphic;if(r?this._emitMoveStartEvent(0,0):this._emitReshapeStartEvent(t),this._syncGeometryAfterVertexMove(t,e,s,o,!0),r){const{view:t}=this,s=t.toScreen(i),o=t.toScreen(e),r=(o?.x??0)-(s?.x??0),n=(o?.y??0)-(s?.y??0);this._emitMoveEvent(r,n),this._emitMoveStopEvent(r,n)}else this._emitReshapeEvent(t),this._emitReshapeStopEvent(t);this._editGeometryOperations=p(this._editGeometryOperations)}}}get state(){const t=this.view.ready,e=!(!this.graphic||!this.layer);return t&&e?"active":t?"ready":"disabled"}isUIGraphic(t){const e=[];return this.graphic&&e.push(this.graphic),e.concat(this.vertexGraphics.items,this.midpointGraphics.items),e.length>0&&e.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){const{selectedVertices:t}=this;t.length&&this._removeVertices(t)}_setup(){const{graphic:t,layer:e}=this;if(!e||null==t?.geometry)return;const i=t.geometry;"mesh"!==i.type&&"extent"!==i.type?("polygon"===i.type&&b(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover(),this._setupConnectedReshapeManager()):this._logGeometryTypeError()}_setUpHighlights(){this.highlightsEnabled&&this.graphic&&this._highlightHelper?.add(this.graphic,this.highlightName)}_setUpGeometryHelper(){const t=this.graphic.geometry;if(null==t||"mesh"===t.type||"extent"===t.type)return void this._logGeometryTypeError();const e="multipoint"===t.type?new f({paths:[t.points],spatialReference:t.spatialReference}):t;this._editGeometryOperations=ot.fromGeometry(e,w.Local)}_saveSnappingContextForHandle(t,e){this._snappingGraphicsLayer=new M({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer);const i=this._editGeometryOperations;a(i),this._snappingContext=new pt({editGeometryOperations:i,elevationInfo:{mode:"on-the-ground",offset:0},pointer:e.viewEvent?.pointerType||"mouse",excludeFeature:this.graphic,feature:this.graphic,visualizer:new V(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(t)})}_reset(){this._clearSelection(),this._highlightHelper?.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){null!=this.snappingManager&&this.snappingManager.doneSnapping(),null!=this._snappingGraphicsLayer&&(this.view?.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=p(this._editGeometryOperations),this._snappingTask=l(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(t){this._removeMidpointGraphics(t),this._removeVertexGraphics(t),this.selectedVertices.removeAll(),this._updateTooltip()}_removeMidpointGraphics(t){const e=t||this.layer;e&&e.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach((t=>t.destroy())),this.midpointGraphics.removeAll()}_removeVertexGraphics(t){const e=t||this.layer;e&&e.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach((t=>t.destroy())),this.vertexGraphics.removeAll()}_setupGraphics(){const t=this.graphic.geometry;if(null!=t&&("polyline"===t.type||"polygon"===t.type)){const e=Lt(t);this.enableMidpoints&&this._setUpMidpointGraphics(e),this.enableVertices&&this._setUpVertexGraphics(e)}}_setUpMidpointGraphics(t){this._removeMidpointGraphics();const e=this._createMidpointGraphics(t);this.midpointGraphics.addMany(e),this.layer.addMany(e)}_setUpVertexGraphics(t){this._removeVertexGraphics();const e=this._createVertexGraphics(t);this.vertexGraphics.addMany(e),this._storeRelatedVertexIndices(),this.layer.addMany(e)}_createVertexGraphics(t){const{_graphicAttributes:i,symbols:s}=this,o=[];return t?.forEach(((t,r)=>{t.forEach(((t,n)=>{o.push(new e({geometry:this._coordinateHelper.arrayToPoint(t),symbol:s?.vertices?.default,attributes:{...i,pathIndex:r,pointIndex:n}}))}))})),o}_createMidpointGraphics(t){const{_graphicAttributes:i,symbols:s}=this,o=[];for(let r=0;r<t.length;r++){const n=t[r];for(let t=0;t<n.length;t++){const p=(t+1)%n.length;if("polyline"===this.graphic.geometry?.type&&0===p)continue;const a=n[t],l=n[p],c=this._getMidpoint(a,l);o.push(new e({geometry:c,symbol:s.midpoints.default,attributes:{...i,pathIndex:r,pointIndexStart:t,pointIndexEnd:p}}))}}return o}_updateSymbolsForTheme(){const t=this.view.effectiveTheme.accentColor;this.symbols={vertices:{...this.symbols.vertices,default:this.symbols.vertices.default.clone().set("color",t),hover:this.symbols.vertices.hover?.clone().set("color",t)},midpoints:{...this.symbols.midpoints}};for(const t of this.vertexGraphics)this._isSelected(t)?t.symbol=this.symbols.vertices.selected:this._hoverGraphic===t?t.symbol=this.symbols.vertices.hover:t.symbol=this.symbols.vertices.default}_storeRelatedVertexIndices(){const t=this.vertexGraphics.items;if(!t)return;const e=t.map((({geometry:t})=>({x:t.x,y:t.y})));for(let i=0;i<e.length;i++){const s=[];for(let t=0;t<e.length;t++){if(i===t)continue;const o=e[i],r=e[t];o.x===r.x&&o.y===r.y&&s.push(t)}t[i].attributes.relatedGraphicIndices=s}}_setupMover(){const{enableMovement:t,graphic:e,midpointGraphics:i,vertexGraphics:s,view:o}=this,r=s.concat(i).items;t&&r.push(e),this._mover=new A({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:r,view:o,callbacks:{onGraphicClick:t=>this._onGraphicClickCallback(t),onGraphicMoveStart:t=>this._onGraphicMoveStartCallback(t),onGraphicMove:t=>this._onGraphicMoveCallback(t),onGraphicMoveStop:t=>this._onGraphicMoveStopCallback(t),onGraphicPointerOver:t=>this._onGraphicPointerOverCallback(t),onGraphicPointerOut:t=>this._onGraphicPointerOutCallback(t)}})}_setupConnectedReshapeManager(){const{connectedReshapeProviders:t}=this;0!==t.length&&(this._connectedReshapeManager=new ct({providerFactories:t,view:this.view}))}_onGraphicClickCallback(t){t.viewEvent.stopPropagation();const e=t.graphic;if(e===this.graphic)this.clearSelection(),this.emit("graphic-click",t),this.callbacks.onGraphicClick?.(t);else if(this._isMidpoint(e)){if(2===t.viewEvent.button)return;const i=this.graphic.clone(),s=this._createVertexFromMidpoint(e);this.refresh(),this._emitVertexAddEvent([e],i,s)}else this._isVertex(e)&&(t.viewEvent.stopPropagation(),2===t.viewEvent.button?this._removeVertices(e):(t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(e)?this._removeFromSelection(e,!0):this._addToSelection(e)))}_setUpOperation(t){const{graphic:e,dx:i,dy:s}=t,o=e===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(e,t),this._activeOperationInfo={target:this.graphic,mover:e,operationType:o?"move":"reshape",totalDx:i,totalDy:s}}_onGraphicMoveStartCallback(t){const{dx:e,dy:i,graphic:s}=t,o=this._connectedReshapeManager,r=o?function(t){const e=t.sourceLayer??t.layer;return B(e)?{graphic:t,layer:e}:null}(this.graphic):null;if(s===this.graphic){const{geometry:n}=s;return this._setUpOperation(t),this._emitMoveStartEvent(e,i),r&&o?.startFeatureMove([r]),void(null!=n&&"point"===n.type&&this._onHandleMove(s,e,i,t,(()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(e,i)})))}const{selectedVertices:n}=this;if(!n.includes(s)){if(this._clearSelection(),this._isMidpoint(s)){const t=this.graphic.clone(),e=this._createVertexFromMidpoint(s);this._emitVertexAddEvent([s],t,e)}this._addToSelection(s)}this._setUpOperation(t),r&&o?.startVertexMove(r,n.toArray().map((t=>({pathIndex:t.attributes.pathIndex,vertexIndex:t.attributes.pointIndex})))),this._emitReshapeStartEvent(s),this._onHandleMove(s,e,i,t,(()=>{this._updateTooltip(s,t.viewEvent),this._emitReshapeEvent(s)}))}_onGraphicMoveCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:o}=t;e.totalDx+=i,e.totalDy+=s;const{operationType:r}=e,{geometry:n}=o;if(null!=n)if("move"!==r)this._onHandleMove(o,i,s,t,(()=>{this._updateTooltip(o,t.viewEvent),this._emitReshapeEvent(o)}));else if("point"===n.type)this._onHandleMove(o,i,s,t,(()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)}));else if("polyline"===n.type||"polygon"===n.type){const e=Lt(n);this._updateVertexGraphicLocations(e);const{dxMap:o,dyMap:r}=function(t,e,i){const s=i.state.inverseTransform;return{dxMap:s[0]*t+s[2]*e,dyMap:s[1]*t+s[3]*e}}(i,s,this.view);this._connectedReshapeManager?.translate(o,r,0),this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)}}_onGraphicMoveStopCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:o}=t,{operationType:r}=e;e.totalDx+=i,e.totalDy+=s,this._onHandleMove(o,i,s,t,(()=>"move"===r?this._emitMoveStopEvent():this._emitReshapeStopEvent(o))),this._isMidpoint(o)?this.refresh():(this._updateTooltip(this._isVertex(o)?o:null),this._resetSnappingStateVars(),this._connectedReshapeManager?.finish(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(t){const{_coordinateHelper:e}=this;for(const i of this.vertexGraphics){const{pathIndex:s,pointIndex:o}=i.attributes;i.geometry=e.arrayToPoint(t[s][o])}this._updateMidpointGraphicLocations(t)}_updateMidpointGraphicLocations(t){for(const e of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:o}=e.attributes,r=t[i];e.geometry=this._getMidpoint(r[s],r[o])}}_getMidpoint(t,e){const{_coordinateHelper:i}=this,s=i.arrayToVector(t),o=i.arrayToVector(e),r=i.toXYZ(s),n=i.toXYZ(o),[p,a,l]=x(r,n),c=i.hasM()?0:void 0;return new _({x:p,y:a,z:l,m:c,spatialReference:i.spatialReference})}_getVertexFromEditGeometry(t){const[e,i]=Et(t);return a(this._editGeometryOperations),this._editGeometryOperations.data.components[e].vertices[i]}_onHandleMove(t,e,s,o,r){l(this._snappingTask);const n=this._snappingContext;if(!n)return;const p=t.geometry,a="graphic-move-stop"===o.type;if(null!=this.snappingManager&&this.selectedVertices.length<2&&!a){const o=this.snappingManager;this._stagedVertex=o.update({point:p,context:n}),this._syncGeometryAfterVertexMove(t,new _(this._stagedVertex),e,s,a),r(),this._snappingTask=i((async i=>{const l=await o.snap({point:p,context:n,signal:i});l.valid&&(this._stagedVertex=l.apply(),this._syncGeometryAfterVertexMove(t,new _(this._stagedVertex),e,s,a),r())}))}else{const i=null!=this._stagedVertex?new _(this._stagedVertex):p;this._syncGeometryAfterVertexMove(t,i,e,s,a),r()}}_syncGeometryAfterVertexMove(t,e,i,s,o=!1){const r=this._editGeometryOperations?.data.geometry;if(r)if("point"===r.type)t.geometry=e;else if("mesh"===r.type)t.geometry=r.centerAt(e);else{const{_coordinateHelper:n}=this,[p,a]=Et(t);let l=G(r);const c=l[p].length-1,h=n.pointToArray(e);l[p][a]=h,"polygon"===r.type&&(0===a?l[p][c]=h:a===c&&(l[p][0]=h)),this._isVertex(t)&&(l=this._moveRelatedCoordinates(l,t,h),l=this._moveSelectedHandleCoordinates(l,t,i,s,"polygon"===r.type),this._updateMidpointGraphicLocations(l)),this._updateGraphicGeometry(r.clone());const m=n.pointToVector(e),d=this._getVertexFromEditGeometry(t),y=n.getZ(m),u=m[0]-d.pos[0],v=m[1]-d.pos[1],g=null!=y?y-d.pos[2]:0;this._editGeometryOperations?.moveVertices([d],u,v,g),this._connectedReshapeManager?.translate(u,v,g),o&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(t),e):t.geometry=e)}}_moveRelatedCoordinates(t,e,i){const{relatedGraphicIndices:s}=e.attributes;for(const o of s){const s=this.vertexGraphics.at(o),{pathIndex:r,pointIndex:n}=s.attributes;t[r][n]=i,s.geometry=e.geometry}return t}_moveSelectedHandleCoordinates(t,e,i,s,o){for(const r of this.selectedVertices)if(r!==e){const{pathIndex:e,pointIndex:n,relatedGraphicIndices:p}=r.attributes,a=H(r.geometry,i,s,this.view),l=G(a),c=t[e].length-1;t[e][n]=l,r.geometry=a,o&&(0===n?t[e][c]=l:n===c&&(t[e][0]=l));for(const e of p){const i=this.vertexGraphics.at(e),{pathIndex:s,pointIndex:o}=i.attributes;t[s][o]=l,i.geometry=a}}return t}_onGraphicPointerOverCallback(t){const e=t.graphic;this._hoverGraphic=e;const i=this._isVertex(e);i&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.hover),this._updateTooltip(i?e:null),this._updateHoverCursor(e)}_onGraphicPointerOutCallback(t){const e=t.graphic;this._hoverGraphic=null,this._isVertex(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.default),this.view.cursor="default",this._updateTooltip()}_createVertexFromMidpoint(t){const{_graphicAttributes:e,graphic:i}=this,s=i.geometry;if(null==s||"polygon"!==s.type&&"polyline"!==s.type)return[];const o=s.clone(),r=[],{pathIndex:n,pointIndexStart:p,pointIndexEnd:a}=t.attributes,l=G(t.geometry),c=0===a?p+1:a,h=G(o);return h[n].splice(c,0,l),t.attributes={...e,pathIndex:n,pointIndex:c,relatedGraphicIndices:[]},r.push({coordinates:h[n][c],componentIndex:n,vertexIndex:c}),this._updateGraphicGeometry(o),r}_addToSelection(t){const e=Ot(t);for(const t of e)t.symbol=this.symbols.vertices.selected,this.selectedVertices.add(t),this._updateTooltip(t);this._emitSelectEvent(e)}_removeFromSelection(t,e){const{vertices:i}=this.symbols,s=e?i.hover:i.default;this.selectedVertices.remove(t),t.symbol=s,this._emitDeselectEvent([t]),this._updateTooltip()}_clearSelection(){const t=this.selectedVertices.toArray();if(t.length>0){for(const e of t)e.set("symbol",this.symbols.vertices.default);this.selectedVertices.removeAll(),this._emitDeselectEvent(t),this._updateTooltip()}}_keyDownHandler(t){null==this._activeOperationInfo&&Y(t,this.tooltip)||rt.delete.includes(t.key)&&!t.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(t){const e=this.graphic.geometry;if(null==e||"polygon"!==e.type&&"polyline"!==e.type)return;if("polygon"===e.type&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;const i=this.graphic.clone(),s=e.clone();let o=G(s);const r=[],n=Ot(t);for(const t of n){const{x:e,y:i}=t.geometry;for(let t=0;t<o.length;t++){const s=o[t];for(let n=0;n<s.length;n++){const[p,a]=s[n];e===p&&i===a&&(r.push({coordinates:o[t][n],componentIndex:t,vertexIndex:n}),o[t].splice(Number(n),1))}}}if("polygon"===s.type)o=o.filter((t=>{if(t.length<2)return!1;const[e,i]=t[0],[s,o]=t[t.length-1];return(2!==t.length||e!==s||i!==o)&&(e===s&&i===o||t.push(t[0]),!0)})),s.rings=o;else{for(const t of o)1===t.length&&o.splice(o.indexOf(t),1);s.paths=o}this._updateGraphicGeometry(s),this.refresh(),this._emitVertexRemoveEvent(n,i,r)}_isVertex(t){return this.vertexGraphics.includes(t)}_isSelected(t){return this._isVertex(t)&&this.selectedVertices.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_updateTooltip(t,e){let i=null;const{graphic:s,view:o,tooltipInfos:r}=this,n=s?.geometry;"point"===n?.type?i=r.movePoint:this._selectedVertex?i=r.selectedVertex:t===this.graphic?(i=r.translateGraphic,function(t,e,i,s){t.clear(),jt(t,e,s,i)}(i,o,this._tooltipsContext,e)):t&&this.selectedVertices.length>1&&(i=r.translateVertices,function(t,e,i,s,o){t.clear();const{automaticAreaMeasurementUtils:r,automaticLengthMeasurementUtils:n}=s;"polygon"===i?.type?t.area=r.autoArea2D(i):"polyline"===i?.type&&(t.totalLength=n.autoLength2D(i)),jt(t,e,o,s)}(i,o,n,this._tooltipsContext,e)),this.activeTooltipInfo=i}_updateGraphicGeometry(t){this._updateHandlesOnExternalGeometryChange?.pause(),this.graphic.geometry=t,this._updateHandlesOnExternalGeometryChange?.resume()}_emitMoveStartEvent(t,e){const i=new xt(this.graphic,t,e);this.emit("move-start",i),this.callbacks.onMoveStart?.(i)}_emitMoveEvent(t,e){const i=new Gt(this.graphic,t,e);this.emit("move",i),this.callbacks.onMove?.(i)}_emitMoveStopEvent(t,e){if(null==t||null==e){const i=this._activeOperationInfo;if(!i)return;t=i.totalDx,e=i.totalDy}const i=new Mt(this.graphic,t,e);this.emit("move-stop",i),this.callbacks.onMoveStop?.(i)}_emitReshapeStartEvent(t){const e=new _t(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-start",e),this.callbacks.onReshapeStart?.(e)}_emitReshapeEvent(t){const e=new ft(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape",e),this.callbacks.onReshape?.(e)}_emitReshapeStopEvent(t){const e=new bt(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-stop",e),this.callbacks.onReshapeStop?.(e)}_emitSelectEvent(t){const e=new St(t);this.emit("select",e),this.callbacks.onVertexSelect?.(e)}_emitDeselectEvent(t){const e=new wt(t);this.emit("deselect",e),this.callbacks.onVertexDeselect?.(e)}_emitVertexAddEvent(t,e,i){const s=new Vt(t,this.graphic,e,i);this.emit("vertex-add",s),this.callbacks.onVertexAdd?.(s)}_emitVertexRemoveEvent(t,e,i){const s=new It(t,this.graphic,e,i);this.emit("vertex-remove",s),this.callbacks.onVertexRemove?.(s)}_logGeometryTypeError(){n.getLogger(this).error(new o("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};function Lt(t){const e=G(t.clone());if("polygon"===t.type)for(const t of e){const e=t[t.length-1];t[0][0]===e[0]&&t[0][1]===e[1]&&t.length>2&&t.pop()}return e}function Et({attributes:t}){return[t?.pathIndex||0,t?.pointIndex||0]}function Ot(t){return t instanceof e?[t]:[...t]}t([g()],Ct.prototype,"_activeOperationInfo",void 0),t([g()],Ct.prototype,"_connectedReshapeManager",void 0),t([g()],Ct.prototype,"_coordinateHelper",null),t([g()],Ct.prototype,"_editGeometryOperations",void 0),t([g()],Ct.prototype,"tooltip",void 0),t([g()],Ct.prototype,"tooltipInfos",void 0),t([g()],Ct.prototype,"activeTooltipInfo",void 0),t([g({constructOnly:!0})],Ct.prototype,"automaticAreaMeasurementUtils",void 0),t([g({constructOnly:!0})],Ct.prototype,"automaticLengthMeasurementUtils",void 0),t([g()],Ct.prototype,"_selectedVertex",null),t([g()],Ct.prototype,"_tooltipsContext",null),t([g()],Ct.prototype,"callbacks",void 0),t([g()],Ct.prototype,"connectedReshapeProviders",void 0),t([g()],Ct.prototype,"enableMidpoints",void 0),t([g()],Ct.prototype,"enableMovement",void 0),t([g()],Ct.prototype,"enableVertices",void 0),t([g()],Ct.prototype,"graphic",void 0),t([g()],Ct.prototype,"highlightName",void 0),t([g()],Ct.prototype,"highlightsEnabled",void 0),t([g()],Ct.prototype,"layer",void 0),t([g({readOnly:!0})],Ct.prototype,"midpointGraphics",void 0),t([g()],Ct.prototype,"midpointSymbol",void 0),t([g({readOnly:!0})],Ct.prototype,"selectedVertices",void 0),t([g()],Ct.prototype,"snappingManager",void 0),t([g({readOnly:!0})],Ct.prototype,"state",null),t([g()],Ct.prototype,"symbols",void 0),t([g({type:nt})],Ct.prototype,"sketchOptions",void 0),t([g({readOnly:!0})],Ct.prototype,"type",void 0),t([g({readOnly:!0})],Ct.prototype,"vertexGraphics",void 0),t([g()],Ct.prototype,"view",void 0),Ct=t([j("esri.views.draw.support.Reshape")],Ct);const kt=Ct;export{kt as default};
