/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Accessor.js";import s from"../core/Collection.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./Logger.js";import{subclass as i}from"../core/accessorSupport/decorators/subclass.js";import{a as o,b as n}from"./Cyclical.js";import{v as p,a}from"./quantityUtils.js";import{c}from"./vec3f64.js";import{b as l}from"./elevationInfoUtils.js";import{d as h,a as m,m as d,g,f as j}from"./normalizedPoint.js";import{g as u}from"./unitUtils.js";import{u as f,p as x,e as v,h as y,o as E,m as V,l as w}from"./vec2.js";import{d as S}from"./Settings.js";import{f as L,h as T,p as P,V as U,s as _}from"./constraints.js";import{v as M,L as R,P as C,b as k,R as b,O as F,c as q}from"./SnappingManager.js";import{r as O,p as D}from"./angularMeasurementUtils.js";import{L as I,p as G,a as H}from"./geometry2dUtils.js";import{c as N}from"./vec2f64.js";import{b as A,k as z,s as B}from"./vec3.js";import{a as Q}from"./RightAngleSnappingHint.js";import"../core/Handles.js";import"./maybe.js";import"./get.js";import"./utils.js";import"./handleUtils.js";import"./Lifecycle.js";import"./metadata.js";import"./ObjectPool.js";import"./ObservableBase.js";import"./tracking.js";import"./watch.js";import"../core/scheduling.js";import"./nextTick.js";import"./PooledArray.js";import"../core/promiseUtils.js";import"../core/Error.js";import"../config.js";import"./events.js";import"./SetUtils.js";import"./SimpleTrackingTarget.js";import"../core/Evented.js";import"./ensureType.js";import"./MapUtils.js";import"./Warning.js";import"./shared.js";import"./SimpleObservable.js";import"./jsonUtils.js";import"./mathUtils.js";import"./unitConversionUtils.js";import"./lengthUtils.js";import"./dehydratedPoint.js";import"./jsonMap.js";import"./pe.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./persistableUrlUtils.js";import"./common.js";import"../Color.js";import"./colorUtils2.js";import"../core/JSONSupport.js";import"../core/reactiveUtils.js";import"../core/sql.js";import"./timeUtils.js";import"./date.js";import"./locale.js";import"./constants.js";import"./datetime.js";import"../rest/support/Query.js";import"../core/accessorSupport/decorators/cast.js";import"./enumeration.js";import"./writer.js";import"../geometry/Point.js";import"./reader.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/support/jsonUtils.js";import"../geometry/Extent.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./Axis.js";import"./extentUtils.js";import"./boundsUtils.js";import"./aaBoundingRect.js";import"../geometry/Polyline.js";import"./typeUtils2.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"./FullTextSearch.js";import"../core/Clonable.js";import"./spatialRelationships.js";import"../rest/support/StatisticDefinition.js";import"../time/TimeExtent.js";import"./InputManager.js";import"./Queue.js";import"./signal.js";import"./keybindings.js";import"./utils8.js";import"./Version2.js";import"./Version.js";import"./vec4.js";import"./vec4f64.js";import"./geodesicConstants.js";import"../geometry/support/geodesicUtils.js";import"./plane.js";import"./vector.js";import"./mat3f64.js";import"./mat4f64.js";import"./quatf64.js";import"./mathUtils2.js";import"./sphere.js";import"./mat4.js";import"./ray.js";import"./mat3.js";import"./asyncUtils.js";import"./projectionUtils.js";import"./projectBuffer.js";import"./projectXYZToVector.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../views/interactive/snapping/SnappingOptions.js";import"../views/interactive/snapping/FeatureSnappingLayerSource.js";import"./screenUtils.js";import"./geodesicLengthMeasurementUtils.js";import"./projectVectorToVector.js";import"./projectPointToVector.js";import"./spatialReferenceEllipsoidUtils.js";import"../geometry/operators/geodeticLengthOperator.js";import"./geodeticCurveType.js";import"./geodesicMeasurementUtils.js";class J{constructor(e,t){this.view=e,this.options=t,this.squaredShortLineThreshold=S.shortLineThreshold*S.shortLineThreshold}snap(e,t){return null!=t.vertexHandle?"vertex"!==t.vertexHandle.type?[]:this.snapExistingVertex(e,t):this.snapNewVertex(e,t)}edgeExceedsShortLineThreshold(e,t){return this.exceedsShortLineThreshold(h(e.leftVertex.pos,this.view,t),h(e.rightVertex.pos,this.view,t),t)}exceedsShortLineThreshold(e,t,{spatialReference:s}){return 0===this.squaredShortLineThreshold||L(M(t,s,l,this.view),M(e,s,l,this.view))>this.squaredShortLineThreshold}isVertical(e,t,{spatialReference:s}){const r=u(s);return f(m(e),m(t))*r<S.verticalLineThresholdMeters}squaredProximityThreshold(e){return"touch"===e?this._squaredTouchProximityThreshold:this._squaredMouseProximityThreshold}get _squaredMouseProximityThreshold(){return this.options.distance*this.options.distance}get _squaredTouchProximityThreshold(){const{distance:e,touchSensitivityMultiplier:t}=this.options,s=e*t;return s*s}}class W extends J{constructor(e,t,s){super(e,t),this._geodesicLengthMeasurementUtils=s}snapNewVertex(e,t){const s=t.editGeometryOperations.data.components[0],r=s.edges.length,i=[];if(r<1)return i;const{spatialReference:o}=t,n=M(e,o,l,this.view),{view:p}=this,a=s.edges[r-1];let c=a;do{if(this.edgeExceedsShortLineThreshold(c,t)){const s=T(c,p,t);this._processCandidateProposal(s.left,s.right,e,n,t,i)}c=c.leftVertex.leftEdge}while(c&&c!==a);return i}snapExistingVertex(e,t){const s=[],r=t.vertexHandle,i=r.component;if(i.edges.length<2)return s;const{view:o}=this,{spatialReference:n}=t,p=M(e,n,l,o),a=r.leftEdge,c=r.rightEdge;a&&c&&this.edgeExceedsShortLineThreshold(a,t)&&this.edgeExceedsShortLineThreshold(c,t)&&this._processCandidateProposal(h(a.leftVertex.pos,o,t),h(c.rightVertex.pos,o,t),e,p,t,s);const m=i.edges[0];let d=m;do{if(d!==r.leftEdge&&d!==r.rightEdge&&this.edgeExceedsShortLineThreshold(d,t)){const r=T(d,o,t);this._processCandidateProposal(r.left,r.right,e,p,t,s)}d=d.rightVertex.rightEdge}while(d&&d!==m);return s}_processCandidateProposal(e,t,s,r,i,h){const{spatialReference:m,pointer:j}=i,u=c();!function(e,t,s,r,i,c){(function(e,t,s,r,{spatialReference:i},c){const l=O(t,s,i,i);if(null==l)return!1;const h=O(s,r,i,i);if(null==h)return!1;const m=c.geodesicDistance(s,r,i);if(null==m)return!1;const d=Math.abs(o.shortestSignedDiff(l,h))>Math.PI/2?n.normalize(l+Math.PI):l;return D(e,s,i,p(m,"meters"),a(d,"radians","geographic"),"geodesic"),e[2]=r[2],!0})(e,t,s,r,i,c)||function(e,t,s,r){P(t,{start:s,end:r,type:I.LINE},e),e[2]=t[2]}(e,r,t,s)}(u,e,t,s,i,this._geodesicLengthMeasurementUtils);const f=d(g(u));L(r,M(f,m,l,this.view))<this.squaredProximityThreshold(j)&&h.push(new R({lineStart:e,lineEnd:t,targetPoint:f,isDraped:"on-the-ground"===i.elevationInfo?.mode}))}}class X extends J{snapNewVertex(e,t){const s=t.editGeometryOperations.data.components[0],r=s.edges.length,i=s.vertices.length,o=[];if(r<2)return o;const{view:n}=this,p=M(e,t.spatialReference,l,n),a=h(s.vertices[i-1].pos,n,t),c=h(s.vertices[0].pos,n,t),m=s.edges[r-1];let d=m;do{if(this.edgeExceedsShortLineThreshold(d,t)){const s=T(d,n,t);this._checkEdgeForParallelLines(s,a,e,p,t,o),this._checkEdgeForParallelLines(s,c,e,p,t,o)}d=d.leftVertex.leftEdge}while(d&&d!==m);return o}snapExistingVertex(e,t){const s=[],r=t.vertexHandle,i=r.component;if(i.edges.length<3)return s;const{view:o}=this,n=M(e,t.spatialReference,l,o),p=r.leftEdge,a=r.rightEdge,c=i.vertices[0],m=h(c.pos,o,t),d=i.vertices.length,g=i.vertices[d-1],j=h(g.pos,o,t),u=i.edges[0];let f=u;do{if(f!==p&&f!==a&&this.edgeExceedsShortLineThreshold(f,t)){const i=T(f,o,t);p&&this._checkEdgeForParallelLines(i,h(p.leftVertex.pos,o,t),e,n,t,s),a&&this._checkEdgeForParallelLines(i,h(a.rightVertex.pos,o,t),e,n,t,s),r===c?this._checkEdgeForParallelLines(i,j,e,n,t,s):r===g&&this._checkEdgeForParallelLines(i,m,e,n,t,s)}f=f.rightVertex.rightEdge}while(f&&f!==u);return s}_checkEdgeForParallelLines(e,t,s,r,i,o){const n=e.left,p=e.right;if(G(Y,m(t),m(n),m(p)),x(Y,m(t))<S.parallelLineThreshold)return;G(Y,m(s),m(n),m(p),m(t));const{spatialReference:a,pointer:c}=i,h=d(j(Y[0],Y[1],s[2]));if(L(r,M(h,a,l,this.view))<this.squaredProximityThreshold(c)){if(this.isVertical(h,t,i)||this.isVertical(n,p,i))return;if(function(e,t){const s=e.left,r=e.right;for(const i of t)if(G(Y,m(r),m(i.constraint.start),m(i.constraint.end),m(s)),x(Y,m(r))<S.parallelLineThreshold)return i.addReferenceLine(e),!0;return!1}(e,o))return;o.push(new C({referenceLine:e,lineStart:t,targetPoint:h,isDraped:"on-the-ground"===i.elevationInfo?.mode}))}}}const Y=N();class Z extends J{constructor(e,t,s){super(e,t),this._geodesicLengthMeasurementUtils=s}snapNewVertex(e,t){const s=t.editGeometryOperations.data.components[0],r=[];if(s.vertices.length<2)return r;const{view:i}=this,o=M(e,t.spatialReference,l,i),n=s.vertices.at(-1);this._checkForSnappingCandidate(k.LastVertex,r,n.leftEdge,n,n.leftEdge.leftVertex,e,o,t);const p=s.vertices[0];return this._checkForSnappingCandidate(k.FirstVertex,r,p.rightEdge,p,p.rightEdge.rightVertex,e,o,t),r}snapExistingVertex(e,t){const s=[],r=t.vertexHandle;if(r.component.vertices.length<3)return s;const{view:i}=this,o=M(e,t.spatialReference,l,i),n=r.leftEdge,p=r.rightEdge;if(n?.leftVertex.leftEdge){const r=n.leftVertex.leftEdge;this._checkForSnappingCandidate(k.ExistingEdge,s,r,r.rightVertex,r.leftVertex,e,o,t)}if(p?.rightVertex.rightEdge){const r=p.rightVertex.rightEdge;this._checkForSnappingCandidate(k.ExistingEdge,s,r,r.leftVertex,r.rightVertex,e,o,t)}return s}_checkForSnappingCandidate(e,t,s,r,i,o,l,d){if(!this.edgeExceedsShortLineThreshold(s,d))return;const g=this.view,j=h(r.pos,g,d),u=h(i.pos,g,d);!function(e,t,s,r,i,o){(function(e,t,s,r,{spatialReference:i},o){const l=O(t,s,i,i);if(null==l)return!1;const h=O(s,r,i,i);if(null==h)return!1;const m=Math.sign(n.shortestSignedDiff(l,h))*Math.PI*.5,d=a(l+m,"radians","geographic"),g=c(),j=o.geodesicDistance(s,r,i);return null!=j&&(D(g,s,i,p(j,"meters"),d,"geodesic"),z(e,g,s),!0)})(e,t,s,r,i,o)||function(e,t,s){const r=v(K,m(s),m(t));B(e,r[1],-r[0],0)}(e,t,s)}($,u,j,o,d,this._geodesicLengthMeasurementUtils),this._checkForSnappingCandidateAlongProjectedRay(e,t,u,j,$,o,l,d)}_checkForSnappingCandidateAlongProjectedRay(e,t,s,r,i,o,n,p){const{spatialReference:a,pointer:h}=p,u=v(K,m(o),m(r)),f=y(i,u)/E(i),x=V(K,m(r),i,f),w=d(j(x[0],x[1],o[2]));if(L(n,M(w,a,l,this.view))>this.squaredProximityThreshold(h)||this.isVertical(w,r,p)||this.isVertical(r,s,p))return;const S=A(c(),r,i,Math.sign(f));t.push(new b({targetPoint:w,constraint:new U(r,g(S)),previousVertex:s,otherVertex:r,otherVertexType:F.CENTER,selfSnappingType:e,isDraped:"on-the-ground"===p.elevationInfo?.mode}))}}const K=N(),$=c();class ee extends J{snapNewVertex(e,t){const s=t.editGeometryOperations.data.components[0],r=[],i=s.vertices.length;if("polygon"!==t.editGeometryOperations.data.type||i<2)return r;const{view:o}=this,n=s.vertices[0],p=s.vertices[i-1],a=h(n.pos,o,t),c=h(p.pos,o,t);return this._processCandidateProposal(a,c,e,t,r),r}snapExistingVertex(e,t){const s=[],r=t.vertexHandle,i=r.component;if(i.edges.length<2)return s;if("polyline"===t.editGeometryOperations.data.type&&(0===r.index||r.index===i.vertices.length-1))return s;const{view:o}=this,n=h(r.leftEdge.leftVertex.pos,o,t),p=h(r.rightEdge.rightVertex.pos,o,t);return this._processCandidateProposal(n,p,e,t,s),s}_processCandidateProposal(e,t,s,r,i){if(!this.exceedsShortLineThreshold(e,t,r))return;const o=w(te,m(e),m(t),.5),n=.5*f(m(e),m(t)),p=H(te,m(s),o,n),a=d(j(p[0],p[1],s[2])),{spatialReference:c,pointer:h}=r,g=M(s,c,l,this.view);if(L(g,M(a,c,l,this.view))<this.squaredProximityThreshold(h)){if(this.isVertical(e,a,r)||this.isVertical(a,t,r))return;i.push(new q({targetPoint:a,point1:e,point2:t,isDraped:"on-the-ground"===r.elevationInfo?.mode}))}}}const te=N();let se=class extends t{constructor(e){super(e),this.updating=!1,this._snappers=new s,this._domain=Q.SELF}initialize(){this._snappers.push(new X(this.view,this.options),new W(this.view,this.options,this.geodesicLengthMeasurementUtils),new Z(this.view,this.options,this.geodesicLengthMeasurementUtils),new ee(this.view,this.options))}set options(e){this._set("options",e);for(const t of this._snappers)t.options=e}async fetchCandidates(e,t,s){if(!(t&this._domain&&this.options.effectiveSelfEnabled))return[];const r=[];for(const t of this._snappers.items)for(const i of t.snap(e,s))r.push(i);return _(e,r),r}};e([r({readOnly:!0})],se.prototype,"updating",void 0),e([r({constructOnly:!0})],se.prototype,"view",void 0),e([r({constructOnly:!0})],se.prototype,"geodesicLengthMeasurementUtils",void 0),e([r()],se.prototype,"options",null),se=e([i("esri.views.interactive.snapping.SelfSnappingEngine")],se);export{se as SelfSnappingEngine};
