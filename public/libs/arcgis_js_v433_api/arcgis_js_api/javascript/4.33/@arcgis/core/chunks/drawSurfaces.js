/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../core/Accessor.js";import n from"../core/Evented.js";import{clone as i}from"../core/lang.js";import{e as s,d as o}from"./maybe.js";import{m as r}from"./memoize.js";import{ignoreAbortErrors as a}from"../core/promiseUtils.js";import{R as p}from"./ReactiveSet.js";import{watch as l,syncAndInitial as c}from"../core/reactiveUtils.js";import{c as u,b as d}from"./screenUtils.js";import{property as h}from"../core/accessorSupport/decorators/property.js";import"./Logger.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import{d as g}from"./diffUtils.js";import{U as v}from"./UpdatingHandles.js";import{p as y,a as f}from"./dehydratedFeatureComparison.js";import{h as _,k as x,c as b,a as w}from"./elevationInfoUtils.js";import{V as S}from"./ViewingMode.js";import{a as T}from"./DrawingMode.js";import{c as C,E as P,a as V,C as M}from"./EditGeometryOperations.js";import{c as O,a as D}from"./dragEventPipeline.js";import{C as I,c as E,d as j,H,V as Z,G as R,P as G,e as k,a as z}from"./constraints.js";import{v as U,a as L,d as A}from"./quantityUtils.js";import{a8 as F,O as q}from"./unitUtils.js";import{k as B,c as W,i as K}from"./vec3.js";import N from"../geometry/SpatialReference.js";import{p as J}from"./projectVectorToVector.js";import{geodesicCompatibleSpatialReference as Q}from"../geometry/support/geodesicUtils.js";import{m as X}from"./dehydratedPoint.js";import{b as Y,h as $,j as ee}from"./normalizedPoint.js";import{a as te,D as ne,d as ie,p as se}from"./angularMeasurementUtils.js";import oe from"../views/interactive/sketch/SketchLabelOptions.js";import{S as re}from"./SnappingContext.js";import{c as ae}from"./SnappingDragPipelineStep.js";import{S as pe}from"./SnappingOperation.js";import le from"../geometry/Point.js";import{c as ce}from"./hydratedFeatures.js";function ue(e,t,n,i,s,o){let r="geodesic",a=Q(n);const p=Y();return $(e,t,i,p),p[2]=0,a&&J(p,n,p,a)||(r="euclidean",a=n),{mode:r,view:t,elevationInfo:i,hasZ:s,directionMode:o,spatialReference:e.spatialReference,measurementSR:a,origin:p}}function de(e,t,n){if(null==t||null==e)return;const i=F(n.measurementSR);if(null==i)return;const s=_e(e,n);if(null==s)return;const o=U(t,i);return new E(s,o)}function he(e,t,n,i){if(null==n||null==e)return;const s=_e(e,i);if(null==s)return;const o=te(n),r=e=>{if(null==e)return;const t=Y(),n=L(e,"degrees","geographic");return se(t,s,i.measurementSR,10,n,i.mode)?new Z(s,t):void 0},a=()=>{if(null!=t&&null!=e)return te(ie(t,e))};switch(i.directionMode){case ne.Absolute:return r(o);case ne.Relative:{const e=a();if(null==e)return;return r(e+o)}case ne.RelativeBilateral:{const e=a();if(null==e)return;return j([r(e+o),r(e-o)])}}}function me(e,t){const n=xe(e,t);return null!=n?new H(n):void 0}function ge(e,t,n){const{context:i,longitude:s,latitude:o,direction:r,distance:a,elevation:p}=n;if(null!=s||null!=o||null!=a||null!=p||null!=r){if(null!=s||null!=o){const e=te(s),t=te(o),n=xe(p,i);return new I(e,t,n)}return function(e,t,{context:n,direction:i,distance:s,elevation:o}){if(null==t)return me(o,n);const{view:r,elevationInfo:a,measurementSR:p}=n,l=$(t,r,a);if(!p||!J(l,t.spatialReference,be,p))return;const[c,u]=be,d=null!=s?U(s,"meters"):void 0,h=te(i),m=xe(o,n),g=e=>{const t=new R([c,u],p,d,m,e);return null==d||null==e||null==m&&n.hasZ?t:new G(t.closestTo(l))};if(null==h)return g(void 0);const v=()=>{if(null!=e&&null!=t)return te(ie(e,t))};switch(n.directionMode){case ne.Absolute:return g(h);case ne.Relative:{const e=v();if(null==e)return;return g(e+h)}case ne.RelativeBilateral:{const e=v();if(null==e)return;return j([g(e+h),g(e-h)])}}}(e,t,n)}}function ve(e){return"geodesic"===e.context.mode?ge(null,null,e):fe(e)}function ye(e,t,n){const{context:i,x:s,y:o,distance:r,direction:a,elevation:p}=n;return"geodesic"===i.mode?ge(t,e,n):null!=s||null!=o?fe(n):function(e){let t;for(const n of e)n&&(t=t?.intersect(n)??n);return t}([de(e,r,i),he(e,t,a,i),me(p,i)])}function fe({x:e,y:t,elevation:n,context:i}){Te.x=e?.value??0,Te.y=t?.value??0,Te.spatialReference=i.spatialReference;const s=_e(Te,i,we);return new I(null!=e&&null!=s?s[0]:void 0,null!=t&&null!=s?s[1]:void 0,xe(n,i))}function _e(e,t,n=Y()){const{view:i,elevationInfo:s,measurementSR:o,origin:r,mode:a}=t;if($(e,i,s,n),J(n,e.spatialReference,n,o))return"geodesic"!==a&&B(n,n,r),n}function xe(e,t){return function(e,{view:t,origin:n,elevationInfo:i,hasZ:s,measurementSR:o}){if(null==e||!s)return;const r=q(o);if(null==r)return;const[a,p]=n,l=U(e,r),c="3d"===t?.type?_(t,a,p,l,o,i):l;return null!=c?A(c,r):void 0}(e,t)?.value??void 0}const be=Y(),we=Y(),Se=Y(),Te=X(0,0,0,N.WGS84);class Ce{constructor({consumesClicks:e,grabbableForEvent:t}){this.events=new n,this.interactive=!0,this.selectable=!1,this.cursor=null,this.grabbable=!0,this.consumesClicks=e,this.grabbableForEvent=t}destroy(){}intersectionDistance(e,t){return 0}attach(){}detach(){}onElevationChange(){}onViewChange(){}}const Pe=Symbol(),Ve=Symbol();let Me=class extends(n.EventedMixin(t)){constructor(e){super(e),this._createOperationCompleted=!1,this._hideDefaultCursor=!1,this._pointerDownStates=new p,this._stagedScreenPoint=null,this._stagedPointerType=null,this._updatingHandles=new v,this._stagedPointerId=null,this.constraintsEnabled=!1,this.constraints=void 0,this._getPointConstraint=r(ve),this._getPolylineOrPolygonConstraint=r(ye),this.constraintZ=null,this.defaultZ=null,this.isDraped=!0,this.labelOptions=new oe,this.cursor=null,this.loading=!1,this.snapToSceneEnabled=null,this.firstVertex=null,this.lastVertex=null,this.secondToLastVertex=null,null==e.elevationInfo&&(this.elevationInfo=x(!!e.hasZ))}initialize(){const{geometryType:e,view:t}=this,n=t.spatialReference,i="viewingMode"in t.state?t.state.viewingMode:S.Local,o="segment"===e||"multipoint"===e?"polyline":e;this.coordinateHelper=C(this.hasZ,this.hasM,n),this._editGeometryOperations=new P(new V(o,this.coordinateHelper),i),this._snappingOperation=new pe({view:t}),this.addHandles([l((()=>({stagedPoint:this._snappingOperation.stagedPoint,constraint:this._constraint})),(({stagedPoint:e,constraint:t},n)=>{const{snappingOptions:i}=this;if(i&&(i.forceDisabled=null!=t&&k(t)),null!=n&&e===n.stagedPoint&&t!==n.constraint)return this._onKeyboardBasedChange();this._processCursor(e??this._screenToMap(this._stagedScreenPoint))}),{equals:(e,t)=>e.stagedPoint===t.stagedPoint&&s(e.constraint,t.constraint)}),l((()=>this.view.viewpoint),((e,t)=>{e&&t&&g(e,t)&&this._onKeyboardBasedChange()}))]),this._activeComponent=new M(n,i),this._editGeometryOperations.data.components.push(this._activeComponent);const r=this.segmentLabels;null!=r&&(r.context={view:t,editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,labelOptions:this.labelOptions,automaticLengthMeasurementUtils:this.automaticLengthMeasurementUtils},this.addHandles(l((()=>this.labelOptions.enabled),(e=>{r.visible=e}),c))),this.addHandles(this._editGeometryOperations.on(["vertex-add","vertex-update","vertex-remove"],(e=>{const t=e.vertices.map((e=>({componentIndex:0,vertexIndex:e.index,coordinates:this.coordinateHelper.vectorToArray(e.pos)}))),n=t.map((e=>e.coordinates)),i=this.coordinateHelper.vectorToDehydratedPoint(this._activeComponent.getFirstVertex()?.pos)??null;y(i,this.firstVertex)||(this.firstVertex=i);const s=this.coordinateHelper.vectorToDehydratedPoint(this._activeComponent.getLastVertex()?.pos)??null;y(s,this.lastVertex)||(this.lastVertex=s);const o=this.coordinateHelper.vectorToDehydratedPoint(this._activeComponent.edges.at(-1)?.leftVertex?.pos)??null;switch(y(o,this.secondToLastVertex)||(this.secondToLastVertex=o),this._processCursor(this.cursorVertex),e.type){case"vertex-add":this.emit(e.type,{...e,added:n,vertices:t});break;case"vertex-update":this.emit(e.type,{...e,updated:n,vertices:t});break;case"vertex-remove":this.emit(e.type,{...e,removed:n,vertices:t})}})));const p=this._manipulator=new Ce({consumesClicks:!1,grabbableForEvent:e=>"click"!==this.drawingMode||"touch"===e.pointerType&&this._snappingEnabled&&1===this._pointerDownStates.size});this.manipulators.add(p),p.grabbable="point"!==e&&"multipoint"!==e,this.addHandles([p.events.on("immediate-click",(e=>this._onImmediateClick(e))),p.events.on("immediate-double-click",(e=>this._onImmediateDoubleClick(e))),l((()=>this.drawingMode),(()=>{this.removeHandles(Pe),this.addHandles(this._createManipulatorDragPipeline(p),Pe)}),c),l((()=>({effectiveCursor:this.effectiveCursor})),(({effectiveCursor:e})=>{p.cursor=e}),c)]),z(this,(()=>{const e=this.view.inputManager.latestPointerType??"mouse",t=this._getSnappingContext(e);if(null!=this.snappingManager){const e=this._snappingOperation.snapAgainNearPreviousMapPoint(this.snappingManager,t);this._updatingHandles.addPromise(a(e))}}))}destroy(){o(this.segmentLabels),o(this._snappingOperation),this._editGeometryOperations=o(this._editGeometryOperations),this._updatingHandles.destroy()}get _isDragging(){const{_stagedPointerId:e,_manipulator:t}=this;return null!=e&&this._pointerDownStates.has(e)||t.grabbing||!t.interactive}get _snappingEnabled(){return null!=this.snappingManager&&this.snappingManager.options.effectiveEnabled}get _requiresScenePoint(){const e=this._updateAndGetEffectiveDrawSurface();return"3d"===this.view.type&&this.drawSurface!==e}get canRedo(){return this._editGeometryOperations.canRedo}get canUndo(){return this._editGeometryOperations.canUndo}get committedVertices(){return this._activeComponent.vertices.map((e=>this.coordinateHelper.vectorToArray(e.pos)))}get _constraint(){const{constraints:e,constraintsEnabled:t}=this;if(e&&t)switch(this.geometryType){case"point":case"multipoint":return this._getPointConstraint(e);case"polygon":case"polyline":return this._getPolylineOrPolygonConstraint(this.lastVertex,this.secondToLastVertex,e)}}set drawingMode(e){this._set("drawingMode",e??T)}get effectiveCursor(){return this.loading?"progress":this._hideDefaultCursor?null:this.cursor||"crosshair"}get interactive(){return this._manipulator.interactive}set interactive(e){this._manipulator.interactive=e}get isCompleted(){return this._createOperationCompleted}get numCommittedVertices(){return this._activeComponent.vertices.length}get snappingOptions(){return null!=this.snappingManager?this.snappingManager.options:null}get cursorVertex(){return this._get("cursorVertex")}get visualizationCursorVertex(){return"mouse"===this._stagedPointerType?this.cursorVertex:null}get committableVertex(){const{cursorVertex:e,lastVertex:t,firstVertex:n,geometryType:i}=this;return"polygon"===i&&f(e,n)||f(e,t)?null:e}get updating(){return this._updatingHandles.updating}get geometryIncludingUncommittedVertices(){const{committedVertices:e,committableVertex:t,coordinateHelper:n}=this,i=e.slice();return null!=t&&i.push(n.pointToArray(t)),i}cancel(){this.complete({aborted:!0})}commitStagedVertex(){this._snappingOperation.abort();const{committableVertex:e}=this;null!=e&&this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(e))}complete(e){const t=e?.aborted||!1;this._snappingOperation.abort(),this.snappingManager?.doneSnapping();const{geometryType:n,numCommittedVertices:i}=this,s="multipoint"===n&&0===i||"polyline"===n&&i<2||"polygon"===n&&i<3;"segment"!==n&&"point"!==n||this.commitStagedVertex(),this._createOperationCompleted=!s,(this.isCompleted||t)&&(this._stagedScreenPoint=null,this._stagedPointerId=null,this._stagedPointerType=null,this._processCursor(null),this.emit("complete",{vertices:this.committedVertices.map(((e,t)=>({componentIndex:0,vertexIndex:t,coordinates:e}))),aborted:t,type:"complete"}))}onInputEvent(e){switch(e.type){case"pointer-down":this._pointerDownStates.add(e.pointerId);break;case"pointer-up":this._pointerDownStates.delete(e.pointerId)}switch(e.type){case"pointer-move":return this._onPointerMove(e);case"hold":return this._onHold(e)}}redo(){this._editGeometryOperations.redo()}undo(){null!=this.snappingManager&&this.snappingManager.doneSnapping(),this._editGeometryOperations.undo()}_processCursor(e){const t=i(this.cursorVertex),n=i(e),s=n&&(this._updateAndGetEffectiveDrawSurface()?.constrainZ(n)??n),o=this._snapToClosingVertex(s),r=this._applyConstraints(o);f(t,r)||(this._set("cursorVertex",r),this.segmentLabels?.set("stagedVertex",null!=r?this.coordinateHelper.pointToVector(r):null),null==r||"mouse"!==this._stagedPointerType?this.emit("cursor-remove"):this.emit("cursor-update",{updated:null,vertices:[{componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(r)}],operation:"apply",type:"vertex-update"}))}_snapToClosingVertex(e){if(null==e||this._isDragging||"polygon"!==this.geometryType||this.numCommittedVertices<=2)return e;const t=this._mapToScreen(e);if(!t)return e;const n=this._activeComponent;return this._vertexWithinPointerDistance(n.vertices[0].pos,t)?this.firstVertex:this._vertexWithinPointerDistance(n.vertices.at(-1).pos,t)?this.lastVertex:e}_createManipulatorDragPipeline(e){switch(this.drawingMode){case"click":return this._createManipulatorDragPipelineClick(e);case"freehand":return this._createManipulatorDragPipelineFreehand(e);case"hybrid":return this._createManipulatorDragPipelineHybrid(e)}}_createManipulatorDragPipelineClick(e){return O(e,((e,t,n,i)=>{const s="touch"===i&&this._snappingEnabled;if(this.isCompleted||!s)return;const{snappingStep:o,cancelSnapping:r}=ae({predicate:()=>s,snappingManager:this.snappingManager,snappingContext:new re({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,feature:this.graphic,pointer:i,visualizer:this.snappingVisualizer,drawConstraints:this.constraints}),updatingHandles:this._updatingHandles,useZ:!this._requiresScenePoint});n=n.next((e=>(s&&null!=this.snappingManager&&this.snappingManager.doneSnapping(),e))).next(r),t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this._processCursor(e.mapStart),("segment"===this.geometryType||s&&!this.numCommittedVertices)&&this.commitStagedVertex()),e))).next(D(this.view,this.elevationInfo)).next(...o).next((e=>(s&&(this._processCursor(e.mapEnd),"end"===e.action&&this.commitStagedVertex()),e))).next((e=>("end"===e.action&&("mouse"!==this._stagedPointerType&&this._snappingOperation.abort(),"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()),e)))}))}_createManipulatorDragPipelineFreehand(e){return O(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this._snappingOperation.abort(),null==this.committableVertex&&this._processCursor(e.mapStart),"segment"===this.geometryType&&this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this._processCursor(e.mapEnd),"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":this.complete()}return e}))}))}_createManipulatorDragPipelineHybrid(e){return O(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this._snappingOperation.abort(),this.addHandles(this._editGeometryOperations.createUndoGroup(),Ve),this._processCursor(e.mapStart),this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this._processCursor(e.mapEnd),"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":"mouse"!==this._stagedPointerType&&this._snappingOperation.abort(),this.removeHandles(Ve),"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()}return e}))}))}get _drawAtFixedElevation(){const{constraintsEnabled:e,constraintZ:t,geometryType:n,numCommittedVertices:i}=this;return e?null!=t||"segment"===n&&i>0:("segment"===n||"polygon"===n)&&i>0}_updateAndGetEffectiveDrawSurface(){const{constraintsEnabled:e,coordinateHelper:t,drawSurface:n,elevationDrawSurface:i,snapToSceneEnabled:s}=this;if(null==i)return n;if(!this.hasZ)return i.defaultZ=null,i;const o=this.elevationInfo?.mode;let r=this.defaultZ,a=e||"absolute-height"===o;return null!=s&&(a=s),"on-the-ground"===o&&(a=!1),this._drawAtFixedElevation&&(r=(e?this.constraintZ:null)??t.getZ(this._activeComponent.vertices[0].pos),a=!1),a?n:(i.defaultZ=r,i)}_mapToScreen(e){return this._updateAndGetEffectiveDrawSurface()?.mapToScreen(e)}_onHold(e){this._snappingOperation.abort(),"click"===this.drawingMode&&"touch"===e.pointerType&&this._snappingEnabled&&this._processCursor(e.mapPoint),e.stopPropagation()}_onImmediateClick(e){if(!("mouse"===e.pointerType&&2===e.button||this._manipulator.dragging))try{const{drawingMode:t,geometryType:n}=this;this._stagedPointerType=e.pointerType,this._stagedScreenPoint=e.screenPoint;const i=this._screenToMap(e.screenPoint);if(null==i)return;if(null==i||"freehand"===t&&"point"!==n&&"multipoint"!==n)return;if(this._snappingEnabled&&null!=this.cursorVertex||this._processCursor(i),null==this.committableVertex)return void this.complete();this.commitStagedVertex(),"mouse"!==e.pointerType&&this._processCursor(null),("freehand"===t&&"multipoint"!==this.geometryType||"point"===n||"segment"===n&&2===this.numCommittedVertices||"segment"===n&&"hybrid"===t&&1===this.numCommittedVertices)&&this.complete()}finally{e.stopPropagation()}}_onImmediateDoubleClick(e){this._manipulator.dragging||"point"===this.geometryType||(this.complete(),e.stopPropagation())}_onPointerMove(e){const t=u(e.x,e.y);this._stagedScreenPoint=t,this._stagedPointerType=e.pointerType,this._stagedPointerId=e.pointerId,this._isDragging?this._snappingOperation.abort():(e.stopPropagation(),this._processCursorMovementRelativeToSurface(t,e.pointerType))}_onKeyboardBasedChange(){"mouse"===this._stagedPointerType&&this._stagedScreenPoint&&null!=this._stagedPointerId&&!this._isDragging?this._processCursorMovementRelativeToSurface(this._stagedScreenPoint,this._stagedPointerType):this._snappingOperation.abort()}_processCursorMovementRelativeToSurface(e,t){const n=this._snappingOperation,i=this._screenToMap(e),s=this._requiresScenePoint?this.drawSurface?.screenToMap(e):null;if(null==i)return this._hideDefaultCursor=!0,this._processCursor(null),void n.abort();this._hideDefaultCursor=!1;const o=this.snappingManager;if(null==o)return this._processCursor(i),void n.abort();const r=this._getSnappingContext(t);this._updatingHandles.addPromise(a(n.snap({point:i,scenePoint:s},o,r)))}_applyConstraints(e){const{_constraint:t,constraints:n}=this;if(!e||!n||!t)return e;const{context:i}=n,s=_e(e,i),o=s?t.closestTo(s):void 0;if(!o)return e;const r=function(e,t,n){const{view:i,measurementSR:s,spatialReference:o,origin:r,mode:a}=n;if("geodesic"===a?W(Se,e):K(Se,e,r),J(Se,s,Se,o))return ee(Se,i,t,n,void 0)}(o,e,i),a="2d"===this.view.type||"absolute-height"!==i.elevationInfo.mode;return null!=r&&a&&null!=this.constraintZ&&this.hasZ&&(r.z=this.constraintZ),r}_screenToMap(e){return e?this._updateAndGetEffectiveDrawSurface()?.screenToMap(e):null}_screenToMapDragEventStep(){let e=null;return t=>{if("start"===t.action&&(e=this._screenToMap(t.screenStart)),null==e)return null;const n=this._screenToMap(t.screenEnd);return null!=n?{...t,mapStart:e,mapEnd:n}:null}}_vertexWithinPointerDistance(e,t){const n=this._mapToScreen(this.coordinateHelper.vectorToDehydratedPoint(e));return null!=n&&function(e,t){const n=e.x-t.x,i=e.y-t.y;return n*n+i*i<=25}(n,t)}_getSnappingContext(e){const t=this._drawAtFixedElevation?this.elevationDrawSurface?.defaultZ:null;return new re({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:e,feature:this.graphic,visualizer:this.snappingVisualizer,selfSnappingZ:null!=t?{value:t,elevationInfo:this.elevationInfo}:null,drawConstraints:this.constraints})}};e([h()],Me.prototype,"_hideDefaultCursor",void 0),e([h()],Me.prototype,"_stagedPointerId",void 0),e([h()],Me.prototype,"_isDragging",null),e([h()],Me.prototype,"_snappingOperation",void 0),e([h()],Me.prototype,"_snappingEnabled",null),e([h({constructOnly:!0})],Me.prototype,"graphic",void 0),e([h()],Me.prototype,"constraintsEnabled",void 0),e([h()],Me.prototype,"constraints",void 0),e([h()],Me.prototype,"_constraint",null),e([h()],Me.prototype,"constraintZ",void 0),e([h()],Me.prototype,"defaultZ",void 0),e([h()],Me.prototype,"isDraped",void 0),e([h({constructOnly:!0})],Me.prototype,"automaticLengthMeasurementUtils",void 0),e([h({value:T})],Me.prototype,"drawingMode",null),e([h({constructOnly:!0})],Me.prototype,"elevationDrawSurface",void 0),e([h({constructOnly:!0})],Me.prototype,"elevationInfo",void 0),e([h({constructOnly:!0,type:oe})],Me.prototype,"labelOptions",void 0),e([h({constructOnly:!0})],Me.prototype,"geometryType",void 0),e([h({constructOnly:!0})],Me.prototype,"hasM",void 0),e([h({constructOnly:!0})],Me.prototype,"hasZ",void 0),e([h()],Me.prototype,"cursor",void 0),e([h()],Me.prototype,"effectiveCursor",null),e([h()],Me.prototype,"loading",void 0),e([h({constructOnly:!0})],Me.prototype,"manipulators",void 0),e([h({constructOnly:!0})],Me.prototype,"drawSurface",void 0),e([h({constructOnly:!0})],Me.prototype,"segmentLabels",void 0),e([h({constructOnly:!0})],Me.prototype,"snappingManager",void 0),e([h({constructOnly:!0})],Me.prototype,"snappingVisualizer",void 0),e([h()],Me.prototype,"snapToSceneEnabled",void 0),e([h({readOnly:!0})],Me.prototype,"cursorVertex",null),e([h({readOnly:!0})],Me.prototype,"visualizationCursorVertex",null),e([h()],Me.prototype,"committableVertex",null),e([h()],Me.prototype,"firstVertex",void 0),e([h()],Me.prototype,"lastVertex",void 0),e([h()],Me.prototype,"secondToLastVertex",void 0),e([h()],Me.prototype,"updating",null),e([h({constructOnly:!0})],Me.prototype,"view",void 0),Me=e([m("esri.views.draw.DrawOperation")],Me);class Oe{constructor(e,t,n,i=null){this._elevationInfo=e,this.defaultZ=t,this._view=n,this._excludeGraphics=i}screenToMap(e){const{defaultZ:t,_view:n}=this,i=n.sceneIntersectionHelper.intersectElevationFromScreen(d(e.x,e.y),this._elevationInfo,t??0,this._excludeGraphics);return null==t&&null!=i&&(i.z=void 0),i}mapToScreen(e){const t=X(e.x,e.y,b(this._view,e,this._elevationInfo),e.spatialReference);return this._view.toScreen(t)}constrainZ(e){const{defaultZ:t}=this;return null!=t&&e.z!==t&&((e=ce(e)).z=t),e}}class De{constructor(e,t,n=[]){this.view=e,this.elevationInfo=t,this.exclude=n}screenToMap(e){const t=this.view.toMap(e,{exclude:this.exclude,excludeLabels:!0});return null!=t&&(t.z=w(t,this.view,this.elevationInfo)),t}mapToScreen(e){let t=e;return null!=this.elevationInfo&&(t=X(e.x,e.y,b(this.view,e,this.elevationInfo),e.spatialReference)),this.view.toScreen(t)}constrainZ(e){return e}}class Ie{constructor(e,t=!1,n=0){this.view=e,this.hasZ=t,this.defaultZ=n,this.mapToScreen=t=>e.toScreen(t),this.screenToMap=t?t=>{const i=e.toMap(t);return i.z=n,i}:t=>e.toMap(t)}constrainZ(e){const{defaultZ:t}=this;return this.hasZ&&e.z!==t&&((e=ce(e)).z=t),e}}class Ee{screenToMap(e){const{x:t,y:n}=e;return new le({x:t,y:n,spatialReference:Ee.spatialReference})}mapToScreen(e){return u(e.x,e.y)}constrainZ(e){return e}static{this.spatialReference=new N}}export{Me as D,Oe as E,Ie as M,De as S,Ee as a,ue as g};
