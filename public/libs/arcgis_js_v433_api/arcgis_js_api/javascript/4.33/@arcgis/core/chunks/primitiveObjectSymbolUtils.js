/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{u as e}from"../core/lang.js";import{g as t,h as r,i as s,j as n,k as i,l as a,m as o}from"./GeometryUtil.js";import{e as u,c}from"./memoryEstimations.js";import{I as m,S as l,a as f}from"./IntersectorResult.js";import{V as h}from"./VertexAttribute.js";import{L as d}from"./Intersector.js";class g{constructor(e,t,r,s){this.material=e,this.bufferWriter=e.createBufferWriter(),this.vertexBufferLayout=this.bufferWriter.vertexBufferLayout,this.buffer=t,this.elementCount=r,this.boundingInfo=s}get numTriangles(){return this.elementCount/3}get numVertices(){return this.elementCount}computeUsedMemory(){return this.buffer.byteLength+c}getRenderGeometry(){return this}intersect(e,t,r,s,n,i,a,o){const u=this.bufferWriter,c=this.buffer;u.intersect(c,this.material.parameters,null,e,r,s,((r,s,u)=>y(r,s,u,e,t,i,a,n,o)))}}class p{constructor(e){this.engineGeometry=e}get material(){return this.engineGeometry.material}get numVertices(){return this.engineGeometry.attributes.get(h.POSITION).indices.length}get numTriangles(){return this.engineGeometry.indexCount/3}get boundingInfo(){return this.engineGeometry.boundingInfo}computeUsedMemory(){return Array.from(this.engineGeometry.attributes.values()).reduce(((e,t)=>e+u(t.data,t.indices)),0)}getRenderGeometry(){const e=this.material,t=this.engineGeometry,r=t.attributes,s=t.boundingInfo,n=e.createBufferWriter(),i=n.vertexBufferLayout,a=n.elementCount(r),o=i.createBuffer(a);return n.write(null,null,r,null,o,0),new g(e,o.buffer,a,s)}intersect(e,t,r,s,n,i,a,o){const u=this.engineGeometry;this.material.intersect(u,e.transform.transform,e,r,s,((r,s,u)=>y(r,s,u,e,t,i,a,n,o)))}}function y(e,t,r,s,n,i,a,o,u){if(e<0)return;if(n&&!n(s.rayBegin,s.rayEnd,e))return;const c=new d(i.layerViewUid,i.graphicUid(o),r,a,u);if((null==s.results.min.distance||e<s.results.min.distance)&&s.results.min.set(m.LOD,c,e,t,s.transform.transform),(null==s.results.max.distance||e>s.results.max.distance)&&s.results.max.set(m.LOD,c,e,t,s.transform.transform),s.options.store===l.ALL){const r=new f(s.results.min.ray);r.set(m.LOD,c,e,t,s.transform.transform),s.results.all.push(r)}}class S{constructor(e,t=null){this.geometry=e,this.textures=t}get material(){return this.geometry.material}get numTriangles(){return this.geometry.numTriangles}}class R{constructor(t,r,s){this.components=t,this.minScreenSpaceRadius=r,this.pivotOffset=s;const n=e(this.components.map((e=>e.geometry)));this.numVertices=n.reduce(((e,t)=>e+t.numVertices),0)}}class b{constructor(e){this.levels=e,this.levels.sort(((e,t)=>e.minScreenSpaceRadius===t.minScreenSpaceRadius?e.numVertices-t.numVertices:e.minScreenSpaceRadius-t.minScreenSpaceRadius))}getMaterials(){const t=[];return this.levels.forEach((e=>e.components.forEach((e=>t.push(e.geometry.material))))),e(t)}getTextures(){const t=new Array;return this.levels.forEach((e=>e.components.forEach((e=>{null!=e.textures&&t.push(...e.textures)})))),e(t)}getGeometries(){const t=new Array;return this.levels.forEach((e=>e.components.forEach((e=>{t.push(e.geometry)})))),e(t)}getEngineGeometries(){return this.getGeometries().map((e=>e.engineGeometry)).filter((e=>null!=e))}computeUsedMemory(){const e=this.getGeometries(),t=this.getTextures(),r=e.reduce(((e,t)=>e+t.computeUsedMemory()),0);return t.reduce(((e,t)=>e+t.usedMemory),0)+r}}function G(e){switch(e){case"sphere":case"cube":case"diamond":case"cylinder":case"cone":case"inverted-cone":case"tetrahedron":return!0}return!1}function x(e,u){const c=(e,r,s=!1)=>new b(e.map((e=>{const n=r(e.tesselation);return s&&t(n),new R([new S(new p(n))],e.minScreenSpaceRadius)})));switch(e){case"sphere":return c([{tesselation:0,minScreenSpaceRadius:0},{tesselation:1,minScreenSpaceRadius:8},{tesselation:2,minScreenSpaceRadius:16},{tesselation:3,minScreenSpaceRadius:50},{tesselation:4,minScreenSpaceRadius:250}],(e=>o(u,.5,e,!0)));case"cube":return c([{tesselation:0,minScreenSpaceRadius:0}],(()=>a(u,1)));case"cone":return c(w,(e=>i(u,1,.5,e,!1)),!0);case"inverted-cone":return c(w,(e=>i(u,1,.5,e,!0)),!0);case"cylinder":return c(w,(e=>n(u,1,.5,e,[0,0,1],[0,0,.5])));case"tetrahedron":return c([{tesselation:0,minScreenSpaceRadius:0}],(()=>s(u,1)),!0);case"diamond":return c([{tesselation:0,minScreenSpaceRadius:0}],(()=>r(u,1)),!0);default:return}}const w=[{tesselation:6,minScreenSpaceRadius:0},{tesselation:18,minScreenSpaceRadius:7},{tesselation:64,minScreenSpaceRadius:65}];export{g as L,S as a,R as b,b as c,p as d,G as i,x as p};
