/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as s}from"../chunks/tslib.es6.js";import o from"./Error.js";import{a as t}from"../chunks/maybe.js";import r from"./Promise.js";import{onAbortOrThrow as e}from"./promiseUtils.js";import{W as l}from"../chunks/Warning.js";import{property as i}from"./accessorSupport/decorators/property.js";import{subclass as a}from"./accessorSupport/decorators/subclass.js";import"./lang.js";import"../chunks/Logger.js";import"../config.js";import"./Accessor.js";import"./Handles.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/Lifecycle.js";import"../chunks/metadata.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"./scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../chunks/SetUtils.js";import"../chunks/SimpleTrackingTarget.js";import"../chunks/events.js";import"../chunks/ensureType.js";import"../chunks/MapUtils.js";const n="loaded",d=r=>{let d=class extends r{constructor(...s){super(...s),this._loadController=null,this.loadError=null,this.loadStatus="not-loaded",this._set("loadWarnings",[]),this.addResolvingPromise(new Promise((s=>{const t=this.load.bind(this);this.load=r=>{const l=new Promise(((s,t)=>{const l=e(r,t);this.destroyed&&t(new o("load:instance-destroyed",`Instance of '${this.declaredClass||this.constructor.name}' is already destroyed`,{instance:this})),this.when(s,t).finally((()=>{l&&l.remove()}))}));if("not-loaded"===this.loadStatus){this._set("loadStatus","loading");const s=this._loadController=new AbortController;t({signal:s.signal})}return s(),l}}))),this.when((()=>{this._set("loadStatus",n),this._loadController=null}),(s=>{this._set("loadStatus","failed"),this._set("loadError",s),this._loadController=null}))}destroy(){this._loadController&&(this._loadController=t(this._loadController),this._promiseProps.abort()),this._set("loadError",null),this._set("loadWarnings",[])}get loaded(){return this.loadStatus===n}get loadWarnings(){return this._get("loadWarnings")}load(){return null}cancelLoad(){return this.isFulfilled()||(this._set("loadError",new o("load:cancelled","Cancelled")),this._loadController?.abort(),this._promiseProps.abort()),this}};return s([i({readOnly:!0})],d.prototype,"loaded",null),s([i({readOnly:!0})],d.prototype,"loadError",void 0),s([i({clonable:!1})],d.prototype,"loadStatus",void 0),s([i({type:[l],readOnly:!0})],d.prototype,"loadWarnings",null),d=s([a("esri.core.Loadable")],d),d};let c=class extends(d(r)){};c=s([a("esri.core.Loadable")],c),function(s){s.LoadableMixin=d,s.isLoadable=function(s){return!(!s||!s.load)}}(c||(c={}));const h=c;export{h as default};
