/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as s}from"../chunks/tslib.es6.js";import e from"./Accessor.js";import{createResolver as r,createAbortError as i,isAbortError as t}from"./promiseUtils.js";import{subclass as o}from"./accessorSupport/decorators/subclass.js";import"./lang.js";import"./Handles.js";import"../chunks/Logger.js";import"../config.js";import"../chunks/maybe.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/Lifecycle.js";import"../chunks/metadata.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"./accessorSupport/decorators/property.js";import"../chunks/ensureType.js";import"../chunks/MapUtils.js";import"./Error.js";import"../chunks/watch.js";import"./scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../chunks/SetUtils.js";import"../chunks/SimpleTrackingTarget.js";import"../chunks/events.js";import"../chunks/Warning.js";var l;!function(s){s[s.PENDING=0]="PENDING",s[s.RESOLVED=1]="RESOLVED",s[s.REJECTED=2]="REJECTED"}(l||(l={}));class n{constructor(){this._resolver=r(),this._status=l.PENDING,this._resolvingPromises=[],this._resolver.promise.then((()=>{this._status=l.RESOLVED,this._cleanUp()}),(()=>{this._status=l.REJECTED,this._cleanUp()})),this.promise=this._resolver.promise}destroy(){this._cleanUp()}addResolvingPromise(s){this._resolvingPromises.push(s),this._tryResolve()}isResolved(){return this._status===l.RESOLVED}isRejected(){return this._status===l.REJECTED}isFulfilled(){return this._status!==l.PENDING}abort(){this._resolver.reject(i())}_cleanUp(){this._allPromise=null,this._resolvingPromises=null}_tryResolve(){if(this.isFulfilled())return;const s=r(),e=[...this._resolvingPromises,s.promise],i=this._allPromise=Promise.all(e);i.then((()=>{this.isFulfilled()||this._allPromise!==i||this._resolver.resolve()}),(s=>{this.isFulfilled()||this._allPromise!==i||t(s)||this._resolver.reject(s)})),s.resolve()}}const h=e=>{let r=class extends e{constructor(...s){super(...s),this._promiseProps=new n,this.addResolvingPromise(Promise.resolve())}destroy(){this._promiseProps.destroy()}isResolved(){return this._promiseProps.isResolved()}isRejected(){return this._promiseProps.isRejected()}isFulfilled(){return this._promiseProps.isFulfilled()}when(s,e){return this._promiseProps.promise.then((()=>this)).then(s,e)}catch(s){return this.when(null,s)}addResolvingPromise(s){s&&!this._promiseProps.isFulfilled()&&this._promiseProps.addResolvingPromise("_promiseProps"in s?s.when():s)}};return r=s([o("esri.core.Promise")],r),r};let p=class extends(h(e)){};p=s([o("esri.core.Promise")],p),function(s){s.EsriPromiseMixin=h}(p||(p={}));const m=p;export{m as default};
