/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{c as e}from"../../chunks/unitUtils.js";import{l as t,p as r,i as s}from"../../chunks/pe.js";import{g as o}from"../../chunks/geodeticCurveType.js";import"../../core/lang.js";import"../../chunks/jsonMap.js";import"../../config.js";import"../../chunks/Logger.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../core/Error.js";import"../../chunks/jsonUtils.js";import"../../chunks/MapUtils.js";import"../../core/promiseUtils.js";import"../../chunks/handleUtils.js";import"../../chunks/events.js";import"../../chunks/maybe.js";import"../../chunks/persistableUrlUtils.js";let n,i,c,p,u;function m(){return!!n&&s()}async function a(){if(!m()){const[e,s]=await Promise.all([import("../../chunks/OperatorGeodeticLength.js"),import("../../chunks/ProjectionTransformation.js").then((e=>e.bj)).then((({injectPe:e})=>e)),t()]);n=new e.OperatorGeodeticLength,s(r)}}function l(){return!!i&&m()}async function j(){if(!l()){const[e]=await Promise.all([import("../../chunks/apiConverter.js"),a()]);i=e.fromGeometry,c=e.fromSpatialReference,p=e.getSpatialReference,u=n.supportsCurves()}}function h(t,r={}){const{curveType:s="geodesic",unit:u}=r,m=p(t);let a=function(e,t,r){return n.execute(e,t,r,null)}(i(t),c(m),o[s]);return a&&u&&(a=e(a,"meters",u)),a}const f=Object.freeze(Object.defineProperty({__proto__:null,execute:h,isLoaded:l,load:j,get supportsCurves(){return u}},Symbol.toStringTag,{value:"Module"}));export{h as execute,f as g,l as isLoaded,j as load,u as supportsCurves};
