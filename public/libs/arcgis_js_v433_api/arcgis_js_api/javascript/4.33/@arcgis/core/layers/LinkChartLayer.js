/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import{c as t}from"../chunks/resourceSerializationUtils.js";import i from"../core/Collection.js";import s from"../core/Error.js";import{L as r}from"../chunks/Logger.js";import{g as o}from"../chunks/MapUtils.js";import{M as a}from"../chunks/MultiOriginJSONSupport.js";import{throwIfAborted as n,isAbortError as p,createAbortError as l}from"../core/promiseUtils.js";import{watch as m,sync as h}from"../core/reactiveUtils.js";import{property as u}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import{subclass as c}from"../core/accessorSupport/decorators/subclass.js";import{O as d,i as y}from"../core/Accessor.js";import g from"../geometry/Extent.js";import j from"../geometry/Point.js";import f from"../geometry/Polyline.js";import k from"./Layer.js";import{b}from"../chunks/featureConversionUtils.js";import{b as L,s as w,a as M,d as C,e as T}from"../chunks/constants2.js";import{K as D,S}from"../chunks/KnowledgeGraphLayerDataManager.js";import I,{i as x}from"./knowledgeGraph/KnowledgeGraphSublayer.js";import{c as v,d as N,L as E,e as R,f as U,h as G,i as A,j as _,k as F,N as P,l as O,C as B,m as z}from"../chunks/supportUtils.js";import{BlendLayer as V}from"./mixins/BlendLayer.js";import{OperationalLayer as Q}from"./mixins/OperationalLayer.js";import{ScaleRangeLayer as q}from"./mixins/ScaleRangeLayer.js";import{u as W}from"../chunks/commonProperties.js";import{fetchKnowledgeGraph as H}from"../rest/knowledgeGraphService.js";import"../request.js";import"../config.js";import"../kernel.js";import"../core/urlUtils.js";import"../chunks/jsonUtils.js";import"../chunks/persistableUrlUtils.js";import"../chunks/OptimizedGeometry.js";import"../chunks/memoryEstimations.js";import"../geometry/SpatialReference.js";import"../core/JSONSupport.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/unitUtils.js";import"../chunks/jsonMap.js";import"../chunks/pe.js";import"../chunks/assets.js";import"../chunks/ensureType.js";import"../chunks/writer.js";import"../core/Handles.js";import"../chunks/maybe.js";import"../chunks/Lifecycle.js";import"../chunks/metadata.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../chunks/SetUtils.js";import"../chunks/SimpleTrackingTarget.js";import"../chunks/events.js";import"../chunks/Warning.js";import"../core/Evented.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../geometry/Geometry.js";import"../chunks/reader.js";import"../geometry/support/webMercatorUtils.js";import"../core/accessorSupport/decorators/cast.js";import"../chunks/extentUtils.js";import"../chunks/boundsUtils.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"../chunks/zmUtils.js";import"../core/Identifiable.js";import"../core/Loadable.js";import"../core/Promise.js";import"../time/TimeExtent.js";import"../chunks/timeUtils.js";import"../chunks/date.js";import"../chunks/locale.js";import"../chunks/constants.js";import"../chunks/datetime.js";import"../chunks/aaBoundingBox.js";import"../geometry/support/jsonUtils.js";import"../geometry/Multipoint.js";import"../geometry/Polygon.js";import"../chunks/coordsUtils.js";import"../chunks/Axis.js";import"../chunks/OptimizedFeature.js";import"../chunks/OptimizedFeatureSet.js";import"../chunks/createFeatureId.js";import"../core/sql.js";import"../chunks/projectionUtils.js";import"../chunks/vec3f64.js";import"../chunks/projectBuffer.js";import"../chunks/geodesicConstants.js";import"../chunks/projectXYZToVector.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"../chunks/zscale.js";import"../rest/knowledgeGraph/GraphQueryStreaming.js";import"../rest/knowledgeGraph/GraphQuery.js";import"../rest/support/Query.js";import"../chunks/enumeration.js";import"../chunks/typeUtils2.js";import"../chunks/DataLayerSource.js";import"./support/Field.js";import"../chunks/domains.js";import"./support/CodedValueDomain.js";import"./support/Domain.js";import"./support/InheritedDomain.js";import"./support/RangeDomain.js";import"../chunks/fieldType.js";import"../chunks/FullTextSearch.js";import"../core/Clonable.js";import"../chunks/spatialRelationships.js";import"../rest/support/StatisticDefinition.js";import"../PopupTemplate.js";import"./support/fieldUtils.js";import"../chunks/guards.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/support/AttachmentsOrderByInfo.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"../popup/support/FieldInfoFormat.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../Color.js";import"../chunks/colorUtils2.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"../chunks/chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/content/UtilityNetworkAssociationsContent.js";import"../popup/support/UtilityNetworkAssociationType.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"../chunks/Queue.js";import"../core/workers/RemoteClient.js";import"../intl.js";import"../chunks/number2.js";import"../chunks/substitute.js";import"../chunks/messages.js";import"../chunks/FeatureStore.js";import"../chunks/BoundsStore.js";import"../chunks/PooledRBush.js";import"../chunks/quickselect.js";import"../chunks/timeSupport.js";import"../chunks/projectionSupport.js";import"../chunks/json.js";import"../chunks/optimizedFeatureQueryEngineAdapter.js";import"../chunks/QueryEngine.js";import"../chunks/WhereClauseCache.js";import"../chunks/LRUCache.js";import"../chunks/MemCache.js";import"../core/sql/WhereClause.js";import"../chunks/TimeOnly.js";import"../chunks/enum.js";import"../chunks/UnknownTimeZone.js";import"../chunks/QueryEngineCapabilities.js";import"../chunks/quantizationUtils.js";import"../chunks/utils13.js";import"../chunks/screenUtils.js";import"../chunks/heatmapUtils.js";import"../chunks/vec4.js";import"../chunks/common.js";import"../chunks/vec4f64.js";import"../chunks/utils14.js";import"../chunks/basemapUtils.js";import"../chunks/utils2.js";import"../chunks/mat4.js";import"../chunks/basemapDefinitions.js";import"../chunks/timeZoneUtils.js";import"../chunks/utils12.js";import"../chunks/generateRendererUtils.js";import"../chunks/queryUtils.js";import"../geometry/support/normalizeUtils.js";import"../chunks/normalizeUtilsCommon.js";import"../chunks/simplify.js";import"../chunks/utils10.js";import"../chunks/utils11.js";import"../chunks/SnappingCandidate.js";import"../rest/support/AutoIntervalBinParameters.js";import"../rest/support/BinParametersBase.js";import"../rest/support/AttributeBinsGrouping.js";import"../rest/support/NormalizationBinParametersMixin.js";import"../rest/support/DateBinParameters.js";import"../rest/support/DateBinTimeInterval.js";import"../rest/support/FixedBoundariesBinParameters.js";import"../rest/support/FixedIntervalBinParameters.js";import"./support/FieldsIndex.js";import"../chunks/Scheduler.js";import"../chunks/signal.js";import"../chunks/debugFlags.js";import"../chunks/clientSideDefaults.js";import"../chunks/defaultsJSON.js";import"../chunks/fieldProperties.js";import"./support/LabelClass.js";import"../chunks/labelUtils.js";import"../chunks/layerUtils.js";import"./catalog/catalogUtils.js";import"../chunks/defaults.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/Symbol.js";import"../symbols/LineSymbolMarker.js";import"../chunks/lineMarkers.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/MarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/Font.js";import"../symbols/support/jsonUtils.js";import"../symbols/WebStyleSymbol.js";import"../portal/Portal.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../chunks/Thumbnail.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"../chunks/collectionUtils.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"../chunks/utils5.js";import"../symbols/edges/Edges3D.js";import"../chunks/materialUtils.js";import"../chunks/opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"../chunks/Symbol3DMaterial.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"../chunks/utils6.js";import"../chunks/colors.js";import"../chunks/symbolLayerUtils3D.js";import"../symbols/IconSymbol3DLayer.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"../chunks/calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureMarkerSymbol.js";import"../chunks/urlUtils.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../chunks/typeUtils.js";import"../symbols/CIMSymbol.js";import"../symbols/PictureFillSymbol.js";import"./mixins/DisplayFilteredLayer.js";import"../chunks/layerContainerType.js";import"./support/DisplayFilterInfo.js";import"../chunks/scaleUtils.js";import"./support/DisplayFilter.js";import"../chunks/uuid.js";import"../chunks/displayFilterUtils.js";import"./mixins/FeatureEffectLayer.js";import"./support/FeatureEffect.js";import"../chunks/jsonUtils2.js";import"../chunks/parser.js";import"./support/FeatureFilter.js";import"./mixins/FeatureReductionLayer.js";import"./support/AggregateField.js";import"./support/ExpressionInfo.js";import"../chunks/FeatureReduction.js";import"./support/FeatureReductionBinning.js";import"../chunks/featureLayerUtils.js";import"../chunks/asyncUtils.js";import"../chunks/featureQueryAll.js";import"../renderers/SimpleRenderer.js";import"../renderers/Renderer.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"../chunks/colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../renderers/mixins/VisualVariablesMixin.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/support/SizeStop.js";import"../chunks/visualVariableUtils.js";import"../Graphic.js";import"../chunks/lengthUtils.js";import"../chunks/commonProperties2.js";import"../renderers/UniqueValueRenderer.js";import"../chunks/diffUtils.js";import"../chunks/RendererLegendOptions.js";import"../renderers/support/UniqueValue.js";import"../renderers/support/UniqueValueClass.js";import"../renderers/support/UniqueValueGroup.js";import"../renderers/support/UniqueValueInfo.js";import"../chunks/styleUtils.js";import"../rest/support/AttachmentQuery.js";import"../rest/support/RelationshipQuery.js";import"../renderers/support/jsonUtils.js";import"../chunks/typeUtils3.js";import"../renderers/ClassBreaksRenderer.js";import"../renderers/support/ClassBreakInfo.js";import"../renderers/DictionaryRenderer.js";import"../chunks/DictionaryScriptEvaluator.js";import"../chunks/Version.js";import"../chunks/ArcadeExpression.js";import"../chunks/utils3.js";import"../chunks/defaultCIMValues.js";import"../chunks/enums2.js";import"../renderers/DotDensityRenderer.js";import"../renderers/support/AttributeColorInfo.js";import"../renderers/HeatmapRenderer.js";import"../renderers/support/HeatmapColorStop.js";import"../renderers/PieChartRenderer.js";import"../chunks/ElevationInfo.js";import"../chunks/unitConversionUtils.js";import"../tables/AttributeTableTemplate.js";import"../tables/elements/AttributeTableGroupElement.js";import"../tables/elements/AttributeTableAttachmentElement.js";import"../tables/elements/AttributeTableElement.js";import"../tables/elements/AttributeTableFieldElement.js";import"../tables/elements/AttributeTableRelationshipElement.js";import"./support/FeatureReductionCluster.js";import"./support/FeatureReductionSelection.js";import"../chunks/clusterUtils.js";import"../chunks/MD5.js";import"./mixins/OrderedLayer.js";import"./support/OrderByInfo.js";import"./mixins/RefreshableLayer.js";import"./mixins/TemporalLayer.js";import"./support/TimeInfo.js";import"../time/TimeInterval.js";import"../chunks/labelingInfo.js";import"../rest/support/FeatureSet.js";import"../support/popupUtils.js";import"../chunks/utils4.js";import"../symbols/support/cimSymbolUtils.js";import"../chunks/gfxUtils.js";import"./GraphicsLayer.js";import"../chunks/GraphicsCollection.js";import"../chunks/enums3.js";import"../chunks/submitJob.js";import"../rest/geoprocessor/GPOptions.js";import"../rest/support/JobInfo.js";import"./support/MapImage.js";import"../rest/support/ArealUnit.js";import"../chunks/networkEnums.js";import"../rest/support/DataFile.js";import"../rest/support/LinearUnit.js";import"../rest/support/ParameterValue.js";import"../rest/support/RasterData.js";import"../rest/support/GPMessage.js";import"../rest/knowledgeGraph/GraphQueryResult.js";import"../rest/knowledgeGraph/GraphQueryResultHeader.js";import"../rest/knowledgeGraph/GraphQueryStreamingResult.js";import"../rest/knowledgeGraph/KnowledgeGraph.js";import"../rest/knowledgeGraph/DataModel.js";import"../rest/knowledgeGraph/EntityType.js";import"../rest/knowledgeGraph/GraphObjectType.js";import"../rest/knowledgeGraph/FieldIndex.js";import"../rest/knowledgeGraph/GraphProperty.js";import"../rest/knowledgeGraph/RelationshipType.js";import"../rest/knowledgeGraph/SourceTypeValueBehavior.js";import"../rest/knowledgeGraph/ServiceDefinition.js";import"../rest/knowledgeGraph/GraphAddFieldIndexResult.js";import"../rest/knowledgeGraph/GraphDataModelOperationResult.js";import"../rest/knowledgeGraph/GraphAddNamedTypesResult.js";import"../rest/knowledgeGraph/GraphAddPropertyResult.js";import"../rest/knowledgeGraph/GraphDeleteFieldIndexResult.js";import"../rest/knowledgeGraph/GraphDeleteNamedTypeResult.js";import"../rest/knowledgeGraph/GraphDeletePropertyResult.js";import"../rest/knowledgeGraph/GraphUpdateNamedTypesResult.js";import"../rest/knowledgeGraph/GraphUpdatePropertyResult.js";import"../rest/knowledgeGraph/GraphUpdateSearchIndexResult.js";import"../rest/knowledgeGraph/SearchIndex.js";import"../rest/knowledgeGraph/Entity.js";import"../rest/knowledgeGraph/GraphNamedObject.js";import"../rest/knowledgeGraph/GraphObject.js";import"../chunks/ObjectValue.js";import"../rest/knowledgeGraph/Path.js";import"../rest/knowledgeGraph/Relationship.js";import"../rest/knowledgeGraph/GraphApplyEditsResult.js";var J;!function(e){e.MULTIPLIER="multiplier",e.ABSOLUTE="absolute-value"}(J||(J={}));let K=class extends(Q(V(q(a(k))))){constructor(e){if(super(e),this.url=null,this.dataPreloadedInLocalCache=!1,this.initializationLinkChartConfig=null,this.membershipModified=!0,this._currentLinkChartConfig={layoutMode:"organic-standard"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new(i.ofType(I)),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new g({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="LinkChartLayer",this.sublayerIdsCache=new Map,this.tables=new(i.ofType(I)),this.type="link-chart",this.chronologicalAuxiliaryGraphics=null,this._originalInclusionList=e?.initializationInclusionModeDefinition,e?.dataPreloadedInLocalCache&&!e?.initializationInclusionModeDefinition)throw new s("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");this.addHandles(m((()=>this.layers.concat(this.tables)),((e,t)=>this._handleSublayersChange(e,t)),h))}normalizeCtorArgs(e){if(!e)return{};const{url:t,title:i,dataPreloadedInLocalCache:s,initializationLinkChartConfig:r}=e;return{url:t,title:i,dataPreloadedInLocalCache:s,initializationLinkChartConfig:r}}_initializeLayerProperties(e){if(!this.title&&this.url){const e=this.url.split("/");this.title=e[e.length-2]}const t=new Set;let i=[],o=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new s("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.inclusionModeDefinition?.generateAllSublayers?(i=e.knowledgeGraph.dataModel.entityTypes??[],o=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((s,a)=>{const n=this._graphTypeLookup.get(a);if(!n)return r.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(a);"relationship"===n.type?t.has(a)||(t.add(a),o.push(n)):"entity"===n.type?t.has(a)||(t.add(a),i.push(n)):(r.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(a))})):(i=e.knowledgeGraph.dataModel.entityTypes??[],o=e.knowledgeGraph.dataModel.relationshipTypes??[]);const a=new D({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=i,this.memberRelationshipTypes=o,this.dataManager=a}load(e){const i=async()=>{const e=[],t=[];this.loadLayerAssumingLocalCache(),this._layersLoadedFromAuthoritativeItem()||await x(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((e=>{e.useAllData=!1})),await this._initializeDiagram(),this.layers.forEach((i=>{t.push(i.refreshCachedQueryEngine()),e.push(new Promise((e=>{i.on("layerview-create",(()=>{e(null)}))})))})),this.tables.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t)};return this.addResolvingPromise(new Promise((s=>{H(this.url).then((async r=>{r.dataModel.entityTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),r.dataModel.relationshipTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)}));const a=this.linkChart?.linkChartProperties;if(a?.originIdOf("entitiesUrl")===d.LINK_CHART&&(this.membershipModified=!1,this._originalInclusionList=await t.fetchAndConvertSerializedLinkChart({entitiesUrl:a?.entitiesUrl,relationshipsUrl:a?.relationshipsUrl}),this._alignLayersDataModelAndInclusionDefinition(r.dataModel),this.initializationLinkChartConfig={layoutSettings:a?.layoutSettings??void 0,layoutMode:v(a.layoutType)}),this._initializeLayerProperties({knowledgeGraph:r,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})})),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})}))),this.dataPreloadedInLocalCache){const e=S.getInstance();for(const[t,i]of this.dataManager.inclusionModeDefinition?.namedTypeDefinitions??[])for(const s of i.members?.values()??[]){const i=e.readFromStoreById(`${t}__${s.id}`);i&&o(this.dataManager.sublayerCaches,t,(()=>new Map)).set(s.id,i)}await i()}else{const t="geographic-organic-standard"===this.initializationLinkChartConfig?.layoutMode;this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,t,!0).then((async()=>{n(e),await i()})))}s(null)}))}))),Promise.resolve(this)}set initializationInclusionModeDefinition(e){"loaded"!==this.loadStatus&&"failed"!==this.loadStatus?this._set("initializationInclusionModeDefinition",e):r.getLogger(this).error("#initializationInclusionModeDefinition","initializationInclusionModeDefinition cannot be changed after the layer is loaded.")}get linkChart(){return this.parent}async addRecords(e,t){let i=[];t?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(i=await N(e,this.dataManager.knowledgeGraph));const s=e.concat(i).filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));s.length>0&&(this.membershipModified=!0),await this._handleNewRecords(s,t)}async createSublayerForNamedType(e){await this.load();const t=this._graphTypeLookup.get(e);if(!t)throw new s("knowledge-graph:missing-type","The specified type does not exist in the knowledge graph.");if(this.dataManager.sublayerCaches.has(e))throw new s("knowledge-graph:duplicate-type","The specified type already exists as a sublayer.");this.dataManager.sublayerCaches.set(e,new Map),o(this.sublayerIdsCache,e,(()=>new Set));const i=this._createSublayer(t);return"entity"===t.type?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.set(e,{useAllData:!1,members:new Map}),i.geometryType?this.layers.push(i):this.tables.push(i),await x(this,[e]),this._refreshNamedTypes(),i}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:i=!1,overrideMembershipCheck:s=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1,overrideMembershipCheck:!1}){let r=[];for(const t of e)(s||!1===this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.useAllData&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.members?.has(t.id))&&r.push(t);if(t){const e=new Set,t=[];for(const t of r)if(this.dataManager.nodeConnectionsLookup.has(t.id))for(const i of this.dataManager.nodeConnectionsLookup.get(t.id))e.add(i);for(const i of e)if(this.dataManager.memberIdTypeLookup.has(i))for(const e of this.dataManager.memberIdTypeLookup.get(i))this.dataManager.relationshipTypeNames.has(e)&&t.push({id:i,typeName:e});r=r.concat(t)}this.dataManager.removeFromLayer(r);for(const e of r)this.sublayerIdsCache.get(e.typeName)?.delete(e.id),this.dataManager.relationshipTypeNames.has(e.typeName)?this.relationshipLinkChartDiagramLookup.delete(e.id):this.entityLinkChartDiagramLookup.delete(e.id);const o=i?void 0:this.getCurrentNodeLocations();await this._calculateLayoutWithSublayerTimeInfo(this._currentLinkChartConfig.layoutMode,{layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:o}),r.length>0&&(this.membershipModified=!0);const a=[];return this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),await Promise.all(a),this._refreshNamedTypes(),r}async expand(e,t){let i=[];try{const s=await this.dataManager.getConnectedRecordIds(e,t?.relationshipTypeNames,t);i=s.filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id))),await this._handleNewRecords(i,t),s.length>0&&(this.membershipModified=!0),n(t?.signal)}catch(e){throw p(e)&&i.length>0&&await this.removeRecords(i,{overrideMembershipCheck:!0}),e}return{records:i}}loadLayerAssumingLocalCache(){const e=[...this.memberRelationshipTypes,...this.memberEntityTypes];this.layers.length||this.originIdOf("tables")===d.DEFAULTS?this.originIdOf("layers")===d.DEFAULTS?this._createSublayers(e,this.layers,(e=>!!e.geometryType)):this._updateSublayers(e,this.layers):this.layers=new i,this.tables.length||this.originIdOf("layers")===d.DEFAULTS?this.originIdOf("tables")===d.DEFAULTS?this._createSublayers(e,this.tables,(e=>!e.geometryType)):this._updateSublayers(e,this.tables):this.tables=new i,this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{const i=o(this.sublayerIdsCache,t,(()=>new Set));e.members?.forEach((({id:e,linkChartLocation:s})=>{if(i.add(e),s){const i="coords"in s&&"lengths"in s?s:b(s);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e,i):this.entityLinkChartDiagramLookup.set(e,i)}}))}))}async calculateLinkChartLayout(e="organic-standard",t){const i=[],a=[],p=[];this.dataManager.sublayerCaches.forEach(((e,t)=>{this.dataManager.entityTypeNames.has(t)?e.forEach((e=>{i.push({typeName:t,feature:e})})):this.dataManager.relationshipTypeNames.has(t)&&e.forEach((e=>{a.push({typeName:t,feature:e})}))})),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const m=new Map,h=new Map,u=new Map,c=new Map,d=new Uint8Array(i.length),y=new Float64Array(i.length),k=new Float64Array(i.length),D=new Float64Array(i.length),S=new Float64Array(i.length),I=new Uint32Array(a.length),x=new Uint32Array(a.length),v=new Float64Array(a.length),N=new Float64Array(a.length),V=[];let Q=!1;const q=new g({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let W,H="organic-standard",J=0,K=0;const $=E.apply;switch(H="geographic-organic-standard"===e?"organic-standard":e,H){case"organic-standard":W=F.apply;break;case"organic-community":W=_.apply;break;case"hierarchical-bottom-to-top":W=A.apply;break;case"radial-root-centric":W=G.apply;break;case"tree-left-to-right":W=U.apply;break;default:W=R.apply}let Z=!1;i.forEach((({typeName:i,feature:s})=>{if("chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e&&t?.lockedNodeLocations?.has(s.attributes[L])){"geographic-organic-standard"===e&&this.dataManager.geographicLookup.has(i)?d[J]=P.IsGeographic:d[J]=P.None;const r=t.lockedNodeLocations.get(s.attributes[L]);y[J]=r.x,k[J]=r.y}else if("geographic-organic-standard"===e&&this.dataManager.geographicLookup.has(i)){d[J]=P.IsGeographic;let e=null;const t=s.attributes[this.dataManager.geographicLookup.get(i).name],r=this.dataManager.geographicLookup.get(i)?.geometryType;switch(r){case"esriGeometryPoint":y[J]=t?.x,k[J]=t?.y;break;case"esriGeometryPolygon":e=t?.centroid,null!=e?.x&&null!=e?.y?(y[J]=e.x,k[J]=e.y):d[J]=P.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":e=t?.extent?.center,null!=e?.x&&null!=e?.y?(y[J]=e.x,k[J]=e.y):d[J]=P.IsMovable;break;default:d[J]=P.IsMovable}(null==y[J]||null==k[J]||Number.isNaN(y[J])||Number.isNaN(k[J]))&&(d[J]=P.IsMovable,y[J]=0,k[J]=0)}else if("chronological-mono-timeline"===e||"chronological-multi-timeline"===e){!Z&&t?.lockedNodeLocations?.has(s.attributes[L])&&(Z=!0);const e=t?.timeInfoByTypeName?.get(i),r=e?.startField,o=r&&e?.startField?s.attributes[r]:null;D[J]=o?new Date(o).getTime():NaN;const a=e?.endField,n=a&&e?.endField?s.attributes[a]:null;S[J]=n?new Date(n).getTime():NaN,y[J]=0,k[J]=0,d[J]=P.IsMovable}else d[J]=P.IsMovable,y[J]=0,k[J]=0;c.set(s.attributes[L],J),V[J]={feature:s,typeName:i},J++})),Z&&r.getLogger(this).warn("Locked node locations are not supported for chronological layout at this time.  Requested node locations were ignored");let X=!1;const Y=new Map;a.forEach((i=>{const s=i.feature.attributes[w],r=i.feature.attributes[M],o=c.get(s),a=c.get(r),n=t?.timeInfoByTypeName?.get(i.typeName),l=t?.timeInfoByTypeName?n?.startField:null,m=l?i.feature.attributes[l]:null,h=n?.endField,u=h?i.feature.attributes[h]:null;if(void 0!==o&&void 0!==a){let t=s+"-"+r;"chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e||(t=t+"-"+m+"-"+u);const n=Y.get(t),l=n?.has(i.typeName);l||(I[K]=o,x[K]=a,"chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e||(v[K]=m?new Date(m).getTime():NaN,N[K]=u?new Date(u).getTime():NaN),void 0===n?Y.set(t,new Map([[i.typeName,K]])):n.set(i.typeName,K),K++),p.push(i)}else X=!0,this.relationshipLinkChartDiagramLookup.set(s,null)})),X&&r.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const ee=this._validateOrganicLayoutSettings(e,t?.layoutSettings?.organicLayoutSettings),te=this._convertValidatedOrganicSettingsToCalculationSettings(ee);await O();let ie=B.Error,se=null;if("chronological-mono-timeline"===e||"chronological-multi-timeline"===e){let i;({status:ie,links:se,graphics:i}=$((()=>t?.signal?.aborted??!1),d,y,k,D,S,I.subarray(0,K),x.subarray(0,K),v.subarray(0,K),N.subarray(0,K),"chronological-multi-timeline"===e,t?.layoutSettings?.chronologicalLayoutSettings)),ie===B.Success&&(this.chronologicalAuxiliaryGraphics=i)}else({status:ie,links:se}=W((()=>t?.signal?.aborted??!1),d,y,k,I.subarray(0,K),x.subarray(0,K),te.computationBudgetTime,te.idealEdgeLengthMultiplier,te.repulsionRadiusMultiplier));if(n(t?.signal),ie===B.Error)throw new s("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");if(ie===B.Canceled)throw l();for(let e=0;e<V.length;e++){if(k[e]>84.9999?k[e]=84.9999:k[e]<-84.9999&&(k[e]=-84.9999),y[e]>179.9999?y[e]=179.9999:y[e]<-179.9999&&(y[e]=-179.9999),V[e].feature.attributes[C]=new j(y[e],k[e]),m.has(V[e].typeName)){const t=m.get(V[e].typeName);t?.set(V[e].feature.attributes[L],V[e].feature)}else{const t=new Map;t.set(V[e].feature.attributes[L],V[e].feature),m.set(V[e].typeName,t)}u.set(V[e].feature.attributes[L],V[e].feature);const t=b(V[e].feature.attributes[C]);this.entityLinkChartDiagramLookup.set(V[e].feature.attributes[L],V[e].feature.attributes[C]?t:null);const i=o(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,V[e].typeName,(()=>({useAllData:!1,members:new Map})));o(i.members,V[e].feature.attributes[L],(()=>({id:V[e].feature.attributes[L],linkChartLocation:void 0}))).linkChartLocation=V[e].feature.attributes[C];const{x:s,y:r}=V[e].feature.attributes[C];if(Q)q.xmin=Math.min(q.xmin,s),q.xmax=Math.max(q.xmax,s),q.ymin=Math.min(q.ymin,r),q.ymax=Math.max(q.ymax,r);else{const e=1e-7;q.xmin=s-e,q.xmax=s+e,q.ymin=r-e,q.ymax=r+e,Q=!0}}if(this.linkChartExtent.xmin=q.xmin,this.linkChartExtent.xmax=q.xmax,this.linkChartExtent.ymin=q.ymin,this.linkChartExtent.ymax=q.ymax,!se)throw new s("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const re=new Map,oe=new Map,ae=new Map,ne=new Set;for(let i=0;i<p.length;i++){const s=[],a=p[i],n=a.feature.attributes[w],l=a.feature.attributes[M];let m=n+"-"+l;if("chronological-mono-timeline"===e||"chronological-multi-timeline"===e){const e=t?.timeInfoByTypeName?.get(a.typeName),i=t?.timeInfoByTypeName?e?.startField:null,s=i?a.feature.attributes[i]:null,r=e?.endField;m+="-"+s+"-"+(r?a.feature.attributes[r]:null)}const d=Y.get(m).get(a.typeName),y=0===d?0:se?.vertexEndIndex[d-1];if(!ne.has(d)){if(ne.add(d),se.types[d]===z.Recursive){const e=[se.vertices[2*y],se.vertices[2*y+1]],t=[se.vertices[2*(y+1)],se.vertices[2*(y+1)+1]],i=[.5*(e[0]+t[0]),.5*(e[1]+t[1])],r=[i[0]-e[0],i[1]-e[1]],o=[i[0]+r[1],i[1]-r[0]],a=[i[0]-r[1],i[1]+r[0]];s.push(e),s.push(o),s.push(t),s.push(a),s.push(e)}else{if(se.types[d]!==z.Regular){r.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let e=y;e<se.vertexEndIndex[d];e++)s.push([se.vertices[2*e],se.vertices[2*e+1]])}if("chronological-mono-timeline"!==e&&"chronological-multi-timeline"!==e){const e=V[c.get(n)]?.feature.attributes[C],t=V[c.get(l)]?.feature.attributes[C];s[0][0]===e.x&&s[0][1]===e.y||(s[0]=[e.x,e.y]),s[s.length-1][0]===t.x&&s[s.length-1][1]===t.y||(s[s.length-1]=[t.x,t.y])}for(let e=1;e<s.length-1;e++)s[e][1]>85.5?s[e][1]=85.5:s[e][1]<-85.5&&(s[e][1]=-85.5),s[e][0]>179.9999?s[e][0]=179.9999:s[e][0]<-179.9999&&(s[e][0]=-179.9999);re.has(m)?re.get(m).push(s):re.set(m,[s])}const g=re.get(m);oe.has(m)||(oe.set(m,new Map),ae.set(m,new Map));const j=oe.get(m),k=ae.get(m);j.has(a.typeName)||(j.set(a.typeName,g.shift()),k.set(a.typeName,0));const T=j.get(a.typeName);k.set(a.typeName,k.get(a.typeName)+1);const D=new f({paths:[T]});if(a.feature.attributes[C]=D,h.has(a.typeName)){const e=h.get(a.typeName);e?.set(a.feature.attributes[L],a.feature)}else{const e=new Map;e.set(a.feature.attributes[L],a.feature),h.set(a.typeName,e)}u.set(a.feature.attributes[L],a.feature);const S=b(a.feature.attributes[C]);this.relationshipLinkChartDiagramLookup.set(a.feature.attributes[L],a.feature.attributes[C]?S:null);const I=o(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,a.typeName,(()=>({useAllData:!1,members:new Map})));o(I.members,a.feature.attributes[L],(()=>({id:a.feature.attributes[L],linkChartLocation:void 0}))).linkChartLocation=S}for(const e of p)e.feature.attributes[T]=ae.get(e.feature.attributes[w]+"-"+e.feature.attributes[M])?.get(e.typeName)??null;return this._currentLinkChartConfig={layoutMode:e,layoutSettings:t?.layoutSettings?.clone()},{nodes:m,links:h,idMap:u}}async applyNewLinkChartLayout(e="organic-standard",t){const i=[];await this._calculateLayoutWithSublayerTimeInfo(e,t),this.layers.forEach((e=>{i.push(e.refreshCachedQueryEngine())})),this.membershipModified=!0,await Promise.all(i),this._refreshNamedTypes()}getCurrentNodeLocations(){const e=new Map;for(const[t,i]of this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.entries()??[])this.dataManager.relationshipTypeNames.has(t)||i?.members?.forEach((t=>{const i=t.linkChartLocation;let s;const r=t.id;i&&(s="x"in i?{x:i.x,y:i.y}:{x:i.coords[0],y:i.coords[1]},e.set(r,new j({x:s.x,y:s.y})))}));return e}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t),this._refreshNamedTypes()}async connectBetweenEntities(e,t){if(!e.length)return{records:[]};let i=[];try{let s=[];for(const e of this.dataManager.relationshipTypeNames){const t=this.sublayerIdsCache.get(e);t&&(s=s.concat(Array.from(t.keys())))}i=await this.dataManager.getRelationshipsBetweenNodes(e,s,t),await this._handleNewRecords(i,t),n(t)}catch(e){throw p(e)&&this.removeRecords(i),e}return{records:i}}async connectFromEntities(e,t){if(!e.length)return{records:[]};let i=[];try{let s=[];for(const e of this.dataManager.relationshipTypeNames){const t=this.sublayerIdsCache.get(e);t&&(s=s.concat(Array.from(t.keys())))}let r=[];for(const e of this.dataManager.entityTypeNames){const t=this.sublayerIdsCache.get(e);t&&(r=r.concat(Array.from(t)))}i=await this.dataManager.getRelationshipsFromNodes(e,r,s,t),await this._handleNewRecords(i,t),i.length>0&&(this.membershipModified=!0),n(t)}catch(e){throw p(e)&&this.removeRecords(i),e}return{records:i}}getCurrentLayout(){return this._currentLinkChartConfig.layoutMode}async _calculateLayoutWithSublayerTimeInfo(e="organic-standard",t){const i=new Map;this.layers.forEach((e=>{i.set(e.objectType.name,e.timeInfo)})),await this.calculateLinkChartLayout(e,{timeInfoByTypeName:i,...t}),this.linkChart?.handleChronologicalOverlay()}async _handleNewRecords(e,t){const i=new Set,s=[],r=this.layers.concat(this.tables);for(const t of e)this._graphTypeLookup.has(t.typeName)&&(!1===r.some((e=>e.objectType.name===t.typeName))&&(this.dataManager.sublayerCaches.set(t.typeName,new Map),i.add(t.typeName)),o(this.sublayerIdsCache,t.typeName,(()=>new Set)).add(t.id),s.push(t));this.dataManager.addToLayer(s);for(const e of i){const t=this._graphTypeLookup.get(e);if(t){const i=this._createSublayer(t);"entity"===t.type?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),i.geometryType?this.layers.push(i):this.tables.push(i)}}await x(this,Array.from(i),t),await this.dataManager.refreshCacheContent(e.map((e=>e.id)),void 0,void 0,void 0,t);const a={layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:new Map};for(const[e,t]of this.entityLinkChartDiagramLookup.entries())t&&a.lockedNodeLocations.set(e,new j(t.coords[0],t.coords[1]));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,a)}_createSublayers(e,t,i){e.forEach((e=>{const s=this._createSublayer(e);i(s)&&t.push(s),this._updateSublayerCaches(e)}))}_updateSublayers(e,t){t.forEach((t=>{t.parentCompositeLayer=this;const i=e.find((e=>e.type===t.graphType&&e.name===t.graphTypeName));i&&(t.objectType=i,t.read({title:i.name},{origin:"service"}),this._updateSublayerCaches(i))}))}_updateSublayerCaches({name:e}){if(!e)return;const t=this.dataManager.sublayerCaches;t.has(e)||t.set(e,new Map)}_layersLoadedFromAuthoritativeItem(){const e=this.originIdOf("layers");return e>=d.PORTAL_ITEM&&e<d.USER}async _initializeDiagram(){this.initializationLinkChartConfig?this.initializationLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{e?.members?.forEach((e=>{const i=e.linkChartLocation;let s;const r=e.id;if(!i)return;s="x"in i?{x:i.x,y:i.y}:{x:i.coords[0],y:i.coords[1]};const o=b(s);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(r,o):this.entityLinkChartDiagramLookup.set(r,o),this.linkChartExtent.xmin>s.x&&(this.linkChartExtent.xmin=s.x),this.linkChartExtent.xmax<s.x&&(this.linkChartExtent.xmax=s.x),this.linkChartExtent.ymin>s.y&&(this.linkChartExtent.ymin=s.y),this.linkChartExtent.ymax<s.y&&(this.linkChartExtent.ymax=s.y)}))})),this.memberRelationshipTypes.forEach((e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach((e=>{const t=this.relationshipLinkChartDiagramLookup.get(e.attributes[w]),i=this.relationshipLinkChartDiagramLookup.get(e.attributes[M]);if(t&&i){const s=b(new f({paths:[[[t.coords[0],t.coords[1]],[i.coords[0],i.coords[1]]]]}));this.relationshipLinkChartDiagramLookup.set(e.attributes[L],s)}else this.relationshipLinkChartDiagramLookup.set(e.attributes[L],null)}))}))):await this._calculateLayoutWithSublayerTimeInfo(this.initializationLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.initializationLinkChartConfig||{}}):await this._calculateLayoutWithSublayerTimeInfo("organic-standard",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateOrganicLayoutSettings(e,t){const i=e=>"number"==typeof e&&!isNaN(e),s=e=>i(e)&&e>=0,o={};if(!new Set(["organic-standard","organic-community","geographic-organic-standard","chronological-multi-timeline","chronological-mono-timeline"]).has(e)||!t)return o;const{computationBudgetTime:a,autoRepulsionRadius:n,repulsionRadiusMultiplier:p,absoluteIdealEdgeLength:l,multiplicativeIdealEdgeLength:m,idealEdgeLengthType:h}=t;var u,c,d;return i(u=a)&&u>=1?o.computationBudgetTime=a:a&&r.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),o.autoRepulsionRadius=n,!n&&i(c=p)&&c>=1?o.repulsionRadiusMultiplier=p:n||(o.autoRepulsionRadius=!0,r.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting")),"geographic-organic-standard"===e&&(d=h,Object.values(J).includes(d)?o.idealEdgeLengthType=h:void 0!==h&&r.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),"absolute-value"===h&&s(l)?o.absoluteIdealEdgeLength=l:"absolute-value"===h&&void 0!==l?r.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting"):"multiplier"===h&&s(m)?o.multiplicativeIdealEdgeLength=m:"multiplier"===h&&void 0!==m&&r.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),o}_convertValidatedOrganicSettingsToCalculationSettings(e){let t=e.idealEdgeLengthType===J.ABSOLUTE?e.absoluteIdealEdgeLength:e.multiplicativeIdealEdgeLength;return e.idealEdgeLengthType===J.ABSOLUTE&&(void 0===t?t=-1:t*=-1),{computationBudgetTime:e.computationBudgetTime??void 0,repulsionRadiusMultiplier:e.repulsionRadiusMultiplier&&!e.autoRepulsionRadius?e.repulsionRadiusMultiplier:void 0,idealEdgeLengthMultiplier:t}}_createSublayer(e){return new I({objectType:e,parentCompositeLayer:this,graphType:e.type})}_handleSublayersChange(e,t){t&&(t.forEach((e=>{e.parent=null})),this.removeHandles("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this})),this.addHandles([e.on("after-add",(({item:e})=>{e.parent=this})),e.on("after-remove",(({item:e})=>{e.parent=null}))],"sublayers-owner"))}_alignLayersDataModelAndInclusionDefinition(e){const t=new Set((e.entityTypes??[]).map((e=>e.name)).concat((e.relationshipTypes??[]).map((e=>e.name)))),s=new Set((e.entityTypes??[]).map((e=>e.name))),o=new Set((e.relationshipTypes??[]).map((e=>e.name)));if(this.layers){for(const e of this.layers)!e.graphType&&t.has(e.graphTypeName)&&(e.graphType=s.has(e.graphTypeName)?"entity":"relationship");const e=this.layers.filter((e=>t.has(e.graphTypeName)&&("entity"===e.graphType?s.has(e.graphTypeName):o.has(e.graphTypeName))));this.setAtOrigin("layers",e,y(this.originIdOf("layers")))}else this.layers=new i;if(this.layers&&this._originalInclusionList){const e=new Set(this._originalInclusionList.namedTypeDefinitions.keys()),t=this.tables?.map((e=>e.graphTypeName))??[],i=this.layers.map((e=>e.graphTypeName)).concat(t);for(const t of i)e.has(t)||this._originalInclusionList.namedTypeDefinitions.set(t,{useAllData:!1,members:new Map});const s=[];for(const e of this._originalInclusionList.namedTypeDefinitions.keys())i.includes(e)||(r.getLogger(this).warn(`A named type, ${e}, was in the serialized feature collection but did not have a sublayer config in the item, so will be removed`),s.push(e));for(const e of s)this._originalInclusionList.namedTypeDefinitions.delete(e)}}};e([u(W)],K.prototype,"url",void 0),e([u()],K.prototype,"dataPreloadedInLocalCache",void 0),e([u()],K.prototype,"initializationLinkChartConfig",void 0),e([u()],K.prototype,"membershipModified",void 0),e([u()],K.prototype,"dataManager",void 0),e([u()],K.prototype,"initializationInclusionModeDefinition",null),e([u()],K.prototype,"knowledgeGraph",void 0),e([u({type:i.ofType(I),json:{write:{ignoreOrigin:!0}}})],K.prototype,"layers",void 0),e([u({readOnly:!0})],K.prototype,"linkChart",null),e([u()],K.prototype,"entityLinkChartDiagramLookup",void 0),e([u()],K.prototype,"relationshipLinkChartDiagramLookup",void 0),e([u()],K.prototype,"linkChartExtent",void 0),e([u()],K.prototype,"memberEntityTypes",void 0),e([u()],K.prototype,"memberRelationshipTypes",void 0),e([u({type:["LinkChartLayer"]})],K.prototype,"operationalLayerType",void 0),e([u()],K.prototype,"sublayerIdsCache",void 0),e([u({type:i.ofType(I),json:{write:{ignoreOrigin:!0}}})],K.prototype,"tables",void 0),e([u({json:{read:!1}})],K.prototype,"type",void 0),e([u({json:{read:!1}})],K.prototype,"chronologicalAuxiliaryGraphics",void 0),K=e([c("esri.layers.LinkChartLayer")],K);const $=K;export{$ as default};
