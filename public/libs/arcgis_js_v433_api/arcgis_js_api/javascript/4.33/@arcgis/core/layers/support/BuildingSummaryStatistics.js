/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as s}from"../../chunks/tslib.es6.js";import t from"../../request.js";import r from"../../core/JSONSupport.js";import e from"../../core/Loadable.js";import{L as o}from"../../chunks/Logger.js";import i from"../../core/Promise.js";import{property as l}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import"../../config.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../core/Error.js";import"../../chunks/jsonUtils.js";import"../../chunks/MapUtils.js";import"../../core/promiseUtils.js";import"../../chunks/handleUtils.js";import"../../chunks/events.js";import"../../chunks/maybe.js";import"../../chunks/persistableUrlUtils.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/Lifecycle.js";import"../../chunks/metadata.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/Warning.js";import"../../chunks/ensureType.js";let p=class extends r{constructor(){super(...arguments),this.fieldName=null,this.modelName=null,this.label=null,this.min=null,this.max=null,this.mostFrequentValues=null,this.subLayerIds=null}};s([l({type:String})],p.prototype,"fieldName",void 0),s([l({type:String})],p.prototype,"modelName",void 0),s([l({type:String})],p.prototype,"label",void 0),s([l({type:Number})],p.prototype,"min",void 0),s([l({type:Number})],p.prototype,"max",void 0),s([l({json:{read:s=>Array.isArray(s)&&(s.every((s=>"string"==typeof s))||s.every((s=>"number"==typeof s)))?s.slice():null}})],p.prototype,"mostFrequentValues",void 0),s([l({type:[Number]})],p.prototype,"subLayerIds",void 0),p=s([n("esri.layers.support.BuildingSummaryStatistics.BuildingFieldStatistics")],p);let u=class extends(e.LoadableMixin(i.EsriPromiseMixin(r))){constructor(s){super(s),this.url=null,this.customParameters=null}get fields(){return this.loaded||"loading"===this.loadStatus?this._get("fields"):(o.getLogger(this).error("building summary statistics are not loaded"),null)}load(s){const t=null!=s?s.signal:null;return this.addResolvingPromise(this._fetchService(t)),Promise.resolve(this)}async _fetchService(s){const r=(await t(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:s})).data;this.read(r,{origin:"service"})}};s([l({constructOnly:!0,type:String})],u.prototype,"url",void 0),s([l({constructOnly:!0})],u.prototype,"customParameters",void 0),s([l({constructOnly:!0})],u.prototype,"apiKey",void 0),s([l({readOnly:!0,type:[p],json:{read:{source:"summary"}}})],u.prototype,"fields",null),u=s([n("esri.layers.support.BuildingSummaryStatistics")],u);export{u as default};
