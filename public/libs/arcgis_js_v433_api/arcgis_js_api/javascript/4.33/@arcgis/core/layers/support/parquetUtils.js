/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import e from"../../core/Collection.js";import t from"../../core/Error.js";import{J as r}from"../../chunks/jsonMap.js";import o from"../../geometry/SpatialReference.js";import s from"./Field.js";import{i}from"../../chunks/locationUtils.js";import n from"./ParquetEncodingLocation.js";import m from"./ParquetEncodingWkb.js";import{P as c}from"../../chunks/parquet.js";import"../../chunks/tslib.es6.js";import"../../chunks/watch.js";import"../../chunks/ObjectPool.js";import"../../chunks/handleUtils.js";import"../../core/lang.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../chunks/events.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/maybe.js";import"../../chunks/SetUtils.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/Lifecycle.js";import"../../chunks/tracking.js";import"../../chunks/SimpleTrackingTarget.js";import"../../core/Evented.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/metadata.js";import"../../chunks/ensureType.js";import"../../chunks/MapUtils.js";import"../../chunks/Warning.js";import"../../chunks/ObservableBase.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/jsonUtils.js";import"../../core/JSONSupport.js";import"../../chunks/unitUtils.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/persistableUrlUtils.js";import"../../chunks/writer.js";import"../../chunks/enumeration.js";import"../../chunks/reader.js";import"../../chunks/domains.js";import"./CodedValueDomain.js";import"./Domain.js";import"./InheritedDomain.js";import"./RangeDomain.js";import"../../chunks/fieldType.js";import"./fieldUtils.js";import"../../core/sql.js";import"../../chunks/guards.js";import"../../chunks/datetime.js";const p=new r({esriGeometryPoint:"point",esriGeometryPolygon:"polygon",esriGeometryPolyline:"polyline",esriGeometryMultipoint:"multipoint"});function u(e){return p.toJSON(e)}function a(t,r={}){return l({urls:new e(t)},r)}async function l(e,r={}){if(e.geometryType&&e.spatialReference&&e.encoding&&e.fields)return e;if(e.urls.length<1)throw new t("parquet:bad-input","At least one url must be specified",e);const p=e.metadata??await c.create(e.urls.getItemAt(0),(()=>r.customParameters)),u=p.tryReadGeoMetadata(),a={...e,metadata:p};if(null==a.fields&&(a.fields=p.fields.map((e=>s.fromJSON(e)))),null==a.encoding&&(a.encoding=function(e,t){if(null!=t){const r=t.primary_column,o=t.columns[r],s=e.tryReadEsriMetadata();return new m({primaryFieldName:r,orientation:o.orientation??null,multiscale:s?.multiscale})}const r=i(e.fields.map((e=>e.name)));return new n({latitudeFieldName:r.latitudeFieldName,longitudeFieldName:r.longitudeFieldName})}(p,u)),!a.encoding)return a;switch(a.encoding.type){case"location":null==a.spatialReference&&(a.spatialReference=o.WGS84),null==a.geometryType&&(a.geometryType="point");break;case"wkb":{if(!u)return a;const e=u.primary_column,r=u.columns[e];a.geometryType||(a.geometryType=function(e){const{geometry_types:r}=e,o=new Set;for(const e of r){const t=j(e);t&&o.add(t)}if(o.size>1)throw new t("unsupported","Parquet mixed geometry types are not support",{geometryTypes:o});return 1===o.size?o.values().next().value:void 0}(r)),a.spatialReference||(a.spatialReference=function(e){const t=e.crs?.id?.code;return t&&"number"==typeof t?new o({wkid:t}):void 0}(r))}}return a}function j(e){switch(e){case"Point":return"point";case"Polygon":case"MultiPolygon":return"polygon";case"LineString":return"polyline";case"MultiPoint":return"multipoint";default:return null}}export{l as completeParquetLayerInfo,a as getParquetLayerInfo,p as parquetGeometryTypeKebabDict,u as toParquetJSONGeometryType};
