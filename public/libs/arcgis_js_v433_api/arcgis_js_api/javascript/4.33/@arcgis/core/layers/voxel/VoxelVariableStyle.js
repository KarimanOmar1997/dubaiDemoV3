/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import o from"../../core/Collection.js";import s from"../../core/JSONSupport.js";import{clone as t}from"../../core/lang.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import{I as i}from"../../chunks/ensureType.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import n from"../../Color.js";import a from"../../core/Clonable.js";import u from"./VoxelTransferFunctionStyle.js";import"../../chunks/watch.js";import"../../chunks/ObjectPool.js";import"../../chunks/handleUtils.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/events.js";import"../../chunks/maybe.js";import"../../chunks/SetUtils.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/Lifecycle.js";import"../../chunks/tracking.js";import"../../chunks/SimpleTrackingTarget.js";import"../../core/Evented.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/metadata.js";import"../../chunks/ObservableBase.js";import"../../chunks/MapUtils.js";import"../../chunks/Warning.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/jsonUtils.js";import"../../chunks/colorUtils2.js";import"../../chunks/mathUtils.js";import"../../chunks/collectionUtils.js";let p=class extends(a.ClonableMixin(s)){constructor(){super(...arguments),this.color=n.fromArray([0,0,0,0]),this.value=0,this.enabled=!0,this.label="",this.colorLocked=!1}};e([r({type:n,json:{type:[i],write:{enabled:!0,isRequired:!0}}})],p.prototype,"color",void 0),e([r({type:Number,json:{write:{enabled:!0,isRequired:!0}}})],p.prototype,"value",void 0),e([r({type:Boolean,json:{default:!0,write:!0}})],p.prototype,"enabled",void 0),e([r({type:String,json:{write:!0}})],p.prototype,"label",void 0),e([r({type:Boolean,json:{default:!1,write:!0}})],p.prototype,"colorLocked",void 0),p=e([l("esri.layers.voxel.VoxelIsosurface")],p);let c=class extends(a.ClonableMixin(s)){constructor(){super(...arguments),this.color=n.fromArray([0,0,0,0]),this.value=0,this.enabled=!0,this.label=""}};var h;e([r({type:n,json:{type:[i],write:{enabled:!0,isRequired:!0}}})],c.prototype,"color",void 0),e([r({type:i,json:{write:{enabled:!0,isRequired:!0}}})],c.prototype,"value",void 0),e([r({type:Boolean,json:{default:!0,write:!0}})],c.prototype,"enabled",void 0),e([r({type:String,json:{write:!0}})],c.prototype,"label",void 0),c=e([l("esri.layers.voxel.VoxelUniqueValue")],c);let m=h=class extends s{constructor(e){super(e),this.variableId=0,this.label="",this.transferFunction=null,this.uniqueValues=null,this.isosurfaces=null,this.uniqueValues=new(o.ofType(c)),this.isosurfaces=new(o.ofType(p))}clone(){return new h({variableId:this.variableId,label:this.label,transferFunction:t(this.transferFunction),uniqueValues:t(this.uniqueValues),isosurfaces:t(this.isosurfaces)})}};e([r({type:i,json:{write:{enabled:!0,isRequired:!0}}})],m.prototype,"variableId",void 0),e([r({type:String,json:{write:!0}})],m.prototype,"label",void 0),e([r({type:u,json:{write:{enabled:!0,overridePolicy(){return{enabled:!this.uniqueValues||this.uniqueValues.length<1}}}}})],m.prototype,"transferFunction",void 0),e([r({type:o.ofType(c),json:{write:{enabled:!0,overridePolicy(){return{enabled:!!this.uniqueValues&&this.uniqueValues.length>0}}}}})],m.prototype,"uniqueValues",void 0),e([r({type:o.ofType(p),json:{write:{enabled:!0,overridePolicy(){const e=!this.uniqueValues||this.uniqueValues.length<1,o=!!this.isosurfaces&&this.isosurfaces.length>0;return{enabled:e&&o}}}}})],m.prototype,"isosurfaces",void 0),m=h=e([l("esri.layers.voxel.VoxelVariableStyle")],m);export{m as default};
