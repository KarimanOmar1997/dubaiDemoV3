/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import e from"../Color.js";import{clone as s}from"../core/lang.js";import{t as i}from"../chunks/screenUtils.js";import{property as r}from"../core/accessorSupport/decorators/property.js";import"../chunks/Logger.js";import{e as o}from"../chunks/enumeration.js";import{subclass as n}from"../core/accessorSupport/decorators/subclass.js";import{collectField as p,collectArcadeFieldNames as l}from"../layers/support/fieldUtils.js";import m from"./Renderer.js";import a from"./support/AuthoringInfo.js";import u from"./support/HeatmapColorStop.js";import c from"../core/Clonable.js";import y from"../core/JSONSupport.js";import{k as h,g as j,m as d}from"../chunks/heatmapUtils.js";import g from"../symbols/SimpleMarkerSymbol.js";import"../chunks/colorUtils2.js";import"../chunks/mathUtils.js";import"../chunks/ensureType.js";import"../chunks/MapUtils.js";import"../config.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../core/Error.js";import"../chunks/jsonMap.js";import"../chunks/Lifecycle.js";import"../chunks/tracking.js";import"../chunks/Warning.js";import"../chunks/SetUtils.js";import"../core/sql.js";import"../chunks/maybe.js";import"../chunks/guards.js";import"../chunks/datetime.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../core/promiseUtils.js";import"../chunks/events.js";import"../chunks/SimpleTrackingTarget.js";import"../chunks/reader.js";import"./support/AuthoringInfoVisualVariable.js";import"../core/accessorSupport/decorators/cast.js";import"../chunks/colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../chunks/vec4.js";import"../chunks/common.js";import"../chunks/vec4f64.js";import"../chunks/writer.js";import"../symbols/MarkerSymbol.js";import"../symbols/Symbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"../chunks/lineMarkers.js";let b=class extends(c.ClonableMixin(y)){constructor(){super(...arguments),this.minLabel=null,this.maxLabel=null,this.title=null}};var x;function f(t){if(null!=t){const{maxDensity:e,minDensity:s,radius:i}=t;if(null!=e||null!=s||null!=i){const{blurRadius:e,maxPixelIntensity:s,minPixelIntensity:i,...r}=t;return r}}return t}t([r({type:String,json:{write:!0}})],b.prototype,"minLabel",void 0),t([r({type:String,json:{write:!0}})],b.prototype,"maxLabel",void 0),t([r({type:String,json:{write:!0}})],b.prototype,"title",void 0),b=t([n("esri.renderers.support.HeatmapLegendOptions")],b);let k=x=class extends m{constructor(t){super(t),this.authoringInfo=null,this.colorStops=[new u({ratio:0,color:new e("rgba(255, 140, 0, 0)")}),new u({ratio:.75,color:new e("rgba(255, 140, 0, 1)")}),new u({ratio:.9,color:new e("rgba(255, 0,   0, 1)")})],this.field=null,this.legendOptions=null,this.maxDensity=.04,this.minDensity=0,this.radius=18,this.referenceScale=0,this.type="heatmap",this.valueExpression=null,this.valueExpressionTitle=null}normalizeCtorArgs(t){return f(t)}get blurRadius(){return h(this.radius)}set blurRadius(t){const e=this.maxPixelIntensity,s=this.minPixelIntensity;this._set("radius",j(t)),this._set("maxDensity",e*this._pixelIntensityToDensity),this._set("minDensity",s*this._pixelIntensityToDensity)}get maxPixelIntensity(){return this.maxDensity/this._pixelIntensityToDensity}set maxPixelIntensity(t){this._set("maxDensity",t*this._pixelIntensityToDensity)}get minPixelIntensity(){return this.minDensity/this._pixelIntensityToDensity}set minPixelIntensity(t){this._set("minDensity",t*this._pixelIntensityToDensity)}get _pixelIntensityToDensity(){return 24/(d**2*this.blurRadius**4)}read(t,e){t=f(t),super.read(t,e)}getSymbol(){return new g}async getSymbolAsync(){return this.getSymbol()}get symbols(){return[this.getSymbol()]}async collectRequiredFields(t,e){const s=this.field,i=this.valueExpression;s&&"string"==typeof s&&p(t,e,s),i&&"string"==typeof i&&await l(t,e,i)}getAttributeHash(){return""}getMeshHash(){return`${JSON.stringify(this.colorStops)}.${this.blurRadius}.${this.field}`}clone(){return new x({authoringInfo:this.authoringInfo&&this.authoringInfo.clone(),colorStops:s(this.colorStops),field:this.field,legendOptions:s(this.legendOptions),maxDensity:this.maxDensity,minDensity:this.minDensity,radius:this.radius,referenceScale:this.referenceScale,valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle})}};t([r({type:a,json:{write:!0,origins:{"web-scene":{write:!1,read:!1}}}})],k.prototype,"authoringInfo",void 0),t([r({type:Number,json:{origins:{"portal-item":{write:!0},"web-map":{write:!0}}}})],k.prototype,"blurRadius",null),t([r({type:[u],json:{write:{isRequired:!0}}})],k.prototype,"colorStops",void 0),t([r({type:String,json:{write:!0}})],k.prototype,"field",void 0),t([r({type:b,json:{write:!0}})],k.prototype,"legendOptions",void 0),t([r({type:Number,json:{write:!0}})],k.prototype,"maxDensity",void 0),t([r({type:Number,json:{origins:{"portal-item":{write:!0},"web-map":{write:!0}}}})],k.prototype,"maxPixelIntensity",null),t([r({type:Number,json:{write:!0}})],k.prototype,"minDensity",void 0),t([r({type:Number,json:{origins:{"portal-item":{write:!0},"web-map":{write:!0}}}})],k.prototype,"minPixelIntensity",null),t([r({type:Number,cast:i,json:{write:!0}})],k.prototype,"radius",void 0),t([r({type:Number,range:{min:0},json:{default:0,write:!0}})],k.prototype,"referenceScale",void 0),t([o({heatmap:"heatmap"})],k.prototype,"type",void 0),t([r({type:String,json:{write:!0,origins:{"web-document":{write:!1},"portal-item":{write:!1}}}})],k.prototype,"valueExpression",void 0),t([r({type:String})],k.prototype,"valueExpressionTitle",void 0),t([r({readOnly:!0})],k.prototype,"_pixelIntensityToDensity",null),k=x=t([n("esri.renderers.HeatmapRenderer")],k);export{k as default};
