/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import e from"../request.js";import t from"../core/Error.js";import{L as r}from"../chunks/Logger.js";import{g as o}from"../config.js";import{removeTrailingSlash as s}from"../core/urlUtils.js";import{a as i,p as a}from"../chunks/utils10.js";import{_ as n}from"../chunks/tslib.es6.js";import l from"../core/JSONSupport.js";import{property as u}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import{e as p}from"../chunks/enumeration.js";import{r as c}from"../chunks/reader.js";import{subclass as d}from"../core/accessorSupport/decorators/subclass.js";import{w as m}from"../chunks/writer.js";import{i as h,m as v,B as f,C as y,h as g}from"../chunks/networkEnums.js";import k from"./support/TravelMode.js";import"../kernel.js";import"../chunks/jsonUtils.js";import"../chunks/MapUtils.js";import"../core/promiseUtils.js";import"../chunks/handleUtils.js";import"../chunks/events.js";import"../chunks/maybe.js";import"../chunks/persistableUrlUtils.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/get.js";import"../chunks/utils.js";import"../chunks/Lifecycle.js";import"../chunks/metadata.js";import"../chunks/ObjectPool.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../chunks/watch.js";import"../core/scheduling.js";import"../chunks/nextTick.js";import"../chunks/PooledArray.js";import"../chunks/SetUtils.js";import"../chunks/SimpleTrackingTarget.js";import"../chunks/ensureType.js";import"../chunks/jsonMap.js";import"../chunks/Warning.js";import"../core/Clonable.js";let j=class extends l{constructor(e){super(e),this.dataType=null,this.name=null,this.parameterNames=null,this.restrictionUsageParameterName=null,this.timeNeutralAttributeName=null,this.trafficSupport=null,this.units=null,this.usageType=null}};n([u({type:String})],j.prototype,"dataType",void 0),n([p(h,{ignoreUnknown:!1})],j.prototype,"name",void 0),n([u({type:[String]})],j.prototype,"parameterNames",void 0),n([u({type:String})],j.prototype,"restrictionUsageParameterName",void 0),n([p(v,{ignoreUnknown:!1})],j.prototype,"timeNeutralAttributeName",void 0),n([u({type:String})],j.prototype,"trafficSupport",void 0),n([p(f)],j.prototype,"units",void 0),n([p(y)],j.prototype,"usageType",void 0),j=n([d("esri.rest.support.NetworkAttribute")],j);const T=j;let w=class extends l{constructor(e){super(e),this.buildTime=null,this.name=null,this.networkAttributes=null,this.networkSources=null,this.state=null}};n([u({type:Number})],w.prototype,"buildTime",void 0),n([u({type:String})],w.prototype,"name",void 0),n([u({type:[T]})],w.prototype,"networkAttributes",void 0),n([u()],w.prototype,"networkSources",void 0),n([u({type:String})],w.prototype,"state",void 0),w=n([d("esri.rest.support.NetworkDataset")],w);const M=w;let b=class extends l{constructor(e){super(e),this.accumulateAttributeNames=null,this.attributeParameterValues=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(e){return null==e?null:e.map((e=>h.fromJSON(e)))}writeAccumulateAttributes(e,t,r){e?.length&&(t[r]=e.map((e=>h.toJSON(e))))}get capabilities(){return{supportsNow:(this.currentVersion??10)>=10.81}}readDefaultTravelMode(e,t){const r=t.supportedTravelModes?.find((({id:e})=>e===t.defaultTravelMode))??t.supportedTravelModes?.find((({itemId:e})=>e===t.defaultTravelMode));return r?k.fromJSON(r):null}};function S(e,t,r,o){o[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}function N(e,t){for(let r=0;r<t.length;r++){const o=e[t[r]];if(o&&o.length)for(const e of o)e.z=void 0}r.getLogger("esri.rest.networkService").warnOnce("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function A(e,t){for(let r=0;r<t.length;r++){const o=e[t[r]];if(o&&o.length)for(const e of o)if(null!=e&&e.hasZ)return!0}return!1}async function U(r,n,l){if(!r)throw new t("network-service:missing-url","Url to Network service is missing");const u=i({f:"json",token:n},l),{data:p}=await e(r,u),c=p.currentVersion>=10.4?async function(r,o,a){try{const t=i({f:"json",token:o},a),n=s(r)+"/retrieveTravelModes",{data:{supportedTravelModes:l,defaultTravelMode:u}}=await e(n,t);return{supportedTravelModes:l,defaultTravelMode:u}}catch(e){throw new t("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:e})}}(r,n,l):async function(t,r){const n=i({f:"json"},r),{data:l}=await e(t.replace(/\/rest\/.*$/i,"/info"),n);if(!l?.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:u}=l,p=s(u)+"/sharing/rest/portals/self",{data:c}=await e(p,n),d=o("helperServices.routingUtilities.url",c);if(!d)return{supportedTravelModes:[],defaultTravelMode:null};const m=a(u),h=/\/solve$/i.test(m.path)?"Route":/\/solveclosestfacility$/i.test(m.path)?"ClosestFacility":"ServiceAreas",v=i({f:"json",serviceName:h},r),f=s(d)+"/GetTravelModes/execute",y=await e(f,v),g=[];let k=null;if(y?.data?.results?.length){const e=y.data.results;for(const t of e)if("supportedTravelModes"===t.paramName){if(t.value?.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);g.push(t)}}else"defaultTravelMode"===t.paramName&&(k=t.value)}return{supportedTravelModes:g,defaultTravelMode:k}}(r,l),{defaultTravelMode:d,supportedTravelModes:m}=await c;return p.defaultTravelMode=d,p.supportedTravelModes=m,b.fromJSON(p)}n([u()],b.prototype,"accumulateAttributeNames",void 0),n([c("accumulateAttributeNames")],b.prototype,"readAccumulateAttributes",null),n([m("accumulateAttributeNames")],b.prototype,"writeAccumulateAttributes",null),n([u()],b.prototype,"attributeParameterValues",void 0),n([u()],b.prototype,"capabilities",null),n([u()],b.prototype,"currentVersion",void 0),n([u()],b.prototype,"defaultTravelMode",void 0),n([c("defaultTravelMode",["defaultTravelMode","supportedTravelModes"])],b.prototype,"readDefaultTravelMode",null),n([u()],b.prototype,"directionsLanguage",void 0),n([p(g)],b.prototype,"directionsLengthUnits",void 0),n([u()],b.prototype,"directionsSupportedLanguages",void 0),n([p(v,{ignoreUnknown:!1})],b.prototype,"directionsTimeAttribute",void 0),n([u()],b.prototype,"hasZ",void 0),n([p(h,{ignoreUnknown:!1})],b.prototype,"impedance",void 0),n([u({type:M})],b.prototype,"networkDataset",void 0),n([u({type:[k]})],b.prototype,"supportedTravelModes",void 0),b=n([d("esri.rest.support.NetworkServiceDescription")],b);export{S as collectGeometries,N as dropZValuesOffInputGeometry,U as fetchServiceDescription,A as isInputGeometryZAware};
