/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{d as e}from"../../chunks/colorUtils.js";import i from"../../core/Error.js";import{a as s,t as r}from"../../chunks/screenUtils.js";import{e as t}from"../../chunks/ensureType.js";import{f as o}from"../../chunks/messages.js";import n from"../../renderers/ClassBreaksRenderer.js";import a from"../../renderers/support/AuthoringInfo.js";import l,{A as p}from"../../renderers/support/AuthoringInfoVisualVariable.js";import{setLabelsForClassBreaks as m}from"../../renderers/support/utils.js";import u,{S as c,c as d}from"../../renderers/visualVariables/SizeVariable.js";import y from"../../renderers/visualVariables/support/SizeStop.js";import{T as f}from"../../chunks/visualVariableUtils.js";import{a as h}from"../../chunks/ageUnit.js";import{b,e as j,o as v,d as z,h as w,u as g,v as k,q as S,g as x,i as V,j as T,k as E,a as I}from"../../chunks/utils21.js";import{a as U}from"../../chunks/extentUtils.js";import{s as O}from"../../chunks/spatialStatistics.js";import{v as B}from"../../chunks/binningUtils.js";import{b as F,f as R,c as D,g as C}from"../../chunks/layerUtils3.js";import q from"../heuristics/sizeRange.js";import{getTypeSchemeData as M}from"./type.js";import{c as P,u as G,a as L}from"../../chunks/referenceSizeUtils.js";import{i as A,k as W,s as N,u as $,p as H,g as Q,a as Z,b as J,h as X,e as Y,c as K}from"../../chunks/regenerateUtils.js";import{createPrimitiveOverrides as _,updateSpikeSymbol as ee,createSpikeSymbol as ie,defaultSpikeSymbolStyle as se}from"./support/spikeUtils.js";import{verifyDates as re,supportedAgeUnits as te}from"../statistics/support/ageUtils.js";import{d as oe,i as ne,b as ae}from"../../chunks/utils14.js";import{cloneScheme as le,getSchemes as pe}from"../symbology/size.js";import{e as me}from"../../chunks/utils4.js";import"../../Color.js";import"../../chunks/colorUtils2.js";import"../../chunks/mathUtils.js";import"../../core/lang.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/MapUtils.js";import"../../chunks/vec4.js";import"../../chunks/common.js";import"../../chunks/vec4f64.js";import"../../chunks/handleUtils.js";import"../../core/promiseUtils.js";import"../../chunks/events.js";import"../../chunks/maybe.js";import"../../chunks/locale.js";import"../../chunks/tslib.es6.js";import"../../chunks/jsonMap.js";import"../../core/accessorSupport/decorators/property.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/metadata.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/enumeration.js";import"../../chunks/reader.js";import"../../core/accessorSupport/decorators/subclass.js";import"../../chunks/Lifecycle.js";import"../../chunks/tracking.js";import"../../chunks/Warning.js";import"../../chunks/writer.js";import"../../layers/support/fieldUtils.js";import"../../chunks/SetUtils.js";import"../../core/sql.js";import"../../chunks/guards.js";import"../../chunks/datetime.js";import"../../renderers/Renderer.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/colorRamps.js";import"../../rest/support/AlgorithmicColorRamp.js";import"../../rest/support/ColorRamp.js";import"../../rest/support/MultipartColorRamp.js";import"../../renderers/mixins/VisualVariablesMixin.js";import"../../renderers/visualVariables/ColorVariable.js";import"../../renderers/visualVariables/VisualVariable.js";import"../../core/Clonable.js";import"../../renderers/visualVariables/support/ColorStop.js";import"../../renderers/visualVariables/OpacityVariable.js";import"../../renderers/visualVariables/support/OpacityStop.js";import"../../chunks/opacityUtils.js";import"../../renderers/visualVariables/RotationVariable.js";import"../../Graphic.js";import"../../PopupTemplate.js";import"../../core/Collection.js";import"../../core/Evented.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/jsonUtils.js";import"../../popup/content.js";import"../../popup/content/AttachmentsContent.js";import"../../popup/content/Content.js";import"../../popup/support/AttachmentsOrderByInfo.js";import"../../popup/content/CustomContent.js";import"../../popup/content/ExpressionContent.js";import"../../popup/ElementExpressionInfo.js";import"../../popup/content/FieldsContent.js";import"../../popup/FieldInfo.js";import"../../popup/support/FieldInfoFormat.js";import"../../chunks/date.js";import"../../chunks/constants.js";import"../../popup/content/MediaContent.js";import"../../popup/content/BarChartMediaInfo.js";import"../../popup/content/mixins/ChartMediaInfo.js";import"../../popup/content/mixins/MediaInfo.js";import"../../popup/content/support/ChartMediaInfoValue.js";import"../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../chunks/chartMediaInfoUtils.js";import"../../popup/content/ColumnChartMediaInfo.js";import"../../popup/content/ImageMediaInfo.js";import"../../popup/content/support/ImageMediaInfoValue.js";import"../../popup/content/LineChartMediaInfo.js";import"../../popup/content/PieChartMediaInfo.js";import"../../popup/content/RelationshipContent.js";import"../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../popup/content/TextContent.js";import"../../popup/content/UtilityNetworkAssociationsContent.js";import"../../popup/support/UtilityNetworkAssociationType.js";import"../../popup/ExpressionInfo.js";import"../../popup/LayerOptions.js";import"../../popup/RelatedRecordsInfo.js";import"../../support/actions/ActionBase.js";import"../../core/Identifiable.js";import"../../support/actions/ActionButton.js";import"../../support/actions/ActionToggle.js";import"../../core/reactiveUtils.js";import"../../geometry/support/jsonUtils.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/persistableUrlUtils.js";import"../../geometry/Point.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../geometry/Polyline.js";import"../../chunks/boundsUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/typeUtils2.js";import"../../chunks/createFeatureId.js";import"../../chunks/typeUtils.js";import"../../symbols/CIMSymbol.js";import"../../symbols/Symbol.js";import"../../symbols/LabelSymbol3D.js";import"../../symbols/Symbol3D.js";import"../../chunks/collectionUtils.js";import"../../portal/Portal.js";import"../../core/Loadable.js";import"../../core/Promise.js";import"../../portal/PortalGroup.js";import"../../portal/PortalQueryParams.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalUser.js";import"../../portal/PortalFolder.js";import"../../symbols/ExtrudeSymbol3DLayer.js";import"../../symbols/Symbol3DLayer.js";import"../../chunks/utils5.js";import"../../symbols/edges/Edges3D.js";import"../../chunks/materialUtils.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";import"../../chunks/Symbol3DMaterial.js";import"../../symbols/FillSymbol3DLayer.js";import"../../symbols/patterns/LineStylePattern3D.js";import"../../symbols/patterns/StylePattern3D.js";import"../../chunks/utils6.js";import"../../chunks/colors.js";import"../../chunks/symbolLayerUtils3D.js";import"../../chunks/vec3f64.js";import"../../chunks/aaBoundingBox.js";import"../../symbols/IconSymbol3DLayer.js";import"../../symbols/LineSymbol3DLayer.js";import"../../symbols/LineStyleMarker3D.js";import"../../chunks/lineMarkers.js";import"../../symbols/ObjectSymbol3DLayer.js";import"../../symbols/PathSymbol3DLayer.js";import"../../symbols/TextSymbol3DLayer.js";import"../../symbols/Font.js";import"../../symbols/WaterSymbol3DLayer.js";import"../../symbols/support/StyleOrigin.js";import"../../chunks/Thumbnail.js";import"../../chunks/calloutUtils.js";import"../../symbols/callouts/Callout3D.js";import"../../symbols/callouts/LineCallout3D.js";import"../../symbols/support/Symbol3DVerticalOffset.js";import"../../symbols/LineSymbol3D.js";import"../../symbols/MeshSymbol3D.js";import"../../symbols/PictureFillSymbol.js";import"../../symbols/FillSymbol.js";import"../../symbols/SimpleLineSymbol.js";import"../../symbols/LineSymbol.js";import"../../symbols/LineSymbolMarker.js";import"../../chunks/urlUtils.js";import"../../symbols/PictureMarkerSymbol.js";import"../../symbols/MarkerSymbol.js";import"../../symbols/PointSymbol3D.js";import"../../symbols/PolygonSymbol3D.js";import"../../symbols/SimpleFillSymbol.js";import"../../symbols/SimpleMarkerSymbol.js";import"../../symbols/TextSymbol.js";import"../../symbols/WebStyleSymbol.js";import"../../chunks/lengthUtils.js";import"../../renderers/support/ClassBreakInfo.js";import"../../chunks/commonProperties2.js";import"../../symbols/support/jsonUtils.js";import"../../chunks/layerUtils.js";import"../../layers/catalog/catalogUtils.js";import"../../chunks/defaults.js";import"../../chunks/defaultsJSON.js";import"../../chunks/RendererLegendOptions.js";import"../../chunks/numberUtils.js";import"../../intl.js";import"../../chunks/number2.js";import"../../chunks/substitute.js";import"../../chunks/colorRampUtils2.js";import"../../chunks/utils17.js";import"../../chunks/timeUtils.js";import"../../chunks/basemapUtils.js";import"../../chunks/utils2.js";import"../../chunks/mat4.js";import"../../chunks/basemapDefinitions.js";import"../../chunks/timeZoneUtils.js";import"../../renderers/support/HeatmapColorStop.js";import"../../chunks/asyncUtils.js";import"../../chunks/jsonUtils2.js";import"../../chunks/parser.js";import"../../symbols/support/cimSymbolUtils.js";import"../../chunks/utils3.js";import"../../chunks/defaultCIMValues.js";import"../../chunks/enums2.js";import"../../chunks/gfxUtils.js";import"../../chunks/LRUCache.js";import"../../chunks/MemCache.js";import"../statistics/summaryStatisticsForAge.js";import"../statistics/summaryStatistics.js";import"../../chunks/utils13.js";import"../../chunks/quantizationUtils.js";import"../../chunks/heatmapUtils.js";import"../../chunks/utils12.js";import"../../chunks/generateRendererUtils.js";import"../../core/workers/workers.js";import"../../core/workers/Connection.js";import"../../chunks/Queue.js";import"../../core/workers/RemoteClient.js";import"../../renderers/support/jsonUtils.js";import"../../chunks/typeUtils3.js";import"../../renderers/DictionaryRenderer.js";import"../../chunks/DictionaryScriptEvaluator.js";import"../../chunks/Version.js";import"../../layers/support/FieldsIndex.js";import"../../chunks/UnknownTimeZone.js";import"../../chunks/ArcadeExpression.js";import"../../chunks/TimeOnly.js";import"../../chunks/enum.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/support/AttributeColorInfo.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/PieChartRenderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/UniqueValueRenderer.js";import"../../chunks/diffUtils.js";import"../../renderers/support/UniqueValue.js";import"../../renderers/support/UniqueValueClass.js";import"../../renderers/support/UniqueValueGroup.js";import"../../renderers/support/UniqueValueInfo.js";import"../../chunks/styleUtils.js";import"../../chunks/utils10.js";import"../../chunks/DataLayerSource.js";import"../../layers/support/Field.js";import"../../chunks/domains.js";import"../../layers/support/CodedValueDomain.js";import"../../layers/support/Domain.js";import"../../layers/support/InheritedDomain.js";import"../../layers/support/RangeDomain.js";import"../../chunks/fieldType.js";import"../../chunks/executeQueryJSON.js";import"../../chunks/query.js";import"../../geometry/support/normalizeUtils.js";import"../../chunks/normalizeUtilsCommon.js";import"../../chunks/simplify.js";import"../../chunks/utils11.js";import"../../chunks/pbfQueryUtils.js";import"../../chunks/pbf.js";import"../../chunks/memoryEstimations.js";import"../../chunks/OptimizedGeometry.js";import"../../chunks/OptimizedFeature.js";import"../../chunks/OptimizedFeatureSet.js";import"../../chunks/queryZScale.js";import"../../chunks/zscale.js";import"../../rest/support/FeatureSet.js";import"../../rest/support/Query.js";import"../../chunks/FullTextSearch.js";import"../../chunks/spatialRelationships.js";import"../../rest/support/StatisticDefinition.js";import"../../time/TimeExtent.js";import"../statistics/support/predominanceUtils.js";import"../../chunks/statsWorker.js";import"../../rest/support/AttributeBinsQuery.js";import"../../chunks/queryUtils.js";import"../../chunks/projectionUtils.js";import"../../chunks/projectBuffer.js";import"../../chunks/geodesicConstants.js";import"../../chunks/projectXYZToVector.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/projectionSupport.js";import"../../chunks/json.js";import"../../rest/support/AutoIntervalBinParameters.js";import"../../rest/support/BinParametersBase.js";import"../../rest/support/AttributeBinsGrouping.js";import"../../rest/support/NormalizationBinParametersMixin.js";import"../../rest/support/DateBinParameters.js";import"../../rest/support/DateBinTimeInterval.js";import"../../rest/support/FixedBoundariesBinParameters.js";import"../../rest/support/FixedIntervalBinParameters.js";import"../../chunks/utils18.js";import"../../chunks/viewpointUtils.js";import"../../Viewpoint.js";import"../../Camera.js";import"../../CameraLayout.js";import"../../chunks/Cyclical.js";import"../../chunks/mat2d.js";import"../../chunks/mat2df64.js";import"../../chunks/vec2.js";import"../../chunks/vec2f64.js";import"../../chunks/PointSizeSplatAlgorithm.js";import"../../chunks/scaleUtils.js";import"../statistics/classBreaks.js";import"../../views/support/colorUtils.js";import"../heuristics/scaleRange.js";import"../../renderers/PointCloudUniqueValueRenderer.js";import"../../renderers/PointCloudRenderer.js";import"../statistics/uniqueValues.js";import"../symbology/type.js";import"../../chunks/colors2.js";import"../../chunks/symbologyUtils.js";import"../../chunks/utils22.js";function ue(e){let i=0;for(const s of e)i+=s;return i/e.length}function ce(e,i){const s=i??ue(e),r=e.reduce(((e,i)=>e+(i-s)**2),0);return Math.sqrt(r/e.length)}async function de(e){const r=await async function(e){const{view:s}=e;if(!(e&&s&&e.layer))throw new i("reference-size:missing-parameters","'view' and 'layer' parameters are required");e.forBinning&&B(e,"reference-size");const{layer:r,...t}=e,o=e.forBinning?F:R,n=D(r,o,e.forBinning);if(!n)throw new i("reference-size:invalid-parameters","'reference-size' must be one of these types: "+C(o).join(", "));const a={layerAdapter:n,...t,view:s};await s.when();const l=null!=a.signal?{signal:a.signal}:null;if(await n.load(l),!e.forBinning&&"polygon"!==n.geometryType)throw new i("reference-size:not-supported",`reference-size is not supported for geometryType: ${n.geometryType}`);return a}(e),t=await r.layerAdapter.getSampleFeatures({sampleSize:-1,returnGeometry:!0,...r},"json");if(!t?.length)throw new i("reference-size:insufficient-info","No features are available to calculate statistics");return async function(e,r){const{view:t}=r;if(r.forBinning){const r=e[Math.floor(e.length/2)].geometry,o=U(r);if(!o)throw new i("reference-size:insufficient-info","Extent is invalid");const n=Math.abs(o.xmax-o.xmin),a=Math.abs(o.ymax-o.ymin),l=Math.min(n,a);return{size:s(l/t.resolution),isGrid:!0}}const{isGrid:o,avgSize:n}=await async function(e,s){const r=await O({features:e,geometryType:s});if(!(r&&"avgSize"in r&&r.avgSize))throw new i("reference-size:insufficient-info","average polygon size is invalid");const t=r.avgSize,o=[],n=[];for(const i of e){const e=U(i.geometry);if(!e){o.push(0),n.push(0);continue}const s=Math.abs(e.xmax-e.xmin),r=Math.abs(e.ymax-e.ymin);o.push(s/r),n.push(Math.sqrt(s*r))}const a=Number(ue(o).toFixed(2)),l=Number(ce(o,a).toFixed(2)),p=ce(n),m=Number((p/t).toFixed(2));return{isGrid:l<=.1&&a>=.75&&a<=1.25&&m<=.1,avgSize:t}}(e,r.layerAdapter.geometryType);return{size:s((o?.9*n:.75*n)/t.resolution),isGrid:o}}(t,r)}const ye=2**53-1,fe=[5,112.5];async function he(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new i("size-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new i("size-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");if("reference-size"===e.theme&&!e.view&&!e.field)throw new i("size-visual-variable:missing-parameters","'view' and 'field' are required when 'theme' is 'reference-size'");if("reference-size"===e.theme&&e.valueExpression)throw new i("size-visual-variable:missing-parameters","'valueExpression' is not supported when 'theme' is 'reference-size'");e.forBinning&&B(e,"size-visual-variable");const s={...e},r=e.forBinning?F:R,t=D(s.layer,r,e.forBinning);if(!t)throw new i("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+C(r).join(", "));"height"===s.axis&&(s.sizeOptimizationEnabled=!1);const o=null!=s.signal?{signal:s.signal}:null;await t.load(o);const n=t.geometryType;if("mesh"===n)throw new i("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(s.worldScale){if("polyline"===n||"polygon"===n)throw new i("size-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers");if(!s.view||"3d"!==s.view.type)throw new i("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true")}if("reference-size"===s.theme&&!e.forBinning&&"polygon"!==n)throw new i("size-visual-variable:invalid-parameters","Reference size is only supported for polygon layers");if("spike"===s.theme&&!e.forBinning&&"polygon"!==n&&"point"!==n)throw new i("size-visual-variable:invalid-parameters","Spike is only supported for point and polygon layers");const a=await oe({field:s.field,normalizationField:s.normalizationField,valueExpression:s.valueExpression}),l=k(t,a,"size-visual-variable:invalid-parameters");if(l)throw l;return"spike"!==s.theme||s.spikeOptions?.symbolStyle||(s.spikeOptions??={},s.spikeOptions.symbolStyle=se),await je(s),{...s,layer:t}}async function be(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new i("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new i("size-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&B(e,"size-continuous-renderer");const s={...e};s.symbolType=s.symbolType||"2d",s.defaultSymbolEnabled??=!0;const r=e.forBinning?F:R,t=D(s.layer,r,e.forBinning);if(!t)throw new i("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+C(r).join(", "));const o=null!=s.signal?{signal:s.signal}:null;await t.load(o);const n=t.geometryType,a=s.symbolType.includes("3d");if(s.outlineOptimizationEnabled="reference-size"!==s.theme&&"spike"!==s.theme&&"polygon"===n&&s.outlineOptimizationEnabled,"mesh"===n)throw new i("size-continuous-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(a&&("polyline"===n||"polygon"===n))throw new i("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(s.symbolType.includes("3d-volumetric")&&(!s.view||"3d"!==s.view.type))throw new i("size-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");if("reference-size"===s.theme&&!e.forBinning&&"polygon"!==n)throw new i("size-continuous-renderer:invalid-parameters","Reference size is only supported for polygon layers");if("spike"===s.theme&&!e.forBinning&&"polygon"!==n&&"point"!==n)throw new i("size-continuous-renderer:invalid-parameters","Spike is only supported for point and polygon layers");const l=await oe({field:s.field,normalizationField:s.normalizationField,valueExpression:s.valueExpression}),p=k(t,l,"size-continuous-renderer:invalid-parameters");if(p)throw p;return"spike"!==s.theme||s.spikeOptions?.symbolStyle||(s.spikeOptions??={},s.spikeOptions.symbolStyle=se),await je(s),{...s,layer:t}}async function je(e){const i=e.layer;if(("polygon"===i.geometryType||e.forBinning)&&e.view&&e.field&&!e.valueExpression&&(!e.theme||"reference-size"===e.theme)){try{e.referenceSizeResult=e.referenceSizeResult??await de({layer:i,view:e.view,filter:e.filter,forBinning:e.forBinning,signal:e.signal})}catch{}!e.theme&&e.referenceSizeResult?.isGrid&&(e.theme="reference-size"),e.referenceSizeOptions?.symbolStyle||(e.referenceSizeOptions?e.referenceSizeOptions.symbolStyle="circle":e.referenceSizeOptions={symbolStyle:"circle"})}}async function ve(e){if(!e||!e.layer||!e.field&&!e.valueExpression)throw new i("size-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(e.valueExpression&&!e.view)throw new i("size-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&B(e,"size-class-breaks-renderer");const s={...e};s.symbolType=s.symbolType||"2d",s.defaultSymbolEnabled??=!0,s.classificationMethod??="equal-interval",s.normalizationType=ae(s);const r=e.forBinning?F:R,t=D(s.layer,r,e.forBinning);if(!t)throw new i("size-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+C(r).join(", "));if(!(null!=s.minValue&&null!=s.maxValue||null==s.minValue&&null==s.maxValue))throw new i("size-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range");const o=null!=s.signal?{signal:s.signal}:null;await t.load(o);const n=t.geometryType,a=s.symbolType.includes("3d");if(s.outlineOptimizationEnabled="polygon"===n&&s.outlineOptimizationEnabled,"mesh"===n)throw new i("size-class-breaks-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(a&&("polyline"===n||"polygon"===n))throw new i("size-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(s.symbolType.includes("3d-volumetric")&&(!s.view||"3d"!==s.view.type))throw new i("size-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const l=await oe({field:s.field,normalizationField:s.normalizationField}),p=k(t,l,"size-class-breaks-renderer:invalid-parameters");if(p)throw p;return{...s,layer:t}}function ze(e){const i={...e};delete i.basemap,delete i.sizeScheme,delete i.legendOptions,delete i.symbolType,delete i.defaultSymbolEnabled;const s=i;return s.analyzeData=!(null!=i.minValue&&null!=i.maxValue),s}function we(e){const i={...e},s=!!i.symbolType?.includes("3d-volumetric"),r=i;return r.worldScale=s,s&&(r.axis="3d-volumetric-uniform"===i.symbolType?"all":"height"),delete i.symbolType,delete i.defaultSymbolEnabled,r}async function ge(e){if(!(e&&e.layer&&e.view&&e.startTime&&e.endTime))throw new i("size-age-renderer:missing-parameters","'layer', 'view', 'startTime', 'endTime' parameters are required");const s={...e};s.symbolType??="2d",s.defaultSymbolEnabled??=!0;const r=D(s.layer,R);if(!r)throw new i("size-age-renderer:invalid-parameters","'layer' must be one of these types: "+C(R).join(", "));const t=null!=s.signal?{signal:s.signal}:null;await r.load(t);const o=r.geometryType,n=s.symbolType.includes("3d");if(s.outlineOptimizationEnabled="polygon"===o&&s.outlineOptimizationEnabled,"mesh"===o)throw new i("size-age-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(n&&("polyline"===o||"polygon"===o))throw new i("size-age-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(s.symbolType.includes("3d-volumetric")&&(!s.view||"3d"!==s.view.type))throw new i("size-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const a=re(r,s.startTime,s.endTime,"size-age-renderer:invalid-parameters");if(a)throw a;if(s.unit&&!te.includes(s.unit))throw new i("size-age-renderer:invalid-unit",`Supported units are: ${te.join(", ")}`);return{...s,layer:r}}async function ke(e){let i=e.sizeScheme,s=null,r=null;const t=await I(e.basemap,e.view);if(s=null!=t.basemapId?t.basemapId:null,r=null!=t.basemapTheme?t.basemapTheme:null,i)return{scheme:le(i),basemapId:s,basemapTheme:r};const o=pe({basemapTheme:r,geometryType:e.geometryType,worldScale:e.worldScale,view:e.view});return o&&(i=o.primaryScheme,s=o.basemapId,r=o.basemapTheme),{scheme:i,basemapId:s,basemapTheme:r}}function Se(e,i){switch(i){case"point":case"multipoint":{const i=e;return[d(i.minSize),d(i.maxSize)]}case"polyline":{const i=e;return[d(i.minWidth),d(i.maxWidth)]}case"polygon":{const i=e;return[d(i.marker.minSize),d(i.marker.maxSize)]}}}function xe(e,i){e.transformationType===f.ClampedLinear&&"below"===i&&e.flipSizes()}function Ve(e,i,s,r){return"spike"===r?[s?.minHeight??fe[0],s?.maxHeight??fe[1]]:"reference-size"===r&&i?[1,i.size]:e?[e.minSize,e.maxSize]:null}function Te(e,i){if("reference-size"===i.theme&&null!=e.min&&null!=e.max&&null!=e.avg&&null!=e.stddev){const i=100,s=0,r=0,t=1,o=e.avg,n=e.min,a=e.max,l=e.stddev,p=0!==o?l/o:0,m=n>r&&n<t&&a<2*t&&p<.5,u=n>s&&n<i&&a<2*i&&p<.5;return{minDataValue:m?r:u?s:n,maxDataValue:m?t:u?i:o+2*l,defaultValuesUsed:!1}}const{theme:s,field:r}=i,t=i.layer,o=r&&"function"!=typeof r?t.getField(r):null,n=ne(o);return x(e,s,n,"above"===s||"below"===s)}function Ee(e,s){if(("spike"===s||"reference-size"===s)&&null!=e.minDataValue&&null!=e.maxDataValue&&null!=e.minSize&&null!=e.maxSize&&"number"==typeof e.minSize&&"number"==typeof e.maxSize)return[new y({value:e.minDataValue,size:e.minSize}),new y({value:e.maxDataValue,size:e.maxSize})];throw new i("get-size-stops-for-theme","Invalid size variable or theme")}async function Ie(e,i,s,r,t){const a=await o("esri/smartMapping/t9n/smartMapping"),l=t.layer,p=t.field,m=l.geometryType,u=t.defaultSymbolEnabled,c=le(e.sizeScheme),d="polygon"===m,y=d?c.marker:c,f=d?c.background:null,h=d?"point":m,b=i?.opacity,j=e.isGrid,v=t.theme,z="reference-size"===v,w="spike"===v,g=z||w?[]:e.visualVariables.map((e=>e.clone()));i?.visualVariables?.length&&g.push(...i.visualVariables.map((e=>e.clone())));const k=z?L({type:t.referenceSizeOptions?.symbolStyle||"circle",color:y.color,primitiveOverrides:P({view:t.view,field:p,normalizationField:r,sizeStops:Ee(e.visualVariables[0],v),sizeByScaleEnabled:j||!!t.sizeOptimizationEnabled})}):w?ie({color:y.color,strokeColor:y.outline.color,baseWidth:t.spikeOptions?.baseWidth,strokeWidth:t.spikeOptions?.strokeWidth,defaultHeight:t.spikeOptions?.defaultHeight,primitiveOverrides:_({field:p,normalizationField:r,sizeStops:Ee(e.visualVariables[0],v)}),symbolStyle:t.spikeOptions?.symbolStyle}):V(h,{type:t.symbolType,color:y.color,size:E(y,h),outline:T(y,h,b)});return{renderer:new n({backgroundFillSymbol:!j&&f?V(m,{type:t.symbolType,color:f.color,outline:T(f,m,b)}):null,classBreakInfos:[{minValue:-9007199254740991,maxValue:ye,symbol:k}],defaultLabel:u?a.other:null,defaultSymbol:!u||z||w?null:V(h,{type:t.symbolType,color:y.noDataColor,size:E(y,h,!0),outline:T(y,h,b)}),field:p,normalizationField:r,normalizationType:s,valueExpression:t.valueExpression,valueExpressionTitle:t.valueExpressionTitle,visualVariables:g,authoringInfo:e.authoringInfo?.clone()}),visualVariables:e.visualVariables.map((e=>e.clone())),statistics:e.statistics,defaultValuesUsed:e.defaultValuesUsed,isGrid:j,sizeScheme:le(e.sizeScheme),basemapId:e.basemapId,basemapTheme:e.basemapTheme}}async function Ue(e){const s=await he(e),{view:r,field:o,valueExpression:n,minValue:m,maxValue:d,layer:y,normalizationField:f,signal:h,statistics:v,filter:z}=s,w=f?"field":void 0,[g,k]=await Promise.all([v??b({layer:y,field:o,valueExpression:n,sqlExpression:s.sqlExpression,sqlWhere:s.sqlWhere,normalizationType:w,normalizationField:f,filter:z,minValue:m,maxValue:d,view:r,signal:h}),s.sizeOptimizationEnabled?q({view:r,layer:y,signal:h,filter:z}).catch(j):null]);return async function(e,s,r,o){const{theme:n,field:m,normalizationField:d,minValue:y,maxValue:f,axis:h}=e,b=e.layer.geometryType,j=await ke({basemap:e.basemap,geometryType:b,sizeScheme:e.sizeScheme,worldScale:e.worldScale,view:e.view}),v=j.scheme;if(!v)throw new i("size-visual-variable:insufficient-info","Unable to find size scheme");const z=await async function(e,i,s,r,t,o){return Ve(e,i,s,r)||Se(t,o)}(r,o,e.spikeOptions,n,v,b),{minDataValue:w,maxDataValue:g,defaultValuesUsed:k}=Te(s,e),x=[],V="height"===h,T=V?h:void 0,E=z[0];let I=z[1];if(V&&"number"==typeof E&&"number"==typeof I){const e=S({minSize:E,maxSize:I},T);x.push(new u({axis:"width-and-depth",minSize:e.minSize})),I=e.maxSize}const U=new u({field:m??void 0,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,valueUnit:"unknown",normalizationField:d,axis:T,minSize:E,maxSize:I,minDataValue:w,maxDataValue:g,legendOptions:t(c,e.legendOptions)});xe(U,n),x.unshift(U);const O=new l("reference-size"===n?{type:"size",field:e.field,normalizationField:e.normalizationField,sizeStops:Ee(U,n).map((({label:e,size:i,value:s})=>new p({label:e,size:i,value:s}))),theme:n,referenceSizeScale:o?.isGrid||e.sizeOptimizationEnabled?e?.view?.scale:void 0,referenceSizeSymbolStyle:e.referenceSizeOptions?.symbolStyle,minSliderValue:null!=y?y:s.min,maxSliderValue:null!=f?f:s.max}:"spike"===n?{type:"size",field:e.field,normalizationField:e.normalizationField,spikeSymbolStyle:e.spikeOptions?.symbolStyle,sizeStops:Ee(U,n).map((({label:e,size:i,value:s})=>new p({label:e,size:i,value:s}))),theme:n,minSliderValue:null!=y?y:s.min,maxSliderValue:null!=f?f:s.max}:{type:"size",theme:n,minSliderValue:null!=y?y:s.min,maxSliderValue:null!=f?f:s.max}),B=new a({visualVariables:[O]});return{basemapId:j.basemapId,basemapTheme:j.basemapTheme,visualVariables:x,statistics:s,isGrid:o?.isGrid,defaultValuesUsed:k,sizeScheme:le(v),authoringInfo:B}}(s,g,k,s.referenceSizeResult)}async function Oe(e){const{view:s,filter:r,renderer:t,signal:o,creatorParameters:n}=await async function(e){const s="regenerate-size-visual-variables";H(e,s);const r=await Q(e),t=Z(r);if(!t||!["size-continuous","univariate-color-size","color-size","relationship-size","type-size"].includes(t))throw new i(`${s}:invalid-parameters`,"Renderer is invalid");const o=W(r,"size");if(!o)throw new i(`${s}:invalid-parameters`,"Renderer does not have a size visual variable authoringInfo");const n=o.theme,a="reference-size"===n,l="spike"===n,p=r.visualVariables?.find(A);if(!p&&!a&&!l)throw new i(`${s}:invalid-parameters`,"Renderer does not have a size visual variable");let m=o.field,u=o.normalizationField,c=null,d=null;m||(p?.field?(m=p.field,u=p.normalizationField):r.field?(m=r.field,u=r.normalizationField):(c=p?.valueExpression??r.valueExpression,d=p?.valueExpressionTitle??r.valueExpressionTitle));const{layer:y,forBinning:f,filter:h,view:b,signal:j}=e,v=J(r),z=await he({layer:y,field:m,valueExpression:c,valueExpressionTitle:d,normalizationField:u,theme:n,sizeOptimizationEnabled:v,forBinning:f,filter:h,view:b,signal:j});return{...e,creatorParameters:z,renderer:r}}(e),{field:a,normalizationField:l,valueExpression:m,theme:c,layer:d,sizeOptimizationEnabled:y,spikeOptions:f,referenceSizeResult:h,valueExpressionTitle:v}=n,z=l?"field":void 0,[w,g]=await Promise.all([b({layer:d,field:a,valueExpression:m,normalizationField:l,normalizationType:z,filter:r,view:s,signal:o}),y?q({view:s,layer:d,signal:o,filter:r}).catch(j):null]),k=Ve(g,h,f,c),{minDataValue:S,maxDataValue:x}=Te(w,{theme:c,layer:d,field:a}),V=t.visualVariables?.find(A),T=(V?.stops?null:V)??new u({field:a??void 0,valueExpression:m,valueExpressionTitle:v,valueUnit:"unknown",normalizationField:l});k&&(T.minSize=k[0],T.maxSize=k[1]),T.minDataValue=S,T.maxDataValue=x,xe(T,c);const E=W(t,"size");E.minSliderValue=w.min,E.maxSliderValue=w.max;const I="reference-size"===c;return(I||"spike"===c)&&(E.sizeStops=Ee(T,c).map((({label:e,size:i,value:s})=>new p({label:e,size:i,value:s}))),I&&(E.referenceSizeScale=h?.isGrid||y?s?.scale:void 0)),{visualVariables:"reference-size"===c||"spike"===c?[]:[T],isGrid:!!h?.isGrid,authoringInfo:t.authoringInfo?.clone(),statistics:w}}async function Be(e){const i=await be(e),s={layer:i.layer,view:i.view,filter:i.filter,signal:i.signal},[r,t]=await Promise.all([Ue(we(i)),i.outlineOptimizationEnabled?v(s).catch(j):null]),o=i.normalizationField;return Ie(r,t,o?"field":void 0,o,i)}async function Fe(e){const{renderer:s,view:r,signal:t,filter:o,creatorParameters:n,forBinning:a}=await async function(e){const s="regenerate-size-continuous-renderer";H(e,s);const r=await Q(e),t=Z(r);if(!t||!["size-continuous","univariate-color-size"].includes(t))throw new i(`${s}:invalid-parameters`,"Renderer is invalid");const{authoringInfo:o,field:n,normalizationField:a,valueExpression:l,valueExpressionTitle:p}=r,m=o?.visualVariables.find((e=>"size"===e.type)),u=m.theme,{layer:c,forBinning:d,filter:y,view:f,signal:h}=e,b=X(r),j=J(r),v=await be({layer:c,field:n,valueExpression:l,valueExpressionTitle:p,normalizationField:a,theme:u,outlineOptimizationEnabled:b,sizeOptimizationEnabled:j,forBinning:d,filter:y,view:f,signal:h});return{...e,creatorParameters:v,renderer:r}}(e),{layer:l,outlineOptimizationEnabled:p,theme:m,referenceSizeResult:u}=n,[c,d]=await Promise.all([Oe({...e,referenceSizeResult:u}),p?v({layer:l,view:r,filter:o,signal:t}).catch(j):null]),y="reference-size"===m,f="spike"===m;N(s,c.visualVariables,Y),N(s,d?.visualVariables,K),$(s,c.authoringInfo,"size");const h=c.statistics;if(!y&&!f)return{renderer:s,statistics:h};if(f)return{renderer:await De({layer:l,renderer:s,forBinning:a,sizeStops:W(s,"size","spike")?.sizeStops}),statistics:h};const b=c.isGrid;return{renderer:await Re({layer:l,renderer:s,view:r,forBinning:a,sizeStops:W(s,"size","reference-size")?.sizeStops,isGrid:b}),isGrid:b,statistics:h}}async function Re(s){const{layer:r,referenceSizeOptions:t,renderer:o,sizeScheme:n,sizeStops:l,typeScheme:m,view:u,isGrid:c}=await async function(e){if(!e||!(e.layer&&e.view&&e.sizeStops))throw new i("update-renderer-with-reference-size:missing-parameters","'layer', 'view and 'sizeStops' parameters are required");const{view:s,forBinning:r}=e,t=e.forBinning?F:R,o=D(e.layer,t,e.forBinning);if(!o)throw new i("update-renderer-with-reference-size:invalid-parameters","'layer' must be one of these types: "+C(t).join(", "));const n=o.layer;let a=e.renderer;if(!a)if(e.forBinning){if(!("featureReduction"in n&&n.featureReduction&&"renderer"in n.featureReduction&&n.featureReduction.renderer)||"class-breaks"!==n.featureReduction.renderer.type&&"unique-value"!==n.featureReduction.renderer.type)throw new i("update-renderer-with-reference-size:invalid-parameters","Feature reduction renderer is not supported");a=n.featureReduction.renderer}else{if(!("renderer"in n)||!n.renderer||"class-breaks"!==n.renderer.type&&"unique-value"!==n.renderer.type)throw new i("update-renderer-with-reference-size:invalid-parameters","Renderer is not supported");a=n.renderer}const l=a.authoringInfo;if(!l||!l?.visualVariables?.some((e=>"reference-size"===e.theme)))throw new i("update-renderer-with-reference-size:invalid-parameters","'renderer.authoringInfo.visualVariables' should have an authoringInfoVisualVariable with 'theme' set to 'reference-size'");const p=e.isGrid??(await de({view:s,layer:n,forBinning:r}))?.isGrid;return{...e,isGrid:p,renderer:a,layer:o}}(s),d=o.clone();d.authoringInfo??=new a;const y=d.authoringInfo.visualVariables.find((e=>"reference-size"===e.theme)),f=s.field??y?.field,h=s.normalizationField??y?.normalizationField;if(!f)throw new i("update-renderer-with-reference-size:invalid-parameters","'field' parameter or authoring info with 'field' is required.");const b=P({view:u,field:f,normalizationField:h,sizeStops:l,sizeByScaleEnabled:c||!!s.sizeOptimizationEnabled}),j=t?.symbolStyle||y?.referenceSizeSymbolStyle||"circle";if("class-breaks"===d.type){const e="polygon"===("geometryType"in r?r.geometryType:null)&&n&&"marker"in n?n.marker:null;d.classBreakInfos.forEach((i=>{const s=e?.color??me(i.symbol,1);"cim"===i.symbol.type?G(i.symbol,{type:j,color:s,primitiveOverrides:b}):s&&(i.symbol=L({type:j,color:s,primitiveOverrides:b}))}))}else if("unique-value"===d.type){const i=d.uniqueValueGroups,s="polygon"===("geometryType"in r?r.geometryType:null)&&m&&"colors"in m?m.colors:null,t=s?e(s,d.uniqueValueInfos?.length??0):null;let o=0;if(i){for(const e of i)for(const i of e.classes??[]){const e=t?t[o]:me(i.symbol,1);"cim"===i.symbol?.type?G(i.symbol,{type:j,color:e,primitiveOverrides:b}):e&&(i.symbol=L({type:j,color:e,primitiveOverrides:b})),o++}d.uniqueValueGroups=i}}return y&&(y.field=f,y.normalizationField=h,y.sizeStops=l.map((({label:e,size:i,value:s})=>new p({label:e,size:i,value:s}))),y.referenceSizeScale=c||s.sizeOptimizationEnabled?u.scale:void 0,y.referenceSizeSymbolStyle=j),d}async function De(s){const{layer:r,renderer:t,sizeScheme:o,sizeStops:n,typeScheme:l,spikeOptions:m}=await async function(e){if(!e||!e.layer||!e.sizeStops)throw new i("update-renderer-with-spike:missing-parameters","'layer' and 'sizeStops' parameters are required");const s=e.forBinning?F:R,r=D(e.layer,s,e.forBinning);if(!r)throw new i("update-renderer-with-spike:invalid-parameters","'layer' must be one of these types: "+C(s).join(", "));await r.load();const t=r.layer;let o=e.renderer;if(!o)if(e.forBinning){if(!("featureReduction"in t&&t.featureReduction&&"renderer"in t.featureReduction&&t.featureReduction.renderer)||"class-breaks"!==t.featureReduction.renderer.type&&"unique-value"!==t.featureReduction.renderer.type)throw new i("update-renderer-with-spike:invalid-parameters","Feature reduction renderer is not supported");o=t.featureReduction.renderer}else{if(!("renderer"in t)||!t.renderer||"class-breaks"!==t.renderer.type&&"unique-value"!==t.renderer.type)throw new i("update-renderer-with-spike:invalid-parameters","Renderer is not supported");o=t.renderer}const n=o.authoringInfo,a=n?.visualVariables.find((e=>"spike"===e.theme));if(!a)throw new i("update-renderer-with-spike:invalid-parameters","'renderer.authoringInfo.visualVariables' should have an authoringInfoVisualVariable with 'theme' set to 'spike'");const l=e.spikeOptions??{};return l.symbolStyle??=a?.spikeSymbolStyle?void 0:se,{...e,renderer:o,layer:r,spikeOptions:l}}(s),u=t.clone();u.authoringInfo??=new a;const c=u.authoringInfo.visualVariables.find((e=>"spike"===e.theme)),d=s.field??c?.field,y=s.normalizationField??c?.normalizationField;if(!d)throw new i("update-renderer-with-spike:invalid-parameters","'field' parameter or authoring info with 'field' is required.");const f=_({field:d,normalizationField:y,sizeStops:n}),h="geometryType"in r?r.geometryType:null,b={primitiveOverrides:f,...m},j=m?.symbolStyle,v=j&&j.includes("outline")&&(j.includes("solid-fill")||j.includes("gradient-fill"));if("class-breaks"===u.type){if(o||v){const e=h?await ke({geometryType:h,sizeScheme:o,view:s.view}):null,i=e?.scheme,r="polygon"===h&&i&&"marker"in i?i.marker:i;if(o){const e=r&&"color"in r?r?.color:void 0;b.color=e}if(v){const e=r&&"outline"in r?r.outline.color:void 0;b.strokeColor=e}}u.classBreakInfos.forEach((e=>{if("cim"===e.symbol.type)ee(e.symbol,b);else{const i=b.color??me(e.symbol,1)??void 0;i&&(e.symbol=ie({...b,color:i}))}}))}else if("unique-value"===u.type){const i=u.uniqueValueGroups,r=u.uniqueValueInfos?.length??0;let t=null;if(l||v){const i=h&&r?await M({numColors:r,geometryType:h,typeScheme:l,view:s.view}):null,o=i?.scheme;if(l){const i=o&&"colors"in o?o.colors:null;t=i?e(i,r):null}if(v){const e=o&&"outline"in o?o.outline.color:void 0;b.strokeColor=e}}let o=0;if(i){for(const e of i)for(const i of e.classes??[]){if("cim"===i.symbol?.type)ee(i.symbol,{...b,color:t?.[o]});else{const e=t?.[o]??me(i.symbol,1)??void 0;e&&(i.symbol=ie({...b,color:e}))}o++}u.uniqueValueGroups=i}}return c&&(c.field=d,c.normalizationField=y,c.sizeStops=n.map((({label:e,size:i,value:s})=>new p({label:e,size:i,value:s}))),j&&(c.spikeSymbolStyle=j)),u}async function Ce(e){const i=await ve(e);return async function(e,i){const s=await o("esri/smartMapping/t9n/smartMapping"),t=e.layer,l=e.defaultSymbolEnabled,p=t.geometryType,u="polygon"===p,c=e.symbolType?.includes("3d-volumetric"),d=await ke({basemap:e.basemap,geometryType:p,sizeScheme:e.sizeScheme,worldScale:c,view:e.view}),y=d.scheme,{result:f,outlineResult:h}=i,b=f?.classBreakInfos??[],j=e.classificationMethod,v=e.normalizationType,z=u?y.marker:y,w=u?y.background:null,g=u?"point":p,k=Se(z,g),x=c?S({minSize:k[0],maxSize:k[1]},"height"):null,I=function(e,i){const s=r(e.minSize),t=(r(e.maxSize)-s)/(i>=4?i-1:i),o=[];for(let e=0;e<i;e++)o.push(s+t*e);return o}({minSize:k[0],maxSize:x?x.maxSize:k[1]},b.length),U=h?.opacity,O=new n({backgroundFillSymbol:w&&V(p,{type:e.symbolType,color:w.color,outline:T(w,p,U)}),classBreakInfos:b.map(((i,s)=>({minValue:i.minValue,maxValue:i.maxValue,symbol:V(g,{type:e.symbolType,color:z.color,size:I[s],widthAndDepth:x?.minSize,outline:T(z,g,U)}),label:i.label}))),defaultLabel:l?s.other:null,defaultSymbol:l?V(g,{type:e.symbolType,color:z.noDataColor,size:E(z,g,!0),widthAndDepth:x?.minSize,outline:T(z,g,U)}):null,field:e.field,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationType:v,normalizationField:e.normalizationField,normalizationTotal:"percent-of-total"===v?f?.normalizationTotal:void 0,legendOptions:e.legendOptions,authoringInfo:new a({type:"class-breaks-size",classificationMethod:j,standardDeviationInterval:e.standardDeviationInterval})});return"standard-deviation"!==j&&m({classBreakInfos:O.classBreakInfos,classificationMethod:j,normalizationType:v,round:!0}),h?.visualVariables?.length&&(O.visualVariables=h.visualVariables.map((e=>e.clone()))),{renderer:O,sizeScheme:le(y),classBreaksResult:f,defaultValuesUsed:!!i.defaultValuesUsed,basemapId:d.basemapId,basemapTheme:d.basemapTheme}}(i,await z(ze(i),i.outlineOptimizationEnabled))}async function qe(e){const{renderer:s,creatorParameters:r}=await async function(e){const s="regenerate-size-class-breaks-renderer";await H(e,s);const r=await Q(e);if("size-class-breaks"!==Z(r))throw new i(`${s}:invalid-parameters`,"Renderer is invalid");const{authoringInfo:t,field:o,normalizationField:n,normalizationType:a,normalizationTotal:l,valueExpression:p,valueExpressionTitle:m}=r,{classificationMethod:u,standardDeviationInterval:c}=t,d=r.classBreakInfos.length,{layer:y,forBinning:f,filter:h,view:b,signal:j}=e,v=X(r),z=await ve({layer:y,field:o,valueExpression:p,valueExpressionTitle:m,normalizationType:a,normalizationField:n,normalizationTotal:l,classificationMethod:u,standardDeviationInterval:c,numClasses:d,outlineOptimizationEnabled:v,forBinning:f,filter:h,view:b,signal:j});return{...e,creatorParameters:z,renderer:r}}(e),{outlineOptimizationEnabled:t,normalizationType:o,classificationMethod:n}=r,{result:a,outlineResult:l}=await z(ze(r),t),p=a.classBreakInfos;if(r.numClasses!==p.length)throw new i("regenerate-class-breaks-renderer:invalid-parameters","The number of class breaks generated does not match the number of class breaks in the renderer.");return s.classBreakInfos.forEach(((e,i)=>{e.minValue=p[i].minValue,e.maxValue=p[i].maxValue,e.label=p[i].label})),s.normalizationTotal="percent-of-total"===o?a.normalizationTotal:void 0,"standard-deviation"!==n&&m({classBreakInfos:s.classBreakInfos,classificationMethod:n,normalizationType:o,round:!0}),N(s,l?.visualVariables,K),{renderer:s}}async function Me(e){const i=await ge(e),{defaultSymbolEnabled:s,view:r,startTime:t,endTime:o,symbolType:n,minValue:a,maxValue:l,signal:p,filter:m,layer:u}=i,[c,d]=await Promise.all([i.unit?{unit:i.unit,statistics:null,valueExpression:null}:await h({view:r,layer:u,startTime:t,endTime:o,minValue:a,maxValue:l,signal:p,filter:m}),i.outlineOptimizationEnabled?v({layer:u,view:r,filter:m,signal:p}).catch(j):null]),{unit:y,statistics:f}=c,{valueExpression:b,title:z}=await w(i,y),k=await Ue(we({layer:u,basemap:i.basemap,valueExpression:b,symbolType:n,statistics:f,legendOptions:{title:z},theme:i.theme,sizeScheme:i.sizeScheme,sizeOptimizationEnabled:i.sizeOptimizationEnabled,view:i.view,minValue:a,maxValue:l,filter:m,signal:p})),S={layer:u,valueExpression:b,defaultSymbolEnabled:s,symbolType:n},x=await Ie(k,d,null,null,S),V=x.renderer.authoringInfo?.visualVariables;return V?.forEach((e=>g(e,t,o,y))),{...x,unit:y}}async function Pe(e){const{renderer:s,creatorParameters:r}=await async function(e){const s="regenerate-size-age-renderer";await H(e,s);const r=await Q(e);if("size-age"!==Z(r))throw new i(`${s}:invalid-parameters`,"Renderer is invalid");const{authoringInfo:t}=r,o=t?.visualVariables.find((e=>"size"===e.type)),n=o.startTime,a=o.endTime,l=o.units,p=o.theme,{layer:m,filter:u,view:c,signal:d}=e,y=X(r),f=J(r),h=await ge({layer:m,startTime:n,endTime:a,unit:l,theme:p,outlineOptimizationEnabled:y,sizeOptimizationEnabled:f,filter:u,view:c,signal:d});return{...e,creatorParameters:h,renderer:r}}(e),{layer:t,outlineOptimizationEnabled:o,sizeOptimizationEnabled:n,startTime:a,endTime:l,theme:p,view:m,signal:u,filter:c}=r,[d,y]=await Promise.all([h({view:m,layer:t,startTime:a,endTime:l,signal:u,filter:c}),o?v({layer:t,view:m,filter:c,signal:u}).catch(j):null]),{unit:f,statistics:b}=d,{valueExpression:z,title:k}=await w(r,f),S=await Ue(we({layer:t,valueExpression:z,statistics:b,legendOptions:{title:k},sizeOptimizationEnabled:n,theme:p,view:m,filter:c,signal:u}));N(s,S.visualVariables,Y),N(s,y?.visualVariables,K),s.authoringInfo=S.authoringInfo.clone();const x=s.authoringInfo?.visualVariables;return x?.forEach((e=>g(e,a,l,f))),{renderer:s}}export{Me as createAgeRenderer,Ce as createClassBreaksRenderer,Be as createContinuousRenderer,Ue as createVisualVariables,Ee as getSizeStopsForTheme,Pe as regenerateAgeRenderer,qe as regenerateClassBreaksRenderer,Fe as regenerateContinuousRenderer,Oe as regenerateVisualVariables,Re as updateRendererWithReferenceSize,De as updateRendererWithSpike};
