/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import e from"../../../Color.js";import{clone as o}from"../../../core/lang.js";import{a as r}from"../../../chunks/screenUtils.js";import t from"../../../symbols/CIMSymbol.js";import{b as i,L as s,c as n}from"../../../chunks/enums2.js";import"../../../chunks/colorUtils2.js";import"../../../chunks/mathUtils.js";import"../../../chunks/ensureType.js";import"../../../chunks/Logger.js";import"../../../config.js";import"../../../chunks/MapUtils.js";import"../../../chunks/tslib.es6.js";import"../../../core/accessorSupport/decorators/property.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/metadata.js";import"../../../core/Error.js";import"../../../chunks/enumeration.js";import"../../../chunks/jsonMap.js";import"../../../chunks/reader.js";import"../../../core/accessorSupport/decorators/subclass.js";import"../../../chunks/Lifecycle.js";import"../../../chunks/tracking.js";import"../../../chunks/Warning.js";import"../../../chunks/writer.js";import"../../../layers/support/fieldUtils.js";import"../../../chunks/SetUtils.js";import"../../../core/sql.js";import"../../../chunks/maybe.js";import"../../../chunks/guards.js";import"../../../chunks/datetime.js";import"../../../symbols/Symbol.js";import"../../../core/JSONSupport.js";import"../../../core/Accessor.js";import"../../../core/Handles.js";import"../../../chunks/ObjectPool.js";import"../../../chunks/ObservableBase.js";import"../../../chunks/watch.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../chunks/PooledArray.js";import"../../../core/promiseUtils.js";import"../../../chunks/events.js";import"../../../chunks/SimpleTrackingTarget.js";const l="spike-height-override",a=r(8),c=r(20),p="triangle-solid-fill-open-outline";function m(e){const{field:o,normalizationField:r,sizeStops:t}=e,{value:i,size:s}=t[0],{value:n,size:a}=t[1];let c,p=0;return o&&(p=`$feature["${o}"]`,c=`\n      if(!HasValue($feature, "${o}")){\n        return 0;\n      }\n      $feature["${o}"];\n    `),r&&(p=`$feature["${o}"] / $feature["${r}"]`,c=`if(!HasValue($feature, "${o}") || !HasValue($feature, "${r}") || $feature["${r}"] <= 0){\n        return 0;\n      }\n      $feature["${o}"];\n      $feature["${r}"];`),[{type:"CIMPrimitiveOverride",primitiveName:l,propertyName:"Length",valueExpressionInfo:{type:"CIMExpressionInfo",title:"Custom",expression:`\n        ${c}\n        var value = ${p};\n\n        var maxSize = ${a};\n        var minSize = ${s};\n\n        var minDataValue = ${i};\n        var maxDataValue = ${n};\n\n        var ratio = Constrain(( value - minDataValue ) / ( maxDataValue - minDataValue ), 0, 1);\n\n        var size = Constrain(maxSize * ratio, minSize, maxSize);\n        return size;\n      `,returnType:"Default"}}]}function u(e){const{primitiveOverrides:o,baseWidth:r,defaultHeight:i}=e,s=function(e){const o=[f(e)],r=y(e);return r&&o.push(r),o}(e);return new t({data:{type:"CIMSymbolReference",symbol:{type:"CIMPointSymbol",effects:[{type:"CIMGeometricEffectRadial",primitiveName:l,angle:90,length:i??c},{type:"CIMGeometricEffectTaperedPolygon",fromWidth:r??a,toWidth:1,length:5}],symbolLayers:s,haloSize:1,scaleX:1,angleAlignment:"Display"},primitiveOverrides:o}})}function f(e){const{strokeColor:o,strokeWidth:t,symbolStyle:l}=e,a=l?.includes("solid-fill")||l?.includes("gradient-fill");let c=o?.toArray(),p=!1;return l?.includes("outline")&&a?p=!0:c=e.color?.toArray(),{type:"CIMSolidStroke",effects:d(l),enable:!0,colorLocked:p,capStyle:n.Round,joinStyle:s.Round,lineStyle3D:i.Strip,miterLimit:4,width:t??r(1),color:c}}function d(e){if(!e?.includes("closed"))return[{type:"CIMGeometricEffectAddControlPoints",angleTolerance:90,primitiveName:"spike-control-points"},{type:"CIMGeometricEffectSuppress",suppress:!0,invert:!0,primitiveName:"spike-stroke-suppress"}]}function y(e){const{color:o,symbolStyle:r}=e,t=r?.includes("solid-fill"),i=r?.includes("gradient-fill");if(!t&&!i||!o)return;if(t)return{type:"CIMSolidFill",enable:!0,colorLocked:!1,color:o?.toArray()};const s=o.clone();return s.a=0,{type:"CIMGradientFill",enable:!0,angle:90,colorRamp:{type:"CIMMultipartColorRamp",colorRamps:[{type:"CIMLinearContinuousColorRamp",fromColor:o.toArray(),toColor:s.toArray()}],weights:[1]},gradientMethod:"Linear",gradientSize:70,gradientSizeUnits:"Relative",gradientType:"Continuous"}}function h(r,t){const{defaultHeight:i,baseWidth:s,color:n,strokeColor:a,primitiveOverrides:c,symbolStyle:p,strokeWidth:m}=t,u="CIMPointSymbol"===r.data.symbol?.type?r.data.symbol:null,d=u?.symbolLayers;if(!d)return r;const h=u.effects,k=h?.find((e=>"CIMGeometricEffectTaperedPolygon"===e.type)),C=h?.find((e=>"CIMGeometricEffectRadial"===e.type&&e.primitiveName===l));null!=s&&k&&(k.fromWidth=s),null!=i&&C&&(C.length=i);const v=d?.find((e=>"CIMSolidStroke"===e.type)),g=d?.find((e=>"CIMSolidFill"===e.type)),S=d?.find((e=>"CIMGradientFill"===e.type)),b="CIMMultipartColorRamp"===S?.colorRamp?.type&&"CIMLinearContinuousColorRamp"===S.colorRamp.colorRamps[0]?.type?S.colorRamp.colorRamps[0]:null;if(p){const o=g?.color??b?.fromColor??v?.color,r=n??(o?new e(o):void 0),i=v?.color??o,s=a??(i?new e(i):void 0),l=p.includes("solid-fill"),c=p.includes("gradient-fill");if(l||c||j(d,g??S),r)if(l)j(d,S),g?g.color=r?.toArray():d.push(y({...t,color:r}));else if(c)if(j(d,g),S){if(b&&n){const e=r.clone();e.a=0,b.fromColor=r.toArray(),b.toColor=e.toArray()}}else d.push(y({...t,color:r}));if(v){const e=f({...t,strokeColor:s,color:r});v.effects=e.effects,v.color=e.color,v.width=e.width,v.colorLocked=e.colorLocked}}else if(v&&(a&&(v.color=a.toArray()),null!=m&&(v.width=m)),g&&n&&(g.color=n.toArray()),b&&n){const e=n.clone();e.a=0,b.fromColor=n.toArray(),b.toColor=e.toArray()}return void 0!==c&&(r.data.primitiveOverrides=o(c)),r}function j(e,o){if(!o)return;const r=e.indexOf(o);-1!==r&&e.splice(r,1)}export{m as createPrimitiveOverrides,u as createSpikeSymbol,p as defaultSpikeSymbolStyle,h as updateSpikeSymbol};
