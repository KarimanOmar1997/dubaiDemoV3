/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import"../../../core/lang.js";import{d as s,a as i}from"../../../chunks/maybe.js";import{property as r}from"../../../core/accessorSupport/decorators/property.js";import{L as n}from"../../../chunks/Logger.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import{g as a}from"../../../chunks/getDefaultUnitForView.js";import{A as l,a as h,c as p,r as c,s as u}from"../../../chunks/analysisViewUtils.js";import{b as m,f as d,t as g,p as _,a as y,M as j,i as f}from"../../../chunks/measurementUtils.js";import{watch as v,sync as k,syncAndInitial as w,initial as S,when as b}from"../../../core/reactiveUtils.js";import{e as M,v as V}from"../../../chunks/mathUtils.js";import{d as L,t as P,b as D}from"../../../chunks/quantityUtils.js";import{a8 as C,V as x,U as A,ad as U,aa as O,c as I}from"../../../chunks/unitUtils.js";import{s as R,u as T,c as G}from"../../../chunks/vec2.js";import{c as E,f as F}from"../../../chunks/vec2f64.js";import{c as z,i as H,k as W,n as B,x as q,f as N,u as Q,d as K,j as X}from"../../../chunks/vec3.js";import{c as Z}from"../../../chunks/vec3f64.js";import{c as J,f as Y}from"../../../chunks/vec4f64.js";import{canProjectWithoutEngine as $,tryProjectWithZConversion as ee}from"../../../chunks/projectionUtils.js";import{g as te}from"../../../chunks/spatialReferenceEllipsoidUtils.js";import{p as se}from"../../../chunks/projectVectorToVector.js";import{p as ie}from"../../../chunks/projectPointToVector.js";import{A as re}from"../../../chunks/Axis.js";import{b as ne}from"../../../chunks/Indices.js";import{s as oe}from"../../../geometry/Extent.js";import{c as ae}from"../../../chunks/sphere.js";import{a as le}from"../../../chunks/triangle.js";import{g as he}from"../../../chunks/Intersector2.js";import{d as pe,e as ce,t as ue}from"../../../chunks/mathUtils2.js";import{t as me,l as de}from"../../../chunks/geodesicAreaMeasurementUtils.js";import{c as ge,f as _e,l as ye}from"../../../chunks/geodesicLengthMeasurementUtils.js";import{s as je}from"../../../chunks/geodesicMeasurementUtils.js";import fe from"../../../core/Evented.js";import ve from"../../../geometry/Point.js";import{e as ke,l as we}from"../../../chunks/aaBoundingRect.js";import{l as Se,O as be,L as Me,d as Ve,R as Le,M as Pe}from"../../../chunks/RenderObject.js";import{E as De,a as Ce,c as xe,C as Ae}from"../../../chunks/EditGeometryOperations.js";import"../../../intl.js";import{u as Ue,j as Oe,f as Ie,B as Re,m as Te,o as Ge}from"../../../chunks/colorUtils.js";import{c as Ee}from"../../../chunks/quantityFormatUtils.js";import{w as Fe,j as ze}from"../../../chunks/mat4.js";import{c as He}from"../../../chunks/mat4f64.js";import{L as We,G as Be,E as qe}from"../../../chunks/Segment.js";import{a as Ne,c as Qe}from"../../../chunks/vec4.js";import{A as Ke}from"../../../chunks/orientedBoundingBox.js";import{S as Xe,t as Ze,o as Je,b as Ye,j as $e,C as et,m as tt,R as st,x as it,u as rt,v as nt,w as ot,M as at,N as lt,E as ht,i as pt,G as ct}from"../../../chunks/Matrix4PassUniform.js";import{O as ut,D as mt,a as dt,R as gt}from"../../../chunks/Material.js";import{V as _t}from"../../../chunks/VertexAttribute.js";import{S as yt,a as jt}from"../../../chunks/ShaderOutput.js";import{D as ft}from"../../../chunks/VertexColor.glsl.js";import{P as vt}from"../../../chunks/DefaultLayouts.js";import{T as kt}from"../../../chunks/TriangleMaterial.js";import{F as wt}from"../../../chunks/BooleanBindUniform.js";import{g as St}from"../../../chunks/glsl.js";import{S as bt}from"../../../chunks/ShaderBuilder.js";import{m as Mt,d as Vt}from"../../../chunks/renderState.js";import{p as Lt}from"../../../chunks/ShaderTechniqueConfiguration.js";import{a as Pt}from"../../../chunks/AlphaCutoff.js";import{c as Dt}from"../../../chunks/lineStippleUtils.js";import{o as Ct}from"../../../chunks/locale.js";import{f as xt}from"../../../chunks/messages.js";import{m as At}from"../../../chunks/memoize.js";import{ignoreAbortErrors as Ut}from"../../../core/promiseUtils.js";import{U as Ot}from"../../../chunks/UpdatingHandles.js";import{c as It}from"../../../chunks/hydratedFeatures.js";import{S as Rt}from"../../../chunks/SnappingVisualizer3D.js";import{h as Tt,c as Gt}from"../../../chunks/dragEventPipeline3D.js";import Et from"../../../Color.js";import Ft from"../../../core/Handles.js";import{s as zt}from"../../../chunks/screenUtils.js";import{L as Ht}from"../../../chunks/LaserlineVisualElement.js";import{f as Wt}from"../../../chunks/GeometryUtil.js";import{M as Bt}from"../../../chunks/InteractiveToolBase.js";import{n as qt}from"../../../chunks/ToolIntersector.js";import{c as Nt}from"../../../chunks/dragEventPipeline.js";import{s as Qt}from"../../../chunks/keybindings.js";import{S as Kt}from"../../../chunks/SnappingContext.js";import{c as Xt}from"../../../chunks/SnappingDragPipelineStep.js";import{a as Zt}from"../../../chunks/SnappingManagerPool.js";import{S as Jt}from"../../../chunks/SnappingOperation.js";import{a as Yt}from"../../../chunks/constraints.js";import{c as $t}from"../../../chunks/screenUtils2.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/Lifecycle.js";import"../../../chunks/metadata.js";import"../../../chunks/ObjectPool.js";import"../../../chunks/ObservableBase.js";import"../../../chunks/tracking.js";import"../../../chunks/watch.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../chunks/PooledArray.js";import"../../../core/Error.js";import"../../../config.js";import"../../../chunks/events.js";import"../../../chunks/SetUtils.js";import"../../../chunks/SimpleTrackingTarget.js";import"../../../chunks/ensureType.js";import"../../../chunks/MapUtils.js";import"../../../chunks/Warning.js";import"../../../portal/Portal.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../chunks/jsonUtils.js";import"../../../request.js";import"../../../chunks/persistableUrlUtils.js";import"../../../core/JSONSupport.js";import"../../../core/Loadable.js";import"../../../core/Promise.js";import"../../../chunks/reader.js";import"../../../portal/PortalGroup.js";import"../../../portal/PortalQueryParams.js";import"../../../chunks/jsonMap.js";import"../../../geometry/SpatialReference.js";import"../../../chunks/writer.js";import"../../../chunks/pe.js";import"../../../chunks/assets.js";import"../../../geometry/support/webMercatorUtils.js";import"../../../geometry/Geometry.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../portal/PortalQueryResult.js";import"../../../portal/PortalUser.js";import"../../../portal/PortalFolder.js";import"../../../chunks/asyncUtils.js";import"../../../geometry/Polygon.js";import"../../../chunks/coordsUtils.js";import"../../../chunks/extentUtils.js";import"../../../chunks/boundsUtils.js";import"../../../chunks/zmUtils.js";import"../../../chunks/common.js";import"../../../chunks/SimpleObservable.js";import"../../../geometry/Multipoint.js";import"../../../geometry/Polyline.js";import"../../../chunks/projectBuffer.js";import"../../../chunks/geodesicConstants.js";import"../../../chunks/projectXYZToVector.js";import"../../../geometry/support/GeographicTransformation.js";import"../../../geometry/support/GeographicTransformationStep.js";import"../../../chunks/zscale.js";import"../../../chunks/dehydratedPoint.js";import"../../../chunks/ray.js";import"../../../chunks/mat3.js";import"../../../chunks/mat3f64.js";import"../../../chunks/vector.js";import"../../../chunks/quatf64.js";import"../../../chunks/lineSegment.js";import"../../../chunks/dehydratedFeatureUtils.js";import"../../../chunks/ViewingMode.js";import"../webgl/RenderCamera.js";import"../../../chunks/frustum.js";import"../../../chunks/plane.js";import"../../../chunks/HUDIntersectorResult.js";import"../../../chunks/IntersectorResult.js";import"../../../chunks/verticalOffsetUtils.js";import"../../../chunks/earcut.js";import"../../../geometry/support/geodesicUtils.js";import"../../../geometry/operators/geodeticLengthOperator.js";import"../../../chunks/geodeticCurveType.js";import"../../../chunks/VisualElement.js";import"../../../chunks/RibbonLineMaterial.js";import"../../../chunks/basicInterfaces.js";import"../../../chunks/BufferView.js";import"../../../chunks/Octree.js";import"../../../chunks/InterleavedLayout.js";import"../../../chunks/types.js";import"../../../chunks/Matrix4BindUniform.js";import"../../../chunks/BindType.js";import"../../../chunks/Float4DrawUniform.js";import"../../../chunks/floatRGBA.js";import"../../../chunks/enums.js";import"../../../chunks/Texture.js";import"../../../chunks/FBOAttachmentType.js";import"../../../chunks/getDataTypeBytes.js";import"../../../chunks/line.js";import"../../../chunks/aaBoundingBox.js";import"../../../chunks/computeTranslationToOriginAndRotation.js";import"../../../chunks/elevationInfoUtils.js";import"../../../chunks/unitConversionUtils.js";import"../../../chunks/lengthUtils.js";import"../../../chunks/ray2.js";import"../../../chunks/interfaces2.js";import"../../../chunks/graphicUtils.js";import"../../../chunks/meshVertexSpaceUtils.js";import"../../../geometry/support/MeshGeoreferencedVertexSpace.js";import"../../../core/Clonable.js";import"../../../chunks/enumeration.js";import"../../../geometry/support/MeshLocalVertexSpace.js";import"../../../chunks/ColorMaterial.js";import"../../../chunks/geometry2dUtils.js";import"../../../chunks/date.js";import"../../../chunks/constants.js";import"../../../chunks/datetime.js";import"../../../chunks/number2.js";import"../../../chunks/substitute.js";import"../../../chunks/Cyclical.js";import"../../../chunks/unitFormatUtils.js";import"../../../chunks/ByteSizeUnit.js";import"../../../chunks/SnappingManager.js";import"../../../chunks/normalizedPoint.js";import"../../../chunks/Settings.js";import"../../../chunks/RightAngleSnappingHint.js";import"../../interactive/snapping/SnappingOptions.js";import"../../../core/Collection.js";import"../../../chunks/shared.js";import"../../interactive/snapping/FeatureSnappingLayerSource.js";import"../../../chunks/colorUtils2.js";import"../../../chunks/projector.js";import"../../../chunks/sanitizerUtils.js";import"../../../chunks/TextOverlayItem.js";import"../../../chunks/quat.js";import"../../../chunks/guards.js";import"../../../chunks/debugFlags2.js";import"../../../chunks/videoUtils.js";import"../../../chunks/requestImageUtils.js";import"../../../chunks/TextureFormat.js";import"../../../chunks/boundedPlane.js";import"../../../chunks/Matrix3DrawUniform.js";import"../../../Graphic.js";import"../../../PopupTemplate.js";import"../../../layers/support/fieldUtils.js";import"../../../core/sql.js";import"../../../popup/content.js";import"../../../popup/content/AttachmentsContent.js";import"../../../popup/content/Content.js";import"../../../popup/support/AttachmentsOrderByInfo.js";import"../../../popup/content/CustomContent.js";import"../../../popup/content/ExpressionContent.js";import"../../../popup/ElementExpressionInfo.js";import"../../../popup/content/FieldsContent.js";import"../../../popup/FieldInfo.js";import"../../../popup/support/FieldInfoFormat.js";import"../../../popup/content/MediaContent.js";import"../../../popup/content/BarChartMediaInfo.js";import"../../../popup/content/mixins/ChartMediaInfo.js";import"../../../popup/content/mixins/MediaInfo.js";import"../../../popup/content/support/ChartMediaInfoValue.js";import"../../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../../chunks/chartMediaInfoUtils.js";import"../../../popup/content/ColumnChartMediaInfo.js";import"../../../popup/content/ImageMediaInfo.js";import"../../../popup/content/support/ImageMediaInfoValue.js";import"../../../popup/content/LineChartMediaInfo.js";import"../../../popup/content/PieChartMediaInfo.js";import"../../../popup/content/RelationshipContent.js";import"../../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../../popup/content/TextContent.js";import"../../../popup/content/UtilityNetworkAssociationsContent.js";import"../../../popup/support/UtilityNetworkAssociationType.js";import"../../../popup/ExpressionInfo.js";import"../../../popup/LayerOptions.js";import"../../../popup/RelatedRecordsInfo.js";import"../../../support/actions/ActionBase.js";import"../../../core/Identifiable.js";import"../../../support/actions/ActionButton.js";import"../../../support/actions/ActionToggle.js";import"../../../geometry/support/jsonUtils.js";import"../../../chunks/typeUtils2.js";import"../../../chunks/createFeatureId.js";import"../../../chunks/typeUtils.js";import"../../../symbols/CIMSymbol.js";import"../../../symbols/Symbol.js";import"../../../symbols/LabelSymbol3D.js";import"../../../symbols/Symbol3D.js";import"../../../chunks/collectionUtils.js";import"../../../symbols/ExtrudeSymbol3DLayer.js";import"../../../symbols/Symbol3DLayer.js";import"../../../chunks/utils5.js";import"../../../symbols/edges/Edges3D.js";import"../../../chunks/materialUtils.js";import"../../../chunks/opacityUtils.js";import"../../../symbols/edges/SketchEdges3D.js";import"../../../symbols/edges/SolidEdges3D.js";import"../../../chunks/Symbol3DMaterial.js";import"../../../symbols/FillSymbol3DLayer.js";import"../../../symbols/patterns/LineStylePattern3D.js";import"../../../symbols/patterns/StylePattern3D.js";import"../../../chunks/utils6.js";import"../../../chunks/colors.js";import"../../../chunks/symbolLayerUtils3D.js";import"../../../symbols/IconSymbol3DLayer.js";import"../../../symbols/LineSymbol3DLayer.js";import"../../../symbols/LineStyleMarker3D.js";import"../../../chunks/lineMarkers.js";import"../../../symbols/ObjectSymbol3DLayer.js";import"../../../symbols/PathSymbol3DLayer.js";import"../../../symbols/TextSymbol3DLayer.js";import"../../../symbols/Font.js";import"../../../symbols/WaterSymbol3DLayer.js";import"../../../symbols/support/StyleOrigin.js";import"../../../chunks/Thumbnail.js";import"../../../chunks/calloutUtils.js";import"../../../symbols/callouts/Callout3D.js";import"../../../symbols/callouts/LineCallout3D.js";import"../../../symbols/support/Symbol3DVerticalOffset.js";import"../../../symbols/LineSymbol3D.js";import"../../../symbols/MeshSymbol3D.js";import"../../../symbols/PictureFillSymbol.js";import"../../../symbols/FillSymbol.js";import"../../../symbols/SimpleLineSymbol.js";import"../../../symbols/LineSymbol.js";import"../../../symbols/LineSymbolMarker.js";import"../../../chunks/urlUtils.js";import"../../../symbols/PictureMarkerSymbol.js";import"../../../symbols/MarkerSymbol.js";import"../../../symbols/PointSymbol3D.js";import"../../../symbols/PolygonSymbol3D.js";import"../../../symbols/SimpleFillSymbol.js";import"../../../symbols/SimpleMarkerSymbol.js";import"../../../symbols/TextSymbol.js";import"../../../symbols/WebStyleSymbol.js";import"../../../chunks/ExtendedLineVisualElement.js";import"../../../chunks/EngineVisualElement.js";import"../../../chunks/GridLocalOriginFactory.js";import"../../../chunks/RenderGeometry.js";import"../../../chunks/SceneLighting.js";import"../../../chunks/signal.js";import"../../../chunks/axisAngleDegrees.js";import"../../../chunks/weather.js";import"../environment/CloudyWeather.js";import"../environment/FoggyWeather.js";import"../environment/RainyWeather.js";import"../environment/SnowyWeather.js";import"../environment/SunnyWeather.js";import"../webgl.js";import"../webgl/RenderNode.js";import"../../../chunks/HighlightDefaults.js";import"../../../chunks/VertexElementDescriptor.js";import"../../../chunks/VertexArrayObject2.js";import"../../../chunks/VertexArrayObject.js";import"../../../chunks/memoryEstimations.js";import"../../../chunks/NestedMap.js";import"../../../chunks/HUDRenderStyle.js";import"../../../chunks/Scheduler.js";import"../../../chunks/debugFlags.js";import"../../../chunks/PointVisualElement.js";import"../../../chunks/ElevationContext.js";import"../../../chunks/HUDMaterial.js";import"../../../chunks/HUDVisibility.glsl.js";import"../../../chunks/VerticalOffset.glsl.js";import"../../../chunks/SnappingVisualizer.js";import"../../../chunks/PointSnappingHint.js";import"../../../chunks/BlendColorsPremultiplied.glsl.js";import"../../../chunks/glUtil.js";import"../../../chunks/vec3f32.js";import"../../../chunks/InputManager.js";import"../../../chunks/Queue.js";import"../../../chunks/dehydratedFeatureComparison.js";import"../../../chunks/mapCollectionUtils.js";import"../../../chunks/timeUtils.js";import"../../../rest/support/Query.js";import"../../../chunks/DataLayerSource.js";import"../../../layers/support/Field.js";import"../../../chunks/domains.js";import"../../../layers/support/CodedValueDomain.js";import"../../../layers/support/Domain.js";import"../../../layers/support/InheritedDomain.js";import"../../../layers/support/RangeDomain.js";import"../../../chunks/fieldType.js";import"../../../chunks/FullTextSearch.js";import"../../../chunks/spatialRelationships.js";import"../../../rest/support/StatisticDefinition.js";import"../../../time/TimeExtent.js";import"../../../chunks/utils8.js";import"../../../chunks/Version2.js";import"../../../chunks/Version.js";function es(e,t,s,i,r){z(ts,e),H(ss,e,t),se(ts,s,ts,r),se(ss,s,ss,r),W(i,ss,ts),B(i,i)}const ts=Z(),ss=Z();class is{get numVertices(){return this._length}get hasStagedVertex(){return null!=this._lastCursorPoint}constructor(e,t,s){this._sceneView=e,this._geodesicAreaMeasurementUtils=t,this._geodesicLengthMeasurementUtils=s,this.validMeasurement=!1,this.positionsWorld=[],this.positionsRender=[],this.positionsFittedWorld=[],this.positionsFittedRender=[],this.positionsGeodesic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=Z(),this.areaCentroidRenderCoords=Z(),this.geodesicAreaCentroidRenderCoords=Z(),this.fittingMode=null,this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=Z(),this._planeWorldCoords=J(),this._worldUp=Z(),this._worldTangent=Z(),this._frame=[Z(),Z(),Z()],this._lastPathVersion=-1,this._lastCursorPoint=null,this._mode=null,this._tempU=Z(),this._tempV=Z(),this._tempVec3=Z(),this._tempSphere=ae();const i=ge(e.spatialReference);this._measurementSR=i,this._lengthMeasurementUnit=C(i)??"meters",this._areaMeasurementUnit=x(i)??"square-meters"}update(e,t,s,i,r,n){const o=this._lastPathVersion===e.version,a=t?t.equals(this._lastCursorPoint):null==this._lastCursorPoint,l=this._mode===r;return!(o&&!n&&l&&a||(this._lastPathVersion=e.version,this._lastCursorPoint=t,this._updateCursorSegmentLength(e,t),this._update(e,t,s,i,r),0))}_update(e,t,s,i,r){const n=this._sceneView.renderSpatialReference,o=this._measurementSR,a=s.spatialReference;let l=e.numVertices;const h=!(null==t||t.equals(e.lastPoint)||l>2&&t.equals(e.firstPoint)||e.polygonIsClosed);h&&(l+=1);const p=!e.polygonIsClosed&&l>2,c=e.polygonIsClosed||p;this._resize(l);const u=te(a),m=null!=a&&je(a)?a:null,d=null!=m&&$(a,u),{positionsGeodesic:g,positionsWorld:_,positionsRender:y,positionsSpherical:j}=this,f=(e,t)=>{!function(e,t){t.hasZ||(t.z=he(e,t,"ground")??0)}(s.elevationProvider,e),ie(e,_[t],o),ie(e,y[t],n),d&&(ie(e,g[t],m),ie(e,j[t],u),B(j[t],j[t]))};e.forEachVertexPosition(((e,t)=>f(e,t))),h&&f(t,l-1);const v=this._updatePathLengths(c);if(this.pathLength=this._length>1?L(v,this._lengthMeasurementUnit):null,d){const e=this._updateGeodesicPathLengths(c,m);this.geodesicPathLength=null!=e&&this._length>1?e:null}else this.geodesicPathLength=null;if(this._updateMode(r),!c)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),void(this.validMeasurement=!1);this._updateAreaAndPerimeterLength(s,n,o,i),d&&this._updateGeodesicArea(s,m),this.validMeasurement=!0}getData(){return{validMeasurement:this.validMeasurement,numVertices:this.numVertices,hasStagedVertex:this.hasStagedVertex,positionsRender:this.positionsRender,positionsFittedWorld:this.positionsFittedWorld,positionsFittedRender:this.positionsFittedRender,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorld.length=e,this.positionsRender.length=e,this.positionsFittedWorld.length=e,this.positionsFittedRender.length=e,this.positionsGeodesic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorld.push(Z()),this.positionsRender.push(Z()),this.positionsFittedWorld.push(E()),this.positionsFittedRender.push(Z()),this.positionsGeodesic.push(Z()),this.positionsSpherical.push(Z()),this.positionsStereographic.push(E()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const t=this.positionsWorld,s=this.pathSegmentLengths;let i=0;const r=this._length;for(let n=0;n<r;++n){const o=s[n]=q(t[n],t[(n+1)%r]);(n<r-1||e)&&(i+=o)}return i}_updateGeodesicPathLengths(e,t){const s=this.positionsGeodesic,i=this.geodesicPathSegmentLengths;let r=0;const n=this._length;for(let o=0;o<n;++o){const a=this._geodesicLengthMeasurementUtils.geodesicDistance(s[o],s[(o+1)%n],t);if(null==a)return null;const l=P(a,"meters").value,h=i[o]=l;(o<n-1||e)&&(r+=h)}return L(r,"meters")}_updateAreaAndPerimeterLength(e,t,s,i){const r=e.renderCoordsHelper,n=this.positionsWorld,o=this.positionsRender,a=this.positionsFittedWorld,l=this.positionsFittedRender,h=this._planeWorldCoords,p=this._centroidRenderCoords;pe(o,p),r.worldUpAtPosition(p,this._worldUp),r.worldBasisAtPosition(p,re.X,this._worldTangent),es(p,this._worldUp,t,this._worldUp,s),es(p,this._worldTangent,t,this._worldTangent,s),n.length>2&&m(n,h),this.fittingMode=this._selectFittingMode(h,n,this._worldUp,i);let c=0;if("horizontal"===this.fittingMode){let e=-1/0;o.forEach(((t,s)=>{const i=r.getAltitude(o[s]);i>e&&(e=i,c=s)}))}const u=n[c];let d=h,g=this._worldTangent;"horizontal"===this.fittingMode?d=this._worldUp:"vertical"===this.fittingMode&&(d=this._tempVec3,g=this._worldUp,ce(h,this._worldUp,d)),z(this._frame[2],d),ce(g,d,this._frame[0]),N(this._frame[1],this._frame[0],this._frame[2]),Q(this._frame[1],this._frame[1]);const _=this._tempVec3,y=this._tempU,j=this._tempV;for(let e=0;e<this._length;++e){const i=a[e],r=l[e];W(_,n[e],u),R(i,K(this._frame[0],_),K(this._frame[1],_)),X(y,this._frame[0],i[0]),X(j,this._frame[1],i[1]),H(_,y,j),H(_,_,u),se(_,s,r,t)}this.perimeterLength=this._length>0?this._updatePerimeterLengths():null,pe(l,this.areaCentroidRenderCoords),se(this.areaCentroidRenderCoords,t,this.areaCentroidWorldCoords,s),this._updateIntersectingSegments(),this.area=0===this.intersectingSegments.size?this._computeArea():null}_updateGeodesicArea(e,t){const{renderCoordsHelper:s,spatialReference:i}=e,{positionsSpherical:r,positionsStereographic:n}=this,o=this._tempVec3,a=d(r,o);if(!a)return void(this.geodesicArea=null);const l=this._tempU,h=this._tempV;ue(o,l,h);for(let e=0;e<this._length;++e){const t=K(r[e],l),s=K(r[e],h),i=K(r[e],o);R(n[e],t/i,s/i)}X(o,o,A(i).radius),s.toRenderCoords(o,te(i),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=a&&0===this.geodesicIntersectingSegments.size?this._computeGeodesicArea(t):null}_updatePerimeterLengths(){const e=this.positionsFittedWorld,t=this.perimeterSegmentLengths;let s=0;for(let i=0;i<this._length;++i)s+=t[i]=T(e[i],e[(i+1)%this._length]);return L(s,this._lengthMeasurementUnit)}_updateIntersectingSegments(){const e=this.positionsFittedWorld,t=this.intersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const r=e[s],n=e[(s+1)%this._length],o=e[i],a=e[(i+1)%this._length];oe(r,n,o,a)&&(t.add(s),t.add(i))}}_computeArea(){const e=this.positionsFittedWorld,t=this.triangleIndices=ne(me(e));let s=0;for(let i=0;i<t.length;i+=3)s+=le(e[t[i]],e[t[i+1]],e[t[i+2]]);return D(s,this._areaMeasurementUnit)}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,t=this.geodesicIntersectingSegments;t.clear();for(let s=0;s<this._length;++s)for(let i=s+2;i<this._length;++i){if((i+1)%this._length===s)continue;const r=e[s],n=e[(s+1)%this._length],o=e[i],a=e[(i+1)%this._length];oe(r,n,o,a)&&(t.add(s),t.add(i))}}_computeGeodesicArea(e){const t=this.positionsGeodesic,s=this.positionsStereographic,i=this.geodesicTriangleIndices=ne(me(s));let r=0;for(let s=0;s<i.length;s+=3){const n=g(t[i[s]],t[i[s+1]],t[i[s+2]],e,this._geodesicAreaMeasurementUtils);if(null==n)return null;r+=P(n,"square-meters").value}return D(r,"square-meters")}_selectFittingMode(e,t,s,i){const r=t.map((t=>Math.abs(_(e,t)))).reduce(((e,t)=>Math.max(e,t)),0);y(t,this._tempSphere);const n=r/(2*this._tempSphere[3]),o=n<i.maxRelativeErrorCoplanar,a=n<i.maxRelativeErrorAlmostCoplanar;let l="horizontal";return o?l="oblique":a&&(l=Math.abs(K(s,e))>Math.cos(M(i.verticalAngleThreshold))?"horizontal":"vertical"),l}_updateCursorSegmentLength(e,t){const s=e.lastPoint;e.isValidPolygon||null==s||null==t?(this.geodesicStagedSegmentLength=null,this.stagedSegmentLength=null):(this.geodesicStagedSegmentLength=this._geodesicLengthMeasurementUtils.geodesicDistanceBetweenPoints(s,t),this.stagedSegmentLength=_e(s,t)?.direct)}_updateMode(e){if(e===j.Auto){this.actualMeasurementMode="euclidean";let e=0;null!=this.geodesicPathLength&&(e+=this.geodesicPathLength.value),e>rs&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=e===j.Euclidean?"euclidean":"geodesic";null==this.geodesicPathLength&&(this.actualMeasurementMode="euclidean"),this._mode=e}}const rs=1e5;let ns=class extends t{constructor(e){super(e)}initialize(){this._measurementDataManager=new is(this.view,this.geodesicAreaMeasurementUtils,this.geodesicLengthMeasurementUtils),this.addHandles([this.analysisViewData.path.on("change",(()=>this._update())),v((()=>this.analysisViewData.stagedPoint),(()=>this._update()),k),v((()=>this.analysisViewData.mode),(()=>this._update()),k)]),this._update()}_update(e=!1){const{analysisViewData:t,view:s}=this;this._measurementDataManager.update(t.path,t.stagedPoint,s,{maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80},t.mode,e)&&(t.measurementData=this._measurementDataManager.getData())}};e([r({constructOnly:!0})],ns.prototype,"view",void 0),e([r({constructOnly:!0})],ns.prototype,"analysis",void 0),e([r({constructOnly:!0})],ns.prototype,"analysisViewData",void 0),e([r({constructOnly:!0})],ns.prototype,"geodesicAreaMeasurementUtils",void 0),e([r({constructOnly:!0})],ns.prototype,"geodesicLengthMeasurementUtils",void 0),ns=e([o("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],ns);let os=class extends fe.EventedAccessor{constructor(e={}){super(e),this._version=0,this._internalGeometryChange=!1,this._extent=ke()}set areaMeasurement(e){this._set("areaMeasurement",e),null!=e&&null!=this.view&&this._initialize(e,this.view)}set view(e){this._set("view",e),null!=e&&null!=this.areaMeasurement&&this._initialize(this.areaMeasurement,e)}get constructed(){return null!=this.areaMeasurement&&null!=this.view}get version(){return this._version}get isEmptyPolygon(){return!this.constructed||0===this._editGeometry.components.length}get isValidPolygon(){return this.constructed&&this.polygonIsClosed}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const e=ke(this._extent);return this.forEachVertex((t=>{we(e,t.pos)})),e}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(e,t){this.removeAllHandles(),this.addHandles(v((()=>e.geometry),(()=>{this._updateEditGeometryFromModelGeometry(e,t)}),w)),this._makeDirty(!0)}_makeDirty(e=!1){this.notifyChange("polygonIsClosed"),this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,t){if(this._version++,this._internalGeometryChange)return;this.removeHandles("EditGeometry");let s=e.geometry;if(null!=s){const i=ee(s,t.spatialReference);null==i&&Se(e,s.spatialReference,n.getLogger(this)),s=i}this._editGeometryOperations=null!=s?De.fromGeometry(s,t.state.viewingMode):new De(new Ce("polygon",xe(!0,!1,t.spatialReference)),t.state.viewingMode),this._makeDirty(!0),this.emit("change"),this.addHandles(this._editGeometry.on("change",(t=>{this._makeDirty(null!=t.addedVertices||null!=t.removedVertices),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1})),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex((t=>{e.push(t)})),e}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get polygonIsClosed(){return this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get firstPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getFirstVertex();if(null!=e)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getLastVertex();if(null!=e)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}getVertex(e){if(!this.constructed||0===this._editGeometry.components.length||0===this._editGeometry.components[0].vertices.length)return null;const t=this._editGeometry.components[0].vertices[0];let s=t;do{if(s.index===e)return s;s=s.rightEdge.rightVertex}while(s!==t&&null!=s);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const t=this._editGeometry.coordinateHelper;this.forEachVertex(((s,i)=>{t.vectorToPoint(s.pos,as),e(as,i)}))}clear(){null!=this.areaMeasurement&&(this.areaMeasurement.geometry=null)}add(e){if(!this.constructed)return null;if(0===this._editGeometry.components.length){const e=this.view;this._editGeometry.components.push(new Ae(e.spatialReference,e.state.viewingMode))}const t=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),t}close(){if(!this.constructed||0===this._editGeometry.components.length)return null;const e=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),e}ensureContains(e,t=""){let s=!1;if(this._editGeometry.components.forEach((t=>{t.iterateVertices((t=>{t===e&&(s=!0)}))})),!s)throw new Error(`vertex doesnt exist ${t}`);return s}setVertexPosition(e,t){if(!this.constructed)return null;const s=this._editGeometryOperations.setVertexPosition(e,this._editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),s}equals(e){if(this.numVertices!==e.numVertices)return!1;let t=!0;return this.forEachVertexPosition(((s,i)=>{const r=e.getVertexPositionAsPointFromIndex(i);s.equals(r)||(t=!1)})),!!t}};e([r({value:null})],os.prototype,"areaMeasurement",null),e([r({value:null})],os.prototype,"view",null),e([r()],os.prototype,"isEmptyPolygon",null),e([r()],os.prototype,"isValidPolygon",null),e([r()],os.prototype,"extent",null),e([r()],os.prototype,"spatialReference",null),e([r()],os.prototype,"numVertices",null),e([r()],os.prototype,"polygonIsClosed",null),os=e([o("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementPathHelper")],os);const as=new ve;function ls(e,t){return P(e,U(e.value,e.unit,t))}function hs(e,t){return P(e,ps(e,t))}function ps(e,t){const s=function(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-nautical-miles":return"nautical-miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}(t);return O(e.value,e.unit,s)}const cs=Object.freeze(Object.defineProperty({__proto__:null,build:function(e){const t=new bt,{vertex:s,fragment:i,varyings:r}=t;return t.fragment.include(Xe,e),t.include(Ze,e),t.include(Je,e),Ye(s,e),t.attributes.add(_t.POSITION,"vec3"),t.attributes.add(_t.UV0,"vec2"),r.add("vUV","vec2"),r.add("vpos","vec3"),s.main.add(St`vUV = uv0;
vpos = position;
forwardViewPosDepth((view * vec4(position, 1.0)).xyz);
gl_Position = proj * view * vec4(position, 1.0);`),i.uniforms.add(new wt("size",(e=>e.size))),i.uniforms.add(new $e("color1",(e=>e.color1))),i.uniforms.add(new $e("color2",(e=>e.color2))),i.include(et),i.main.add(St`discardByTerrainDepth();
vec2 uvScaled = vUV / (2.0 * size);
vec2 uv = fract(uvScaled - 0.25);
vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
float t = mix(abs(ab.x + ab.y), 0.5, fade);
fragColor = mix(color2, color1, t);
outputColorHighlightOID(fragColor, vpos, fragColor.rgb);`),t}},Symbol.toStringTag,{value:"Module"}));class us extends tt{constructor(e,t){super(e,t,new st(cs,(()=>Promise.resolve().then((()=>cs)))))}initializePipeline(e){const{oitPass:t,transparent:s,polygonOffset:i,output:r}=e,n=t===ut.NONE,o=t===ut.FrontFace;return Mt({blending:s?ot(t):null,depthTest:{func:nt(t)},depthWrite:rt(e),drawBuffers:it(t,r),colorWrite:Vt,polygonOffset:n||o?i?ms:null:{factor:-1,units:-25}})}}const ms={factor:0,units:-25};class ds extends mt{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.textureCoordinateType=at.None,this.emissionSource=lt.None,this.output=yt.Color,this.occlusionPass=!1,this.objectAndLayerIdColorInstanced=!1,this.overlayEnabled=!1,this.draped=!1,this.snowCover=!1}get discardInvisibleFragments(){return this.transparent&&this.writeDepth}}e([Lt()],ds.prototype,"transparent",void 0),e([Lt()],ds.prototype,"writeDepth",void 0),e([Lt()],ds.prototype,"polygonOffset",void 0),e([Lt()],ds.prototype,"terrainDepthTest",void 0),e([Lt()],ds.prototype,"cullAboveTerrain",void 0);class gs extends kt{constructor(e){super(e,ys),this._configuration=new ds,this.produces=new Map([[ht.OPAQUE_MATERIAL,e=>jt(e)&&!this.transparent],[ht.TRANSPARENT_MATERIAL,e=>jt(e)&&this.transparent&&this.parameters.writeDepth],[ht.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,e=>jt(e)&&this.transparent&&!this.parameters.writeDepth]])}getConfiguration(e,t){return super.getConfiguration(e,t,this._configuration),this._configuration.transparent=this.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.oitPass=t.oitPass,this._configuration.terrainDepthTest=t.terrainDepthTest,this._configuration.cullAboveTerrain=t.cullAboveTerrain,this._configuration}get visible(){return this.parameters.color1[3]>=Pt||this.parameters.color2[3]>=Pt}get transparent(){return this.parameters.color1[3]<1||this.parameters.color2[3]<1}createGLMaterial(e){return new _s(e)}createBufferWriter(){return new ft(vt)}}class _s extends pt{beginSlot(e){return this.getTechnique(us,e)}}class ys extends dt{constructor(){super(...arguments),this.size=F(1,1),this.color1=Y(.75,.75,.75,1),this.color2=Y(.5,.5,.5,1),this.writeDepth=!0,this.polygonOffset=!1}}class js extends be{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=gt.OccludeAndTransparent,this._geometry=null,this._size=F(1,1),this._color1=Y(1,.5,0,.5),this._color2=Y(1,1,1,.5),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){G(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){Ne(e,this._color1)||(Qe(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){Ne(e,this._color2)||(Qe(this._color2,e),this._updateMaterial())}_updateMaterial(){this._checkerBoardMaterial?.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new gs({size:this._size,color1:this._color1,color2:this._color2,writeDepth:!1,polygonOffset:!0,renderOccluded:gt.OccludeAndTransparent,isDecoration:this.isDecoration})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachMaterial(e){e(this._checkerBoardMaterial)}createGeometries(e){if(null==this._geometry||null==this._checkerBoardMaterial)return;const t=fs;Fe(t,this.transform);const s=this._geometry,i=[],r=Z();s.position.forEach((e=>{W(r,e,t),i.push(r[0],r[1],r[2])}));const n=[];s.uv.forEach((e=>{n.push(e[0],e[1])}));const o=new ct(this._checkerBoardMaterial,[[_t.POSITION,new Ke(i,s.triangleIndices,3,!0)],[_t.UV0,new Ke(n,s.triangleIndices,2,!0)]]);e.addGeometry(o)}}const fs=Z();let vs=class extends t{get _parameters(){const{accentColor:e,textColor:t}=this.view.effectiveTheme,s=Ue(e),i=Oe(e,.5),r=Oe(Ie(e),.5),n=Ie(t,Re.Low);return{accentColor:s,transparentAccentColor:i,transparentContrastColor:r,intersectingLineColor:[1,.2,0,1],textColor:t,textBackgroundColor:Te(n,.6),textCalloutColor:Te(n,.5),pathLineWidth:3,perimeterLineWidth:2,projectionLineWidth:2,projectionLineStippleSize:5,labelDistance:25}}get visible(){return this.analysisViewData.visible}get _renderUnits(){const e=this.view.renderCoordsHelper.spatialReference;return C(e)??"meters"}get testData(){}constructor(e){super(e),this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._origin=Z(),this._originTransform=He(),this.messages=null,this.viewData=ws,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:e,_parameters:t,view:s}=this;this._path=new Me({view:s,attached:!0,width:t.pathLineWidth,polygonOffset:!0,renderOccluded:gt.OccludeAndTransparent,isDecoration:!0}),this._intersectedPath=new Me({view:s,attached:!0,width:t.pathLineWidth,polygonOffset:!0,renderOccluded:gt.OccludeAndTransparent,isDecoration:!0}),this._perimeter=new Me({view:s,attached:!0,width:t.perimeterLineWidth,polygonOffset:!0,renderOccluded:gt.OccludeAndTransparent,isDecoration:!0}),this._intersectedPerimeter=new Me({view:s,attached:!0,width:t.perimeterLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:gt.OccludeAndTransparent,isDecoration:!0}),this._projectionLines=new Me({view:s,attached:!0,width:t.projectionLineWidth,stipplePattern:Dt(t.projectionLineStippleSize),polygonOffset:!0,renderOccluded:gt.OccludeAndTransparent,isDecoration:!0}),this._measurementArea=new js({view:s,attached:!0,isDecoration:!0});const i={attached:!0,view:s,isDecoration:!0};this._areaLabel=new We({...i,fontSize:ks.Large}),this._perimeterLengthLabel=new We({...i,fontSize:ks.Small}),this.addHandles([v((()=>[e.mode,this.visible,e.unit,e.measurementData,e.stagedPoint]),(()=>this._update()),w),v((()=>s.state?.camera),(()=>this._updateLabels()),w),Ct((()=>this._updateMessageBundle())),v((()=>this._parameters),(({accentColor:e,transparentAccentColor:t,transparentContrastColor:s,textColor:i,textBackgroundColor:r,textCalloutColor:n})=>{const{_path:o,_intersectedPath:a,_perimeter:l,_projectionLines:h,_measurementArea:p,_areaLabel:c,_perimeterLengthLabel:u}=this;o.color=e,a.color=e,l.color=e,h.color=e,p.color1=t,p.color2=s,c.textColor=i,c.backgroundColor=r,c.calloutColor=n,u.textColor=i,u.backgroundColor=r,u.calloutColor=n}),S)]),this._updateMessageBundle()}destroy(){this._measurementArea=s(this._measurementArea),this._path=s(this._path),this._intersectedPath=s(this._intersectedPath),this._perimeter=s(this._perimeter),this._intersectedPerimeter=s(this._intersectedPerimeter),this._areaLabel=s(this._areaLabel),this._perimeterLengthLabel=s(this._perimeterLengthLabel),this._projectionLines=s(this._projectionLines),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:e},analysisViewData:t}=this;null!=e&&(this._updateViewData(e,t.path),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(e,t){const s=e.validMeasurement,i="geodesic"===e.actualMeasurementMode,r=i?e.geodesicArea:e.area;let n=1;if(r){const e=ls(r,this.analysisViewData.unit);n=V(Math.sqrt(e.value)/Math.sqrt(300)),n*=Math.sqrt(I(1,e.unit,"square-meters")),n=I(n,"meters",this._renderUnits)}const o={validMeasurement:s,numVertices:e.numVertices,hasStagedVertex:e.hasStagedVertex,path:t,mode:e.actualMeasurementMode,positionsRender:e.positionsRender,positionsFittedWorld:e.positionsFittedWorld,positionsFittedRender:e.positionsFittedRender,intersectingSegments:i?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:i?e.geodesicTriangleIndices:e.triangleIndices,areaCentroid:i?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,perimeterLengthLabelSegmentIndex:0,area:i?e.geodesicArea:e.area,pathLength:i?e.geodesicPathLength:e.pathLength,perimeterLength:e.perimeterLength,checkerSize:n};this._set("viewData",o)}_updateOrigin(){const e=this.viewData;pe(e.positionsRender,this._origin),ze(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(e){const t=this.viewData,s=this.view.renderCoordsHelper.spatialReference,i=t.mode,r=[],n=[],o=[],a=t.numVertices,l=t.validMeasurement?a:a-1;for(let h=0;h<l;++h){const l=t[e][h],p=t[e][(h+1)%a];let c=null;switch(i){case"euclidean":c=new qe(l,p);break;case"geodesic":c=new Be(l,p,s)}t.intersectingSegments.has(h)?o.push(c):n.push(c),r.push(c)}let h=null;return t.validMeasurement&&t.hasStagedVertex&&l>=2?h=r[r.length-2]:t.hasStagedVertex&&l>=1&&(h=r[r.length-1]),{all:r,nonIntersecting:n,intersecting:o,stagedSegment:h}}_updatePathSegments(){const{visible:e}=this,t=this._createSegments("positionsRender");this._path.setGeometryFromSegments(t.nonIntersecting,this._origin),this._path.visible=e,this._intersectedPath.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPath.visible=e,this._pathSegments=t.all}_updatePerimeterSegments(){const e=this.visible&&"euclidean"===this.viewData.mode&&this.viewData.path.numVertices>2,t=this._createSegments("positionsFittedRender");this._perimeter.setGeometryFromSegments(t.nonIntersecting,this._origin),this._perimeter.visible=e,this._intersectedPerimeter.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPerimeter.visible=e,this._perimeterSegments=t.all}_updateArea(){const e=this.viewData;switch(e.mode){case"euclidean":this._updateAreaEuclidean(e);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(e){const t=this.visible;e.validMeasurement&&0===e.intersectingSegments.size&&e.triangleIndices?(this._measurementArea.geometry={uv:e.positionsFittedWorld,position:e.positionsFittedRender,triangleIndices:e.triangleIndices},this._measurementArea.size=[e.checkerSize,e.checkerSize],this._measurementArea.visible=t):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const e=this.viewData,t=this.visible,s=e.mode,i=e.numVertices;if(i>0&&e.validMeasurement&&"euclidean"===s){const s=[];for(let t=0;t<i;++t){const i=Z();W(i,e.positionsRender[t],this._origin);const r=Z();W(r,e.positionsFittedRender[t],this._origin),s.push([i,r])}this._projectionLines.geometry=s,this._projectionLines.visible=t}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:e}=this,{area:t,path:s}=e;if(!s)return;const i=this.visible,r=this._areaLabel,n=this._perimeterLengthLabel,o=e.validMeasurement;r.visible=!0,n.visible=!0;let a=!1;const l=function(e,t,s){return e&&t&&Ee(e,t,U(t.value,t.unit,s))}(this.messages,t,this.analysisViewData.unit);if(null!=l&&i&&(r.geometry={type:"point",point:e.areaCentroid},r.text=l,a=e.validMeasurement&&0===e.intersectingSegments.size),this._set("areaLabel",l),i&&o&&0===e.intersectingSegments.size){const t="geodesic"===e.mode,s=t?e.pathLength:e.perimeterLength,i=(h=this.messages,p=s,c=this.analysisViewData.unit,h&&p&&Ee(h,p,ps(p,c)));this._set("perimeterLengthLabel",i),n.distance=this._parameters.labelDistance,n.anchor="top",n.text=i;let r=!0;for(let s=0;s<e.numVertices;++s){const i=(e.perimeterLengthLabelSegmentIndex+s)%e.numVertices,o=t?this._pathSegments[i]:this._perimeterSegments[i];if(r=!0,n.geometry={type:"segment",segment:o,sampleLocation:"center"},!n.overlaps(this._areaLabel))break;r=!1}n.visible=r}else n.visible=!1;var h,p,c;r.visible=a}_updateMessageBundle(){this.loadingMessages=!0,xt("esri/core/t9n/Units").then((e=>{this.messages=e,this.view&&this._update()})).finally((()=>{this.loadingMessages=!1}))}};var ks;e([r()],vs.prototype,"_parameters",null),e([r()],vs.prototype,"view",void 0),e([r()],vs.prototype,"messages",void 0),e([r()],vs.prototype,"analysis",void 0),e([r()],vs.prototype,"viewData",void 0),e([r()],vs.prototype,"analysisViewData",void 0),e([r({readOnly:!0})],vs.prototype,"areaLabel",void 0),e([r({readOnly:!0})],vs.prototype,"perimeterLengthLabel",void 0),e([r()],vs.prototype,"loadingMessages",void 0),e([r()],vs.prototype,"visible",null),e([r()],vs.prototype,"_renderUnits",null),vs=e([o("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],vs),function(e){e[e.Small=12]="Small",e[e.Large=16]="Large"}(ks||(ks={}));const ws={validMeasurement:!1,numVertices:0,hasStagedVertex:!1,path:null,mode:null,positionsRender:null,positionsFittedWorld:null,positionsFittedRender:null,intersectingSegments:null,triangleIndices:null,areaCentroid:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null,area:null,pathLength:null,perimeterLength:null};class Ss{constructor(e,t=null){this.screenPoint=e,this.result=t}}class bs{constructor(e,t){this.scenePoint=e,this.mapPoint=t}}class Ms{constructor(e){this.vertexManipulators=[],this._destroyed=!1,this._isManipulatorsOwner=!0,this._visible=!0,this._listenerHandles=null,this._tempHandlePosition=Z();const{analysisViewData:t,manipulators:s,toolState:i,view:r,visible:n}=e;this._analysisViewData=t,this._toolState=i,null!=s?(this._manipulators=s,this._isManipulatorsOwner=!1):this._manipulators=new Bt,this._view=r,this._intersector=qt(r.state.viewingMode);const o=Ve(this._handleColor),a=[new Le(Wt(o,1,32,32))],l=new Pe({view:r,renderObjects:a});l.available=!1,l.radius=Ds,l.interactive=!1,this._manipulators.add(l),this._cursorManipulator=l,this._cursorManipulatorMaterial=o,this._laserLine=new Ht({view:r,attached:!0,style:{glowWidth:Vs,glowFalloff:Ls,innerWidth:Ps},isDecoration:!0}),this._updateVisibility(n??!0)}destroy(){this._listenerHandles=s(this._listenerHandles),this._isManipulatorsOwner?this._manipulators=s(this._manipulators):this._manipulators=null,this._laserLine=s(this._laserLine),this._destroyed=!0}get destroyed(){return this._destroyed}get visible(){return this._visible}set visible(e){e?this.show():this.hide()}get testData(){}show(){this._setVisibility(!0)}hide(){this._setVisibility(!1)}_setVisibility(e){this._destroyed||this._visible===e||this._updateVisibility(e)}_updateVisibility(e){this._visible=e,this._laserLine.visible=e,e?(this._initializeListeners(),this._updateAll()):(this._destroyListeners(),this.vertexManipulators.forEach((({manipulator:e})=>this._removeVertexManipulator(e))),this.vertexManipulators=[],this._view.cursor=null)}vertexHandleAt(e,t){const s=this._manipulators.intersect(e,t);return s?.metadata}pick(e){const t=this._view.spatialReference,s=zt(e.screenPoint);this._view.sceneIntersectionHelper.intersectToolIntersectorScreen(s,this._intersector);const i=this._intersector.results.min,r=Z();if(!i.getIntersectionPoint(r))return null;const n=this._view.renderCoordsHelper.fromRenderCoords(r,new ve({spatialReference:t}));return null==n?null:new bs(r,n)}_updateAll(){this._visible&&(this._updateVertexManipulators(),this._updateLaserLine())}_createVertexManipulator(){const e=Ve(this._handleColor),t=[new Le(Wt(e,1,32,32))],s=new Pe({view:this._view,renderObjects:t});return s.radius=Ds,this._manipulators.add(s),{manipulator:s,material:e}}_removeVertexManipulator(e){this._manipulators.remove(e)}_updateVertexManipulators(){const{viewData:e}=this._analysisViewData,t=this._analysisViewData.path?this._analysisViewData.path.vertices:[],s=this.vertexManipulators;!function(e,t,s,i){for(;e.length<t;)e.push(s());if(i)for(;e.length>t;)i(e.pop());else e.length=t}(s,t.length,(()=>this._createVertexManipulator()),(({manipulator:e})=>this._removeVertexManipulator(e))),s.forEach((({manipulator:s},i)=>{s.metadata=t[i],s.renderLocation=e.positionsRender[i],s.cursor=0===i&&"drawing"===this._toolState.polygonState?"crosshair":null})),"drawing"===this._toolState.polygonState&&null!=this._analysisViewData.stagedPoint?(this._cursorManipulator.available=!0,this._cursorManipulator.location=this._analysisViewData.stagedPoint):this._cursorManipulator.available=!1}get _handleColor(){return Oe(this._view.effectiveTheme.accentColor,.5)}_getFocusPoint(){const{lastDraggedVertex:e}=this._analysisViewData;switch(this._toolState.polygonState){case"drawing":return null!=this._analysisViewData.stagedPoint?this._analysisViewData.stagedPoint:null!=e?this._analysisViewData.path.getVertexPositionAsPoint(e):this._analysisViewData.path.lastPoint;case"editing":return null!=e?this._analysisViewData.path.getVertexPositionAsPoint(e):null;default:return this._analysisViewData.stagedPoint}}_updateLaserLine(){const e="measured"!==this._toolState.polygonState&&this._toolState.active,t=this._getFocusPoint();if(e&&null!=t){const e=this._tempHandlePosition;this._view.renderCoordsHelper.toRenderCoords(t,e),this._laserLine.heightManifoldTarget=e}else this._laserLine.heightManifoldTarget=null}_initializeListeners(){this._listenerHandles=new Ft,this._listenerHandles.add([v((()=>this._toolState.polygonState),(()=>this._updateLaserLine())),v((()=>this._analysisViewData.viewData),(()=>this._updateAll()),k),v((()=>({lastDraggedVertex:this._analysisViewData.lastDraggedVertex,cursorPoint:this._analysisViewData.stagedPoint})),(()=>this._updateLaserLine())),v((()=>this._toolState.active),(()=>this._updateAll())),v((()=>this._view.effectiveTheme.accentColor),(e=>{const t=Oe(e,.5);for(const{material:e}of this.vertexManipulators)e.setParameters({color:t});this._cursorManipulatorMaterial.setParameters({color:t});const s=Et.toUnitRGB(e),i=Et.toUnitRGB(Ie(e)),r=.75*e.a,n=this._laserLine,o=n.style;n.style={...o,glowColor:s,innerColor:i,globalAlpha:r}}),{initial:!0,equals:Ge})])}_destroyListeners(){this._listenerHandles=s(this._listenerHandles)}}const Vs=8,Ls=8,Ps=1,Ds=5;let Cs=class extends l{constructor(e){super(e),this._updatingHandles=new Ot,this.polygonState="initial",this.removeIncompleteOnCancel=!1,this.manipulators=new Bt,this._getSnappingContext=At((e=>new Kt({elevationInfo:{mode:"absolute-height",offset:0},pointer:e,editGeometryOperations:new De(new Ce("point",xe(!0,!1,this.view.spatialReference)),this.view.state.viewingMode),visualizer:new Rt})))}initialize(){const{view:e,analysisViewData:t,manipulators:s,visible:i}=this;this.measurementView=new Ms({view:e,analysisViewData:t,toolState:this,manipulators:s,visible:i});const r=Zt(e);this._snappingManagerResult=r,this.addHandles(r),this._snappingOperation=new Jt({view:e}),this._updatingHandles.add((()=>this.stagedPoint),(e=>{this.analysisViewData.stagedPoint=null!=e?It(e,new ve):null}),w),Yt(this,(()=>{const e=this.view.inputManager.latestPointerType??"mouse",t=this._getSnappingContext(e);this._updatingHandles.addPromise(Ut(this._snappingOperation.snapAgainNearPreviousMapPoint(this._snappingManager,t)))})),this._setupManipulators(),this.addHandles([b((()=>"measured"===this.state),(()=>this.finishToolCreation()),w),this.analysisViewData.path.on("change",(()=>{const e=this.analysisViewData.path;"initial"!==this.polygonState||e.isEmptyPolygon||(e.isValidPolygon?this.polygonState="measured":this.polygonState="drawing")}))])}destroy(){this.measurementView.destroy(),this._set("measurementView",null),this._updatingHandles=s(this._updatingHandles)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){return 0===this.analysisViewData.path.numVertices?"ready":this.analysisViewData.path.isValidPolygon&&"editing"!==this.polygonState?"measured":"measuring"}get cursor(){return this.active?"crosshair":null}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}get stagedPoint(){return this._snappingOperation.stagedPoint}set stagedPoint(e){this._snappingOperation.stagedPoint=e}get snappingOptions(){return this._snappingManager.options}finishMeasurement(){const{path:e}=this.analysisViewData;e.numVertices<=2||(e.close(),this.polygonState="measured",this._resetSnappingState(),this.active&&(this.view.activeTool=null))}resetCreated(){super.resetCreated(),this._resetSnappingState(),this.polygonState="initial","measured"===this.state&&(this.polygonState="measured",this.finishToolCreation())}onShow(){this.measurementView.show()}onHide(){this.measurementView.hide()}onDeactivate(){this._resetSnappingState()}onInputEvent(e){switch(e.type){case"immediate-double-click":this._handleImmediateDoubleClick(e);break;case"immediate-click":this._handleImmediateClick(e);break;case"pointer-move":this._handlePointerMove(e);break;case"drag":this._handleDrag(e);break;case"key-down":this._handleKeyDown(e)}}_setupManipulators(){const e=e=>e.events.on("grab-changed",(()=>{if(this.analysisViewData.path.isValidPolygon){const e=this.manipulators.some((e=>e.manipulator.grabbing));this.polygonState=e?"editing":"measured"}})),t=t=>{this.addHandles([Nt(t,((e,t,s,i)=>{const r=Tt(e),n=e.metadata,o=this._snappingManager,a=this._getSnappingContext(i),l=this._updatingHandles,{snappingStep:h,cancelSnapping:p}=Xt({snappingManager:o,snappingContext:a,updatingHandles:l});s=s.next(r).next((t=>(this.analysisViewData.lastDraggedVertex=null,this.analysisViewData.path.setVertexPosition(n,c),e.location=c,t))).next(p),t.next(r).next(Gt(this.view)).next(...h).next((t=>{e.location=t.mapEnd,this.analysisViewData.lastDraggedVertex="end"===t.action?null:n,this.analysisViewData.path.setVertexPosition(n,It(t.mapEnd))}));const c=It(this.analysisViewData.path.getVertexPositionAsPoint(n))})),e(t)],t)};this.manipulators.forEach((({manipulator:e})=>{t(e)})),this.addHandles([this.manipulators.on("after-add",(({item:{manipulator:e}})=>{t(e)})),this.manipulators.on("after-remove",(({item:{manipulator:e}})=>this.removeHandles(e)))])}_handleImmediateDoubleClick(e){f(e)&&("drawing"===this.polygonState&&this.finishMeasurement(),e.stopPropagation())}_handleDrag(e){"editing"===this.polygonState&&e.stopPropagation()}_handleImmediateClick(e){if(!f(e))return;const t=$t(e),{pointerType:s}=e;if(this.active)switch(this.polygonState){case"initial":case"measured":if(this._addVertexAt(t,s))return this.stagedPoint=null,this.polygonState="drawing",void e.stopPropagation();break;case"drawing":{const i=this.measurementView.vertexHandleAt(t,s);if(null==i){if(this._addVertexAt(t,s))return this.stagedPoint=null,void e.stopPropagation()}else 0===i.index&&(this.finishMeasurement(),e.stopPropagation());break}}"mouse"===e.pointerType&&this._hoverAt(t)}_handlePointerMove(e){if("mouse"===e.pointerType){const t=$t(e);this._hoverAt(t)}}_handleKeyDown(e){const{path:t}=this.analysisViewData;e.key===Qt.complete&&"drawing"===this.polygonState&&t.numVertices>=3&&(this.stagedPoint=null,this.finishMeasurement(),e.stopPropagation())}_hoverAt(e){const{polygonState:t}=this;if(this.active&&xs.has(t)){const t=this._pick(e);if(null!=t?.mapPoint){const e=this._getSnappingContext("mouse");this._updatingHandles.addPromise(Ut(this._snappingOperation.snap({point:t.mapPoint},this._snappingManager,e)))}}else this.stagedPoint=null}_addVertexAt(e,t){const s=this._pick(e),i=s?.mapPoint;if(null==i)return!1;this.analysis.valid&&"measured"===this.polygonState&&(this.analysis.clear(),this._set("created",!1),this.polygonState="initial");const r=this._getSnappingContext(t),n=this._snappingOperation.update({point:i},this._snappingManager,r),o=It(n,new ve);return this.analysisViewData.path.add(o),!0}_pick(e){const t=new Ss(e);return this.measurementView.pick(t)}_resetSnappingState(){this._snappingManager.doneSnapping(),this._snappingOperation.abort(),this._snappingOperation.stagedPoint=null}get test(){}};e([r({readOnly:!0})],Cs.prototype,"state",null),e([r()],Cs.prototype,"polygonState",void 0),e([r({readOnly:!0})],Cs.prototype,"cursor",null),e([r()],Cs.prototype,"measurementView",void 0),e([r()],Cs.prototype,"removeIncompleteOnCancel",void 0),e([r({constructOnly:!0})],Cs.prototype,"view",void 0),e([r({constructOnly:!0})],Cs.prototype,"analysis",void 0),e([r({constructOnly:!0})],Cs.prototype,"analysisViewData",void 0),e([r({readOnly:!0})],Cs.prototype,"manipulators",void 0),e([r()],Cs.prototype,"updating",null),e([r()],Cs.prototype,"stagedPoint",null),e([r()],Cs.prototype,"snappingOptions",null),Cs=e([o("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],Cs);const xs=new Set(["initial","drawing","measured"]),As=Cs;let Us=class extends(h(t)){constructor(e){super(e),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.stagedPoint=null,this.mode=j.Auto,this.tool=null,this.userOperation=null}initialize(){const{analysis:e,view:t}=this;this.path=new os({view:t,areaMeasurement:e}),this._analysisVisualization=new vs({view:t,analysis:e,analysisViewData:this}),this.addResolvingPromise(Promise.all([de(),ye()]).then((([s,i])=>{this.destroyed||(this._analysisController=new ns({view:t,analysis:e,analysisViewData:this,geodesicAreaMeasurementUtils:s,geodesicLengthMeasurementUtils:i}))}))),this.addHandles(p(this,As))}destroy(){c(this),this.userOperation=i(this.userOperation),this._analysisController=s(this._analysisController),this._analysisVisualization=s(this._analysisVisualization),this.path.destroy()}get updating(){return!!this._analysisVisualization?.loadingMessages}get result(){const{measurementData:e}=this;if(null==e)return{area:null,mode:null,perimeter:null};const{unit:t}=this;if("euclidean"===e.actualMeasurementMode){const{area:s,perimeterLength:i}=e;return{area:null!=s?ls(s,t):null,perimeter:null!=i?hs(i,t):null,mode:"euclidean"}}const{geodesicArea:s,pathLength:i}=e;return{area:null!=s?ls(s,t):null,perimeter:null!=i?hs(i,t):null,mode:"geodesic"}}get viewData(){return this._analysisVisualization.viewData}get areaLabel(){return this._analysisVisualization.areaLabel}get perimeterLengthLabel(){return this._analysisVisualization.perimeterLengthLabel}get validMeasurement(){return this.path.isValidPolygon}get unit(){return this.analysis.unit??a(this.view)}get testData(){}place(e){return u(this,{placementOptions:e})}};e([r()],Us.prototype,"_analysisVisualization",void 0),e([r()],Us.prototype,"_analysisController",void 0),e([r({readOnly:!0})],Us.prototype,"type",void 0),e([r({constructOnly:!0,nonNullable:!0})],Us.prototype,"analysis",void 0),e([r()],Us.prototype,"updating",null),e([r()],Us.prototype,"result",null),e([r()],Us.prototype,"measurementData",void 0),e([r()],Us.prototype,"viewData",null),e([r()],Us.prototype,"areaLabel",null),e([r()],Us.prototype,"perimeterLengthLabel",null),e([r()],Us.prototype,"validMeasurement",null),e([r()],Us.prototype,"path",void 0),e([r()],Us.prototype,"lastDraggedVertex",void 0),e([r()],Us.prototype,"stagedPoint",void 0),e([r()],Us.prototype,"mode",void 0),e([r()],Us.prototype,"unit",null),e([r()],Us.prototype,"tool",void 0),e([r()],Us.prototype,"userOperation",void 0),Us=e([o("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],Us);const Os=Us;export{Os as default};
