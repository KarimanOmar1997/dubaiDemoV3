/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{s as t}from"../../../chunks/MapUtils.js";import{c as e}from"../../../chunks/maybe.js";import{RenderCategory as s}from"../webgl.js";import{F as r}from"../../../chunks/FBOAttachmentType.js";import{f as o,m as h}from"../../../chunks/enums.js";import"../../../chunks/mat4f64.js";import"../../../chunks/computeTranslationToOriginAndRotation.js";import"../../../chunks/mathUtils.js";import"../../../chunks/mat4.js";import"../../../chunks/common.js";import"../../../chunks/vec3f64.js";import"../../../chunks/projectBuffer.js";import"../../../chunks/unitUtils.js";import"../../../core/lang.js";import"../../../chunks/jsonMap.js";import"../../../config.js";import"../../../chunks/Logger.js";import"../../../chunks/pe.js";import"../../../chunks/assets.js";import"../../../request.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../core/Error.js";import"../../../chunks/jsonUtils.js";import"../../../core/promiseUtils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/events.js";import"../../../chunks/persistableUrlUtils.js";import"../../../chunks/geodesicConstants.js";class i{constructor(t,e){this.key=t,this._free=e,this.incarnation=0,this._refCount=1}retain(t=1){this._refCount+=t}release(){return 0===this._refCount?(console.log(`Releasing already released FBO attachment "${this.name}" in ${(new Error).stack}`),!0):(--this._refCount,0===this._refCount&&(this._free(),!0))}}var c;!function(t){t[t.FBO=0]="FBO",t[t.DEPTH=1]="DEPTH",t[t.COLOR=2]="COLOR"}(c||(c={}));class a extends i{constructor(t,e,s){super(t,s),this.attachment=e,this.name=""}dispose(){this.attachment.dispose()}get cachedMemory(){return this.attachment.usedMemory}}class n extends a{constructor(){super(...arguments),this.type=c.DEPTH}}class u extends n{constructor(t,e,s){super(t,e,s),this.attachment=e}}class l extends i{constructor(t,e,r,o,h,i){super(t,i),this.fbo=r,this.type=c.FBO,this._colors=new Map,this._name=s.COMPOSITE,this.acquireColor=null,this.acquireDepth=null,this._name=e,this.acquireColor=o,this.acquireDepth=h}dispose(){this.fbo?.dispose()}get cachedMemory(){return this.fbo?.usedMemory||0}get numberOfColorAttachments(){return this._colors.size}get name(){return this._name}setName(t){this._name=t}getTexture(t=o){return t===h?this.fbo?.depthStencilTexture:this.fbo?.getColorTexture(t)}get depthTexture(){return this.getTexture(h)}getAttachment(t=o){return t===h?this._depth:this._colors.get(t)}hasAttachment(e){return t(this._colors,(t=>t.name===e))}attachDepth(t){return t?.retain(),this.detachDepth(),t&&this.fbo?.attachDepthStencil(t.attachment),this._depth=t,this}detachDepth(){this.fbo?.detachDepthStencilTexture(),this.fbo?.detachDepthStencilBuffer(),this._depth=e(this._depth)}obtainDepthTexture(){const t=this._depth;return e=t,e?.attachment.type!==r.Texture?null:(this.fbo?.detachDepthStencilTexture(),this._depth=null,t);var e}attachColor(t,e){return t.retain(),this.detachColor(e),this.fbo?.attachColorTexture(t.attachment,e),this._colors.set(e,t),this}detachColor(t){this.fbo?.detachColorTexture(t);const e=this._colors.get(t);this._colors.delete(t),e?.release()}detachAllColors(){this._colors.forEach(((t,e)=>this.detachColor(e)))}detachAll(){this.detachAllColors(),this.detachDepth()}detachAllColorsBut0(){this._colors.forEach(((t,e)=>{e!==o&&this.detachColor(e)}))}detachAllButColor0(){this.detachAllColorsBut0(),this.detachDepth()}}export{c as A,a as M,u as a,l as default};
