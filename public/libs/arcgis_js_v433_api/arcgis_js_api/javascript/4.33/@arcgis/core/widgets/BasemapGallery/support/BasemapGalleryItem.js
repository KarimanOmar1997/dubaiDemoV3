/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as s}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import e from"../../../core/Identifiable.js";import{isAbortError as r}from"../../../core/promiseUtils.js";import{watch as i,whenOnce as o}from"../../../core/reactiveUtils.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/lang.js";import"../../../chunks/Logger.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import{f as l}from"../../../chunks/basemapUtils.js";import"../../../core/Handles.js";import"../../../chunks/maybe.js";import"../../../chunks/get.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/Lifecycle.js";import"../../../chunks/metadata.js";import"../../../chunks/ObjectPool.js";import"../../../chunks/ObservableBase.js";import"../../../chunks/tracking.js";import"../../../chunks/watch.js";import"../../../core/scheduling.js";import"../../../chunks/nextTick.js";import"../../../chunks/PooledArray.js";import"../../../chunks/SetUtils.js";import"../../../chunks/SimpleTrackingTarget.js";import"../../../config.js";import"../../../chunks/ensureType.js";import"../../../chunks/MapUtils.js";import"../../../chunks/Warning.js";import"../../../core/Error.js";import"../../../chunks/events.js";import"../../../core/Collection.js";import"../../../core/Evented.js";import"../../../chunks/shared.js";import"../../../chunks/SimpleObservable.js";import"../../../chunks/jsonUtils.js";import"../../../core/urlUtils.js";import"../../../chunks/utils2.js";import"../../../chunks/colorUtils2.js";import"../../../chunks/screenUtils.js";import"../../../chunks/mat4.js";import"../../../chunks/common.js";import"../../../chunks/basemapDefinitions.js";import"../../../chunks/assets.js";import"../../../request.js";import"../../../kernel.js";import"../../../chunks/persistableUrlUtils.js";import"../../../chunks/messages.js";import"../../../chunks/locale.js";let c=class extends(e.IdentifiableMixin(t)){constructor(s){super(s),this.compatibilityFunction=null,this.error=null,this.state="loading",this.view=null}initialize(){const s=()=>this.refresh();this.addHandles([i((()=>this.basemap?.loadStatus),s),i((()=>this.compatibilityFunction),s),i((()=>this.view&&"basemapTerrain"in this.view&&this.view.basemapTerrain?.tilingScheme),s),i((()=>this.view?.ready),s),i((()=>this.view?.spatialReference),s)]),this.refresh()}destroy(){this._cancelRefresh(),this.basemap=null,this.compatibilityFunction=null,this.view=null}get _spatialReferenceTask(){return l(this.view,this.basemap)}set basemap(s){s&&s.load().catch((()=>{})),this._set("basemap",s)}get spatialReference(){return this._spatialReferenceTask.spatialReference}refresh(){this._cancelRefresh(),this._set("state","loading");const s=this.basemap?.loadStatus;if("loaded"!==s&&"failed"!==s)return;if(!this.compatibilityFunction)return void("loaded"===s?(this._set("state","ready"),this._set("error",null)):(this._set("state","error"),this._set("error",this.basemap.loadError)));const t=new AbortController,{signal:e}=t;this.compatibilityFunction(this,{signal:e}).then((()=>o((()=>!this._spatialReferenceTask.updating),e))).then((()=>{this._set("state","ready"),this._set("error",null)})).catch((s=>{r(s)||(this._set("state","error"),this._set("error",s))})),this._refreshController=t}_cancelRefresh(){this._refreshController&&(this._refreshController.abort(),this._refreshController=null)}};s([a({readOnly:!0})],c.prototype,"_spatialReferenceTask",null),s([a()],c.prototype,"basemap",null),s([a()],c.prototype,"compatibilityFunction",void 0),s([a({readOnly:!0})],c.prototype,"error",void 0),s([a({readOnly:!0})],c.prototype,"spatialReference",null),s([a({readOnly:!0})],c.prototype,"state",void 0),s([a()],c.prototype,"view",void 0),c=s([n("esri.widgets.BasemapGallery.support.BasemapGalleryItem")],c);const p=c;export{p as default};
