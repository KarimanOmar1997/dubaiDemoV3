/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import e from"../../core/Evented.js";import{m as i}from"../../chunks/handleUtils.js";import{L as s}from"../../chunks/Logger.js";import{r as n}from"../../chunks/maybe.js";import{when as a,watch as r,on as l,initial as o,syncAndInitial as h}from"../../core/reactiveUtils.js";import{schedule as g}from"../../core/scheduling.js";import{b as p,d as u,e as d,i as c,r as m,o as y}from"../../chunks/timeUtils.js";import{property as f}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import{subclass as _}from"../../core/accessorSupport/decorators/subclass.js";import T from"../../views/3d/environment/SunLighting.js";import w from"../../views/3d/environment/VirtualLighting.js";import{p as S}from"../../chunks/earthUtils.js";import U from"../Slider/SliderViewModel.js";import{f as j,a as D}from"../../chunks/timeWidgetUtils.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/Lifecycle.js";import"../../chunks/metadata.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../chunks/SetUtils.js";import"../../chunks/SimpleTrackingTarget.js";import"../../config.js";import"../../chunks/ensureType.js";import"../../chunks/MapUtils.js";import"../../core/Error.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../core/promiseUtils.js";import"../../chunks/events.js";import"../../chunks/Warning.js";import"../../chunks/date.js";import"../../chunks/jsonMap.js";import"../../chunks/locale.js";import"../../chunks/constants.js";import"../../chunks/datetime.js";import"../../webscene/SunLighting.js";import"../../core/JSONSupport.js";import"../../chunks/reader.js";import"../../chunks/writer.js";import"../../webscene/VirtualLighting.js";import"../../chunks/mathUtils.js";import"../../chunks/unitUtils.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/jsonUtils.js";import"../../chunks/persistableUrlUtils.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/Geometry.js";import"../../geometry/SpatialReference.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/SunCalc.js";import"../../chunks/css.js";import"../../chunks/globalCss.js";var v;!function(t){t[t.NORTHERN=0]="NORTHERN",t[t.SOUTHERN=1]="SOUTHERN"}(v||(v={}));const O={spring:{dayOfMonth:20,month:2},summer:{dayOfMonth:21,month:5},fall:{dayOfMonth:23,month:8},winter:{dayOfMonth:21,month:11}},k=["spring","summer","fall","winter"];function L(t,e,i){const s=P(e,i),{dayOfMonth:n,month:a}=O[s],r=new Date(t.getTime());return r.setMonth(a,n),r}function P(t,e){return e===v.NORTHERN?t:function(t){const e=k.indexOf(t);return k[(e+2)%4]}(t)}let b=class extends U{constructor(){super(...arguments),this.utcOffset=null,this.timezonePickerOpen=!1}};t([f()],b.prototype,"utcOffset",void 0),t([f()],b.prototype,"timezonePickerOpen",void 0),b=t([_("esri.widgets.Daylight.support.SliderWithDropdownViewModel")],b);let E=class extends e.EventedAccessor{constructor(t){super(t),this.view=null,this.timeSliderViewModel=new b({min:0,max:1439,values:[0],labelFormatFunction:j,inputFormatFunction:j}),this.lightingUpdateInterval=200,this._oldLighting=null,this.playSpeedMultiplier=1,this._lastTime=null,this._sunrise=null,this._sunset=null,this._cachedLightingDateUTC=new Date(0),this._cachedDisplayUTCOffset=0,this._lastLightingUpdate=0,this._lightingUpdateHandle=null}initialize(){this.addHandles([a((()=>this.view),(t=>t.when((()=>this._updateLighting()))),o),r((()=>{const t=this._lighting;return"sun"===t?.type?t.date:null}),(t=>this._scheduleLightingUpdate(t))),l((()=>this._lighting),"timezone-will-change",(t=>this._timezoneWillChange(t)),{onListenerAdd:()=>this._timezoneWillChange(null)}),r((()=>!0===this.view?.stationary),(()=>{(this.dayPlaying||this.yearPlaying)&&this._updateSunriseAndSunset()}),o),r((()=>{const t=this.timeSliderViewModel;return{vm:t,state:t.state,sliderPosition:this.timeSliderPosition}}),(({vm:t,state:e,sliderPosition:i})=>{"ready"===e&&t.setValue(0,i)})),r((()=>this.timeSliderViewModel?.utcOffset),(t=>{null!=t&&(this.utcOffset=t)})),r((()=>({utcOffset:this.utcOffset,sliderViewModel:this.timeSliderViewModel})),(({utcOffset:t,sliderViewModel:e})=>{e&&(e.utcOffset=t)}),h),r((()=>this.timeSliderViewModel.timezonePickerOpen),(()=>this.stopPlaying())),r((()=>this.timeSliderViewModel.values),(t=>this._setTimeSliderPosition(t?.[0]??0,{forceLightingUpdate:!1})))])}destroy(){this._cancelLightingUpdate(),this.view=null}get isSupported(){return null==this.view||"3d"===this.view.type}get utcOffset(){return this._cachedDisplayUTCOffset}set utcOffset(t){t!==this.utcOffset&&null!=this._lighting&&"virtual"!==this._lighting.type&&(this._lighting.displayUTCOffset=t,this._updateLighting())}get localDate(){return d(this._lightingDateDisplay)}set localDate(t){this.view?.ready?c(t)&&t.getTime()!==this.localDate.getTime()&&(this._lightingDateDisplay=m(this._lightingDateDisplay,t)):s.getLogger(this).error("The localDate property cannot be set before the view and the widget are ready.")}get timeSliderPosition(){var t;return t=this._lightingDateDisplay,p(t,"minutes")}set timeSliderPosition(t){this.view?.ready&&"ready"===this.timeSliderViewModel?.state?this._setTimeSliderPosition(t,{forceLightingUpdate:!0}):s.getLogger(this).error("The timeSliderPosition property cannot be set before the view and the widget are ready.")}_setTimeSliderPosition(t,e){var i;Math.abs(t-this.timeSliderPosition)<=1/60||(this.stopPlaying(),this._onUserDateTimeChange(),e.forceLightingUpdate&&(this._cancelLightingUpdate(),this._updateLighting()),this._lightingDateDisplay=(i=this._lightingDateDisplay,u(i,t,"minutes")))}_timezoneFromCamera(t,e){if(null==e||!t.cameraTrackingEnabled)return 0;const i=S([e.longitude,e.latitude]);return null==i?0:Math.round(i.hours+i.minutes/60+i.seconds/3600)}get directShadowsEnabled(){return this._lighting?.directShadowsEnabled??!1}set directShadowsEnabled(t){const e=this._lighting;e&&(e.directShadowsEnabled=t)}get sunLightingEnabled(){return"sun"===this._lightingType}set sunLightingEnabled(t){const e=this._environment;if(t===this._get("sunLightingEnabled")||null==e)return;const i=e.lighting,s=this._oldLighting;this._oldLighting=i;const n={directShadowsEnabled:i.directShadowsEnabled,cameraTrackingEnabled:i.cameraTrackingEnabled},a=t?"sun":"virtual";let r;r=null!=s&&s.type===a?s:t?new T:new w,r.set(n),e.lighting=r,t||(this.stopPlaying(),this.timeSliderViewModel.timezonePickerOpen=!1)}set playingState(t){this.playingState!==t&&(this._set("playingState",t),"none"!==t&&this.sunLightingEnabled&&(this._updateSunriseAndSunset(),this._lastTime=Date.now(),this._play(),this._onUserDateTimeChange()))}get dayPlaying(){return"day"===this.playingState}set dayPlaying(t){t?this.playingState="day":this.dayPlaying&&(this.playingState="none")}get yearPlaying(){return"year"===this.playingState}set yearPlaying(t){t?this.playingState="year":this.yearPlaying&&(this.playingState="none")}get currentSeason(){return t=this.localDate,e=this._currentHemisphere,P(function(t){const e=t.getTime(),i=L(t,"spring",v.NORTHERN).getTime(),s=L(t,"summer",v.NORTHERN).getTime(),n=L(t,"fall",v.NORTHERN).getTime(),a=L(t,"winter",v.NORTHERN).getTime();return e>=i&&e<s?"spring":e>=s&&e<n?"summer":e>=n&&e<a?"fall":"winter"}(t),e);var t,e}set currentSeason(t){this.stopPlaying(),this._onUserDateTimeChange();const e=P(t,this._currentHemisphere);this.localDate=L(this.localDate,e,v.NORTHERN)}get _currentHemisphere(){const t=this.view?.camera?.position?.latitude;return null==t||t>=0?v.NORTHERN:v.SOUTHERN}get _environment(){return this.view?.environment}get _lighting(){return this._environment?.lighting}get _lightingType(){return this._lighting?.type}get _lightingDateDisplay(){return y(this._cachedLightingDateUTC,this._cachedDisplayUTCOffset,"hours")}set _lightingDateDisplay(t){const e=this._lighting;if(null==e||!this.sunLightingEnabled||"virtual"===e.type||!c(t))return;const i=e.date,s=y(t,-this._cachedDisplayUTCOffset,"hours");s.getTime()!==i.getTime()&&(e.date=s,this._updateLighting())}stopPlaying(){this.playingState="none"}toggleDayPlaying(){this.dayPlaying=!this.dayPlaying}toggleYearPlaying(){this.yearPlaying=!this.yearPlaying}toggleSunLightingEnabled(){this.stopPlaying(),this.sunLightingEnabled=!this.sunLightingEnabled}toggleDirectShadowsEnabled(){this.stopPlaying(),this.directShadowsEnabled=!this.directShadowsEnabled}onDateChange(t){this.dayPlaying=!1,this.localDate=t,this._onUserDateTimeChange()}_updateLighting(t){const e=Date.now();this._lastLightingUpdate=e;const{view:i}=this,s=this._lighting;if(null==i||null==s||"virtual"===s.type)return;t??=s.date;const n=s.displayUTCOffset,a=null!=n?n:this._timezoneFromCamera(s,i.camera?.position);this._cachedLightingDateUTC.getTime()!==t.getTime()&&(this._cachedLightingDateUTC=new Date(t.getTime())),this._cachedDisplayUTCOffset!==a&&(this._cachedDisplayUTCOffset=a)}_timezoneWillChange(t){const e=this._lighting;if(null==e||"virtual"===e.type||!e.cameraTrackingEnabled)return;let i;if(t)i=t.timezoneOffset;else{if(null!=e.displayUTCOffset)return;i=T.calculateTimezoneOffset(e.positionTimezoneInfo)}e.displayUTCOffset=i,this._scheduleLightingUpdate()}_scheduleLightingUpdate(t){if(t&&(this._lightingUpdateHandle=n(this._lightingUpdateHandle),!c(t)))return;if(this._lightingUpdateHandle)return;const e=Date.now()-this._lastLightingUpdate,s=this.lightingUpdateInterval-e;let a=null;const r=()=>{this._updateLighting(t),this._lightingUpdateHandle===a&&(this._lightingUpdateHandle=null)};if(s<=0)this._lightingUpdateHandle=a=g(r);else{const t=setTimeout(r,s);this._lightingUpdateHandle=a=i((()=>clearTimeout(t)))}}_cancelLightingUpdate(){this._lightingUpdateHandle=n(this._lightingUpdateHandle)}_play(){const t=this._lighting;if(null==t||!this.sunLightingEnabled||"virtual"===t.type)return;const e=t.date;if(this.dayPlaying||this.yearPlaying){const i=Date.now()-(this._lastTime??0);if(this.dayPlaying){this._lastTime=Date.now();const s=function(t,e,i){const s=12e5,n=3e5,a=18e5,r=2e5;if(null==t||null==e||isNaN(t.getTime())&&isNaN(e.getTime()))return n;const l=i.getTime(),o=t.getTime(),h=e.getTime(),g=o-36e5,p=o+36e5,u=h-48e5,d=h+24e5;let c=n;return l>=g&&l<=p?c=l-g<=s?a-(l-g)/s*16e5:p-l<=6e5?n-(p-l)/s*2*1e5:r:l>=u&&l<=d?c=l-u<=6e5?n-(l-u)/s*2*1e5:d-l<=s?a-(d-l)/s*16e5:r:(l<o||l>h)&&(c=a),c}(this._sunrise,this._sunset,e)*this.playSpeedMultiplier/100*i;if(s>0){let i=new Date(e.getTime()+s);const n=t.displayUTCOffset??0;if(((i.getUTCHours()+n)%24+24)%24<((e.getUTCHours()+n)%24+24)%24){const t=864e5;i=new Date(e.getTime()+s-t)}t.date=i}}else if(i>1e3){this._lastTime=Date.now();const i=(e.getUTCMonth()+1)%12,s=new Date(e.getTime());s.setUTCMonth(i),t.date=s}requestAnimationFrame((()=>this._play()))}}_updateSunriseAndSunset(){const t=this._lighting;if(null==t||"virtual"===t.type||!this.sunLightingEnabled)return;const e=this.view?.camera?.position;if(null==e)return;const{latitude:i,longitude:s}=e,{date:n,displayUTCOffset:a}=t,r=D(n,i,s,a??0);r&&(this._sunrise=new Date(r.sunrise),this._sunset=new Date(r.sunset))}_onUserDateTimeChange(){this.emit("user-date-time-change",{})}};t([f()],E.prototype,"view",void 0),t([f({type:b,nonNullable:!0})],E.prototype,"timeSliderViewModel",void 0),t([f()],E.prototype,"isSupported",null),t([f()],E.prototype,"lightingUpdateInterval",void 0),t([f()],E.prototype,"utcOffset",null),t([f({type:Date})],E.prototype,"localDate",null),t([f()],E.prototype,"timeSliderPosition",null),t([f()],E.prototype,"directShadowsEnabled",null),t([f()],E.prototype,"sunLightingEnabled",null),t([f({type:["none","day","year"],value:"none"})],E.prototype,"playingState",null),t([f()],E.prototype,"dayPlaying",null),t([f()],E.prototype,"yearPlaying",null),t([f()],E.prototype,"playSpeedMultiplier",void 0),t([f()],E.prototype,"currentSeason",null),t([f()],E.prototype,"_lastTime",void 0),t([f()],E.prototype,"_sunrise",void 0),t([f()],E.prototype,"_sunset",void 0),t([f()],E.prototype,"_cachedLightingDateUTC",void 0),t([f()],E.prototype,"_cachedDisplayUTCOffset",void 0),t([f()],E.prototype,"_currentHemisphere",null),t([f()],E.prototype,"_environment",null),t([f()],E.prototype,"_lighting",null),t([f()],E.prototype,"_lightingType",null),t([f()],E.prototype,"_lightingDateDisplay",null),E=t([_("esri.widgets.Daylight.DaylightViewModel")],E);const C=E;export{b as S,C as default,k as o};
