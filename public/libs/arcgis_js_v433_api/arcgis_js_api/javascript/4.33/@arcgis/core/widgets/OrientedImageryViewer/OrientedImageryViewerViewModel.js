/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.33/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../Graphic.js";import{i as r,e as i,equalsShallow as a}from"../../core/lang.js";import{c as s}from"../../chunks/asyncUtils.js";import o from"../../core/Collection.js";import n,{b as c}from"../../core/Accessor.js";import l from"../../core/Error.js";import u from"../../core/Evented.js";import{m as p}from"../../chunks/handleUtils.js";import{L as m}from"../../chunks/Logger.js";import{c as h,r as d,e as g}from"../../chunks/mathUtils.js";import{d as y,a as f}from"../../chunks/maybe.js";import v from"../../core/Promise.js";import{throwIfAborted as w,isAbortError as j,waitTick as k}from"../../core/promiseUtils.js";import{R as b}from"../../chunks/ReactiveMap.js";import{watch as M,syncAndInitial as I,whenOnce as _,sync as P,when as F,initial as x,on as S}from"../../core/reactiveUtils.js";import{sqlAnd as R}from"../../core/sql.js";import{g as V,j as C,i as O}from"../../chunks/unitUtils.js";import{property as A}from"../../core/accessorSupport/decorators/property.js";import{subclass as L}from"../../core/accessorSupport/decorators/subclass.js";import{u as T}from"../../chunks/vec2.js";import{i as G}from"../../chunks/jsonUtils.js";import{U as z}from"../../chunks/UpdatingHandles.js";import E from"../../geometry/Extent.js";import{union as D}from"../../geometry/geometryEngineAsync.js";import U from"../../geometry/Multipoint.js";import H,{d as B}from"../../geometry/Point.js";import N from"../../geometry/Polygon.js";import q from"../../geometry/Polyline.js";import{projectWithZConversion as $,project as W}from"../../chunks/projectionUtils.js";import Z from"../../geometry/SpatialReference.js";import{i as J}from"../../chunks/coordsUtils.js";import{normalizeMapX as Q}from"../../geometry/support/normalizeUtils.js";import{geographicToWebMercator as K}from"../../geometry/support/webMercatorUtils.js";import X from"../../layers/GraphicsLayer.js";import Y from"../../layers/MediaLayer.js";import{i as ee}from"../../chunks/typeUtils2.js";import te from"../../layers/OrientedImageryLayer.js";import re from"../../core/Clonable.js";import ie from"../../core/JSONSupport.js";import{cast as ae}from"../../core/accessorSupport/decorators/cast.js";import{e as se}from"../../chunks/enumeration.js";import{r as oe}from"../../chunks/reader.js";import{w as ne}from"../../chunks/writer.js";import{g as ce}from"../../chunks/zscale.js";import{d as le,e as ue,f as pe,g as me,h as he,b as de,o as ge,j as ye,k as fe,a as ve}from"../../chunks/utils15.js";import{I as we,J as je,K as ke,a as be,L as Me,M as Ie,N as _e,O as Pe,P as Fe,Q as xe,R as Se,S as Re,T as Ve,U as Ce,V as Oe,h as Ae,W as Le,X as Te,Y as Ge,x as ze,w as Ee,s as De,A as Ue,C as He,D as Be,o as Ne,Z as qe,worldToImagePanoramic as $e,worldToImage as We,_ as Ze,$ as Je,n as Qe,a0 as Ke,f as Xe,a1 as Ye,a2 as et,a3 as tt,a4 as rt,k as it,a5 as at,a6 as st,a7 as ot,a8 as nt,a9 as ct,aa as lt,ab as ut,l as pt,ac as mt,ad as ht,p as dt,ae as gt,af as yt,ag as ft,ah as vt,ai as wt,aj as jt,H as kt,ak as bt,al as Mt}from"../../layers/orientedImagery/transformations/worldToImage.js";import It from"../../rest/support/Query.js";import{c as _t}from"../../chunks/mat3f64.js";import{z as Pt,f as Ft}from"../../chunks/vec3f64.js";import{t as xt,s as St,k as Rt}from"../../chunks/mat3.js";import{a as Vt,i as Ct,s as Ot,f as At}from"../../chunks/vec3.js";import Lt from"../../geometry/Circle.js";import Tt from"../../geometry/Mesh.js";import Gt from"../../geometry/support/MeshComponent.js";import{M as zt}from"../../chunks/MeshVertexAttributes.js";import{c as Et,r as Dt,i as Ut}from"../../chunks/plane.js";import{imageToWorldPanoramic as Ht,imageToWorld as Bt,u as Nt}from"../../layers/orientedImagery/transformations/imageToWorld.js";import qt from"../../layers/support/ExtentAndRotationGeoreference.js";import{a as $t}from"../../chunks/floorFilterUtils.js";import Wt from"../../layers/support/VideoElement.js";import Zt from"../../symbols/SimpleLineSymbol.js";import Jt from"../../views/MapView.js";import Qt from"../../views/draw/Draw.js";import{s as Kt}from"../../chunks/drawUtils.js";import{V as Xt}from"../../chunks/InputManager.js";import Yt from"../../Camera.js";import er from"../Widget.js";import{l as tr}from"../../chunks/componentsUtils.js";import"../../chunks/widgetUtils.js";import{t as rr}from"../../chunks/jsxFactory.js";import ir from"../../Ground.js";import ar from"../../Map.js";import sr from"../../request.js";import{J as or}from"../../chunks/jsonMap.js";import nr from"../../views/SceneView.js";import cr from"../Zoom/ZoomViewModel.js";import lr from"../../geometry/support/MeshMaterial.js";import ur from"../../geometry/support/MeshTexture.js";import pr from"../../symbols/FillSymbol3DLayer.js";import mr from"../../symbols/MeshSymbol3D.js";import{g as hr}from"../../chunks/globalCss.js";import{v as dr}from"../../chunks/vmEvent.js";import{fromJSON as gr}from"../../geometry/support/jsonUtils.js";import yr from"../../Color.js";import{m as fr,f as vr}from"../../chunks/colorUtils.js";import wr from"../../symbols/CIMSymbol.js";import jr from"../../symbols/IconSymbol3DLayer.js";import kr from"../../symbols/LineSymbol3D.js";import br from"../../symbols/ObjectSymbol3DLayer.js";import Mr from"../../symbols/PathSymbol3DLayer.js";import Ir from"../../symbols/PointSymbol3D.js";import _r from"../../symbols/SimpleFillSymbol.js";import Pr from"../../symbols/SimpleMarkerSymbol.js";import{getPathExtension as Fr}from"../../core/urlUtils.js";import{b as xr,f as Sr}from"../../chunks/quantityFormatUtils.js";import{b as Rr,d as Vr}from"../../chunks/quantityUtils.js";import{execute as Cr}from"../../geometry/operators/areaOperator.js";import{load as Or,execute as Ar}from"../../geometry/operators/geodeticAreaOperator.js";import{load as Lr,execute as Tr}from"../../geometry/operators/geodeticDensifyOperator.js";import{load as Gr,execute as zr}from"../../geometry/operators/geodeticLengthOperator.js";import{execute as Er}from"../../geometry/operators/lengthOperator.js";import{execute as Dr}from"../../geometry/operators/projectOperator.js";import{execute as Ur}from"../../geometry/operators/simplifyOperator.js";import{isSupported as Hr,geodesicLengths as Br,geodesicAreas as Nr}from"../../geometry/support/geodesicUtils.js";import{rotate as qr,intersect as $r,nearestCoordinate as Wr}from"../../geometry/geometryEngine.js";import Zr from"../../layers/ImageryTileLayer.js";import Jr from"../../layers/support/RasterFunction.js";import{convolutionKernel as Qr}from"../../layers/support/rasterFunctionConstants.js";import Kr from"../../layers/support/TileInfo.js";import{y as Xr}from"../../chunks/viewpointUtils.js";import Yr from"../Sketch/SketchViewModel.js";import"../../PopupTemplate.js";import"../../chunks/ensureType.js";import"../../chunks/MapUtils.js";import"../../layers/support/fieldUtils.js";import"../../config.js";import"../../chunks/SetUtils.js";import"../../chunks/guards.js";import"../../chunks/datetime.js";import"../../popup/content.js";import"../../popup/content/AttachmentsContent.js";import"../../popup/content/Content.js";import"../../core/Handles.js";import"../../chunks/get.js";import"../../chunks/utils.js";import"../../chunks/Lifecycle.js";import"../../chunks/metadata.js";import"../../chunks/ObjectPool.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../chunks/watch.js";import"../../core/scheduling.js";import"../../chunks/nextTick.js";import"../../chunks/PooledArray.js";import"../../chunks/events.js";import"../../chunks/SimpleTrackingTarget.js";import"../../chunks/Warning.js";import"../../popup/support/AttachmentsOrderByInfo.js";import"../../popup/content/CustomContent.js";import"../../popup/content/ExpressionContent.js";import"../../popup/ElementExpressionInfo.js";import"../../popup/content/FieldsContent.js";import"../../popup/FieldInfo.js";import"../../popup/support/FieldInfoFormat.js";import"../../chunks/date.js";import"../../chunks/locale.js";import"../../chunks/constants.js";import"../../popup/content/MediaContent.js";import"../../popup/content/BarChartMediaInfo.js";import"../../popup/content/mixins/ChartMediaInfo.js";import"../../popup/content/mixins/MediaInfo.js";import"../../popup/content/support/ChartMediaInfoValue.js";import"../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../chunks/colorUtils2.js";import"../../chunks/chartMediaInfoUtils.js";import"../../popup/content/ColumnChartMediaInfo.js";import"../../popup/content/ImageMediaInfo.js";import"../../popup/content/support/ImageMediaInfoValue.js";import"../../popup/content/LineChartMediaInfo.js";import"../../popup/content/PieChartMediaInfo.js";import"../../popup/content/RelationshipContent.js";import"../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../popup/content/TextContent.js";import"../../popup/content/UtilityNetworkAssociationsContent.js";import"../../popup/support/UtilityNetworkAssociationType.js";import"../../popup/ExpressionInfo.js";import"../../popup/LayerOptions.js";import"../../popup/RelatedRecordsInfo.js";import"../../support/actions/ActionBase.js";import"../../core/Identifiable.js";import"../../support/actions/ActionButton.js";import"../../support/actions/ActionToggle.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/createFeatureId.js";import"../../chunks/typeUtils.js";import"../../symbols/LabelSymbol3D.js";import"../../symbols/Symbol3D.js";import"../../chunks/collectionUtils.js";import"../../portal/Portal.js";import"../../kernel.js";import"../../core/Loadable.js";import"../../portal/PortalGroup.js";import"../../portal/PortalQueryParams.js";import"../../geometry/Geometry.js";import"../../chunks/pe.js";import"../../chunks/assets.js";import"../../chunks/persistableUrlUtils.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalUser.js";import"../../portal/PortalFolder.js";import"../../symbols/ExtrudeSymbol3DLayer.js";import"../../symbols/Symbol3DLayer.js";import"../../chunks/utils5.js";import"../../symbols/edges/Edges3D.js";import"../../chunks/screenUtils.js";import"../../chunks/materialUtils.js";import"../../chunks/opacityUtils.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";import"../../chunks/Symbol3DMaterial.js";import"../../symbols/LineSymbol3DLayer.js";import"../../symbols/LineStyleMarker3D.js";import"../../chunks/lineMarkers.js";import"../../symbols/patterns/LineStylePattern3D.js";import"../../chunks/utils6.js";import"../../symbols/patterns/StylePattern3D.js";import"../../chunks/colors.js";import"../../chunks/symbolLayerUtils3D.js";import"../../chunks/aaBoundingBox.js";import"../../chunks/aaBoundingRect.js";import"../../symbols/Symbol.js";import"../../symbols/TextSymbol3DLayer.js";import"../../symbols/Font.js";import"../../symbols/WaterSymbol3DLayer.js";import"../../symbols/support/StyleOrigin.js";import"../../chunks/Thumbnail.js";import"../../chunks/calloutUtils.js";import"../../symbols/callouts/Callout3D.js";import"../../symbols/callouts/LineCallout3D.js";import"../../symbols/support/Symbol3DVerticalOffset.js";import"../../symbols/PictureFillSymbol.js";import"../../symbols/FillSymbol.js";import"../../symbols/LineSymbol.js";import"../../symbols/LineSymbolMarker.js";import"../../chunks/urlUtils.js";import"../../symbols/PictureMarkerSymbol.js";import"../../symbols/MarkerSymbol.js";import"../../symbols/PolygonSymbol3D.js";import"../../symbols/TextSymbol.js";import"../../symbols/WebStyleSymbol.js";import"../../chunks/zmUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/boundsUtils.js";import"../../chunks/common.js";import"../../core/workers/workers.js";import"../../core/workers/Connection.js";import"../../chunks/Queue.js";import"../../core/workers/RemoteClient.js";import"../../intl.js";import"../../chunks/number2.js";import"../../chunks/substitute.js";import"../../chunks/messages.js";import"../../chunks/projectBuffer.js";import"../../chunks/geodesicConstants.js";import"../../chunks/projectXYZToVector.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/normalizeUtilsCommon.js";import"../../chunks/simplify.js";import"../../chunks/utils10.js";import"../../chunks/utils11.js";import"../../chunks/GraphicsCollection.js";import"../../layers/Layer.js";import"../../time/TimeExtent.js";import"../../chunks/timeUtils.js";import"../../layers/mixins/BlendLayer.js";import"../../chunks/layerContainerType.js";import"../../chunks/jsonUtils2.js";import"../../chunks/parser.js";import"../../chunks/utils2.js";import"../../chunks/mat4.js";import"../../layers/mixins/ScaleRangeLayer.js";import"../../chunks/ElevationInfo.js";import"../../chunks/unitConversionUtils.js";import"../../chunks/lengthUtils.js";import"../../chunks/MultiOriginJSONSupport.js";import"../../layers/mixins/OperationalLayer.js";import"../../chunks/commonProperties.js";import"../../tables/AttributeTableTemplate.js";import"../../tables/elements/AttributeTableGroupElement.js";import"../../tables/elements/AttributeTableAttachmentElement.js";import"../../tables/elements/AttributeTableElement.js";import"../../tables/elements/AttributeTableFieldElement.js";import"../../tables/elements/AttributeTableRelationshipElement.js";import"../../layers/mixins/PortalLayer.js";import"../../chunks/layerUtils.js";import"../../layers/catalog/catalogUtils.js";import"../../portal/PortalItem.js";import"../../portal/PortalItemResource.js";import"../../portal/PortalRating.js";import"../../chunks/portalItemUtils.js";import"../../layers/support/ControlPointsGeoreference.js";import"../../chunks/perspectiveUtils.js";import"../../chunks/vec2f64.js";import"../../chunks/GeoreferenceBase.js";import"../../layers/support/ImageElement.js";import"../../chunks/imageUtils.js";import"../../chunks/uuid.js";import"../../layers/support/MediaElementBase.js";import"../../layers/support/CornersGeoreference.js";import"../../chunks/resourceExtension.js";import"../../chunks/mediaLayerUtils2.js";import"../../layers/support/LocalMediaElementSource.js";import"../../chunks/BoundsStore.js";import"../../chunks/PooledRBush.js";import"../../chunks/quickselect.js";import"../../chunks/MediaElementView.js";import"../../chunks/normalizeUtilsSync.js";import"../../chunks/sanitizerUtils.js";import"../../chunks/videoUtils.js";import"../../chunks/interfaces.js";import"../../layers/FeatureLayer.js";import"../../form/FormTemplate.js";import"../../form/ExpressionInfo.js";import"../../form/elements/GroupElement.js";import"../../form/elements/AttachmentElement.js";import"../../form/elements/Element.js";import"../../form/elements/inputs/attachments/AttachmentInput.js";import"../../chunks/Input.js";import"../../form/elements/inputs/attachments/AudioInput.js";import"../../chunks/utils7.js";import"../../form/elements/inputs/attachments/DocumentInput.js";import"../../form/elements/inputs/attachments/ImageInput.js";import"../../form/elements/inputs/attachments/SignatureInput.js";import"../../form/elements/inputs/attachments/VideoInput.js";import"../../form/elements/FieldElement.js";import"../../form/elements/inputs.js";import"../../form/elements/inputs/BarcodeScannerInput.js";import"../../form/elements/inputs/TextInput.js";import"../../form/elements/inputs/Input.js";import"../../form/elements/inputs/ComboBoxInput.js";import"../../form/elements/inputs/DatePickerInput.js";import"../../form/elements/inputs/DateTimeOffsetPickerInput.js";import"../../form/elements/inputs/DateTimePickerInput.js";import"../../form/elements/inputs/RadioButtonsInput.js";import"../../form/elements/inputs/SwitchInput.js";import"../../form/elements/inputs/TextAreaInput.js";import"../../form/elements/inputs/TextBoxInput.js";import"../../form/elements/inputs/TimePickerInput.js";import"../../chunks/domains.js";import"../../layers/support/CodedValueDomain.js";import"../../layers/support/Domain.js";import"../../layers/support/InheritedDomain.js";import"../../layers/support/RangeDomain.js";import"../../chunks/formUtils.js";import"../../form/elements/RelationshipElement.js";import"../../form/elements/TextElement.js";import"../../form/elements/UtilityNetworkAssociationsElement.js";import"../../chunks/editsZScale.js";import"../../chunks/queryZScale.js";import"../../rest/support/FeatureSet.js";import"../../layers/support/Field.js";import"../../chunks/fieldType.js";import"../../layers/mixins/APIKeyMixin.js";import"../../chunks/ArcGISService.js";import"../../layers/mixins/CustomParametersMixin.js";import"../../layers/mixins/DisplayFilteredLayer.js";import"../../layers/support/DisplayFilterInfo.js";import"../../chunks/scaleUtils.js";import"../../layers/support/DisplayFilter.js";import"../../chunks/displayFilterUtils.js";import"../../chunks/EditBusLayer.js";import"../../layers/mixins/FeatureEffectLayer.js";import"../../layers/support/FeatureEffect.js";import"../../layers/support/FeatureFilter.js";import"../../chunks/DataLayerSource.js";import"../../chunks/FullTextSearch.js";import"../../chunks/spatialRelationships.js";import"../../rest/support/StatisticDefinition.js";import"../../layers/mixins/FeatureLayerBase.js";import"../../geometry/HeightModelInfo.js";import"../../chunks/timeZoneUtils.js";import"../../chunks/featureLayerUtils.js";import"../../chunks/featureQueryAll.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/Renderer.js";import"../../renderers/support/AuthoringInfo.js";import"../../renderers/support/AuthoringInfoVisualVariable.js";import"../../chunks/colorRamps.js";import"../../rest/support/AlgorithmicColorRamp.js";import"../../rest/support/ColorRamp.js";import"../../rest/support/MultipartColorRamp.js";import"../../renderers/mixins/VisualVariablesMixin.js";import"../../renderers/visualVariables/ColorVariable.js";import"../../renderers/visualVariables/VisualVariable.js";import"../../renderers/visualVariables/support/ColorStop.js";import"../../renderers/visualVariables/OpacityVariable.js";import"../../renderers/visualVariables/support/OpacityStop.js";import"../../renderers/visualVariables/RotationVariable.js";import"../../renderers/visualVariables/SizeVariable.js";import"../../renderers/visualVariables/support/SizeStop.js";import"../../chunks/visualVariableUtils.js";import"../../chunks/commonProperties2.js";import"../../symbols/support/jsonUtils.js";import"../../chunks/defaults.js";import"../../chunks/defaultsJSON.js";import"../../renderers/UniqueValueRenderer.js";import"../../chunks/diffUtils.js";import"../../chunks/RendererLegendOptions.js";import"../../renderers/support/UniqueValue.js";import"../../renderers/support/UniqueValueClass.js";import"../../renderers/support/UniqueValueGroup.js";import"../../renderers/support/UniqueValueInfo.js";import"../../chunks/styleUtils.js";import"../../rest/support/AttachmentQuery.js";import"../../rest/support/NormalizationBinParametersMixin.js";import"../../rest/support/RelationshipQuery.js";import"../../layers/support/GeometryFieldsInfo.js";import"../../layers/support/LayerFloorInfo.js";import"../../layers/support/Relationship.js";import"../../chunks/serviceCapabilitiesUtils.js";import"../../chunks/infoFor3D.js";import"../../layers/support/Subtype.js";import"../../layers/mixins/FeatureReductionLayer.js";import"../../layers/support/AggregateField.js";import"../../layers/support/ExpressionInfo.js";import"../../chunks/FeatureReduction.js";import"../../layers/support/FeatureReductionBinning.js";import"../../layers/support/LabelClass.js";import"../../chunks/labelUtils.js";import"../../renderers/support/jsonUtils.js";import"../../chunks/typeUtils3.js";import"../../renderers/ClassBreaksRenderer.js";import"../../renderers/support/ClassBreakInfo.js";import"../../renderers/DictionaryRenderer.js";import"../../chunks/LRUCache.js";import"../../chunks/MemCache.js";import"../../chunks/DictionaryScriptEvaluator.js";import"../../chunks/Version.js";import"../../layers/support/FieldsIndex.js";import"../../chunks/UnknownTimeZone.js";import"../../chunks/ArcadeExpression.js";import"../../chunks/TimeOnly.js";import"../../chunks/enum.js";import"../../chunks/utils3.js";import"../../chunks/defaultCIMValues.js";import"../../chunks/enums2.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/support/AttributeColorInfo.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/support/HeatmapColorStop.js";import"../../chunks/heatmapUtils.js";import"../../chunks/vec4.js";import"../../chunks/vec4f64.js";import"../../renderers/PieChartRenderer.js";import"../../layers/support/FeatureReductionCluster.js";import"../../layers/support/FeatureReductionSelection.js";import"../../chunks/clusterUtils.js";import"../../chunks/MD5.js";import"../../layers/mixins/OrderedLayer.js";import"../../layers/support/OrderByInfo.js";import"../../layers/mixins/PublishableLayer.js";import"../../layers/support/PublishingInfo.js";import"../../layers/mixins/RefreshableLayer.js";import"../../layers/mixins/TemporalLayer.js";import"../../layers/support/TimeInfo.js";import"../../time/TimeInterval.js";import"../../layers/mixins/TrackableLayer.js";import"../../layers/support/TrackInfo.js";import"../../layers/support/TrackPartInfo.js";import"../../layers/support/FeatureTemplate.js";import"../../layers/support/FeatureType.js";import"../../chunks/fieldProperties.js";import"../../chunks/labelingInfo.js";import"../../chunks/TitleCreator.js";import"../../chunks/versionUtils.js";import"../../chunks/styleUtils2.js";import"../../support/popupUtils.js";import"../../chunks/mat4f64.js";import"../../chunks/vec32.js";import"../../layers/ElevationLayer.js";import"../../layers/mixins/ArcGISCachedService.js";import"../../chunks/TileInfoTilemapCache.js";import"../../chunks/TilemapCache.js";import"../../chunks/ByteSizeUnit.js";import"../../chunks/TileKey.js";import"../../chunks/memoryEstimations.js";import"../../layers/support/LOD.js";import"../../chunks/LercDecoder.js";import"../../chunks/WorkerHandle.js";import"../../layers/ImageryLayer.js";import"../../layers/mixins/ArcGISImageService.js";import"../../layers/support/DimensionalDefinition.js";import"../../chunks/pixelRangeUtils.js";import"../../chunks/colorRampUtils.js";import"../../chunks/stretchRendererUtils.js";import"../../layers/support/MosaicRule.js";import"../../chunks/rasterEnums.js";import"../../chunks/imageBitmapUtils.js";import"../../layers/support/MultidimensionalSubset.js";import"../../layers/support/PixelBlock.js";import"../../chunks/rasterFieldUtils.js";import"../../layers/support/RasterInfo.js";import"../../layers/support/RasterBandInfo.js";import"../../layers/support/RasterSensorInfo.js";import"../../chunks/multidimensionalUtils.js";import"../../chunks/RasterSymbolizer.js";import"../../chunks/_commonjsHelpers.js";import"../../chunks/vectorFieldUtils.js";import"../../chunks/stretchUtils.js";import"../../chunks/rasterRendererHelper.js";import"../../chunks/datasetUtils.js";import"../../renderers/FlowRenderer.js";import"../../renderers/RasterColormapRenderer.js";import"../../renderers/support/ColormapInfo.js";import"../../renderers/RasterShadedReliefRenderer.js";import"../../renderers/RasterStretchRenderer.js";import"../../renderers/VectorFieldRenderer.js";import"../../chunks/utils4.js";import"../../symbols/support/cimSymbolUtils.js";import"../../chunks/gfxUtils.js";import"../../chunks/generateRendererUtils.js";import"../../chunks/rasterTypeUtils.js";import"../../rest/imageService.js";import"../../rest/support/FindImagesParameters.js";import"../../rest/support/FindImagesResult.js";import"../../rest/support/ImageInspectionInfo.js";import"../../rest/support/CameraInfoMixin.js";import"../../rest/support/ImageAngleParameters.js";import"../../rest/support/ImageAngleResult.js";import"../../rest/support/ImageAreaParameters.js";import"../../rest/support/BaseImageMeasureParameters.js";import"../../chunks/imageMeasureUtils.js";import"../../rest/support/ImageAreaResult.js";import"../../rest/support/BaseImageMeasureResult.js";import"../../rest/support/ImageBoundaryParameters.js";import"../../rest/support/ImageBoundaryResult.js";import"../../rest/support/ImageDistanceParameters.js";import"../../rest/support/ImageDistanceResult.js";import"../../rest/support/ImageGPSInfoParameters.js";import"../../rest/support/ImageGPSInfoResult.js";import"../../rest/support/CameraInfo.js";import"../../rest/support/ImageGPSInfo.js";import"../../rest/support/ImageHeightParameters.js";import"../../rest/support/ImageHeightResult.js";import"../../rest/support/ImageHistogramParameters.js";import"../../rest/support/ImageIdentifyParameters.js";import"../../rest/support/ImageIdentifyResult.js";import"../../rest/support/ImagePixelLocationParameters.js";import"../../rest/support/ImagePixelLocationResult.js";import"../../rest/support/ImagePointParameters.js";import"../../rest/support/ImagePointResult.js";import"../../rest/support/ImageSampleParameters.js";import"../../rest/support/ImageSampleResult.js";import"../../rest/support/ImageSample.js";import"../../rest/support/ImageToMapMultirayParameters.js";import"../../rest/support/ImageToMapParameters.js";import"../../rest/support/ImageUrlParameters.js";import"../../rest/support/ImageUrlResult.js";import"../../rest/support/ImageVolumeParameters.js";import"../../rest/support/ImageVolumeResult.js";import"../../rest/support/ImageVolume.js";import"../../rest/support/MapToImageParameters.js";import"../../rest/support/MeasureAreaFromImageResult.js";import"../../rest/support/MeasureFromImageParameters.js";import"../../rest/support/MeasureLengthFromImageResult.js";import"../../chunks/fetchRasterInfo.js";import"../../chunks/executeForIds.js";import"../../chunks/query.js";import"../../chunks/pbfQueryUtils.js";import"../../chunks/pbf.js";import"../../chunks/OptimizedGeometry.js";import"../../chunks/OptimizedFeature.js";import"../../chunks/OptimizedFeatureSet.js";import"../../chunks/executeQueryJSON.js";import"../../chunks/RasterJobHandlerMixin.js";import"../../chunks/dataUtils.js";import"../../layers/mixins/RasterPresetRendererMixin.js";import"../../renderers/support/RasterPresetRenderer.js";import"../../layers/support/ElevationSampler.js";import"../../chunks/ElevationTile.js";import"../../chunks/ElevationSamplerData.js";import"../../chunks/requestPresets.js";import"../../chunks/SimpleGeometryCursor.js";import"../../layers/mixins/ImageryTileMixin.js";import"../../chunks/QueueProcessor.js";import"../../chunks/signal.js";import"../../chunks/RawBlockCache.js";import"../../chunks/rasterProjectionHelper.js";import"../../chunks/clipUtils.js";import"../../chunks/rasterFunctionHelper.js";import"../../chunks/focalStatUtils.js";import"../../chunks/xmlUtilities.js";import"../../chunks/GCSShiftTransform.js";import"../../chunks/axisAngleDegrees.js";import"../../chunks/quat.js";import"../../chunks/quatf64.js";import"../../geometry/support/MeshGeoreferencedVertexSpace.js";import"../../geometry/support/MeshLocalVertexSpace.js";import"../../geometry/support/MeshTransform.js";import"../../chunks/meshVertexSpaceUtils.js";import"../../chunks/triangulationUtils.js";import"../../chunks/earcut.js";import"../../chunks/Indices.js";import"../../chunks/deduplicate.js";import"../../chunks/projectPointToVector.js";import"../../chunks/vertexSpaceConversion.js";import"../../chunks/spatialReferenceEllipsoidUtils.js";import"../../chunks/computeTranslationToOriginAndRotation.js";import"../../chunks/BufferView.js";import"../../chunks/vec42.js";import"../../chunks/External.js";import"../../geometry/support/MeshTextureTransform.js";import"../../geometry/support/MeshMaterialMetallicRoughness.js";import"../../chunks/meshProperties.js";import"../../chunks/vector.js";import"../../chunks/mathUtils2.js";import"../../chunks/deepClone.js";import"../../chunks/languageUtils.js";import"../../chunks/ImmutableArray.js";import"../../chunks/shared2.js";import"../../chunks/number.js";import"../../views/View2D.js";import"../../Viewpoint.js";import"../../CameraLayout.js";import"../../chunks/Cyclical.js";import"../../chunks/CollectionFlattener.js";import"../../views/BreakpointsOwner.js";import"../../views/DOMContainer.js";import"../../chunks/domUtils.js";import"../../chunks/projector.js";import"../../views/PopupView.js";import"../../views/View.js";import"../../views/BasemapView.js";import"../../views/Magnifier.js";import"../../chunks/SelectionManager.js";import"../../chunks/selectionUtils.js";import"../../views/Theme.js";import"../../chunks/ViewEvents.js";import"../../chunks/IViewEvents.js";import"../../chunks/interfaces2.js";import"../../chunks/keybindings.js";import"../../chunks/screenUtils2.js";import"../../chunks/HighlightDefaults.js";import"../../views/support/HighlightOptions.js";import"../../views/input/Input.js";import"../../views/input/gamepad/GamepadSettings.js";import"../../views/input/gamepad/GamepadInputDevice.js";import"../../views/navigation/Navigation.js";import"../../chunks/a11yUtils.js";import"../../views/navigation/NavigationActionMap.js";import"../../views/navigation/gamepad/GamepadSettings.js";import"../../chunks/heightModelInfoUtils.js";import"../../chunks/ViewingMode.js";import"../../chunks/projectionUtils2.js";import"../../chunks/collectionUtils2.js";import"../../Basemap.js";import"../../chunks/loadAll.js";import"../../chunks/basemapDefinitions.js";import"../../support/BasemapStyle.js";import"../../chunks/writeUtils.js";import"../../chunks/groundInstanceUtils.js";import"../../effects/FocusAreas.js";import"../../effects/FocusArea.js";import"../../chunks/persistable.js";import"../../chunks/multiOriginJSONSupportUtils.js";import"../../effects/FocusAreaOutline.js";import"../../chunks/PolygonCollection.js";import"../../chunks/editableLayers.js";import"../../chunks/basemapEnsureType.js";import"../../chunks/basemapUtils.js";import"../../support/LayersMixin.js";import"../../support/TablesMixin.js";import"../../chunks/ManagedCanvas.js";import"../../chunks/Scheduler.js";import"../../chunks/debugFlags.js";import"../../views/ViewAnimation.js";import"../../chunks/Animation.js";import"../../chunks/easing.js";import"../../chunks/unitBezier.js";import"../../views/2d/ViewState.js";import"../../chunks/mat2d.js";import"../../chunks/mat2df32.js";import"../../chunks/mat2df64.js";import"../../chunks/mat3f32.js";import"../../chunks/vec2f32.js";import"../../chunks/hitTestUtils.js";import"../../chunks/rbush.js";import"../../chunks/Tile.js";import"../../chunks/TileKey2.js";import"../../chunks/TileStrategy.js";import"../../chunks/ScheduledQueueProcessor.js";import"../../chunks/clippingUtils.js";import"../../chunks/util.js";import"../../chunks/definitions.js";import"../../chunks/enums.js";import"../../chunks/Texture.js";import"../../chunks/FBOAttachmentType.js";import"../../chunks/getDataTypeBytes.js";import"../../chunks/enums4.js";import"../../chunks/highlightOptionsUtils.js";import"../../chunks/screenshotUtils.js";import"../../chunks/Timeline.js";import"../../chunks/WebGLRequirements.js";import"../../chunks/capabilities2.js";import"../../views/ui/DefaultUI.js";import"../../views/ui/UI.js";import"../../chunks/modeUtils.js";import"../Attribution.js";import"../Attribution/AttributionViewModel.js";import"../../chunks/ILyr3DWasmPerSceneView.js";import"../../chunks/accessibleHandler.js";import"../../chunks/messageBundle.js";import"../../chunks/jsxWidgetSupport.js";import"../Compass.js";import"../Compass/CompassViewModel.js";import"../../chunks/utils24.js";import"../support/GoTo.js";import"../../chunks/goToUtils.js";import"../NavigationToggle.js";import"../NavigationToggle/NavigationToggleViewModel.js";import"../Zoom.js";import"../../chunks/utils8.js";import"../../chunks/Version2.js";import"../../webmap/background/ColorBackground.js";import"../../views/draw/MultipointDrawAction.js";import"../../views/draw/DrawAction.js";import"../../chunks/dehydratedPoint.js";import"../../chunks/SnappingVisualizer2D.js";import"../../chunks/normalizedPoint.js";import"../../chunks/elevationInfoUtils.js";import"../../chunks/Settings.js";import"../../chunks/SnappingVisualizer.js";import"../../chunks/RightAngleSnappingHint.js";import"../../chunks/PointSnappingHint.js";import"../../chunks/EditGeometryOperations.js";import"../../chunks/geometry2dUtils.js";import"../../chunks/SnappingContext.js";import"../../chunks/SnappingOperation.js";import"../../chunks/DrawEvents.js";import"../../views/draw/PointDrawAction.js";import"../../chunks/automaticLengthMeasurementUtils.js";import"../../chunks/geodesicLengthMeasurementUtils.js";import"../../chunks/projectVectorToVector.js";import"../../chunks/geodesicMeasurementUtils.js";import"../../chunks/geodeticCurveType.js";import"../../views/draw/PolygonDrawAction.js";import"../../chunks/DrawingMode.js";import"../../views/draw/PolylineDrawAction.js";import"../../views/draw/SegmentDrawAction.js";import"../../chunks/surfaceCoordinateSystems.js";import"../../chunks/projectBoundingRect.js";import"../../chunks/RenderCoordsHelper.js";import"../../chunks/projectVectorToPoint.js";import"../../chunks/boundedPlane.js";import"../../chunks/ray.js";import"../../chunks/lineSegment.js";import"../../chunks/sphere.js";import"../../chunks/dehydratedFeatureUtils.js";import"../../chunks/tagSymbols.js";import"../../views/GroundView.js";import"../../chunks/cameraUtils.js";import"../../views/3d/webgl/RenderCamera.js";import"../../chunks/frustum.js";import"../../chunks/DepthRange.js";import"../../chunks/Intersector2.js";import"../../chunks/HUDIntersectorResult.js";import"../../chunks/IntersectorResult.js";import"../../chunks/verticalOffsetUtils.js";import"../../chunks/orientedBoundingBox.js";import"../../chunks/earthUtils.js";import"../../chunks/spatialReferenceSupport.js";import"../../chunks/TerrainConst.js";import"../../chunks/RenderGeometry.js";import"../../chunks/GridLocalOriginFactory.js";import"../../chunks/Matrix4PassUniform.js";import"../../chunks/triangle.js";import"../../chunks/basicInterfaces.js";import"../../chunks/VertexAttribute.js";import"../../chunks/Matrix4BindUniform.js";import"../../chunks/BindType.js";import"../../chunks/glsl.js";import"../../chunks/ShaderTechniqueConfiguration.js";import"../../chunks/ShaderOutput.js";import"../../chunks/debugFlags2.js";import"../../chunks/Material.js";import"../../chunks/requestImageUtils.js";import"../../chunks/TextureFormat.js";import"../../chunks/AlphaCutoff.js";import"../../chunks/renderState.js";import"../../chunks/RibbonLineMaterial.js";import"../../chunks/Octree.js";import"../../chunks/InterleavedLayout.js";import"../../chunks/types.js";import"../../chunks/Float4DrawUniform.js";import"../../chunks/floatRGBA.js";import"../../chunks/GeometryUtil.js";import"../../chunks/vec3f32.js";import"../../chunks/ShaderBuilder.js";import"../../chunks/SceneLighting.js";import"../../chunks/weather.js";import"../../views/3d/environment/CloudyWeather.js";import"../../views/3d/environment/FoggyWeather.js";import"../../views/3d/environment/RainyWeather.js";import"../../views/3d/environment/SnowyWeather.js";import"../../views/3d/environment/SunnyWeather.js";import"../../chunks/BooleanBindUniform.js";import"../../views/3d/webgl.js";import"../../views/3d/webgl/RenderNode.js";import"../../chunks/VertexElementDescriptor.js";import"../../chunks/VertexArrayObject2.js";import"../../chunks/VertexArrayObject.js";import"../../chunks/NestedMap.js";import"../../chunks/HUDRenderStyle.js";import"../../chunks/FramebufferObject.js";import"../../chunks/glUtil.js";import"../../chunks/ShadowCastVisualizeTechniqueConfiguration.js";import"../../chunks/SunCalc.js";import"../../views/3d/environment/SunLighting.js";import"../../webscene/SunLighting.js";import"../../views/3d/environment/VirtualLighting.js";import"../../webscene/VirtualLighting.js";import"../../webscene/Environment.js";import"../../chunks/lightingTypes.js";import"../../webscene/background/Background.js";import"../../webscene/background/ColorBackground.js";import"../../chunks/TextureCompressionTracker.js";import"../../chunks/ElevationContext.js";import"../../chunks/hydratedFeatures.js";import"../../chunks/graphicUtils.js";import"../../chunks/HUDVisibility.glsl.js";import"../../chunks/VerticalOffset.glsl.js";import"../../chunks/dehydratedFeatures.js";import"../../chunks/quantizationUtils.js";import"../../chunks/featureConversionUtils.js";import"../../chunks/edgeUtils.js";import"../../chunks/NormalAttribute.glsl.js";import"../../chunks/Matrix3DrawUniform.js";import"../../chunks/primitiveObjectSymbolUtils.js";import"../../chunks/Intersector.js";import"../../chunks/DefaultMaterial.js";import"../../chunks/VertexColor.glsl.js";import"../../chunks/Matrix4sPassUniform.js";import"../../chunks/ray2.js";import"../../chunks/viewpointUtils2.js";import"../../chunks/RenderFeature.js";import"../../chunks/unitFormatUtils.js";import"../../chunks/ZoomMomentumEstimator.js";import"../../chunks/HUDMaterial.js";import"../../chunks/labelFormatUtils.js";import"../../chunks/NormalUtils.glsl.js";import"../../chunks/fontUtils.js";import"../../chunks/placementUtils.js";import"../../chunks/layerViewUtils.js";import"../../chunks/hitTest.js";import"../../chunks/LayerConstants.js";import"../../chunks/intersectorUtilsConversions.js";import"../../chunks/ElevationRange.js";import"../../chunks/hitTestSelectUtils.js";import"../../chunks/terrainUtils.js";import"../../views/3d/support/SceneViewPerformanceInfo.js";import"../../chunks/LayerViewPerformanceInfo.js";import"../../views/3d/support/LayerPerformanceInfo.js";import"../../chunks/DefaultLoadingContext.js";import"../../chunks/wosrLoader.js";import"../../chunks/mapCollectionUtils.js";import"../../chunks/ElevationQueryTileCache.js";import"../../chunks/Normals.js";import"../../chunks/enums5.js";import"../../chunks/SymbolRepository.js";import"../../chunks/config.js";import"../../chunks/StyleDefinition.js";import"../../chunks/TiledDisplayObject.js";import"../../chunks/DisplayObject.js";import"../../chunks/GeometryUtils.js";import"../../chunks/RenderableTile.js";import"../../chunks/resources.js";import"../../chunks/vec33.js";import"../../chunks/BlendColorsPremultiplied.glsl.js";import"../../chunks/vec4f32.js";import"../../views/3d/webgl/ManagedFBO.js";import"../../chunks/testSVGPremultipliedAlpha.js";import"../../chunks/RenderingContext.js";import"../../chunks/ProgramCache.js";import"../../chunks/Program.js";import"../../chunks/ITexture.js";import"../../chunks/makeScheduleFunction.js";import"../../chunks/apiConverter.js";import"../../chunks/Point2D.js";import"../../chunks/Envelope2D.js";import"../../chunks/Envelope.js";import"../../chunks/ProjectionTransformation.js";import"../../chunks/Transformation2D.js";import"../../chunks/OperatorDefinitions.js";import"../../chunks/jsonConverter.js";import"../../chunks/operatorGeodeticDensify.js";import"../../chunks/operatorSimplify.js";import"../../chunks/geometryEngineBase.js";import"../../chunks/hydrated.js";import"../../chunks/isSupportedObject.js";import"../../chunks/layerUtils2.js";import"../../views/interactive/sketch/SketchLabelOptions.js";import"../../chunks/SketchOptions.js";import"../../views/interactive/sketch/SketchTooltipOptions.js";import"../../chunks/SketchTooltipVisibleElements.js";import"../../views/interactive/sketch/SketchValueOptions.js";import"../../chunks/angularMeasurementUtils.js";import"../../chunks/SnappingManager.js";import"../../views/interactive/snapping/SnappingOptions.js";import"../../views/interactive/snapping/FeatureSnappingLayerSource.js";import"../../chunks/constraints.js";import"../../chunks/automaticAreaMeasurementUtils.js";import"../../chunks/geodesicAreaMeasurementUtils.js";import"../../chunks/sketchUtils.js";const ei="esri-oriented-imagery-viewer",ti=`${ei}__carousel`,ri=`${ei}__image-enhancement`,ii=`${ei}__navigation`,ai="--oi-navigation-tool-rotation-from",si="--oi-navigation-tool-rotation-to",oi=`${ii}-ui`,ni=`${oi}__direction`,ci=`${ei}__image-overlays`,li={addCoverage:`${ei}__body-additional-coverage`,addExpPoints:`${ei}__body-additional-camera-locations`,carousel:`${ei}__carousel`,carouselContainer:`${ti}-container`,carouselContent:`${ti}-content`,carouselItem:`${ti}-item`,carouselItemWrapper:`${ti}-item-wrapper`,currentCoverage:`${ei}__body-current-coverage`,feature:`${ii}-feature`,imageEnhancementToolContainer:`${ri}-tool-container`,imageEnhancementTools:`${ri}-tools`,imageEnhancementWrapper:`${ri}-wrapper`,imageOverlays:ci,imageOverlaysContainer:`${ci}-container`,imageOverlaysNoResult:`${ci}-no-result`,imageOverlaysIncreasedHeight:`${ci}-increased-height`,imageOverlaysLayerList:`${ci}-layer-list`,measurementResults:`${ei}__measurement-results`,measurementsBar:`${ei}__measurements-bar`,measurementsButton:`${ei}__measurements-button`,measurementsTable:`${ei}__measurements-table`,measurementDisplay:`${ei}__measurement-display`,messageBox:`${ei}__message-box`,navigationPathOffset0:`${ii}-feature-path-stop-offset-0`,navigationPathOffset1:`${ii}-feature-path-stop-offset-1`,navigationWrapper:`${ii}-wrapper`,navigationZoomed:`${ii}-wrapper--zoomed`,north:`${ii}-pointer-north`,outerSector:`${ii}-sector-outer`,overlaysSwitch:`${ci}-switch`,pointer:`${ii}-pointer`,rotateWithAnimation:`${ii}-animate`,sector:`${ii}-sector`,sectorCross:`${ii}-sector-cross`,sectorDisabled:`${ii}-sector-disabled`,sectorEnabled:`${ii}-sector-enabled`,sectorSeparator:`${ii}-sector-separator`,selectedFeaturePath:`${ii}-feature-path`,sketchTools:`${ei}__sketch-tools`,viewer:`${ei}__viewer`,viewerHidden:`${ei}__viewer--hidden`,viewerContainer:`${ei}__viewer-container`,viewerContainerMeasurement:`${ei}__viewer-container-measurement`,navigationUI:oi,navigationDirection:ni,navigationDirectionPad:`${ni}-pad`,navigationTop:`${ni}--top`,navigationBottom:`${ni}--bottom`,navigationLeft:`${ni}--left`,navigationRight:`${ni}--right`,navigationSettingsUI:`${ii}-settings-ui`};let ui=class extends n{constructor(e){super(e),this._compileTask=null,this.currentNode=null,this.nodes=new o}initialize(){this.addHandles(M((()=>({nodes:this.nodes,currenNode:this.currentNode,length:this.nodes.length,currentHeading:this.currentNode?.currentHeading,currentPitch:this.currentNode?.currentPitch})),(()=>{this._compileTask?.abort(),this._compileTask=s((async e=>{w(e),this.compile()}))}),I))}get state(){const e=this._compileTask;return e?e.finished?e.error?"error":"compiled":"compiling":"ready"}compile(){const{currentNode:e,nodes:t}=this;e&&t.length&&(e.reset(),we(e,t))}};e([A()],ui.prototype,"_compileTask",void 0),e([A()],ui.prototype,"currentNode",void 0),e([A()],ui.prototype,"nodes",void 0),e([A()],ui.prototype,"state",null),ui=e([L("esri.widgets.OrientedImageryViewer.components.NavigationUIPanoramicViewModel")],ui);const pi=ui;let mi=class extends er{constructor(e){super(e),this.navigate=null,this.viewModel=new pi,this._clickTask=null,this._handleClick=e=>{this._clickTask?.abort(),this._clickTask=s((async t=>{const r=e.target;if(!this.navigate||!this.currentNode)return;await _((()=>"compiled"===this.viewModel.state),{signal:t});const i=r.getAttribute("data-direction");w(t),await this.navigate(this.currentNode,{direction:i,signal:t})}))}}loadDependencies(){return tr({icon:()=>import("../../chunks/index.js")})}set currentNode(e){this.viewModel.currentNode=e}get currentNode(){return this.viewModel.currentNode}get nodes(){return this.viewModel.nodes}set nodes(e){this.viewModel.nodes=e}render(){const{currentNode:e}=this;if(!e)return null;const{currentHeading:t}=e,r={"--rotate-transform":` rotate(${-t}deg)`},i=e=>{const r=(e-(t??0)+360)%360;return r<45||r>=315?"towards":r>=135&&r<225?"backwards":r>=45&&r<135?"right":"left"},a=i(0),s=i(90),o=i(180),n=i(270);return rr("div",{class:li.navigationUI},rr("div",{class:li.navigationDirectionPad,styles:r},e[a]?rr("calcite-icon",{class:this.classes(li.navigationDirection,li.navigationTop),"data-direction":a,icon:"chevron-up",key:"chevron-up",onclick:this._handleClick}):null,e[s]?rr("calcite-icon",{class:this.classes(li.navigationDirection,li.navigationRight),"data-direction":s,icon:"chevron-right",key:"chevron-right",onclick:this._handleClick}):null,e[o]?rr("calcite-icon",{class:this.classes(li.navigationDirection,li.navigationBottom),"data-direction":o,icon:"chevron-down",key:"chevron-down",onclick:this._handleClick}):null,e[n]?rr("calcite-icon",{class:this.classes(li.navigationDirection,li.navigationLeft),"data-direction":n,icon:"chevron-left",key:"chevron-left",onclick:this._handleClick}):null))}};e([A()],mi.prototype,"currentNode",null),e([A()],mi.prototype,"navigate",void 0),e([A({nonNullable:!0})],mi.prototype,"nodes",null),e([A()],mi.prototype,"viewModel",void 0),e([A()],mi.prototype,"_clickTask",void 0),mi=e([L("esri.widgets.OrientedImageryViewer.components.NavigationUI360")],mi);const hi=mi;function di(){return tr({action:()=>import("../../chunks/index5.js"),"action-pad":()=>import("../../chunks/index69.js")})}function gi(e){const{expandDisabled:t,layout:r,overlayPositioning:i,actions:a}=e;return rr("calcite-action-pad",{expandDisabled:t,layout:r,overlayPositioning:i,slot:"fab"},a.map((e=>rr("calcite-action",{icon:e.icon,key:e.title,onclick:e.onclick,scale:e.scale,text:e.text,title:e.title}))))}function yi(e){const{uiStrings:t,layout:r,onAction:i}=e;return rr(gi,{actions:[{icon:"chevron-left",scale:"s",text:t.previous,title:t.previous,onclick:()=>{i({step:-1})}},{icon:"chevron-right",scale:"s",text:t.next,title:t.next,onclick:()=>{i({step:1})}}],expandDisabled:!0,layout:r,overlayPositioning:"fixed"})}let fi=class extends(re.ClonableMixin(ie)){constructor(e){super(e),this.maxFOV=0,this.minFOV=0,this.view=null,this.zoomFactor=5}get canZoomIn(){return!!this.view?.ready&&(0===this.minFOV||this.view.camera.fov>this.minFOV)}get canZoomOut(){return!!this.view?.ready&&(0===this.maxFOV||this.view.camera.fov<this.maxFOV)}};e([A({type:Boolean,readOnly:!0})],fi.prototype,"canZoomIn",null),e([A({type:Boolean,readOnly:!0})],fi.prototype,"canZoomOut",null),e([A({type:Number})],fi.prototype,"maxFOV",void 0),e([A({type:Number})],fi.prototype,"minFOV",void 0),e([A()],fi.prototype,"view",void 0),e([A({type:Number})],fi.prototype,"zoomFactor",void 0),fi=e([L("esri.widgets.PanoramicViewer.PanoramicZoomConditions")],fi);const vi=fi;let wi=class extends cr{constructor(e){super(e),this.panoramicZoomConditions=new vi,this.zoomTo=e=>{this.view.camera.fov=this.constrainFOV(e),this.view.camera=this.view.camera.clone()}}initialize(){this.addHandles([M((()=>[this.view?.ready,this.panoramicZoomConditions]),(()=>{this.view?.ready&&(this.panoramicZoomConditions.view=this.view,this.zoomTo(this.view.camera.fov))}),I),M((()=>[this.panoramicZoomConditions.maxFOV,this.panoramicZoomConditions.minFOV]),(([e,t])=>{null!=e&&null!=t&&this.zoomTo(this.view.camera.fov)}),P)])}get canZoomIn(){return this.panoramicZoomConditions.canZoomIn}get canZoomOut(){return this.panoramicZoomConditions.canZoomOut}get state(){return this.view?.ready?"ready":"disabled"}set view(e){this._set("view",e)}constrainFOV(e){const{maxFOV:t,minFOV:r}=this.panoramicZoomConditions;return h(e,r,t)}zoomIn(){if(!this.canZoomIn)return;const e=this.view.camera.fov-this.panoramicZoomConditions.zoomFactor;this.zoomTo(e)}zoomOut(){if(!this.canZoomOut)return;const e=this.view.camera.fov+this.panoramicZoomConditions.zoomFactor;this.zoomTo(e)}};e([A()],wi.prototype,"canZoomIn",null),e([A()],wi.prototype,"canZoomOut",null),e([A({type:vi})],wi.prototype,"panoramicZoomConditions",void 0),e([A()],wi.prototype,"state",null),e([A()],wi.prototype,"view",null),wi=e([L("esri.widgets.PanoramicViewer.PanoramicZoomViewModel")],wi);const ji=wi;function ki(e,t){return 2*d(Math.atan(Math.tan(g(e/2))*Math.sqrt(t**2+1)))}const bi="navigation",Mi="fov-constraint";let Ii=class extends u.EventedAccessor{constructor(e){super(e),this._startPosition=null,this._targetPosition=null,this._graphics=new X({elevationInfo:{mode:"relative-to-ground"}}),this._imageGraphic=null,this._loadController=null,this._map=new ar({ground:new ir({opacity:0,navigationConstraint:null}),layers:new o([this._graphics])}),this._zoomViewModel=null,this.autoLoad=!1,this.clickAction="none",this.imageSize=null,this.imageSource=null,this.navigationManager=null,this.navigationViewModel=null,this.pitch=90,this.state="ready",this.updatingHandles=new z,this.yaw=0,this._addNavigationHandles=()=>{this.imageRenderer.basemapTerrain.suspended=!0,this.imageRenderer.constraints.tilt.max=180,this.removeHandles(bi),this.addHandles([this.imageRenderer.on("mouse-wheel",this._handleWheel),this.imageRenderer.on("double-click",this._handleDoubleClick),this.imageRenderer.on("drag",this._handleDrag),this.imageRenderer.on("key-down",(e=>{const t=e.key;["+","-","Shift","_","=","ArrowUp","ArrowDown","ArrowRight","ArrowLeft"].includes(t)&&e.stopPropagation()}))],bi)},this._addHFOVHandles=()=>{this.removeHandles(Mi),this.addHandles(M((()=>[this.maxHFOV,this.minHFOV]),(()=>{this._zoomViewModel&&(this._zoomViewModel.panoramicZoomConditions=new vi({view:this.imageRenderer,maxFOV:this.maxHFOV,minFOV:this.minHFOV}))}),I),Mi)},this._addZoomHandles=()=>{this._zoomViewModel=new ji({view:this.imageRenderer,panoramicZoomConditions:new vi({maxFOV:this.maxHFOV,minFOV:this.minHFOV})});const e=this.imageRenderer.ui.find("zoom");e&&(e.viewModel=this._zoomViewModel),this._addHFOVHandles()},this._cancelLoadWithController=()=>{this._loadController?.abort(),this._loadController=null},this._handleDoubleClick=e=>{e.stopPropagation(),e.native.ctrlKey?this._zoomOut():this._zoomIn()},this._handleDrag=e=>{e.stopPropagation();const{action:t,x:r,y:i}=e;switch(t){case"start":this._startPosition=this._targetPosition={x:r,y:i};break;case"update":this._targetPosition={x:r,y:i},this._updateCameraHeadingAndTilt()}},this._handleImageClick=e=>{if("image-loaded"===this.state&&this.imageRenderer.ready)switch(this.clickAction){case"emit":e.stopPropagation(),this.emit("click",e);break;case"hittest":e.stopPropagation(),e.defer((async()=>{const t=await this.imageRenderer.hitTest(e.screenPoint,{include:this._graphics});t.results=t.results.filter((e=>"graphic"===e.type&&e.graphic!==this._imageGraphic)),this.emit("hittest-response",t)}));break;case"pixel-location":{if(e.stopPropagation(),!this.imageSize||!e.mapPoint)return void this.emit("pixel-location",null);const t=be(e.mapPoint,this.imageSize[0],this.imageSize[1]);this.emit("pixel-location",{...t,spatialReference:Z.WebMercator});break}}},this._handleWheel=e=>{const t=e.deltaX??e.native.deltaX;e.stopPropagation(),t>0||e.deltaY>0?this._zoomOut():this._zoomIn()},this._loadNavigationManager=async()=>{if(!this.navigationManager||this.navigationManager?.destroyed){const e=await import("../../chunks/NavigationManagerPanoramic.js").then((e=>e.default));this.navigationManager=new e({viewModel:this.navigationViewModel})}return this.navigationManager},this._loadWithController=()=>{this._cancelLoadWithController(),this._loadController=new AbortController,this.loadImage(this._loadController)},this._zoomIn=()=>this._zoomViewModel?.zoomIn(),this._zoomOut=()=>this._zoomViewModel?.zoomOut(),this.addGraphic=(e,t)=>"image-loaded"===this.state&&!this._graphics.graphics.includes(e)&&(this._graphics.graphics.add(e,t),!0),this.addManyGraphics=e=>{if("image-loaded"!==this.state)return!1;const t=e.filter((e=>!this._graphics.graphics.includes(e)));return this._graphics.graphics.addMany(t),!0},this.clearGraphics=()=>{this._graphics.graphics.removeAll()},this.clearImage=()=>{this.imageSize=null,this._removeImageSphere()},this.navigate=async(e,t)=>this.updatingHandles.addPromise(this.navigateInternal(e,t)),this.navigateInternal=async(e,t)=>{const r=await this._loadNavigationManager();return await r.navigate(e,t)},this.removeGraphic=e=>!("image-loaded"!==this.state||!this._graphics.graphics.includes(e)||(this._graphics.remove(e),0)),this.removeManyGraphics=e=>{if("image-loaded"!==this.state)return!1;const t=e.filter((e=>this._graphics.graphics.includes(e)));return this._graphics.removeMany(t),!0},this._imageRenderer=new nr({map:this._map,viewingMode:"local",camera:{position:je},environment:{atmosphereEnabled:!1,starsEnabled:!1,lighting:{type:"virtual"}},popupEnabled:!1,spatialReference:Z.WebMercator,ui:{components:["zoom"]}})}destroy(){this._imageRenderer.destroy()}initialize(){this.state="initialized",this.addHandles([M((()=>this.imageSource),(()=>{this.imageSource&&this.autoLoad&&this._loadWithController()}),I),M((()=>this.fov),(()=>{this._reloadCamera()}),I),M((()=>this.yaw),(e=>{this.camera&&(this.camera.heading=e,this._reloadCamera())}),I),M((()=>this.pitch),(e=>{this.camera&&(this.camera.tilt=e,this._reloadCamera())}),I),F((()=>this.imageRenderer.ready),(()=>{this._addNavigationHandles(),this._addZoomHandles()}),I),M((()=>this.clickAction),(e=>{this.removeHandles("image-click-action"),"none"!==e&&this.addHandles(this.imageRenderer.on("click",this._handleImageClick))}),I)],"default")}get camera(){return this.imageRenderer.destroying||this.imageRenderer.destroyed?null:this.imageRenderer.camera}set camera(e){!e||this.imageRenderer.destroying||this.imageRenderer.destroyed||(this.imageRenderer.camera=e.clone())}get fov(){return this.camera?.fov}set fov(e){Number.isFinite(e)&&this._zoomViewModel?.zoomTo(e)}get hfov(){if(!this.camera||!this.imageRenderer?.ready)return null;const{fov:e}=this.camera,{size:[t,r]}=this.imageRenderer,i=t/r,a=Math.atan(i);return 2*d(Math.atan(Math.tan(g(e/2))*Math.sin(a)))}get imageRenderer(){return this._imageRenderer}get maxHFOV(){const{size:[e,t]}=this.imageRenderer;return this.imageRenderer.ready?ki(Me,e/t):Me}get minHFOV(){const{size:[e,t]}=this.imageRenderer;return this.imageRenderer.ready?ki(Ie,e/t):Ie}get updating(){return this.updatingHandles.updating}get vfov(){if(!this.camera||!this.imageRenderer?.ready)return null;const{fov:e}=this.camera,{size:[t,r]}=this.imageRenderer,i=t/r,a=Math.atan(i);return 2*d(Math.atan(Math.tan(g(e/2))*Math.cos(a)))}async _loadImageInternal(e,t){let r;this.state="image-loading";try{r=(await sr(e,{responseType:"image",...t})).data}catch(e){throw j(e)?this.state="image-load-aborted":this.state="image-load-error",e}return this._updateImageSphere(r,t)}_reloadCamera(){this.camera=this.camera?.clone()}_removeImageSphere(){this._imageGraphic&&(this._graphics.remove(this._imageGraphic),this._imageGraphic=y(this._imageGraphic)),this.state="ready",this.imageSize=null}_updateCameraHeadingAndTilt(){if(!this._startPosition||!this._targetPosition||!this.camera)return;const e=this.camera.heading+(this._startPosition.x-this._targetPosition.x)/this.imageRenderer.width*this.camera.fov;this.yaw=(e+360)%360;const t=this.camera.tilt-(this._startPosition.y-this._targetPosition.y)/this.imageRenderer.height*this.imageRenderer.camera.tilt;this.pitch=Math.min(179.5,Math.max(.5,t)),this._startPosition=this._targetPosition}async _updateImageSphere(e,r){var i;return await k(r),this._imageGraphic=(i=function(e,t=je,r=ke){const i=t.clone();i.z=-500;const a=Tt.createSphere(i,{size:r,densificationFactor:2,vertexSpace:"georeferenced",material:new lr({colorTexture:new ur({data:e})})});if(a.components[0].trustSourceNormals=!0,a.vertexAttributes.uv){const e=a.vertexAttributes.uv.length??0;for(let t=0;t<e;t++)a.vertexAttributes.uv[2*t+0]=1-a.vertexAttributes.uv[2*t+0],a.vertexAttributes.uv[2*t+1]=a.vertexAttributes.uv[2*t+1]}return a.centerAt(i),a}(e),new t({geometry:i,symbol:new mr({symbolLayers:new o([new pr])})})),this._graphics.add(this._imageGraphic),this.state="image-loaded",_((()=>this.imageRenderer.ready),r).then((()=>{const{size:[e,t]}=this.imageRenderer;this.fov=ki(xe,e/t)})),this.imageSize=[e.width,e.height],this._imageGraphic.geometry}async loadImage(e){return this._removeImageSphere(),this.imageSource?this._loadImageInternal(this.imageSource,e):_e(this.declaredClass,new l(Pe("panoramic-viewer"),Fe("PanoramicViewerViewModel","imageSource")))}};e([A()],Ii.prototype,"_graphics",void 0),e([A()],Ii.prototype,"_imageGraphic",void 0),e([A()],Ii.prototype,"_imageRenderer",void 0),e([A()],Ii.prototype,"_loadController",void 0),e([A()],Ii.prototype,"_map",void 0),e([A()],Ii.prototype,"_zoomViewModel",void 0),e([A({type:Boolean})],Ii.prototype,"autoLoad",void 0),e([A({type:Yt})],Ii.prototype,"camera",null),e([se(new or({emit:"emit",hittest:"hittest",none:"none","pixel-location":"pixel-location"}))],Ii.prototype,"clickAction",void 0),e([A({type:Number})],Ii.prototype,"fov",null),e([A({readOnly:!0})],Ii.prototype,"hfov",null),e([A({readOnly:!0})],Ii.prototype,"imageRenderer",null),e([A()],Ii.prototype,"imageSize",void 0),e([A()],Ii.prototype,"imageSource",void 0),e([A({readOnly:!0})],Ii.prototype,"maxHFOV",null),e([A({readOnly:!0})],Ii.prototype,"minHFOV",null),e([A()],Ii.prototype,"navigationViewModel",void 0),e([A({type:Number})],Ii.prototype,"pitch",void 0),e([A()],Ii.prototype,"state",void 0),e([A()],Ii.prototype,"updatingHandles",void 0),e([A()],Ii.prototype,"updating",null),e([A({readOnly:!0})],Ii.prototype,"vfov",null),e([A({type:Number})],Ii.prototype,"yaw",void 0),Ii=e([L("esri.widgets.PanoramicViewer.PanoramicViewerViewModel")],Ii);const _i=Ii;let Pi=class extends er{constructor(e){super(e),this.navigationEnabled=!1,this.uiStrings=null,this.viewModel=new _i,this._afterContainerCreate=e=>{this.imageRenderer.container=e},this.addGraphic=(e,t)=>{this.viewModel.addGraphic(e,t)},this.addManyGraphics=e=>{this.viewModel.addManyGraphics(e)},this.clearGraphics=()=>{this.viewModel.clearGraphics()},this.clearImage=()=>{this.viewModel.clearImage()},this.loadImage=e=>this.viewModel.loadImage(e),this.navigate=async(e,t)=>await this.viewModel.navigate(e,t),this.removeGraphic=e=>{this.viewModel.removeGraphic(e)},this.removeManyGraphics=e=>{this.viewModel.removeManyGraphics(e)}}loadDependencies(){return Promise.all([tr({panel:()=>import("../../chunks/index25.js").then((e=>e.i))}),di()])}get autoLoad(){return this.viewModel.autoLoad}set autoLoad(e){this.viewModel.autoLoad=e}get camera(){return this.viewModel.camera}set camera(e){e&&(this.viewModel.camera=e)}get clickAction(){return this.viewModel.clickAction}set clickAction(e){this.viewModel.clickAction=e}get currentNode(){return this.navigationViewModel?.currentNode}get fov(){return this.camera?.fov}set fov(e){this.viewModel.fov=e}get hfov(){return this.viewModel.hfov}get icon(){return"i360-view"}set icon(e){this._overrideIfSome("icon",e)}get imageRenderer(){return this.viewModel.imageRenderer}get imageSize(){return this.viewModel.imageSize}get imageSource(){return this.viewModel.imageSource}set imageSource(e){this.viewModel.imageSource=e}get navigationMode(){return this.navigationViewModel?.navigationMode}get navigationNodes(){return this.navigationViewModel?.navigationNodes}get navigationViewModel(){return this.viewModel.navigationViewModel}set navigationViewModel(e){this.viewModel.navigationViewModel=e}get pitch(){return this.viewModel.pitch}set pitch(e){this.viewModel.pitch=e}get state(){return this.viewModel.state}get ui(){return this.imageRenderer.ui}get vfov(){return this.viewModel.vfov}get yaw(){return this.viewModel.yaw}set yaw(e){this.viewModel.yaw=e}get _navigationUI(){return rr(hi,{currentNode:this.currentNode,navigate:this.navigate,nodes:this.navigationNodes})}get _sequentialNavigationUI(){return rr(yi,{layout:"horizontal",uiStrings:this.uiStrings,onAction:e=>{this.navigate(this.currentNode,e)}})}_renderNavigationUI(){switch(this.navigationMode){case"directional":return this._navigationUI;case"sequential":return this._sequentialNavigationUI;default:return null}}render(){return rr("calcite-panel",{loading:this.viewModel.updating},rr("calcite-panel",{afterCreate:this._afterContainerCreate,bind:this,class:this.classes(hr.widget,"esri-panoramic-viewer")}),this.navigationEnabled?this._renderNavigationUI():null)}static{this.vnodeSelector="calcite-panel"}};e([A({type:Boolean})],Pi.prototype,"autoLoad",null),e([A({type:Yt})],Pi.prototype,"camera",null),e([A()],Pi.prototype,"clickAction",null),e([A()],Pi.prototype,"currentNode",null),e([A({type:Number})],Pi.prototype,"fov",null),e([A({readOnly:!0,type:Number})],Pi.prototype,"hfov",null),e([A()],Pi.prototype,"icon",null),e([A({readOnly:!0})],Pi.prototype,"imageRenderer",null),e([A({readOnly:!0})],Pi.prototype,"imageSize",null),e([A()],Pi.prototype,"imageSource",null),e([A({type:Boolean})],Pi.prototype,"navigationEnabled",void 0),e([A()],Pi.prototype,"navigationMode",null),e([A()],Pi.prototype,"navigationNodes",null),e([A()],Pi.prototype,"navigationViewModel",null),e([A({type:Number})],Pi.prototype,"pitch",null),e([A({readOnly:!0})],Pi.prototype,"state",null),e([A()],Pi.prototype,"ui",null),e([A()],Pi.prototype,"uiStrings",void 0),e([A({readOnly:!0,type:Number})],Pi.prototype,"vfov",null),e([dr(["click","hittest-response","pixel-location"]),A({type:_i})],Pi.prototype,"viewModel",void 0),e([A({type:Number})],Pi.prototype,"yaw",null),e([A()],Pi.prototype,"_navigationUI",null),e([A()],Pi.prototype,"_sequentialNavigationUI",null),Pi=e([L("esri.widgets.PanoramicViewer")],Pi);const Fi=Pi,xi=e=>"FA"===e,Si=async(e,t,r)=>{const i=new(await import("../../rest/support/AttachmentQuery.js").then((e=>e.default)))({objectIds:[t]}),a=await e.queryAttachments(i,r),s=a[`${t}`]?.[0],o=s?.url;if(!o)throw new l("NoAttachmentError","no attachments found",{[e.objectIdField]:t,layer:e});return{datasetFormat:s.contentType.split("/")[1].toUpperCase(),url:o}};async function Ri(e,t){const r="string"==typeof e,i=r?e:e.url,{pathname:a,searchParams:s,origin:o}=new URL(i);let n=r?Fr(a):e.datasetFormat;n||(n=await Ve(i));const c=await import("../../layers/ImageryTileLayer.js").then((e=>e.R)).then((e=>e.default)),l=await c.open({ioConfig:{customFetchParameters:Object.fromEntries(s),skipMapInfo:!0},datasetFormat:n?.toUpperCase(),url:`${o}${a}`,signal:t?.signal});return l?async function(e,t){const{level:r,offset:i,size:a}=function(e){const{storageInfo:t,width:r,height:i}=e.rasterInfo,{maximumPyramidLevel:a,pyramidScalingFactor:s}=t,o=s??2;return{level:a,offset:{x:0,y:0},size:{width:Math.ceil(r/o**a),height:Math.ceil(i/o**a)}}}(e),{pixelBlock:s}=await e.fetchRawPixels(r,i,a,t);return w(t),s}(l,{signal:t?.signal}):null}async function Vi(e,t,r){if(!e)throw new l("NoLayerError","No layer provided, cannot load image from attachment",{layer:e,objectId:t});const{datasetFormat:i,url:a}=await Si(e,+t,r);return Se(i)?await Ri({datasetFormat:i,url:a},r):(await sr(a,{...r,useRequestQueue:!0,responseType:"image",query:{w:Re}})).data}function Ci(e,t,r=0){const{height:i,width:a}=e;t.width=a,t.height=i;const s=t.getContext("2d");if(!s)return;const o=function(e,t,r){const i=document.createElement("canvas"),a=i.getContext("2d");if(e instanceof HTMLImageElement)i.width=e.width,i.height=e.height,a?.drawImage(e,0,0);else{const s=r.createImageData(t.width,t.height);s&&(s.data.set(e.getAsRGBA()),i.width=s.width,i.height=s.height,a?.putImageData(s,0,0))}return i}(e,t,s);o.getContext("2d")&&(r>0?function(e,t,r,i,a){const s=g(a),o=[Ce(0,0,s),Ce(r,0,s),Ce(r,i,s),Ce(0,i,s)],n=Math.max(...o.map((e=>e[0])))-Math.min(...o.map((e=>e[0]))),c=Math.max(...o.map((e=>e[1])))-Math.min(...o.map((e=>e[1]))),l=Math.min(r/n,i/c);e.save(),e.clearRect(0,0,r,i),e.translate(r/2,i/2),e.rotate(s),e.scale(l,l),e.drawImage(t,-r/2,-i/2,r,i),e.restore()}(s,o,a,i,r):s.drawImage(o,0,0))}let Oi=class{static getCameraOrientation(e){return le(e)}static register(e,t,r){ue.set(e,{desc:t,constructor:r})}};Oi=e([L("esri.layers.orientedImagery.core.cameraOrientationFactory")],Oi);const Ai=Oi,Li=e=>({cast:e=>{const t=parseFloat(e);return Number.isFinite(t)?t:void 0},json:{name:e,write:{writer:(e,t,r)=>{t[r]=Number.isFinite(e)?e:void 0}}}}),Ti=e=>({cast:e=>"string"==typeof e?e.split(";").map(Number):e,json:{default:e,write:{writer:(e,t,r)=>{t[r]=e?.join(";")}}}});let Gi=class extends(re.ClonableMixin(ie)){constructor(e){super(e),this._geometry=null,this.cameraOrientation=null,this.elevation=null,this.elevationSource=null,this.name=null,this.sourceMap=null}read(e,t){const r={},{attributes:i,geometry:a}=e,s={};for(const e in i)r[e.toLowerCase()]=i[e],s[e.toLowerCase()]=e;const o=e.layer??{};o.sequenceOrderField?.length&&(r.sequenceorder=i[o.sequenceOrderField],s.sequenceorder=o.sequenceOrderField),super.read({geometry:a,layer:o,sourceMap:s,...r},t)}write(e,t){const r=super.write(e,t),{sourceMap:i}=this;if(!i||!r)return r;const a={};for(const e in r){const t=i[e.toLowerCase()];t&&(a[t]=r[e])}return a}readCameraHeading(e,t){const{cameraheading:r,camheading:i,layer:a}=t;return r??i??a.cameraHeading}readCameraHeight(e,t){const{cameraheight:r,avghtag:i,layer:a}=t;return r??i??a.cameraHeight}readCamOffset(e,t){const{cameraoffset:r,camoffset:i}=t;return r?.split(";").map(Number)??i?.split(";").map(Number)??null}writeCameraOffset(e,t){e&&(t.cameraOffset=e.join(";"))}readCameraOrientation(e,t){const{cameraorientation:r,camori:i}=t;return r??i}readCameraPitch(e,t){const{camerapitch:r,campitch:i,layer:a}=t;return r??i??a.cameraPitch}readCameraRoll(e,t){const{cameraroll:r,camroll:i,layer:a}=t;return r??i??a.cameraRoll}readDepthImage(e,t){const{depthimage:r,depthimg:i,layer:a}=t,s=r??i??null,{depthImagePathPrefix:o,depthImagePathSuffix:n}=a??{};return pe(s,o,n)}readElevationSource(e,t){const{elevationsource:r,layer:i}=t,{demPathSuffix:a,demPathPrefix:s}=i;if(r){const e=this._parseIfJSON(r);return me(e,s,a)}return i.effectiveElevationSource}readFarDistance(e,t){const{fardistance:r,fardist:i,layer:a}=t;return r??i??a.farDistance}get geometry(){const e=this._geometry.clone();if(!e)return null;const{cameraOffset:t}=this;if(t){const[r,i,a]=t;e.x+=r,e.y+=i,null!=e.z&&null!=a&&(e.z+=a)}return e}set geometry(e){this._geometry=e}writeGeometry(e,t){t.geometry=this._geometry.toJSON()}readHFOV(e,t){const{horizontalfieldofview:r,hfov:i,layer:a}=t;return r??i??a.horizontalFieldOfView}readImageURL(e,t){const{imagepath:r,layer:i}=t;r||function(e,t){throw new l("exposure-point:missing-attribute-value","a value for imagePath is missing in attribute table",{exposurePoint:t})}(0,this);const{imagePathPrefix:a,imagePathSuffix:s}=i;return pe(r,a,s)}readImageRotation(e,t){const{imagerotation:r,imgrot:i,layer:a}=t;return r??i??a.imageRotation}get isHorizontal(){return"horizontal"===this.orientedImageryType}get isInspection(){return"inspection"===this.orientedImageryType}get isNadir(){return"nadir"===this.orientedImageryType}get isOblique(){return"oblique"===this.orientedImageryType}get isSpherical(){return"360"===this.orientedImageryType}get location(){const{cameraOrientation:e,cameraHeight:t,elevation:r}=this;if(e){const{type:t,x:r,y:i,z:a,horizontalWKID:s,verticalWKID:o}=e,n="number"==typeof s?{wkid:s}:{wkt:s};if(t===he.LTP){const{latitude:t,longitude:r,ellipsoidRadius:i,squaredEccentricity:a,properties:s}=e,{x:o,y:n,z:c}=s;return new H(Oe([o,n,c],[t,r,i,a]))}const c=new H({x:r,y:i,z:a,spatialReference:n}),l=o?ce("point",{wkid:o},n):null;return l&&l(c),c}if("number"!=typeof t)throw function(){throw new l("exposure-point:missing-default-value","a value for cameraHeight is missing in default properties")}();const i=this.geometry.clone(),a=(r??0)+t/de(i.spatialReference);if("360"===this.orientedImageryType&&i.hasZ){const e=a-i.z;return null!=r&&Math.abs(e)>.001&&(m.getLogger(this).warnOnce("The elevation value is different from the geometry's z value. The geometry's z value will be updated.",{elevation:r,geometryZ:i.z}),i.z=a),i}return i.z=i.hasZ?i.z:a,i}set matrix(e){if(e)return 9!==e.length?(m.getLogger(this).warnOnce("Ignoring rotation matrix because it doesn't have 9 values",{value:e}),void this._set("matrix",null)):void this._set("matrix",e)}readNearDistance(e,t){const{neardistance:r,neardist:i,layer:a}=t;return r??i??a.nearDistance}readOffsetFromStart(e,t){return t.offsetfromstart??null}readOrientationAccuracy(e,t){const{accuracy:r,orientationaccuracy:i}=t;return i?.split(";").map(Number)??r?.split(";").map(Number)??null}writeOrientationAccuracy(e,t){e&&(t.orientationAccuracy=e.join(";"))}readOIType(e,t){const{orientedimagerytype:r,oitype:i,camerapitch:a,campitch:s,layer:o}=t,n=ge.read(r??i??o.orientedImageryType),c=a??s??o.cameraPitch;return"oblique"===n?c<10?"nadir":"oblique":n}set radial(e){if(e)if("string"!=typeof e)this._set("radial",e);else{const[t,r,i]=e.split(";").map(Number);this._set("radial",[t??0,r??0,i??0])}else this._set("radial",[0,0,0])}readSequenceOrder(e,t){const{layer:r}=t;return t[r.sequenceOrderField.toLowerCase()]}writeSequenceOrder(e,t){if(!e)return;const{sourceMap:r}=this;r&&(t[r.sequenceorder]=e)}set tangential(e){if(e)if("string"!=typeof e)this._set("tangential",e);else{const[t,r]=e.split(";").map(Number);this._set("tangential",[t??0,r??0])}else this._set("tangential",[0,0])}readVFOV(e,t){const{verticalfieldofview:r,vfov:i,layer:a}=t;return r??i??a.verticalFieldOfView}_parseIfJSON(e){let t=null;try{t=JSON.parse(e)}catch(t){m.getLogger(this).error("couldn't parse the given elevation source JSON",e,t)}return t}clone(){const e=super.clone();return e._geometry=this._geometry.clone(),e}};e([A()],Gi.prototype,"_geometry",void 0),e([A(Li())],Gi.prototype,"a0",void 0),e([A(Li())],Gi.prototype,"a1",void 0),e([A(Li())],Gi.prototype,"a2",void 0),e([A({type:Date,json:{write:{enabled:!0,target:"acquisitionDate"},name:"acquisitiondate"}})],Gi.prototype,"acquisitionDate",void 0),e([A(Li())],Gi.prototype,"b0",void 0),e([A(Li())],Gi.prototype,"b1",void 0),e([A(Li())],Gi.prototype,"b2",void 0),e([A({type:Number,json:{write:!0,read:{source:["cameraheading","camheading","layer.cameraHeading"]}}})],Gi.prototype,"cameraHeading",void 0),e([oe("cameraHeading")],Gi.prototype,"readCameraHeading",null),e([A({type:Number,json:{write:!0}})],Gi.prototype,"cameraHeight",void 0),e([oe("cameraHeight",["cameraheight","avghtag","layer.cameraHeight"])],Gi.prototype,"readCameraHeight",null),e([A()],Gi.prototype,"cameraOffset",void 0),e([oe("cameraOffset",["cameraoffset","camoffset"])],Gi.prototype,"readCamOffset",null),e([ne("cameraOffset")],Gi.prototype,"writeCameraOffset",null),e([A({json:{write:{writer:(e,t,r)=>{t[r]=e.toString()}}},type:ye}),ae((e=>e?Ai.getCameraOrientation(e):null))],Gi.prototype,"cameraOrientation",void 0),e([oe("cameraOrientation",["cameraorientation","camori"])],Gi.prototype,"readCameraOrientation",null),e([A({type:Number,json:{write:!0}})],Gi.prototype,"cameraPitch",void 0),e([oe("cameraPitch",["camerapitch","campitch","layer.cameraPitch"])],Gi.prototype,"readCameraPitch",null),e([A({type:Number,json:{write:!0}})],Gi.prototype,"cameraRoll",void 0),e([oe("cameraRoll",["cameraroll","camroll","layer.cameraRoll"])],Gi.prototype,"readCameraRoll",null),e([A({json:{write:!0},type:String})],Gi.prototype,"depthImage",void 0),e([oe("depthImage",["depthimage","depthimg"])],Gi.prototype,"readDepthImage",null),e([A({type:Number,json:{write:!0}})],Gi.prototype,"elevation",void 0),e([A({json:{write:!0},clonable:"reference"})],Gi.prototype,"elevationSource",void 0),e([oe("elevationSource",["elevationsource","layer.effectiveElevationSource"])],Gi.prototype,"readElevationSource",null),e([A({json:{name:"exposurestationid",write:{target:"exposureStationId"}},type:String})],Gi.prototype,"exposureStationId",void 0),e([A({type:Number,json:{write:!0}})],Gi.prototype,"farDistance",void 0),e([oe("farDistance",["fardistance","fardist","layer.farDistance"])],Gi.prototype,"readFarDistance",null),e([A(Li("focallength"))],Gi.prototype,"focalLength",void 0),e([A({type:H,json:{name:"geometry"}})],Gi.prototype,"geometry",null),e([ne("geometry")],Gi.prototype,"writeGeometry",null),e([A({type:Number,json:{write:!0}})],Gi.prototype,"horizontalFieldOfView",void 0),e([oe("horizontalFieldOfView",["horizontalfieldofview","hfov","layer.horizontalFieldOfView"])],Gi.prototype,"readHFOV",null),e([A({json:{write:!0},type:String})],Gi.prototype,"imagePath",void 0),e([oe("imagePath",["imagepath"])],Gi.prototype,"readImageURL",null),e([A({type:Number,json:{write:!0}})],Gi.prototype,"imageRotation",void 0),e([oe("imageRotation",["imagerotation","imgrot","layer.imageRotation"])],Gi.prototype,"readImageRotation",null),e([A()],Gi.prototype,"isHorizontal",null),e([A()],Gi.prototype,"isInspection",null),e([A()],Gi.prototype,"isNadir",null),e([A()],Gi.prototype,"isOblique",null),e([A()],Gi.prototype,"isSpherical",null),e([A()],Gi.prototype,"location",null),e([A(Ti())],Gi.prototype,"matrix",null),e([A({json:{write:!0},type:String})],Gi.prototype,"name",void 0),e([A({type:Number,json:{write:!0}})],Gi.prototype,"nearDistance",void 0),e([oe("nearDistance",["neardistance","neardist","layer.nearDistance"])],Gi.prototype,"readNearDistance",null),e([A({json:{write:!0,name:"objectid"},type:Number})],Gi.prototype,"objectId",void 0),e([A({type:Number,json:{write:!0}})],Gi.prototype,"offsetFromStart",void 0),e([oe("offsetFromStart",["offsetfromstart"])],Gi.prototype,"readOffsetFromStart",null),e([A()],Gi.prototype,"orientationAccuracy",void 0),e([oe("orientationAccuracy",["accuracy","orientationaccuracy"])],Gi.prototype,"readOrientationAccuracy",null),e([ne("orientationAccuracy")],Gi.prototype,"writeOrientationAccuracy",null),e([se(ge)],Gi.prototype,"orientedImageryType",void 0),e([oe("orientedImageryType",["orientedimagerytype","oitype","layer.orientedImageryType"])],Gi.prototype,"readOIType",null),e([A({type:Number,json:{write:!0,read:{source:"principalx"}}})],Gi.prototype,"principalX",void 0),e([A({type:Number,json:{write:!0,read:{source:"principaly"}}})],Gi.prototype,"principalY",void 0),e([A(Ti([0,0,0]))],Gi.prototype,"radial",null),e([A({type:String})],Gi.prototype,"sequenceOrder",void 0),e([oe("sequenceOrder",["sequenceorder","layer.sequenceOrderField"])],Gi.prototype,"readSequenceOrder",null),e([ne("sequenceOrder")],Gi.prototype,"writeSequenceOrder",null),e([A({type:Object})],Gi.prototype,"sourceMap",void 0),e([A(Ti([0,0]))],Gi.prototype,"tangential",null),e([A({type:Number,json:{write:!0}})],Gi.prototype,"verticalFieldOfView",void 0),e([oe("verticalFieldOfView",["verticalfieldofview","vfov","layer.verticalFieldOfView"])],Gi.prototype,"readVFOV",null),Gi=e([L("esri.layers.orientedImagery.core.ExposurePoint")],Gi);const zi=Object.freeze(Object.defineProperty({__proto__:null,default:Gi},Symbol.toStringTag,{value:"Module"})),Ei={};async function Di(e,t){const{point:r,queryParams:i}=e;!function(e,t){if(!ee(e)&&null==t?.geometry)throw new l("invalid-parameters","searchImages requires a point and query parameters to be provided.")}(r,i);const a="string"!=typeof(s=e.layerInstanceOrURL)?s:(Ei.layer?.url!==s&&(Ei.layer?.destroy(),Ei.layer=new te({url:s})),Ei.layer);var s;await a.load(t);const o=function(e,t,r){const i=t?fe(t):null,a=r?.maximumDistance??e.maximumDistance??1e3,s=r?.geometry??(i?function(e,t){const{x:r,y:i,spatialReference:a}=e,s=t*Ae(i,a)/V(a);return new E({xmin:r-s,xmax:r+s,ymin:i-s,ymax:i+s,spatialReference:e.spatialReference})}(i,a):null);return new It({outSpatialReference:r?.outSpatialReference??e.spatialReference.isGeographic?Z.WebMercator:e.spatialReference,returnGeometry:r?.returnGeometry??!0,outFields:r?.outFields??["*"],geometry:s,where:r?.where??"1=1",returnZ:e.hasZ,orderByFields:r?.orderByFields,maxRecordCountFactor:r?.maxRecordCountFactor??5})}(a,r,i),n=await a.queryFeatures(o,t);return w(t),Ui(a)(n)}function Ui(e){return t=>(t.features.forEach((t=>{const r=Gi.fromJSON({...t.toJSON(),layer:e});r&&(t.attributes=r)})),t)}const Hi=Math.PI/180;function Bi(e){const t=Le(e,e.geometry.spatialReference);return e.isSpherical?function(e){const{geometry:t,farDistance:r,objectId:i,nearDistance:a,cameraHeight:s}=e,o=Ae(t.y,t.spatialReference),n=new Lt({center:t.clone(),radius:r*o});if(n.imageID=i,a){const e=new Lt({center:t.clone(),radius:a*o});n.addRing(e.rings[0])}const c=t.clone();c.z=s-r*o;const l=Tt.createSphere(c,{size:2*r*o});return l.imageID=i,{polygon:n,frustum:l}}(t):function(e){const{horizontalFieldOfView:t,verticalFieldOfView:r,geometry:i,cameraHeading:a}=e,s=Ae(i.y,i.spatialReference);let o=e.cameraPitch,n=e.cameraRoll??0,c=150;t>150&&(o=90,n=0,c=5);const l=Math.ceil(t/c),u=function(e,t,r){const i=[];if(e%2==0)for(let a=0;a<e/2;a++)i.push(t-r/e*(a+.5),t+r/e*(a+.5));else{i.push(t);for(let a=1;a<e/2;a++)i.push(t-r/e*a,t+r/e*a)}return i.sort(),i}(l,a,t);let p=e.farDistance?e.farDistance*s:e.cameraHeight*s/Math.cos(o*Hi);e.cameraPitch+r/2>=90&&(p=(e.farDistance||20)*s);const m=new N({spatialReference:i?.spatialReference});m.imageID=e.objectId;let h=null;for(const a of u)h=Ni(a,o,e.cameraHeight,i,p,s,r,t,l,m,n,e.nearDistance);return h.imageID=e.objectId,{polygon:m,frustum:h}}(t)}function Ni(e,t,r,i,a,s,o,n,c,l,u=0,p=0){const m=xt(_t(),Te([e,t,u??0])),h=function(e,t){const{cameraHeight:r,cameraPitch:i,farDistance:a,location:s,horizontalFieldOfView:o,nearDistance:n,verticalFieldOfView:c}=e,l=$i(s),u=i+c/2>=90==0,p=2*Math.tan(c*Hi/2)*n,m=2*Math.tan(o*Hi/2)*n,h=2*Math.tan(c*Hi/2)*a,d=2*Math.tan(o*Hi/2)*a;let g,y;y=[0,0,-1],y=Ge(y,t),g=ze([s.x,s.y,r],y,a,l),u&&(g[2]=0);const f=ze([s.x,s.y,r],y,n,l);let v=[0,1,0];v=Ge(v,t);let w=[1,0,0];w=Ge(w,t);let j=[],k=[];n?(k=[{faces:[4,0,3,4,7,3]},{faces:[5,1,2,5,6,2]},{faces:[4,0,1,4,5,1]},{faces:[6,2,3,6,7,3]}],j=j.concat(Ct(Pt(),f,Vt(Pt(),Ee(v,p/2,l),Ee(w,m/2,l)))),j=j.concat(Ct(Pt(),f,Ct(Pt(),Ee(v,p/2,l),Ee(w,m/2,l)))),j=j.concat(Vt(Pt(),f,Vt(Pt(),Ee(v,p/2,l),Ee(w,m/2,l)))),j=j.concat(Vt(Pt(),f,Ct(Pt(),Ee(v,p/2,l),Ee(w,m/2,l))))):(j=[s.x,s.y,r],k=[{faces:[0,1,2,0,2,3,0,3,4,0,4,1]}]),j=j.concat(Ct(Pt(),g,Vt(Pt(),Ee(v,h/2,l),Ee(w,d/2,l)))),j=j.concat(Ct(Pt(),g,Ct(Pt(),Ee(v,h/2,l),Ee(w,d/2,l)))),j=j.concat(Vt(Pt(),g,Vt(Pt(),Ee(v,h/2,l),Ee(w,d/2,l)))),j=j.concat(Vt(Pt(),g,Ct(Pt(),Ee(v,h/2,l),Ee(w,d/2,l))));const b=new zt({position:Float64Array.from(j)});return new Tt({vertexAttributes:b,components:k,spatialReference:s.spatialReference})}({cameraHeight:r,cameraPitch:t,farDistance:a,location:i,horizontalFieldOfView:n,nearDistance:p,verticalFieldOfView:o},m),d=Ge([0,0,-1],m),{x:g,y}=i,f=ze([g,y,r],d,a,s),v=2*Math.tan(o*Hi/2)*a,w=2*Math.tan(n/c*Hi/2)*a,j=Ge([0,1,0],m),k=Ge([1,0,0],m),b=Ee(j,v/2,s),M=Ee(k,w/2,s),I=Vt(Pt(),b,M),_=Ct(Pt(),b,M),P=function(e,t,r,i){return e.map((e=>function(e,t,r,i){{const a=Math.sqrt((e[2]-t)**2+(Math.sqrt((e[0]-r.x)**2+(e[1]-r.y)**2)/i)**2)*i,s=Ee(Vt(Pt(),[e[0],e[1],e[2]],[r.x,r.y,t]),1/a,1/i),o=t/(t-e[2]),n={x:(1-o)*r.x+o*e[0],y:(1-o)*r.y+o*e[1],z:(1-o)*t+o*e[2]},c=Math.sqrt((n.z-t)**2+(Math.sqrt((n.x-r.x)**2+(n.y-r.y)**2)/i)**2)*i,l=Ee(Vt(Pt(),[n.x,n.y,n.z],[r.x,r.y,t]),1/c,1/i);return qi(s[0],l[0])&&qi(s[1],l[1])&&qi(s[2],l[2])||e[2]>=0?[e[0],e[1],0]:[n.x,n.y,n.z]}}(e,t,r,i)))}([Ct(Pt(),f,I),Ct(Pt(),f,_),Vt(Pt(),f,I),Vt(Pt(),f,_)],r,i,s);return P.push(P[0]),l.addRing(P),h}function qi(e,t){return Math.sign(e)!==Math.sign(t)}function $i(e){return e&&O(e?.spatialReference)?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*e.y/C.radius))):1}async function Wi(e,t,r){const{cameraHeight:i,cameraLocation:a,cameraPitch:s,frustumVertices:o,horizontalFieldOfView:n,imageHeight:c,imageWidth:l,inSRS:u,outSRS:p,verticalFieldOfView:m,cameraRoll:h,options:d}=r,g=new Z(u),y=new Z(p),f=De(n,m,h??0),v=o.length>15;return s+f.vfov/2>=90?await async function(e,t,r,i,a,s,o,n){let c,l=o?new Array:[e[0],e[1],e[2]],u=new Array;for(const a of t)o?(c=Ue([a[0],a[1],1],[[0,0,1],[r,0,1],[r,i,1],[0,i,1]],[[e[0],e[1],e[2]],[e[3],e[4],e[5]],[e[6],e[7],e[8]],[e[9],e[10],e[11]]]),l=l.concat(...c),c=Ue([a[0],a[1],1],[[0,0,1],[r,0,1],[r,i,1],[0,i,1]],[[e[12],e[13],e[14]],[e[15],e[16],e[17]],[e[18],e[19],e[20]],[e[21],e[22],e[23]]]),u=u.concat(...c)):(c=Ue([a[0],a[1],1],[[0,0,1],[r,0,1],[r,i,1],[0,i,1]],[[e[3],e[4],e[5]],[e[6],e[7],e[8]],[e[9],e[10],e[11]],[e[12],e[13],e[14]]]),l=l.concat(...c));l=l.concat(u);const p=await Qi(l,a,s,n),m=ta(p);return new Tt({vertexAttributes:new zt({position:p}),components:ea(o?Xi(m,!0):Yi(m,!0)),spatialReference:s})}(o,e,l,c,g,y,v,d):await async function(e,t,r,i,a,s,o,n,c){const l=function(e,t,r,i,a){const s=Ki(e),o=Ki(e,"near");if(!s)return;const n=t.length;for(let e=0;e<n;e++){const t=Array.from(r[e]),n=[t[0]-i[0],t[1]-i[1],t[2]-(i[2]??a)];Ji(i,n,e,o),Zi(i,n,e,s)}return{farPlane:s,nearPlane:o}}(e,t,r,i,a);if(!l)return;const{farPlane:u,nearPlane:p}=l,m=await Qi([...p?.vertexPositions??e.slice(0,3),...u.vertexPositions],o,n,c),h=ta(m);return new Tt({vertexAttributes:new zt({position:m}),components:ea(s?Xi(h,!0):Yi(h,!0)),spatialReference:n})}(o,e,t,a,i,v,g,y,d)}function Zi(e,t,r,i){const{coefficients:a,vertexPositions:s}=i,o=Pt();Ut(a,{origin:e,direction:t},o)&&s.splice(3*r,3,...o)}function Ji(e,t,r,i){if(!i)return;const a=Pt();Ut(i.coefficients,{origin:e,direction:t},a)&&i.vertexPositions.splice(3*r,3,...a)}async function Qi(e,t,r,i){if(t.equals(r))return e;const a=e.reduce(((e,t,r)=>{const i=Math.floor(r/3);return e[i]||(e[i]=new Array),e[i].push(t),e}),new Array),{points:s}=await $(new U(a,t),r,i);return w(i),s.flat()}function Ki(e,t="far"){const r=Et();let i;switch(t){case"far":if(i=Array.from(15===e.length?e.slice(3):e.slice(12)),Dt(r,i,!1))return{coefficients:r,vertexPositions:i};break;case"near":if(i=Array.from(e.slice(0,12)),15===e.length||!Dt(r,i,!1))return;return{coefficients:r,vertexPositions:i}}}const Xi=(e,t=!1)=>{if(t&&e-2<=4||e<=4||e%2!=0)throw new Error("Invalid number of vertices");const r=[],i=e/2,a=Math.round((t?e-2:e)/2);for(let s=0;s<a;s++){const a=s+i,o=t?a+1:a,n=o%e,c=(t?a:o+1)%e;r.push({faces:new Uint32Array([s,c,n,s,s+1,n])})}return r};function Yi(e,t=!1){if(e<3||t&&e-1<3)throw new Error("Invalid number of vertices");const r=[],i=t?e-2:e-1;for(let e=0;e<i;e++)r.push({faces:new Uint32Array([0,e+1,e+2])});return r}const ea=e=>e.map((e=>new Gt(e))),ta=e=>e.length/3,ra=new Pr({size:15,style:"circle",color:[255,102,102,.5],outline:null}),ia=new Pr({size:10,style:"circle",color:[0,128,192,.5],outline:null}),aa=new _r({style:"solid",color:[0,128,192,.5],outline:null}),sa=new _r({style:"solid",color:[255,102,102,.5],outline:null}),oa=new Pr({size:10,style:"diamond",color:[255,102,102],outline:null}),na=new Ir({symbolLayers:new o([new jr({size:10,material:{color:"red"},resource:{primitive:"x"},outline:{color:"black",size:1}})])}),ca=new Ir({symbolLayers:new o([new br({width:9,height:9,depth:9,material:{color:[255,102,102]},resource:{primitive:"diamond"},castShadows:!1})])}),la=new wr({data:{type:"CIMSymbolReference",symbol:{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,size:10,frame:{xmin:-5,ymin:-5,xmax:5,ymax:5},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{rings:[[[0,1.4142135623730951],[3.585786437626905,5],[5,3.585786437626905],[1.4142135623730951,0],[5,-3.585786437626905],[3.585786437626905,-5],[0,-1.4142135623730951],[-3.585786437626905,-5],[-5,-3.585786437626905],[-1.4142135623730951,0],[-5,3.585786437626905],[-3.585786437626905,5],[0,1.4142135623730951]]]},symbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidStroke",enable:!0,width:1,color:[0,0,0,100]},{type:"CIMSolidFill",enable:!0,color:[255,0,0,255]}]}}]}]}}}),ua=new mr({symbolLayers:new o([new pr({material:{color:[255,102,102,.5]},edges:null})])}),pa=new mr({symbolLayers:new o([new pr({material:{color:[0,128,192,.25]},edges:null})])}),ma=new Pr({size:8,style:"triangle",color:[255,165,0],outline:{color:[0,0,0],width:.5}}),ha=new Ir({symbolLayers:new o([new br({width:12,height:12,depth:12,material:{color:[255,165,0]},resource:{primitive:"tetrahedron"},outline:{color:"black",size:1},castShadows:!1})])}),da=(e,t=3.5)=>new wr({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[14,12],lineDashEnding:"FullGap",controlPointEnding:"NoConstraint"}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:t,color:vr(e).toArray()},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:t,color:e.toArray()}]}}}),ga=new kr({symbolLayers:new o([new Mr({profile:"circle",width:7,material:{color:"orange"},cap:"round"})])});function ya(){return new yr([255,0,0])}function fa(e){return new Zt({color:e??ya(),width:2})}function va(e,t,r){return e===t?r:"polyline"===e?fa(r?.color):(i=r?.color,new _r({color:null,outline:fa(i),style:"none"}));var i}function wa(e,t,r){const i=e.toLowerCase(),a=t.toLowerCase()===i,s=r?.toLowerCase()===i;return Ne(a,s)}function ja(e,t,r){return!("point"!==(i=e.geometryType)&&"polygon"!==i&&"polyline"!==i||2!==e.fields.filter((({name:e,type:i,alias:a})=>wa(r?.length?r:Be,e,a)||wa(t?.length?t:He,e,a)&&"blob"===i)).length);var i}function ka(e){return"feature"===e.type&&("point"===(t=e).geometryType||"polygon"===t.geometryType||"polyline"===t.geometryType);var t}function ba(e,r,i,a,s,o,n){let c=function(e,t){const{geometry:r}=JSON.parse(atob(e[t]));return gr(r)}(e,r);if(!c)throw new l("orientedimagery","InvalidGeometry");return c=function(e,t,r){switch(t){case"default":return function(e){switch(e.type){case"point":e.x-=.5,e.y=.5-e.y;break;case"polyline":e.paths=e.paths.map((e=>e.map((([e,t])=>[e-.5,.5-t]))));break;case"polygon":e.rings=e.rings.map((e=>e.map((([e,t])=>[e-.5,.5-t]))));break;case"multipoint":e.points=e.points.map((([e,t])=>[e-.5,.5-t]));break;case"extent":e.xmin-=.5,e.xmax-=.5,e.ymin=.5-e.ymin,e.ymax=.5-e.ymax}return e}(e);case"panoramic":return _a(e,r)}}(c,o,s),new t({attributes:e,layer:i,symbol:va(c.type,i.geometryType,n),geometry:c,visible:i.visible&&a})}function Ma(e,t,r){switch(t){case"default":return function(e){switch(e.type){case"point":e.x+=.5,e.y=.5-e.y;break;case"polyline":e.paths=e.paths.map((e=>e.map((([e,t])=>[e+.5,.5-t]))));break;case"polygon":e.rings=e.rings.map((e=>e.map((([e,t])=>[e+.5,.5-t]))));break;case"multipoint":e.points=e.points.map((([e,t])=>[e+.5,.5-t]));break;case"extent":e.xmin+=.5,e.xmax+=.5,e.ymin=.5-e.ymin,e.ymax=.5-e.ymax}return e}(e);case"panoramic":return Ia(e,r)}}function Ia(e,t){switch(e.type){case"point":{const{x:r,y:i}=be(e,t[0],t[1]);e.x=r,e.y=i,delete e.z;break}case"polyline":e.paths=e.paths.map((e=>e.map((e=>{const{x:r,y:i}=be({x:e[0],y:e[1],z:e[2]},t[0],t[1]);return[r,i]}))));break;case"polygon":e.rings=e.rings.map((e=>e.map((e=>{const{x:r,y:i}=be({x:e[0],y:e[1],z:e[2]},t[0],t[1]);return[r,i]}))));break;case"multipoint":e.points=e.points.map((e=>{const{x:r,y:i}=be({x:e[0],y:e[1],z:e[2]},t[0],t[1]);return[r,i]}));break;case"extent":{const{xmin:r,xmax:i,ymin:a,ymax:s}=Ia(N.fromExtent(e),t).extent;e.xmax=i,e.xmin=r,e.ymax=s,e.ymin=a;break}}return e}function _a(e,t){switch(e.type){case"point":{const[r,i,a]=qe(e,t[0],t[1]);e.x=r,e.y=i,e.z=a;break}case"polyline":e.paths=e.paths.map((e=>e.map((e=>{const[r,i,a]=qe({x:e[0],y:e[1]},t[0],t[1]);return[r,i,a]}))));break;case"polygon":e.rings=e.rings.map((e=>e.map((e=>{const[r,i,a]=qe({x:e[0],y:e[1]},t[0],t[1]);return[r,i,a]}))));break;case"multipoint":e.points=e.points.map((e=>{const[r,i,a]=qe({x:e[0],y:e[1]},t[0],t[1]);return[r,i,a]}));break;case"extent":{const{xmin:r,xmax:i,ymin:a,ymax:s}=_a(N.fromExtent(e),t).extent;e.xmax=i,e.xmin=r,e.ymax=s,e.ymin=a}}return e}const Pa=1e5;function Fa(e,t){let r=180*Math.atan2(-e.y+t.y,e.x-t.x)/Math.PI;return r<0&&(r+=180),r*Math.PI/180}function xa(e,t,r){if(!e?.length||!t?.length||!r)return;const[i,a]=e,[,s]=t,o=s-a;return[i+o*Math.cos(r),a+o*Math.sin(r)]}async function Sa(e,t,r){if(await Lr(),Hr(e)){const e=Br([t],"meters")[0];return{area:Nr([r],"square-meters")[0],perimeter:e}}const i=Z.WGS84,a=W(t,i),s=W(r,i);let o=Tr(s,Pa);if(o=o?Ur(o):null,!o)return null;const n=Br([a],"meters")[0];return{area:Nr([o],"square-meters")[0],perimeter:n}}async function Ra(e){await Gr();const t=e.spatialReference;if(t.isGeographic){if(Hr(t))return Br([e],"meters")[0];const r=W(e,Z.WGS84);return Br([r],"meters")[0]}return t.isWebMercator?zr(e):Er(e)}function Va(e,t){const r=Ur(t);if(!r)return null;const i=Er(e);return{area:Cr(r),perimeter:i}}function Ca(e,t){return[(e[1][0]-e[0][0])/t,(e[1][1]-e[0][1])/t,(e[1][2]-e[0][2])/t]}async function Oa(e,t){await Promise.all([Or(),Lr(),Gr()]);let r=Tr(t,Pa);if(r=r?Ur(r):null,!r)return null;const i=zr(e);return{area:Ar(r),perimeter:i}}function Aa(e,t,r,i,a=0,s=1,o){const{averageElevation:n,cameraPitch:c,cameraRoll:l,farDistance:u,...p}=i;if(a>=5||s<=.1)return{value:e*es(i.cameraLocation.spatialReference)};const m=new H({x:t.x,y:t.y,z:t.z?t.z+e:e,spatialReference:i.cameraLocation.spatialReference}),h=We(m,p),d=T([r[0].x,r[0].y],[h.x,h.y]),g=r.at(0),y=r.at(-1);if(!g||!y)return null;const f=T([g.x,g.y],[y.x,y.y])*e/d;return Aa(f,t,r,i,a+1,Math.abs(e-f))}function La(e,t,r,i,a=0,s=1,o){const{averageElevation:n,horizontalFieldOfView:c,verticalFieldOfView:l,farDistance:u,...p}=i;if(a>=5||s<=.1)return{value:e*es(i.cameraLocation.spatialReference)};const m=new H({x:t.x,y:t.y,z:t.z?t.z+e:e,spatialReference:i.cameraLocation.spatialReference}),h=$e(m,p),d=T([r[0].x,r[0].y],[h.x,h.y]),g=r.at(0),y=r.at(-1);if(!g||!y)return null;const f=T([g.x,g.y],[y.x,y.y])*e/d;return La(f,t,r,i,a+1,Math.abs(e-f))}function Ta(e,t,r){return new q({paths:[[[e.x,e.y,e.z??0],[t.x,t.y,t.z??0]]],spatialReference:r})}function Ga(e){return 1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*e/6378137)))}function za(e,t){return new H({x:(e.pointOnA[0]+e.pointOnB[0])/2,y:(e.pointOnA[1]+e.pointOnB[1])/2,z:(e.pointOnA[2]+e.pointOnB[2])/2,spatialReference:t})}async function Ea(e){if(2===e?.length){const t=[];let r=1;const[i,a]=e,s=i.camera.spatialReference,{measurePoints:o}=i;for(let e=0;e<o.length;e++){const o=Ta(i.camera,i.measurePoints[e],s),n=Ta(a.camera,a.measurePoints[e],s),c=await ns(o,n);if(!c)return null;const l=za(c,s);l.spatialReference.isWebMercator&&(r=Ga(l.y)),t.push([l.x,l.y,l.z??0])}if(t?.length>1){const e=function(e,t){return Math.sqrt((Math.sqrt((e[0][0]-e[1][0])**2+(e[0][1]-e[1][1])**2)/t)**2+(e[0][2]-e[1][2])**2)}(t,r),i=function(e,t){return Math.sqrt((e[0][0]-e[1][0])**2+(e[0][1]-e[1][1])**2)/t}(t,r),a=Math.abs(t[0][2]-t[1][2]),s=function(e){return d(Math.atan((e[1][2]-e[0][2])/Math.sqrt((e[1][0]-e[0][0])**2+(e[1][1]-e[0][1])**2)))}(t),o=function(e){let t=90-d(Math.atan2(e[1][1]-e[0][1],e[1][0]-e[0][0]));return t<0&&(t+=360),t}(t);return{distance:e,horizontalDistance:i,verticalDistance:a,slope:s,aspect:o}}}return null}async function Da(e,t){if(!e?.length)return null;const r=[],i=e[0],a=e[1],s=i.camera.spatialReference,{measurePoints:o}=i;for(let e=0;e<o.length;e++){const t=Ta(i.camera,i.measurePoints[e],s),o=Ta(a.camera,a.measurePoints[e],s),n=await ns(t,o);if(!n)return null;const c=za(n,s);r.push([c.x,c.y,c.z??0])}if(r?.length<2)return null;const n=new q({paths:[r],spatialReference:t}),c=new N({rings:[r],spatialReference:t});if(t.isGeographic){const e=await Sa(t,n,c);return e?.area??null}if(t.isWebMercator){const e=await Oa(n,c);return e?.area??null}const l=Va(n,c);return l?.area??null}function Ua(e,t){if(!e)return null;const r=t.geometry.clone(),i=Array.isArray(e)?e:[e],a=[];return i.forEach((e=>{let t=!1;e.spatialReference.isWGS84&&(e=Dr(e,new Z({wkid:3857})),t=!0);const i=e.spatialReference.isWebMercator?Ga(e.y):1,s=function(e,t,r){return Math.sqrt((e.z??0-(t.z??0))**2+(Math.sqrt((e.x-t.x)**2+(e.y-t.y)**2)/r)**2)*r}(e,r,i),o=function(e,t,r,i){return function(e,t,r){const i=Ee(e,t,r);return[i[0],i[1],i[2]]}(function(e,t){const r=Ft(e[0],e[1],e[2]),i=Ft(t[0],t[1],t[2]);return Vt(Pt(),r,i)}([e.x,e.y,e.z??0],[t.x,t.y,t.z??0]),1/r,1/i)}(e,r,s,i),n=((e.z??0)-(r.z??0))/o[2]*i;let c=new H({spatialReference:e.spatialReference,x:r.x+n*o[0],y:r.y+n*o[1],z:(r.z??0)+n*o[2]/i});t&&(c=Dr(c,new Z({wkid:4326}))),a.push(c)})),{camera:r,measurePoints:i,tempMeasurePoints:a}}async function Ha(e,t){const{updateElevationProps:r,...i}=t;return await Bt(e,i,r)}async function Ba(e,t){const{updateElevationProps:r,...i}=t;return Ht(e,i,r)}function Na(e){navigator.clipboard.writeText(e).catch((e=>{throw e}))}function qa(e){const t=e.map((e=>[e.x,e.y])),r=e[0].spatialReference;return new q({paths:[t],spatialReference:r})}function $a(e,t){return e.map((e=>({x:t?.5+e[0]:e[0],y:t?.5-e[1]:e[1]})))}function Wa(e,t,r,i,a){const s="measurement"===e?t:r;if(a&&s)return Sr(i,Vr(s,"meters"),a,3)||null}function Za(e,t){const{cameraPitch:r,cameraRoll:i,cameraLocation:a}=e,{x:s,y:o,z:n,spatialReference:c}=a;if(t.every((e=>0===e))||!t||!t.length)return null;const[l,u,,p,m]=t,h=[-p,0,p],d=[-m,0,m],g=[-l,0,l],y=[-u,0,u],f=[];for(const t of h)for(const a of d)for(const l of g)for(const u of g)for(const p of y){const m={...e};m.cameraPitch=r+t,m.cameraRoll=i+a,m.cameraLocation=new H({x:s+l,y:o+u,z:n?n+p:0,spatialReference:{wkid:c.wkid}}),f.push(m)}return f}function Ja(e,t){const{cameraHeading:r,cameraLocation:i}=e,{x:a,y:s,z:o,spatialReference:n}=i;if(t.every((e=>0===e))||!t||!t.length)throw new Error("Invalid parameters");const[c,l,u]=t,p=u>0?[-u,0,u]:[],m=c>0?[-c,0,c]:[],h=l>0?[-l,0,l]:[],d=[];for(const t of p)for(const i of m)for(const c of m)for(const l of h){const u={...e};u.cameraHeading=r+t,u.cameraLocation=new H({x:a+i,y:s+c,z:o?o+l:0,spatialReference:{wkid:n.wkid}}),d.push(u)}return d}function Qa(e,t,r,i,a){const s="measurement"===e?t:Xa(r);if(a&&s)return Sr(i,Vr(s,"meters"),a,3)||null}function Ka(e,t,r,i,a){const s="measurement"===e?t:r;if(a&&s)return xr(i,Rr(s,"square-meters"),a,3)||null}function Xa(e){return Math.sqrt(e.reduce(((e,t)=>e+t**2),0))}function Ya(e,t,r){if("default"===t)return e;const i={x:e[0],y:e[1],z:e[2]},a=be(i,r[0],r[1]);return[a.x,a.y]}function es(e){return e.metersPerUnit}async function ts(e,t,r,i=!1,a=!1,s){if(!e||!t||e.length<2)return null;const o=$a(e,i);if(!o||o.length<2)return null;const[n,c]=[o[0],o.at(-1)];if(!c)return null;const l=[n],u=await Bt(n,t);w(s);const p=u.clone();p.z?p.z+=20:p.z=20;const{averageElevation:m,cameraPitch:h,cameraRoll:d,farDistance:g,...y}=t,f=We(p,y),v=T([n.x,n.y],[f.x,f.y]),j=Fa(n,f);if(!j)return;const k=xa([n.x,n.y],[c.x,c.y],j);if(!k?.length)return;l.push({x:k[0],y:k[1]});const b=20*T([l[0].x,l[0].y],[l[1].x,l[1].y])*es(t.cameraLocation.spatialReference)/v;if(!a)return b;const M=Aa(b,u,l,t,0,1);return M?.value}async function rs(e,t,r,i,a=!1,s=!1,o){const{attributes:n}=i,{location:c}=n,{updateElevationProps:l,...u}=t;if(!e||!t||e.length<2)throw new Error("Invalid parameters");const p=$a(e,a),[m,h]=[p[0],p.at(-1)],d=[m];let g=c.clone();g.spatialReference.isGeographic&&(g=await $(g,Z.WebMercator));const y=await Ht(m,{...u,cameraLocation:g},l);w(o);const f=y.clone();f.z?f.z+=20:f.z=20;const v=$e(f,u),j=T([m.x,m.y],[v.x,v.y]),k=Fa(m,v);if(!k)return;const b=xa([m.x,m.y],[h.x,h.y],k);if(!b?.length)return;d.push({x:b[0],y:b[1]});const M=20*T([d[0].x,d[0].y],[d[1].x,d[1].y])*es(t.cameraLocation.spatialReference)/j;if(!s)return M;const I=La(M,y,d,t,0,1);return I?.value}async function is(e,t,r=!1){if(e.length<3)return null;const i=$a(e,r),a=await Ha(i,t),s=a.map((({x:e,y:t})=>[e,t]));e.push(e[0]),s.push(s[0]);const o=a[0].spatialReference,n=new q({paths:[s],spatialReference:o}),c=new N({rings:[s],spatialReference:o});return o.isGeographic?Sa(o,n,c):o.isWebMercator?Oa(n,c):Va(n,c)}async function as(e,t,r=!1,i){if(e.length<3)return null;const a=$a(e,r),s=await Ba(a,t);w(i);const o=s.map((({x:e,y:t})=>[e,t]));e.push(e[0]),o.push(o[0]);const n=s[0].spatialReference,c=new q({paths:[o],spatialReference:n}),l=new N({rings:[o],spatialReference:n});return n.isGeographic?Sa(n,c,l):n.isWebMercator?Oa(c,l):Va(c,l)}async function ss(e,t,r=!1){const i=$a(e,r);return Ra(qa(await Ha(i,t)))}async function os(e,t,r=!1,i){const a=$a(e,r),s=await Ba(a,t);return w(i),Ra(qa(s))}async function ns(e,t){const r=_t(),i=e.paths[0][0],a=t.paths[0][0];let s,o;e.spatialReference.isWGS84||e.spatialReference.isWebMercator?(await Gr(),s=zr(e),o=zr(t)):(s=Er(e),o=Er(t));const n=Ca(e.paths[0],s),c=Ca(t.paths[0],o),l=function(e,t){const r=Pt(),i=Ot(Pt(),e[0],e[1],e[2]),a=Ot(Pt(),t[0],t[1],t[2]),s=At(r,i,a);return[s[0],s[1],s[2]]}(n,c),[u,p,m]=n,[h,d,g]=c.map((e=>-e)),[y,f,v]=l,[w,j,k]=[a[0]-i[0],a[1]-i[1],a[2]-i[2]];St(r,u,h,y,p,d,f,m,g,v);const b=Rt(r);if(0===b)return null;St(r,w,h,y,j,d,f,k,g,v);const M=Rt(r);St(r,u,w,y,p,j,f,m,k,v);const I=Rt(r);St(r,u,h,w,p,d,j,m,g,k);const _=M/b,P=I/b,F=Rt(r)/b;return{distance:Math.abs(F/Math.sqrt(l[0]*l[0]+l[1]*l[1]+l[2]*l[2])),pointOnA:cs(i,_,n),pointOnB:cs(a,P,c)}}function cs(e,t,r){return[e[0]+t*r[0],e[1]+t*r[1],e[2]+t*r[2]]}let ls=class extends u.EventedAccessor{constructor(e){super(e),this._imageChanged=!1,this._panConstraint=null,this._image=null,this._loadController=null,this._overlays=new X({blendMode:"source-atop"}),this._map=new ar,this.autoLoad=!1,this.clickAction="none",this.error=null,this.imageSource=null,this.imageRotation=0,this.navigationManager=null,this.navigationViewModel=null,this.state="ready",this.updatingHandles=new z,this._cancelLoadWithController=()=>{this._loadController?.abort(),this._loadController=null},this._createImageHandles=()=>{this.removeHandles("enhancements-handle"),this.addHandles(M((()=>[this.brightness,this.contrast,this.sharpness]),(([e,t,r])=>{this.image?.loaded&&(this.image.effect=`contrast(${10*(t+10)}%) brightness(${10*(e+10)}%)`,this.sharpenImage(this.image,r))}),I))},this._createPanConstraint=()=>{const{image:e,imageRenderer:t}=this,r=r=>{if(!(e&&t&&r.targetGeometry&&e.serviceRasterInfo))return r;const{extent:i}=e.serviceRasterInfo,{constraints:a,rotation:s,width:o,height:n}=t,{extent:c}=qr(N.fromExtent(i),s),{width:l,height:u}=c,p=r.targetGeometry.clone(),m=a.scaleToZoom(r.scale),h=1/2**m,d=o/n;let g=h*l,y=h*u;m&&(l/o>u/n?y=g/d:g=y*d);const f=c.clone();return f.xmin+=g/2,f.xmax-=g/2,f.ymin+=y/2,f.ymax-=y/2,r.targetGeometry=Wr(f,p).coordinate,this.state="image-loaded",r};return{constrain:r,applyPanConstraint:r}},this._createResizeHandles=e=>{e.removeHandles("resize"),e.addHandles(M((()=>{if(!this.imageRenderer.ready)return;const{extent:t}=e.serviceRasterInfo,{width:r,height:i,rotation:a}=this.imageRenderer,{extent:s}=qr(N.fromExtent(t),a),{width:o,height:n}=s;return Math.max(o/r,n/i)}),(e=>{if(!this.imageRenderer||null==e)return;const{constraints:t,scale:r,spatialReference:i}=this.imageRenderer,a=t.minScale,s=Xr(i),o=.25*s,n=s*e;let c=n;const l=[];for(;c>o;)l.push(c),c/=2;l.push(c);const{lods:u}=Kr.create({scales:l});if(t.set({minScale:n,lods:u}),this._imageChanged)return this.imageRenderer.scale=n,void(this._imageChanged=!1);this.imageRenderer.scale=Math.abs(r-a)<=1e-6?n:r}),I),"resize")},this._loadImageInternal=(e,t={})=>{this.state="image-loading",this.clearImage(),this.error=null,this._imageChanged=!0;const r="string"==typeof e,i=r?void 0:e.datasetFormat,a=r?e:e.url,{customParameters:s,options:o}=t;return this._image=new Zr({ioConfig:{skipExtensions:["aux.xml","jgw"],skipMapInfo:!0,datasetFormat:i},url:a,customParameters:s}),this._image.when((async e=>{this._updatePanConstraint(),this._createResizeHandles(e),this._map.add(e),this.state="image-loaded"}),(t=>{j(t)?this.state="image-load-aborted":(this.state="image-load-error",this.error=t,m.getLogger(this).error(`error occurred while loading image ${r?e:JSON.stringify(e)}`,t),this.imageSource=null)})),this._image.load(o)},this._loadWithController=()=>{this._cancelLoadWithController(),this._loadController=new AbortController,this.loadImage(this._loadController)},this._loadNavigationManager=async()=>{if(!this.navigationManager||this.navigationManager?.destroyed){const e=await import("../../chunks/NavigationManager.js").then((e=>e.default));this.navigationManager=new e({viewModel:this.navigationViewModel})}return this.navigationManager},this._updatePanConstraint=()=>{this._panConstraint&&this.imageRenderer.constraints.customConstraints.remove(this._panConstraint),this._panConstraint=this._createPanConstraint(),this.imageRenderer.constraints.customConstraints.add(this._panConstraint)},this.addGraphic=(e,t)=>{this._overlays.graphics.add(e,t)},this.addManyGraphics=e=>{this._overlays.addMany(e)},this.clearGraphics=()=>{this._overlays.graphics.removeAll()},this.clearImage=()=>{this.image&&(this._map.layers.remove(this.image),this._image=y(this._image))},this.loadImage=e=>{const{customParameters:t,imageSource:r}=this;return r?this._loadImageInternal(r,{customParameters:t,options:e}):_e(this.declaredClass,new l(Pe("image-viewer"),Fe("ImageViewerViewModel","imageSource")))},this.navigate=async(e,t)=>this.updatingHandles.addPromise(this.navigateInternal(e,t)),this.navigateInternal=async(e,t)=>{const r=await this._loadNavigationManager();return await r.navigate(e,t)},this.removeGraphic=e=>{this._overlays.remove(e)},this.removeManyGraphics=e=>{this._overlays.removeMany(e)},this._imageRenderer=new Jt({constraints:{snapToZoom:!0,rotationEnabled:!1},map:this._map,popupEnabled:!1,spatialReference:Z.WebMercator,ui:{components:["zoom"]}})}destroy(){this._imageRenderer.destroy()}initialize(){this.state="initialized",this.addHandles([M((()=>this.imageSource),(e=>{e&&this.autoLoad&&this._loadWithController()}),I),M((()=>this.image?.loaded),(()=>{this._createImageHandles()})),M((()=>this.imageRotation),(()=>{this._rotateImage()})),M((()=>this.imageRenderer.map),((e,t)=>{t?.layers.remove(this._overlays),e?.layers.add(this._overlays)}),x),M((()=>this.imageRenderer.map.allLayers.length),(e=>{e&&this.imageRenderer.map.layers.reorder(this._overlays,e-1)}),I),M((()=>this.clickAction),(e=>{this.removeHandles("click-handle"),"none"!==e&&this.addHandles(this.imageRenderer.on("click",(t=>{if(this.image?.loaded&&this.imageRenderer.ready)switch(e){case"emit":t.stopPropagation(),this.emit("click",t);break;case"hittest":t.stopPropagation(),t.defer((async()=>{const e=await this.imageRenderer.hitTest(t.screenPoint,{include:this._overlays});e.results=e.results.filter((e=>"graphic"===e.type)),this.emit("hittest-response",e)}));break;case"pixel-location":{if(t.stopPropagation(),!this.image?.serviceRasterInfo||!t.mapPoint)return void this.emit("pixel-location",null);const{extent:e,pixelSize:r}=this.image.serviceRasterInfo,i=(t.mapPoint.x-e.xmin)*r.x,a=(e.ymax-t.mapPoint.y)*r.y,s=new H({x:i,y:a,spatialReference:e.spatialReference});this.emit("pixel-location",s);break}}})))}),I)])}get brightness(){return this._get("brightness")??0}set brightness(e){this._set("brightness",h(e,-10,10))}get contrast(){return this._get("contrast")??0}set contrast(e){this._set("contrast",h(e,-10,10))}get currentNode(){return this.navigationViewModel?.currentNode}get image(){return this._image}get imagePointsInView(){const{extent:e,ready:t}=this.imageRenderer,r=this.imageRotation,i=this.image?.fullExtent,a=this.image?.serviceRasterInfo,s=!0===this._imageRenderer.allLayerViews.find((({layer:e})=>e===this.image))?.attached;if(!(t&&e&&i&&a&&s))return null;const o=qr(N.fromExtent(e),r),n=N.fromExtent(i),c=$r(o,n),{rings:l}=c;return l.flat().map((([e,t])=>({x:(e-a.extent.xmin)*a.pixelSize.x,y:(a.extent.ymax-t)*a.pixelSize.y})))}get imageSize(){const{image:e}=this;if(!e?.raster)return null;const{width:t,height:r}=e.raster.rasterInfo;return[t,r]}get imageRenderer(){return this._imageRenderer}get imageView(){return this.imageRenderer.allLayerViews.find((e=>e.layer===this.image))}get sharpness(){return this._get("sharpness")??0}set sharpness(e){this._set("sharpness",h(e,0,1))}get updating(){return this.updatingHandles.updating}_rotateImage(){this.imageRenderer.constraints.rotationEnabled=!0,this.imageRenderer.rotation=this.imageRotation,this.imageRenderer.constraints.rotationEnabled=!1}sharpenImage(e,t){if(!t)return void(e.rasterFunction=null);const r=[0,-1*t,0,-1*t,4*t+1,-1*t,0,-1*t,0],i=new Jr({functionName:"Convolution",functionArguments:{type:Qr.userDefined,cols:3,rows:3,kernel:r,convolutionType:Qr.userDefined}});e.rasterFunction=i}};e([A()],ls.prototype,"_image",void 0),e([A()],ls.prototype,"_imageRenderer",void 0),e([A()],ls.prototype,"_loadController",void 0),e([A()],ls.prototype,"_overlays",void 0),e([A()],ls.prototype,"_map",void 0),e([A({type:Boolean})],ls.prototype,"autoLoad",void 0),e([A({type:Number})],ls.prototype,"brightness",null),e([A()],ls.prototype,"clickAction",void 0),e([A({type:Number})],ls.prototype,"contrast",null),e([A()],ls.prototype,"currentNode",null),e([A({type:Object})],ls.prototype,"customParameters",void 0),e([A({type:l})],ls.prototype,"error",void 0),e([A({readOnly:!0})],ls.prototype,"image",null),e([A({readOnly:!0})],ls.prototype,"imagePointsInView",null),e([A({readOnly:!0})],ls.prototype,"imageSize",null),e([A({cast:Ze})],ls.prototype,"imageSource",void 0),e([A({readOnly:!0})],ls.prototype,"imageRenderer",null),e([A({type:Number})],ls.prototype,"imageRotation",void 0),e([A()],ls.prototype,"imageView",null),e([A()],ls.prototype,"navigationManager",void 0),e([A()],ls.prototype,"navigationViewModel",void 0),e([A({type:Number})],ls.prototype,"sharpness",null),e([A()],ls.prototype,"state",void 0),e([A()],ls.prototype,"updatingHandles",void 0),e([A()],ls.prototype,"updating",null),ls=e([L("esri.widgets.OrientedImageryViewer.components.ImageViewerViewModel")],ls);const us=ls;let ps=class extends pi{constructor(e){super(e),this.cameraHeadingThreshold=0,this.cameraPitchThreshold=0,this.preserveAngle="none"}initialize(){this.addHandles(M((()=>({nodes:this.nodes,currenNode:this.currentNode,length:this.nodes.length,currentHeading:this.currentNode?.currentHeading,currentPitch:this.currentNode?.currentPitch,preserveAngle:this.preserveAngle,cameraHeadingThreshold:this.cameraHeadingThreshold,cameraPitchThreshold:this.cameraPitchThreshold})),(()=>{this._compileTask?.abort(),this._compileTask=s((async e=>{w(e),this.compile()}))}),I))}compile(){const{currentNode:e,nodes:t}=this;if(e)if(t.length)switch(this.preserveAngle){case"heading":return Je(e,t,this.cameraHeadingThreshold,null);case"pitch":return Je(e,t,null,this.cameraPitchThreshold);case"both":return Je(e,t,this.cameraHeadingThreshold,this.cameraPitchThreshold);default:return we(e,t)}else e.reset()}};e([A()],ps.prototype,"cameraHeadingThreshold",void 0),e([A()],ps.prototype,"cameraPitchThreshold",void 0),e([A()],ps.prototype,"preserveAngle",void 0),ps=e([L("esri.widgets.OrientedImageryViewer.components.NavigationUIViewModel")],ps);const ms=ps;let hs=class extends hi{constructor(e){super(e),this.viewModel=new ms}set cameraHeadingThreshold(e){this.viewModel.cameraHeadingThreshold=e}get cameraHeadingThreshold(){return this.viewModel.cameraHeadingThreshold}set cameraPitchThreshold(e){this.viewModel.cameraPitchThreshold=e}get cameraPitchThreshold(){return this.viewModel.cameraPitchThreshold}set preserveAngle(e){this.viewModel.preserveAngle=e}get preserveAngle(){return this.viewModel.preserveAngle}};e([A()],hs.prototype,"cameraHeadingThreshold",null),e([A()],hs.prototype,"cameraPitchThreshold",null),e([A()],hs.prototype,"preserveAngle",null),e([A()],hs.prototype,"viewModel",void 0),hs=e([L("esri.widgets.OrientedImageryViewer.components.NavigationUI")],hs);const ds=hs;let gs=class extends er{constructor(){super(...arguments),this.navigationEnabled=!1,this.uiStrings=null,this.viewModel=new us,this._afterContainerCreate=e=>{this.imageRenderer.container=e},this.addGraphic=(e,t)=>{this.viewModel.addGraphic(e,t)},this.addManyGraphics=e=>{this.viewModel.addManyGraphics(e)},this.clearGraphics=()=>{this.viewModel.clearGraphics()},this.clearImage=()=>{this.viewModel.clearImage()},this.loadImage=async e=>this.viewModel.loadImage(e),this.navigate=async(e,t)=>await this.viewModel.navigate(e,t),this.removeGraphic=e=>{this.viewModel.removeGraphic(e)},this.removeManyGraphics=e=>{this.viewModel.removeManyGraphics(e)}}loadDependencies(){return Promise.all([tr({panel:()=>import("../../chunks/index25.js").then((e=>e.i))}),di()])}get autoLoad(){return this.viewModel.autoLoad}set autoLoad(e){this.viewModel.autoLoad=e}get brightness(){return this.viewModel.brightness}set brightness(e){this.viewModel.brightness=e}get clickAction(){return this.viewModel.clickAction}set clickAction(e){this.viewModel.clickAction=e}get contrast(){return this.viewModel.contrast}set contrast(e){this.viewModel.contrast=e}get currentNode(){return this.navigationViewModel?.currentNode}get customParameters(){return this.viewModel.customParameters}set customParameters(e){this.viewModel.customParameters=e}get error(){return this.viewModel.error}get imageSize(){const e=this.viewModel.image?.serviceRasterInfo;return e?[e.width,e.height]:[0,0]}get imagePointsInView(){return this.viewModel.imagePointsInView}get imageRenderer(){return this.viewModel.imageRenderer}get imageRotation(){return this.viewModel.imageRotation}set imageRotation(e){this.viewModel.imageRotation=e}get imageSource(){return this.viewModel.imageSource}set imageSource(e){this.viewModel.imageSource=e}get navigationNodes(){return this.navigationViewModel?.navigationNodes}get navigationMode(){return this.navigationViewModel?.navigationMode}get navigationViewModel(){return this.viewModel.navigationViewModel}set navigationViewModel(e){this.viewModel.navigationViewModel=e}get sharpness(){return this.viewModel.sharpness}set sharpness(e){this.viewModel.sharpness=e}get state(){return this.viewModel.state}get ui(){return this.imageRenderer.ui}get _navigationUI(){return rr(ds,{cameraHeadingThreshold:this.navigationViewModel?.cameraHeadingThreshold,cameraPitchThreshold:this.navigationViewModel?.cameraPitchThreshold,currentNode:this.currentNode,navigate:this.navigate,nodes:this.navigationNodes,preserveAngle:this.navigationViewModel?.preserveAngle??"none"})}get _sequentialNavigationUI(){return rr(yi,{layout:"horizontal",uiStrings:this.uiStrings,onAction:e=>{this.navigate(this.currentNode,e)}})}_renderNavigationUI(){switch(this.navigationMode){case"directional":return this._navigationUI;case"sequential":return this._sequentialNavigationUI;default:return null}}render(){return rr("calcite-panel",{afterCreate:this._afterContainerCreate,bind:this,class:this.classes(hr.widget,"esri-image-viewer"),loading:this.viewModel.updating},this.navigationEnabled?this._renderNavigationUI():null)}static{this.vnodeSelector="calcite-panel"}};e([A({type:Boolean})],gs.prototype,"autoLoad",null),e([A({type:Number}),A()],gs.prototype,"brightness",null),e([A()],gs.prototype,"clickAction",null),e([A({type:Number})],gs.prototype,"contrast",null),e([A()],gs.prototype,"currentNode",null),e([A({type:Object})],gs.prototype,"customParameters",null),e([A({readOnly:!0})],gs.prototype,"error",null),e([A()],gs.prototype,"imageSize",null),e([A({readOnly:!0})],gs.prototype,"imagePointsInView",null),e([A({readOnly:!0,type:Jt})],gs.prototype,"imageRenderer",null),e([A()],gs.prototype,"imageRotation",null),e([A()],gs.prototype,"imageSource",null),e([A({type:Boolean})],gs.prototype,"navigationEnabled",void 0),e([A()],gs.prototype,"navigationNodes",null),e([A()],gs.prototype,"navigationMode",null),e([A()],gs.prototype,"navigationViewModel",null),e([A({type:Number})],gs.prototype,"sharpness",null),e([A({readOnly:!0})],gs.prototype,"state",null),e([A()],gs.prototype,"ui",null),e([A()],gs.prototype,"uiStrings",void 0),e([dr(["click","hittest-response","pixel-location"]),A({type:us})],gs.prototype,"viewModel",void 0),e([A()],gs.prototype,"_navigationUI",null),e([A()],gs.prototype,"_sequentialNavigationUI",null),gs=e([L("esri.widgets.OrientedImageryViewer.components.ImageViewer")],gs);const ys=gs,fs=["right","towards","left","backwards"];let vs=class extends n{constructor(e){super(e),this.attributes=null,this.backwards=null,this.geometry=null,this.left=null,this.right=null,this.towards=null}get currentHeading(){return this._get("currentHeading")??0}set currentHeading(e){const t=Qe(e);this._set("currentHeading",t)}get currentPitch(){return this._get("currentPitch")??0}set currentPitch(e){const t=Qe(e);this._set("currentPitch",t)}get heading(){return this.attributes.cameraHeading}get id(){return this.attributes.objectId}get pitch(){return this.attributes.cameraPitch}get roll(){return this.attributes.cameraRoll??0}getDistanceTo(e){return this.geometry.distance(e.geometry)}getDirectionTo(e){if(!e)return null;const{geometry:{x:t,y:r},currentHeading:i}=this,{geometry:{x:a,y:s}}=e,o=Ke(t,r,a,s),n=Qe(o+i),c=Math.floor((n+45)/90)%4;return fs[c]}reset(){this.towards=null,this.backwards=null,this.left=null,this.right=null}};e([A()],vs.prototype,"attributes",void 0),e([A()],vs.prototype,"backwards",void 0),e([A()],vs.prototype,"currentHeading",null),e([A()],vs.prototype,"currentPitch",null),e([A({type:H})],vs.prototype,"geometry",void 0),e([A({readOnly:!0})],vs.prototype,"heading",null),e([A({readOnly:!0})],vs.prototype,"id",null),e([A()],vs.prototype,"left",void 0),e([A({readOnly:!0})],vs.prototype,"pitch",null),e([A()],vs.prototype,"right",void 0),e([A({readOnly:!0})],vs.prototype,"roll",null),e([A()],vs.prototype,"towards",void 0),vs=e([L("esri.widgets.OrientedImageryViewer.components.NavigationNode")],vs);const ws=vs;let js=class extends n{constructor(e){super(e),this.closestFeature=null,this.currentTime=0,this.videoBrightness=1,this.videoContrast=1,this.videoDuration=void 0,this.videoPaused=null,this.videoMuted=null,this.enableAudio=()=>{const{videoElement:e}=this.oiViewModel;e?.content&&(e.content.muted=!1,this.videoMuted=!1)},this.playVideoHandler=()=>{const e=this.oiViewModel.videoElement?.content;e&&(e.paused?e.play().catch((e=>{console.error("Error playing video:",e)})):e.pause())},this.rewindVideoHandler=()=>{const e=this.oiViewModel.videoElement?.content;e&&(e.currentTime=0,e.play().catch((e=>{console.error("Error playing video:",e)})))},this.resetVideoHandler=()=>{const{videoElement:e,videoMapView:t,videoLayer:r}=this.oiViewModel;e?.content&&r&&t&&(e.content.pause(),t.map.layers.remove(r),r.destroy(),this.oiViewModel.videoElement=null)},this.resetVideoEnhancementTools=()=>{this.oiViewModel?.videoLayer&&(this.videoBrightness=1,this.videoContrast=1,this.oiViewModel.videoLayer.effect=`brightness(${this.videoBrightness}) contrast(${this.videoContrast})`)},this.toggleAudio=()=>{const{videoElement:e}=this.oiViewModel;if(e?.content){const t=e.content.muted;e.content.muted=!t,this.videoMuted=!t}}}initialize(){this.addHandles([M((()=>this.oiViewModel.videoElement?.content),(e=>{if(e instanceof HTMLVideoElement){this._startVideo();const t=async()=>{this.currentTime=Number(e.currentTime.toFixed(2)),e.currentTime&&await this._updateVidFootprint(e.currentTime)};e.addEventListener("timeupdate",t),e.addEventListener("play",(()=>this._updateVideoIcon(e.paused))),e.addEventListener("pause",(()=>this._pauseVideoHandler(e)))}}),I),M((()=>this.oiViewModel.layer),((e,t)=>{t&&e&&e.uid!==t.uid&&this.oiViewModel.resetVideo()}),I)])}destroy(){this.resetVideoHandler()}_pauseVideoHandler(e){this._updateVideoIcon(e.paused)}_setVideoDuration(){const{videoElement:e}=this.oiViewModel;e?.content&&(this.videoDuration=e.content.duration)}_startVideo(){try{this.enableAudio(),this._setVideoDuration();const e=this.oiViewModel.currentBestFeature;e&&this.playVideoFromSelectedLocation(e)}catch(e){m.getLogger(this).error("oriented-imagery-viewer:video-load",e)}}async _updateVideoFootprintWithGivenFeature(e,i,a){const{activeViewer:s,mode:o,currentCoverageVisible:n,footprintExtent:c}=this.oiViewModel,l="video"===o?Xe:s?.imageSize;if(i&&l&&c)try{const s=await this.oiViewModel.getMapPoint(e,{feature:i,mode:"default",imageSize:l});w(a);const o=s.filter(r);if(!o.length)return;const c=[o.map((({x:e,y:t})=>[e,t,1]))];c[0].push(c[0][0]);const u=new N({rings:c,spatialReference:o[0].spatialReference});this.oiViewModel.updateCurrentCoveragePolygon(new t({geometry:u,attributes:{imageID:i.attributes.objectId},symbol:sa,visible:n}))}catch(e){j(e)||m.getLogger(this).error("update-footprint",e)}else this.oiViewModel.updateCurrentCoveragePolygon(null)}async _updateVidFootprint(e){const t=this.oiViewModel.allLayerFeatures.find((t=>t.attributes.offsetFromStart===Math.floor(e)));t?.attributes.offsetFromStart&&(this.closestFeature=t,await this._updateVideoFootprintWithGivenFeature(Ye,t))}_updateVideoIcon(e){this.videoPaused=!!e}handleVideoBrightnessChange(e){this.oiViewModel?.videoLayer&&(this.videoBrightness=e??0,this.oiViewModel.videoLayer.effect=`brightness(${this.videoBrightness}) contrast(${this.videoContrast})`)}handleVideoContrastChange(e){this.oiViewModel?.videoLayer&&(this.videoContrast=e??0,this.oiViewModel.videoLayer.effect=`brightness(${this.videoBrightness}) contrast(${this.videoContrast})`)}playVideoFromSelectedLocation(e){const t=e.attributes.offsetFromStart;if(t){const e=this.oiViewModel.videoElement?.content;e&&(e.currentTime=t,e.play().catch((e=>{console.error("Error playing video:",e)})))}}};e([A()],js.prototype,"closestFeature",void 0),e([A()],js.prototype,"currentTime",void 0),e([A()],js.prototype,"oiViewModel",void 0),e([A({type:Number})],js.prototype,"videoBrightness",void 0),e([A({type:Number})],js.prototype,"videoContrast",void 0),e([A()],js.prototype,"videoDuration",void 0),e([A()],js.prototype,"videoPaused",void 0),e([A()],js.prototype,"videoMuted",void 0),js=e([L("esri.widgets.OrientedImageryViewer.components.OrientedImageryVideoViewModel")],js);const ks=js;class bs extends l{constructor(e){super("InvalidDirectionError",`cannot navigate in direction: ${e}`)}}class Ms extends l{constructor(e){super("FeatureSectorNotFoundError",`cannot find feature sector of node: ${e}`)}}class Is extends l{constructor(){super("NoActiveViewerError","no active viewer")}}class _s extends l{constructor(){super("NoImageLoadedError","no image loaded")}}class Ps extends l{constructor(e){super("NoFeatureFoundWithObjectIdError",`no feature found with objectId: ${e}`)}}async function Fs(e,t,r,i){const a=Bi(t.attributes).polygon.centroid;a.z=void 0;const s=Ls(e.definitionExpression,r);let o,n;try{o=await Di({layerInstanceOrURL:e,point:a,queryParams:{where:s}},i)}catch(e){n=e}return new Os(a,o,n)}async function xs(e,t,r,i){const a=e.sequenceOrderField??"SequenceOrder",s=Ls(e.definitionExpression,r,`${a} IS NOT NULL`);let o,n;try{o=await Di({layerInstanceOrURL:e,point:t,queryParams:{where:s,orderByFields:[`${a}`],returnGeometry:!0,outFields:["*"]}},i)}catch(e){n=e}return new Os(t,o,n)}function Ss(e,t,r){const i=e.sequenceOrderField,a=Ls(e.definitionExpression,t,`${i} IS NOT NULL`);return e.queryFeatureCount({where:a},r)}async function Rs(e,t,r,i="ASC",a,s){const o=e.sequenceOrderField??"SequenceOrder";let n=Ls(e.definitionExpression,a,`${o} IS NOT NULL`);const c="number"==typeof t?t-1:void 0;"string"===t&&(n=R(n,`${o} = ${t}`));try{const t=await e.queryFeatures({where:n,returnGeometry:!0,orderByFields:[`${o} ${i}`],outFields:["*"],start:c,num:r},s);return await As(t,e),new Cs(t)}catch(e){return new Cs(void 0,e)}}async function Vs(e,t,r=0,i=1,a,s){const o=e.sequenceOrderField??"SequenceOrder",n=function(e,t){return t>0?[`${e}`]:[`${e} DESC`]}(o,r),c=Ls(e.definitionExpression,a,function(e,t,r){return e>0?`${r} IS NOT NULL AND ${r} > ${t}`:`${r} IS NOT NULL AND ${r} < ${t}`}(r,t,o));try{const t=await e.queryFeatures({where:c,orderByFields:n,num:i,outFields:["*"],returnGeometry:!0},s);return await As(t,e),new Cs(t)}catch(e){return new Cs(void 0,e)}}class Cs{constructor(e,t){this.response=e,this.error=t}}class Os{constructor(e,t,r){this.nextLocation=e,this.response=t,this.error=r}}async function As(e,t){const r=await Promise.resolve().then((()=>zi)).then((e=>e.default));e.features.forEach((e=>{const i=r.fromJSON({...e.toJSON(),layer:t});i&&(e.attributes=i)}))}function Ls(...e){let t="1=1";return e.forEach((e=>{t=R(t,e)})),t}const Ts="view-click",Gs="image-click",zs="triangular-click",Es="interaction-handles",Ds="hittest-handles",Us="video-handles",Hs=new Set(["JPG","JPEG"]),Bs=/\.(\w+)$/,Ns=()=>new l("orientedimageryviewer:sketch-not-initialized","Sketch property is not initialized, call loadSketch first");let qs=class extends(u.EventedMixin(v)){constructor(e){super(e),this.additionalFeatures=new o,this.additionalCameraLocations=new o,this.additionalFootprints=new o,this.areaMeasurementResult=0,this.areaMeasurementAccuracy=0,this.allLayerFeatures=[],this.bestFeatureAngle=0,this.bestFeatureCurrentFootprint=null,this.bestFeatureFootprint=null,this.cameraHeadingThreshold=et,this.cameraPitchThreshold=et,this.clickAction="hittest",this.videoViewModel=null,this.collectionId=null,this.conversionProps=null,this.coverageFrustums=new o,this.coveragePolygons=new o,this.currentBestFeature=null,this.currentBestFeatureMeasurementImage=null,this.currentBestFeatureLocation=null,this.currentCoverageVisible=!0,this.navigationNodes=new o,this.determineWorkflowForFeature=async(e,t,r)=>{const{currentBestFeature:i,selectedPoint:a,view:s}=this;if(s?.closePopup(),i&&a){this._initialCurrentCoverageUpdate=!0,this._updateGroundElevation=!0;try{await this._updatePointsAndPolygons(r),await this._loadImage(r)}catch(e){j(e)||(this.loadImageError(e),m.getLogger(this).error("#loadIImage()","error occured while loading image",e))}}},this.determineWorkflowForTriangularMeasurement=async(e,t,r)=>{if(this.view?.closePopup(),this.currentBestFeatureMeasurementImage&&this.selectedPoint)try{await this._loadMeasurementViewerImage(r)}catch(e){j(e)||(this.loadImageError(e),m.getLogger(this).error("#loadIImage()","error occured while loading image",e))}},this.disabled=!1,this.displayMessage={key:"onLoadMessage",type:"info"},this.displayNewMeasurementButton=!0,this.distanceMeasurementResult=0,this.distanceAccuracyArray=[],this.dataCaptureLayer=null,this.features=new o,this.groundCoordinates=null,this.groundCoordinatesAccuracy=null,this.heightMeasurementPixels=[],this.heightGraphic=null,this.heightMeasurementResult=0,this.heightMeasurementAccuracy=0,this.measurementAngle=null,this.tempDistance=null,this.imageGeometryField=null,this.imageLocationToolState=!1,this.imageMeasurementViewer=new ys,this.isAdditionalCoverageVisible=!1,this.isAdditionalPointSourcesVisible=!1,this.measurementVectors=[],this.layer=null,this.localPort=null,this.mapImageConversionToolState=!1,this.measureType=null,this.measurementGraphic=null,this.navigatorCurrentBestFeature=null,this.oiObjectIdField=null,this.overlayedCameraLocations=new o,this.overlayedMapFeatures=new b,this.pixelCoordinates=null,this.preserveAngle="none",this.pointSources=new o,this.previousFeatureAngle=0,this.selectedPoint=null,this.shouldShowSelectedImage=!1,this.sketch=null,this.sketchTriangular=null,this.sketchTriangularGraphicsLayer=null,this.draw=null,this.sketchAdapter=null,this.triangularMeasurementActive=!1,this.triangulatedDistanceMeasurement=null,this.triangulatedDistanceAccuracy=null,this.triangulatedAreaMeasurement=null,this.triangulatedAreaAccuracy=0,this.triangulatedMeasurementGraphic=null,this.triangulatedPoint=null,this.triangulatedMeasurementAdapter=null,this.updateFootprint=async(e,t)=>{"default"===this.mode&&"image-loaded"!==this.state||"video"===this.mode&&!this.videoElement?.content||await(this._adapter?.updateFootprint(e,t))},this.updateFootprintPanorama=async(e,t)=>{await(this._adapter?.updateFootprintPanorama(e,t))},this.updatingTriangularMeasurementState=!1,this.videoElement=null,this.videoLayer=null,this.videoMapView=new Jt({map:new Map}),this._adapter=null,this._highlightedFeatureHandle=null,this._imageViewer=new ys,this._initialCurrentCoverageUpdate=!0,this._locationPointOnImage=null,this._correctedLocationPointOnImage=null,this._overlays=new X({listMode:"hide",internal:!0,elevationInfo:{mode:"absolute-height"}}),this._panoramicViewer=new Fi,this._previousCursor=null,this._referencePointOnGround=null,this._referencePointOnImage=null,this._sectorData=null,this._featureToSector=null,this._updatingHandles=new z,this._clickTask=null,this._crossSymbol=null,this.footprintExtent=null,this._featureChangedTask=null,this._openPopupTask=null,this._suitabilities=null,this._transformController=new AbortController,this._updateFootprintTask=null,this._updateGroundElevation=!1,this.addUpdatingPromise=e=>this._updatingHandles.addPromise(e),this.hideImageGeometry=e=>{},this.highlight=e=>{if(!this._overlaysView)return;this.removeHighlight();const t=this.additionalFootprints.find((({attributes:{imageID:t}})=>t===Number(e)));this._highlightedFeatureHandle=t?this._overlaysView?.highlight(t):null},this.loadDataCaptureAdapter=async e=>{await this.loadSketch(e);const t=import("../../chunks/DataCaptureAdapter.js"),{default:r}=await t;return w(e),this.sketchAdapter=new r({viewModel:this}),this.sketchAdapter},this.loadImageFromSource=async(e,t)=>this._updatingHandles.addPromise(this._loadImageFromSourceInternal(e,t)),this.storeImageMeasurementViewer=e=>{this.imageMeasurementViewer=e},this.loadImageViewer=e=>{this._imageViewer?.destroy(),this._imageViewer=e},this.loadPanoramicViewer=e=>{this._panoramicViewer?.destroy(),this._panoramicViewer=e},this.loadVideoViewer=e=>{this.videoMapView.container=e},this.showImageByObjectId=async(e,t)=>{const r=this.additionalFeatures.find((({attributes:t})=>t.objectId===e));if(r)this.currentBestFeature=r;else{const{layer:r,layerFloorFilterClause:i}=this;if(!r)return void this.setMessage("noLayerSelected","info");this.beforeLoad();const a=this._updatingHandles.addPromise(this._queryAndLoadByObjectId(r,e,i,t));try{await a,await this.selectBestFeature(e,t)}catch(t){j(t)||(m.getLogger(this).error("oriented-imagery-viewer:show-image",t),"NoFeatureFoundWithObjectIdError"===t.name?this.setMessage("noFeatureFoundWithObjectId","error","",{objectId:e}):this.setMessage("imageLoadError","error",t.message))}}},this.imageToImageTransform=async(e,t,r)=>{const{updateElevationProps:i,...a}=t,{updateElevationProps:s,...o}=r,n=await Bt(e,a,i);return We(n,o)},this.getSectorFeatureById=e=>this._suitabilities?.find((({feature:{attributes:{objectId:t}}})=>t===e)),this.getFeatureSectorById=e=>this._featureToSector?.[`${e}`],this.navigate=async(e,t)=>{const{activeViewer:r}=this;if(!r)throw new Is;return await r.navigate(e,t)},this.removeHighlight=()=>this._highlightedFeatureHandle?.remove(),this.revealImageGeometry=e=>{},this.selectBestFeature=async(e,t)=>(w(t),this.currentBestFeature=this.features?.find((({attributes:t})=>`${t.objectId}`==`${e}`)),_((()=>"image-loaded"===this.state),t)),this.toggleImageAttributes=()=>{f(this._openPopupTask),this._openPopupTask=s((async e=>{const{currentBestFeature:r,popupEnabled:i,layer:a,view:s}=this;if(s?.closePopup(),!(s&&r&&i&&a))return;const{attributes:o,geometry:n}=r,c=new t({geometry:n,attributes:o.toJSON(),layer:a,sourceLayer:a});w(e),await s.openPopup({features:[c],location:o.location.clone()})}))},this.updateSuitabilities=(e,t=!0)=>{e.sort(((e,t)=>e.suitability-t.suitability)),this._suitabilities=e;const r=this._suitabilities.map((({feature:e})=>e));this._initialCurrentCoverageUpdate=!0,this._updateFeatures(r,t),this._groupFeaturesBySectors()},this._createViewClickHandle=()=>{if(this.removeHandles(Ts),"disabled"===this.state||null==this.view)return;const e=this.mapImageConversionToolState&&"image-loaded"===this.state?this._mapImageConversionToolViewClickHandler:this._viewClickHandler;this.addHandles(this.view.on("click",e,Xt.WIDGET),Ts)},this._createImageClickHandle=()=>{this.removeHandles(Gs);const{mapImageConversionToolState:e,mode:t,activeViewer:r,currentBestFeature:i,footprintExtent:a}=this,o=r?.imageSize;if(!(e&&"none"!==t&&o&&a&&i))return;const n=r.clickAction;this.clickAction="pixel-location";const c=p((()=>{this.clickAction=n}));let l=null;const u=S((()=>r),"pixel-location",(e=>{this.plotReferencePointOnImage(e),l?.abort(),l=s((async r=>{if(!e)return;const a=await this.getMapPoint(e,{feature:i,imageSize:o,mode:t}).then((e=>{const t=this.view?.spatialReference;return Ne(!t,e.spatialReference.equals(t))?e:$(e,t)}));w(r),this.plotReferencePointOnGround(a)}))}));this.addHandles([u,c],Gs)},this._createTriangularImageClickHandle=()=>{this.removeHandles(zs);const e=this.imageMeasurementViewer?.imageSize;this.triangularMeasurementActive&&"none"!==this.mode&&e&&this.currentBestFeature&&this.addHandles(this.imageMeasurementViewer.imageRenderer.on("double-click",this._measurementImageClickHandler),zs)},this._createTriangularImageLocationHandle=()=>{this.removeHandles(zs);const{imageLocationToolState:e,mode:t,imageMeasurementViewer:r}=this,i=r?.imageSize;if(!e||"none"===t||!i)return;this.clickAction="pixel-location";let a=null;const o=S((()=>r),"pixel-location",(e=>{1===this.measurementVectors.length&&(this.plotLocationPointOnImage(e,!0),a?.abort(),a=s((async r=>{if(!e||this.triangulatedPoint||2===this.measurementVectors?.length||!this.currentBestFeatureMeasurementImage)return;let a=await this.getMapPoint(e,{feature:this.currentBestFeatureMeasurementImage,imageSize:i,mode:t});w(r);const s=this.currentBestFeatureMeasurementImage.geometry.spatialReference;s&&!a.spatialReference.equals(s)&&(a=await $(a,s),w(r)),await this._calculateTriangulatedPointFromGroundPoint(a,{signal:r}),w(r)})))}));this.addHandles(o,zs)},this._createImageLocationHandle=()=>{this.removeHandles(Gs);const{imageLocationToolState:e,mode:t,activeViewer:r,currentBestFeature:i,footprintExtent:a}=this,o=r?.imageSize;if(!(e&&"none"!==t&&o&&a&&i))return;this.clickAction="pixel-location";let n=null;const c=S((()=>r),"pixel-location",(e=>{const{currentBestFeatureMeasurementImage:r,triangularMeasurementActive:a,imageMeasurementViewer:c}=this;this.pixelCoordinates=e;const l=null!=r&&!c.state.includes("loading");Ne(!a,l)&&this.plotLocationPointOnImage(e),n?.abort(),n=s((async r=>{if(!e)return;let s=await this.getMapPoint(e,{feature:i,imageSize:o,mode:t});w(r);const n=this.view?.spatialReference;n&&!s.spatialReference.equals(n)&&(s=await $(s,n),w(r)),this.groundCoordinates=s,a&&s&&l&&await this.triangulatedLocationWorkflow(s,r);const c=await this.calculateLocationAccuracy(e,s,t,r);w(r),c&&(this.groundCoordinatesAccuracy=c)}))}));this.addHandles(c,Gs)},this._handleImageHitTestResponse=async e=>{const{layer:t,overlayedCameraLocations:r}=this;if(!t)return;const i=e.results.find((({graphic:e,graphic:{attributes:i}})=>r.includes(e)&&i&&!i[t.imageReferenceField]&&!i[t.imageGeometryField]));if(!i)return;const a=i.graphic.attributes[t.objectIdField];await this.showImageByObjectId(a)},this._loadImage=async e=>{const{currentBestFeature:t,layer:r,mode:i}=this;if(this.clearGraphics(),!r||!t||"none"===i||"video"===i)return;const{attributes:a}=t,{imagePath:s,imageRotation:o,cameraHeading:n,cameraRoll:c,cameraPitch:l,objectId:u,cameraOrientation:p,location:h}=a,d=(c??0)+(o??0),g=h.spatialReference.isWGS84&&4!==p?.type?K(h):new H(h);let y=s;if(xi(s))try{y=await Si(r,u,e)}catch(e){if(j(e))return;return tt(e)?(m.getLogger(this).error(e),void this.setMessage("noAttachment","error",`${r.objectIdField}: ${u}`)):(m.getLogger(this).error(e,{[r.objectIdField]:u,layer:r}),void this.setMessage("imageLoadError","error",`query-attachments-failed:${r.objectIdField} ${u}`))}try{await this.loadImageFromSource(y,{imageRotation:d,options:e,pitch:l,yaw:n,mode:i,cameraLocation:g}),w(e),await this.transformAndPlotSelectedLocation(e)}catch(e){j(e)||this.loadImageError(e)}},this._loadImageFromSourceInternal=async(e,t)=>{const{mode:r,imageRotation:i,options:a}=t,s="string"==typeof e,o=s?e:e.url,{pathname:n,searchParams:c}=new URL(o);let l=s?n.match(Bs)?.[1]:e.datasetFormat;if(!l)try{l=await Ve(o,{...t.options})}catch(e){j(e)||m.getLogger(this).error("#getContentType()",e)}switch(l??="UNKNOWN FORMAT",r){case"default":this.triangularMeasurementActive?await this._setImageSource(this.imageMeasurementViewer,l,o,c,i,a):await this._setImageSource(this._imageViewer,l,o,c,i,a);break;case"panoramic":if(Hs.has(l.toUpperCase())){const{selectedPoint:e}=this,{pitch:r,yaw:i,cameraLocation:s,viewAngle:n}=t;this._panoramicViewer.imageSource=o;let c=i??0;"number"==typeof n?c=n-c:s&&e&&(c=await rt(s,e)-c),this._panoramicViewer.pitch=r??0,this._panoramicViewer.yaw=c,await this._panoramicViewer.loadImage(a)}else this.setMessage("unsupportedPanoramicImageryError","error",void 0,{datasetFormat:l})}},this._loadMeasurementViewerImage=async e=>{const{currentBestFeatureMeasurementImage:t,layer:r,mode:i}=this;if(this.imageMeasurementViewer.clearGraphics(),!r||!t||"none"===i||"video"===i)return;const{attributes:a}=t,{imagePath:s,imageRotation:o,cameraHeading:n,cameraRoll:c,cameraPitch:l,objectId:u,cameraOrientation:p,location:h}=a,d=(c??0)+(o??0),g=h.spatialReference.isWGS84&&4!==p?.type?K(h):new H(h);let y=s;if(xi(s))try{y=await Si(r,u,e)}catch(e){if(j(e))return;return tt(e)?(m.getLogger(this).error(e),void this.setMessage("noAttachment","error",`${r.objectIdField}: ${u}`)):(m.getLogger(this).error(e,{[r.objectIdField]:u,layer:r}),void this.setMessage("imageLoadError","error",`query-attachments-failed:${r.objectIdField} ${u}`))}try{await this.loadImageFromSource(y,{imageRotation:d,options:e,pitch:l,yaw:n,mode:i,cameraLocation:g}),w(e)}catch(e){j(e)||this.loadImageError(e)}},this._loadViewAdapter=async e=>{const{view:t}=this;if(t)switch(t.type){case"2d":{const{default:t}=await import("../../chunks/MapViewAdapter.js");w(e),this._adapter=new t(this);break}case"3d":{const{default:t}=await import("../../chunks/SceneViewAdapter.js");w(e),this._adapter=new t(this);break}}else this._adapter=null},this._mapImageConversionToolViewClickHandler=e=>{e.stopPropagation(),e.preventDefault(),e.mapPoint&&this.plotMapPoint(e.mapPoint)},this._measurementImageClickHandler=e=>{e.stopPropagation(),e.preventDefault();const{sketchTriangular:t,triangularMeasurementActive:r,currentBestFeatureMeasurementImage:i,triangulatedMeasurementGraphic:a}=this;t&&r&&i&&a&&"active"!==t.state&&(t.update([a],{tool:"reshape"}),this.updatingTriangularMeasurementState=!0)},this._viewClickHandler=e=>{this._clickTask?.abort(),this._clickTask=s((async t=>{const{pointerType:r,button:i,mapPoint:a}=e;if(("mouse"!==r||0===i)&&a)return e.stopPropagation(),e.preventDefault(),this._updatingHandles.addPromise(this.loadBestImage(a,{signal:t}))}))},this.plotSelectedPointOnImage=async(e,r)=>{if(await k(r),!e)return;const i=new H({...G(e)?e.toJSON():e});if("default"===this.mode)i.x-=.5,i.y=.5-i.y,i.spatialReference=this._imageViewer.imageRenderer.spatialReference.clone(),this._crossSymbol=new t({geometry:i,symbol:la}),this._imageViewer.addGraphic(this._crossSymbol,0);else if("panoramic"===this.mode){const{imageSize:r}=this._panoramicViewer;if(!r)return;const[i,a]=r,{heading:s,pitch:o}=it(e,i,a),n=at(s,o);this._crossSymbol=new t({geometry:new H(n,Z.WebMercator),symbol:na}),this._panoramicViewer.addGraphic(this._crossSymbol,0)}},this.handleSectorClick=this.handleSectorClick.bind(this),this.searchBestImage=this.searchBestImage.bind(this),this.transformAndPlotReferencePointOnImage=this.transformAndPlotReferencePointOnImage.bind(this)}initialize(){this.addHandles([M((()=>this.view),(()=>{this.load()}),I),M((()=>this.view?.map),((e,t)=>{t?.layers.remove(this._overlays),e?.layers.add(this._overlays)}),x),M((()=>this.view?.map?.allLayers?.length),(e=>{e&&this.view?.map?.layers.reorder(this._overlays,e-1)}),x),M((()=>[this.state,this.mapImageConversionToolState,this.view]),(()=>{this._createViewClickHandle(),this._createImageClickHandle()}),I),M((()=>[this.triangularMeasurementActive,this.currentBestFeatureMeasurementImage]),(()=>{this._createTriangularImageClickHandle()}),I),M((()=>[this.state,this.imageLocationToolState,this.view]),((e,t)=>{if(this._createImageLocationHandle(),!this.imageLocationToolState)return this.clearPreviousGroundLocation(),void this._resetCursor();e[1]!==t?.[1]&&this._setMeasurementCursor()}),I),M((()=>this.measureType),(()=>{this.clearPreviousMeasurements()}),I),M((()=>this.bestFeatureAngle),((e,t)=>{this.previousFeatureAngle=t??0}),I),M((()=>this.currentBestFeature),(async(e,t)=>{f(this._featureChangedTask),this._featureChangedTask=s((async r=>this.determineWorkflowForFeature.apply(this,[e,t,{signal:r}]))),await this._featureChangedTask.promise}),{sync:!0}),M((()=>this.currentBestFeatureMeasurementImage),(async(e,t)=>{f(this._featureChangedTask),t&&e!==t&&(this.measurementVectors=[],this.triangulatedPoint=null,this.sketchTriangularGraphicsLayer?.graphics.destroyAll()),this._featureChangedTask=s((async r=>{await this.determineWorkflowForTriangularMeasurement(e,t,{signal:r}),w(r),this._reorderTriangularSketchLayer()}))}),I),M((()=>this.triangularMeasurementActive),(async(e,t)=>{t&&!e&&(this.measurementVectors=[],this.currentBestFeatureMeasurementImage=null,this.triangulatedDistanceMeasurement=null,this.triangulatedMeasurementGraphic=null,this.triangulatedPoint=null,this.updatingTriangularMeasurementState=!1,this.triangulatedAreaMeasurement=null,this.triangulatedDistanceAccuracy=null,this.triangulatedAreaAccuracy=0,this.sketchTriangularGraphicsLayer?.graphics.destroyAll(),this.clearReferencePointOnImage(),this.imageMeasurementViewer.clearImage(),this.imageMeasurementViewer.clearGraphics())})),M((()=>this.mode),(e=>{switch(this.removeHandles(Es),e){case"default":this.addHandles(M((()=>{const{state:e}=this;return"image-loaded"===e?this._imageViewer.imagePointsInView:null}),(e=>{e&&(f(this._updateFootprintTask),this._updateFootprintTask=s((async t=>{await this.updateFootprint(e,{signal:t})})))}),{...I,equals:(e,t)=>i(e,t,a)}),Es);break;case"video":this.addHandles(M((()=>{const{footprintExtent:e}=this;if(e)return Ye}),(e=>{e&&(f(this._updateFootprintTask),this._updateFootprintTask=s((async t=>{await this.updateFootprint(e,{signal:t})})))}),{...I,equals:(e,t)=>i(e,t,a)}),Es);break;case"panoramic":this.addHandles(M((()=>{const{currentBestFeature:e,state:t,_panoramicViewer:r}=this,{imageSize:i,vfov:a,hfov:s,pitch:o,yaw:n}=r;return e&&i&&!t.includes("loading")&&null!=a&&null!=s&&null!=o&&null!=n?[a,s,n,o]:null}),(e=>{if(!e||this.state.includes("loading"))return;const[t,r,i,a]=e;this.currentNode&&(this.currentNode.currentHeading=i+(this.currentNode.heading??0),this.currentNode.currentPitch=a+(this.currentNode.pitch??0)),f(this._updateFootprintTask),this._updateFootprintTask=s((async e=>{await this.updateFootprintPanorama({verticalFieldOfView:t,horizontalFieldOfView:r,yaw:i,pitch:a},{signal:e}),this._updateFootprintTask=null}))}),{equals:(e,t)=>i(e,t,a)}),Es)}}),I),M((()=>[this.brightness,this.contrast,this.sharpness]),(()=>{const{_imageViewer:e,brightness:t,contrast:r,mode:i,sharpness:a}=this;"default"===i&&(e.brightness=t,e.contrast=r,e.sharpness=a)}),I),M((()=>this.activeViewer?.imageRenderer),(()=>{this.sketch&&(this.sketch.view=this.activeViewer?.imageRenderer)})),M((()=>this.activeViewer),(e=>{this.removeHandles(Ds),e&&this.addHandles(S((()=>e),"hittest-response",this._handleImageHitTestResponse),Ds)}))]),this.when().finally((()=>{this.notifyChange("state")}))}destroy(){this.currentBestFeature=null,this._updateFootprintTask=f(this._updateFootprintTask),this._clickTask=f(this._clickTask),this.coverageFrustums.destroy(),this.coveragePolygons.destroy(),this.pointSources.destroy(),this.additionalFootprints.destroy(),this.additionalCameraLocations.destroy(),this.bestFeatureFootprint=y(this.bestFeatureFootprint),this.bestFeatureCurrentFootprint=y(this.bestFeatureCurrentFootprint),this.videoViewModel=y(this.videoViewModel),this._crossSymbol=y(this._crossSymbol),this._referencePointOnGround=y(this._referencePointOnGround),this._referencePointOnImage=y(this._referencePointOnImage),this._locationPointOnImage=y(this._locationPointOnImage),this._overlays&&this.view?.map?.remove(this._overlays),this._overlays.destroy(),this._imageViewer.destroy(),this.imageMeasurementViewer.destroy(),this._panoramicViewer.destroy()}get activeLayer(){return c(m.getLogger(this),"activeLayer",{replacement:"layer"}),this.layer}set activeLayer(e){c(m.getLogger(this),"activeLayer",{replacement:"layer"}),this.layer=e}get activeViewer(){const{_imageViewer:e,_panoramicViewer:t,mode:r}=this;switch(r){case"default":return e;case"panoramic":return t;default:return null}}get accuracyParametersMissing(){return this.layer?.orientationAccuracy?.every((e=>0===e))??!0}get brightness(){return this._get("brightness")??0}set brightness(e){this._set("brightness",h(e,-10,10))}get contrast(){return this._get("contrast")??0}set contrast(e){this._set("contrast",h(e,-10,10))}get currentNode(){const{currentBestFeature:e,navigationNodes:t}=this;return t.find((t=>t.id===e?.attributes.objectId))}get featureCount(){return this.features?.length??0}get imageGalleryEnabled(){const{currentBestFeature:e}=this;if(!e)return!1;const t=e.attributes.imagePath?.trim();return st(t)||xi(t)}get imageLoaded(){return c(m.getLogger(this),"imageLoaded",{replacement:'Use OrientedImageryViewer.state === "image-loaded"',version:"4.29",warnOnce:!0}),"image-loaded"===this.state}get invalidCameraHeading(){return this.currentBestFeature?.attributes?.cameraHeading===ot}get imagePointsInView(){const{mode:e,_imageViewer:t}=this;return"default"===e?t.imagePointsInView:null}get layerView(){const{layer:e,view:t}=this;if(e&&t)return t.allLayerViews.find(nt(e))}get layerFloorFilterClause(){const{layerView:e}=this;return e?$t(e):null}get mode(){const e=this.currentBestFeature?.attributes;if(!e)return"none";if(e.orientedImageryType?.includes("video"))return"video";const{horizontalFieldOfView:t,isSpherical:r}=e;return 360===t||r?"panoramic":"default"}get popupEnabled(){return!0===this.layer?.popupEnabled}get referencePoint(){return this._referencePointOnGround?.geometry}get sectorData(){const{_sectorData:e}=this;return e?ct.map((t=>e[t])):null}get sharpness(){return this._get("sharpness")??0}set sharpness(e){this._set("sharpness",h(e,0,1))}get sketchGraphicsLayer(){return this.sketch?.layer}get state(){const{mode:e,disabled:t,_updatingHandles:{updating:r},_featureChangedTask:i}=this;if(t)return"disabled";if(!this.isFulfilled()||r||!1===i?.finished)return"loading";if(this.isRejected())return"error";if("error"===this.displayMessage?.type)return"image-load-error";switch(e){case"default":return this._imageViewer.state;case"panoramic":return this._panoramicViewer.state;case"video":return this.videoElement?.loaded?"video-loaded":"video-not-loaded"}return"ready"}get thumbnails(){const{features:e}=this;return e?new o(e.map((({attributes:{imagePath:e,objectId:t,cameraRoll:r,imageRotation:i}})=>{const a=e?.trim();return st(a)||xi(a)?{url:a,objectId:t,rotation:(r??0)+(i??0)}:null})).filter(r)):null}set view(e){this._set("view",e)}get _sketchGraphicsLayer(){const{mode:e}=this;switch(e){case"panoramic":return new X({elevationInfo:{mode:"absolute-height"}});case"default":return new X;default:return}}get _overlaysView(){return this.view?.layerViews.find((({layer:e})=>e===this._overlays))}beforeLoad(){this.view?.closePopup(),this.displayMessage=null,this.clearPreviousGroundLocation(),this.triangularMeasurementActive=!1,this.currentBestFeatureMeasurementImage=null,this.measureType=null,this.imageLocationToolState=!1,this.features.removeAll(),this.currentBestFeature=null,this.additionalFeatures.removeAll(),this.additionalFootprints.removeAll(),this.additionalCameraLocations.removeAll(),this.bestFeatureCurrentFootprint=y(this.bestFeatureCurrentFootprint),this._overlays?.removeAll()}async computeHeight(e,t,r=!0){const{currentBestFeature:i,activeViewer:a,layer:s,footprintExtent:o}=this,n=a?.imageSize,c=i?.attributes,l=s?.orientationAccuracy;if(!c||!n||!e||e.length<2||!l)return;const u="panoramic"===t?await this.getMeasurementPropertiesPanoramic():lt(c,n[0],n[1]),p=e.at(0),m=e.at(-1);if(!(u&&p&&m&&l&&o))return;const h=[m,p],d=$a(h,!1),g="panoramic"===t?await rs(h,u,0,i,!0,!1):await ts(h,u,0,!0,r);if(!g)return;const y="panoramic"===t?await async function(e,t,r,i,a,s=!1,o){if(t.length<2||!i||!r||!e)throw new Error("Missing parameters");const n=Ja(r,e),c=t.map((e=>[e.x,e.y])),l=c.at(0),u=c.at(-1),p=n.map((e=>rs([l,u],e,0,a,s,!1))),m=await Promise.all(p);w(o);let h=0;for(const e of m){if(!e)return 0;const t=Math.abs(e-i);h=Math.max(t,h)}return h}(l,d,u,g,i,!0):await async function(e,t,r,i,a=!1,s){if(t.length<2||!i||!r||!e)return null;const o=Za(r,e);if(!o)return null;const n=t.map((e=>[e.x,e.y])),c=n.at(0),l=n.at(-1);if(!c||!l)return null;const u=o.map((e=>ts([c,l],e,0,a,!1))),p=await Promise.all(u);w(s);let m=0;for(const e of p){if(!e)return null;const t=Math.abs(e-i);m=Math.max(t,m)}return m}(l,d,u,g,!0);return y?{value:g,accuracy:y}:{value:g}}async calculateAreaMeasurement(e,t,r){if(e.length<3||!this.currentBestFeature||!this.activeViewer?.imageSize||"none"===t)return null;const i="default"===t?await this.getMeasurementProperties():await this.getMeasurementPropertiesPanoramic();return w(r),i?"default"===t?await is(e,i,!0):await as(e,i,!0,r):null}async calculateDistanceMeasurement(e,t,r){const{currentBestFeature:i,activeViewer:a}=this;if(e.length<2||!i||!a?.imageSize||"none"===t)return null;const s="default"===t?await this.getMeasurementProperties():await this.getMeasurementPropertiesPanoramic();return w(r),s?"default"===t?await ss([e.at(0),e.at(-1)],s,!0):await os([e.at(0),e.at(-1)],s,!0):null}async calculateAccuracy(e,t,r){const{layer:i,currentBestFeature:a,activeViewer:s}=this,o=i?.orientationAccuracy,n=o?.every((e=>0===e))||!o?.length;if("area"===t&&e.length<3||"distance"===t&&e.length<2||!a||!s?.imageSize||n)return null;let c=null;if(this.triangularMeasurementActive&&this.currentBestFeatureMeasurementImage&&this.imageMeasurementViewer?c=await this.getMeasurementProperties(this.currentBestFeatureMeasurementImage,this.imageMeasurementViewer):(c=await this.getMeasurementProperties(),w(r)),!c)return null;const l="area"===t?await is(e,c,!0):await ss([e.at(0),e.at(-1)],c,!0);w(r);const{updateElevationProps:u,...p}=c,m=Za(p,o);if(!m?.length)return null;const h=m.map((e=>({...e,updateElevationProps:u}))).map((async i=>{const a="area"===t?await is(e,i,!0):await ss([e.at(0),e.at(-1)],i,!0);if(w(r),a&&l){if("area"===t){const e="number"!=typeof a?a.area:null;return e?Math.abs(e-l.area):null}return Math.abs(a-l)}return null})),d=await Promise.all(h);w(r);const g=d.filter((e=>null!==e));return 0===g.length?null:Xa(g)}async calculateLocationAccuracy(e,t,r="default",i){const{layer:a,currentBestFeature:s}=this,o=a?.orientationAccuracy,n=this.view?.spatialReference,c=o?.every((e=>0===e))||!o?.length;if(!s||c)return null;const l="default"===r?await this.getMeasurementProperties():await this.getMeasurementPropertiesPanoramic();if(w(i),!l)return null;const{updateElevationProps:u,...p}=l,m="default"===r?Za(p,o):Ja(p,o);if(!m?.length)return null;const h=m.map((e=>({...e,updateElevationProps:u}))).map((async a=>{const{updateElevationProps:s,...o}=a;let c="default"===r?await Bt(e,o,s):await Ht(e,o,s);return w(i),n&&!c.spatialReference.equals(n)&&(c=await $(c,n),w(i)),c&&t?[Math.abs(c.x-t.x),Math.abs(c.y-t.y),c.z&&t.z?Math.abs(c.z-t.z):0]:null})),d=await Promise.all(h);if(w(i),!d?.length)return null;const g=d.map((e=>[e?.[0]??0,e?.[1]??0,e?.[2]??0])),[y,f,v]=function(e){if(!e?.length)throw new Error("Invalid deviations array");const[t,r,i]=[0,1,2].map((t=>e.map((e=>e[t])).filter((e=>null!==e)))).map((e=>e.length?Xa(e):0));return[t,r,i]}(g);return{x:y,y:f,z:v}}async calculateAccuracyPanoramic(e,t,r){const{layer:i,currentBestFeature:a,activeViewer:s,mode:o}=this,n=i?.orientationAccuracy,c=n?.every((e=>0===e))||!n?.length;if("area"===t&&e.length<3||"distance"===t&&e.length<2||!a||!s?.imageSize||c||"panoramic"!==o)return null;const l=await this.getMeasurementPropertiesPanoramic();if(w(r),!l)return null;const u="area"===t?await as(e,l,!0):await os([e.at(0),e.at(-1)],l,!0);w(r);const{updateElevationProps:p,...m}=l,h=Ja(m,n);if(!h?.length)return null;const d=h.map((e=>({...e,updateElevationProps:p}))).map((async i=>{const a="area"===t?await as(e,i,!0):await os([e.at(0),e.at(-1)],i,!0);if(w(r),a&&u){if("area"===t){const e="number"!=typeof a?a.area:null;return e?Math.abs(e-u.area):null}return Math.abs(a-u)}return null})),g=await Promise.all(d);w(r);const y=g.filter((e=>null!==e));return 0===y.length?null:Xa(y)}async calculateHeightMeasurementInfo(e,t,r){const{currentBestFeature:i,activeViewer:a}=this,s=a?.imageSize;if(!i||!a||!s?.length||"none"===t)return;const{attributes:o}=i,[n]=$a([e],"panoramic"!==t),c="panoramic"===t?await this.getMeasurementPropertiesPanoramic():lt(o,s[0],s[1]);if("panoramic"===t){if(!c)return;const e=await async function(e,t,r,i){const{attributes:a}=r,{location:s}=a,{updateElevationProps:o,...n}=t;if(!e||!t)throw new Error("Missing parameters");let c=s.clone();c.spatialReference.isGeographic&&(c=await $(c,Z.WebMercator));const l=await Ht(e,{...n,cameraLocation:c},o);w(i);const u=l.clone();return u.z?u.z+=20:u.z=20,$e(u,n)}(n,c,i,r);if(!e)return;e?.heading>180&&(e.heading-=360);const t=function(e,t){let r=180*Math.atan2(-e.y+t.y,e.x-t.x)/Math.PI;return r<0&&(r+=180),r*Math.PI/180}(n,e),a=T([n.x,n.y],[e.x,e.y]);if(!t||!a)return;return{measurementAngle:t,tempDistance:a}}const l=await async function(e,t,r){if(!t||!e)throw new Error("Missing required parameters");const i=await Bt(e,t);w(r);const a=i.clone();a.z?a.z+=20:a.z=20;const{averageElevation:s,cameraPitch:o,cameraRoll:n,farDistance:c,...l}=t;return We(a,l)}(n,c,r);if(!l)return;const u=Fa(n,l),p=T([n.x,n.y],[l.x,l.y]);return u&&p?{measurementAngle:u,tempDistance:p}:void 0}async calculateTriangulatedMeasurements(e){switch(this.measureType){case"distance":{this.triangulatedDistanceMeasurement=await Ea(this.measurementVectors);const t=await this.calculateAccuracy(e,"distance");if(t&&this.triangulatedDistanceMeasurement?.distance){const e=Math.atan(t/this.triangulatedDistanceMeasurement.distance);this.triangulatedDistanceAccuracy={distanceAccuracy:t,angleAccuracy:e}}break}case"area":if(this.currentBestFeatureMeasurementImage?.geometry.spatialReference){const t=await Da(this.measurementVectors,this.currentBestFeatureMeasurementImage.geometry.spatialReference);this.triangulatedAreaMeasurement=t,this.triangulatedAreaAccuracy=await this.calculateAccuracy(e,"area")??this.triangulatedAreaAccuracy}}}clearPreviousMeasurements(){this.clearMeasurementGraphics(),this.resetMeasurementData(),this.stopMeasurement()}clearPreviousGroundLocation(){this.groundCoordinates=null,this.groundCoordinatesAccuracy=null,this.pixelCoordinates=null,this.clearLocationPointOnImage()}clearMeasurementGraphics(){this.measurementGraphic&&(this.activeViewer?.removeGraphic(this.measurementGraphic),this.measurementGraphic=null),this.heightGraphic&&(this.activeViewer?.removeGraphic(this.heightGraphic),this.heightGraphic=null),this.triangularMeasurementActive&&this.sketchTriangularGraphicsLayer?.graphics.destroyAll()}digitizeCancel(){return this.sketch?.cancel()}digitizeCanRedo(){return this.sketch?.canRedo()??!1}digitizeCanUndo(){return this.sketch?.canUndo()??!1}digitizeComplete(){return this.sketch?.complete()}async digitizeCreate(e,t){const{sketch:r,dataCaptureLayer:i}=this;if(!r)throw Ns();(function(e,t,r){if(!e)return;const{renderer:i}=e,a=function(e){switch(e){case"point":return e=>new Pr({size:10,style:"circle",color:e??ya(),outline:new Zt({color:[0,0,0],width:2})});case"polygon":return e=>new _r({color:null,outline:fa(e),style:"none"});case"polyline":return e=>fa(e)}}(t),s=i?"symbol"in i?i.symbol:"defaultSymbol"in i?i.defaultSymbol:i.getSymbol():null,o=a(s?.color);r[`${t}Symbol`]=(t===e.geometryType?s:null)??o})(i,e,r),await r.create(e,{...t,defaultZ:0})}async digitizeDelete(){if(!this.sketch)throw Ns();return this.sketch.delete()}digitizeDuplicate(){if(!this.sketch)throw Ns();return this.sketch.duplicate()}digitizePlace(e,t){if(!this.sketch)throw Ns();return this.sketch.place(e,t)}digitizeRedo(){if(!this.sketch)throw Ns();return this.sketch.redo()}digitizeUndo(){if(!this.sketch)throw Ns();return this.sketch.undo()}digitizeUpdate(e,t){if(!this.sketch)throw Ns();return this.sketch.update(e,t)}async displayHeightResults(){const{currentBestFeature:e,activeViewer:t,heightMeasurementPixels:r,mode:i}=this,a=t?.imageSize,s=e?.attributes;if(!s||!a)return;const o=await this.computeHeight(r,i);o?.value&&o?.accuracy&&(this.heightMeasurementResult=o.value,this.heightMeasurementAccuracy=o.accuracy)}filterByFootprints(e,t,r=!1){const i=[],a=[],s=[];return e.forEach((e=>{const{layer:{coveragePercent:o},attributes:n}=e;let c;const{polygon:l,frustum:u}=Bi(n);if(c=l.clone(),n.isInspection&&(c=function(e){const{spatialReference:t,x:r,y:i}=e.geometry,{cameraHeading:a,cameraPitch:s,farDistance:o,nearDistance:n}=e,c=$i(e.geometry),l=new N({spatialReference:t}),u=Math.abs(1.44*o*c);let p=Math.abs(1.44*n*c);(s<20||null==a)&&(p=u);const m=[];return m[0]={x:r+u*Math.sin((a-45)*Hi),y:i+u*Math.cos((a-45)*Hi)},m[1]={x:r+u*Math.sin((a+45)*Hi),y:i+u*Math.cos((a+45)*Hi)},m[2]={x:r+p*Math.sin((a+135)*Hi),y:i+p*Math.cos((a+135)*Hi)},m[3]={x:r+p*Math.sin((a+225)*Hi),y:i+p*Math.cos((a+225)*Hi)},l.addRing([[m[0].x,m[0].y,0],[m[1].x,m[1].y,0],[m[2].x,m[2].y,0],[m[3].x,m[3].y,0],[m[0].x,m[0].y,0]]),l}(n)),o&&(c=function(e,t){const r=1+t/100;if("esri.geometry.Circle"===e.declaredClass){const{radius:t,center:i}=e,a=new Lt({radius:t*r,center:i});return e.rings.length>1&&a.addRing(e.rings[1]),a}if("esri.geometry.Polygon"===e.declaredClass){const t=new N({spatialReference:e.spatialReference}),i=e.centroid;if(i){const a=[];for(let t=0;t<e.rings[0].length;t++){const s=Math.sqrt((i.x-e.rings[0][t][0])**2+(i.y-e.rings[0][t][1])**2),o=Ee(Vt(Pt(),[e.rings[0][t][0],e.rings[0][t][1],0],[i.x,i.y,0]),1/s,1),n=ze([i.x,i.y,0],o,s*r,1);a.push({x:n[0],y:n[1]})}t.addRing([[a[0].x,a[0].y,0],[a[1].x,a[1].y,0],[a[2].x,a[2].y,0],[a[3].x,a[3].y,0],[a[0].x,a[0].y,0]])}return t}return e}(c,o)),r||!t||function(e,t){return e.contains(t)}(c,t)){s.push(e);const{geometry:t,objectId:r,cameraHeight:o,cameraHeading:c}=n,p=t.clone();p.z=o,p.imageID=r,this.pointSources.push(p),c!==ot&&(i.push(l),u&&a.push(u))}})),{features:s,polygons:i,frustums:a}}getMeasurementProperties(e=this.currentBestFeature,t=this.activeViewer){if(!e||!t?.imageSize)return;const{elevationSample:r,attributes:i}=e,{elevationSource:a,cameraHeight:s}=i,o=lt(i,t.imageSize[0],t.imageSize[1]);let n=o.cameraLocation;return(n.spatialReference.isGeographic?$(n,Z.WebMercator):Promise.resolve(n)).then((e=>(n=e,ut(n.spatialReference,n.z??0,s,{elevationSample:r,elevationSource:a,extent:this.footprintExtent})))).then((t=>("elevationSample"in t&&pt(t.elevationSample)&&(e.elevationSample=t.elevationSample),{...o,cameraLocation:n,updateElevationProps:t})))}getMeasurementPropertiesPanoramic(){const{currentBestFeature:e,activeViewer:t}=this;if(!e||!t?.imageSize)return;const{elevationSample:r,attributes:i}=e,{elevationSource:a,cameraHeight:s}=i,o=mt(i,t.imageSize[0],t.imageSize[1]);let n=o.cameraLocation;return(n.spatialReference.isGeographic?$(n,Z.WebMercator):Promise.resolve(n)).then((e=>(n=e,ut(n.spatialReference,n.z??0,s,{elevationSample:r,elevationSource:a,extent:this.footprintExtent})))).then((t=>("elevationSample"in t&&pt(t.elevationSample)&&(e.elevationSample=t.elevationSample),{...o,cameraLocation:n,updateElevationProps:t})))}async deleteDataCaptureFeatures(e){const{dataCaptureLayer:t}=this;if(!t)throw new l("orientedimagery","Data capture layer is not available");return t.queryFeatures({objectIds:e}).then((({features:e})=>t.applyEdits({deleteFeatures:e})))}handleSectorClick(e){if(isNaN(e))return;const t=this._sectorData?.[ct[e]],r=t?.at(0);r&&(this.triangularMeasurementActive&&this.currentBestFeature?this._updateImageMeasurementBestFeature(r):this._updateCurrentBestFeature(r))}handleFeatureClick(e){const{sector:t,featureIndexInSector:r}=e;if(isNaN(r))return;const i=this._sectorData?.[t],a=i?.at(r);a&&(this.triangularMeasurementActive&&this.currentBestFeature?this._updateImageMeasurementBestFeature(a):this._updateCurrentBestFeature(a))}handleDrawCursorUpdateEvents(e){const{measurementAngle:t,tempDistance:r,heightMeasurementPixels:i,mode:a,activeViewer:s,currentBestFeature:o}=this,n=s?.imageSize;if(!e.vertices||!n||!o)return;const c=Ya(e.vertices.at(-1),a,n);if(i.length<1||!c||!r||!t||"none"===a)return;const l=xa(i[0],c,t);if(!l?.length)return;this.heightMeasurementPixels.push(l),"panoramic"===a?this.createPolylineGraphicPano():this.createPolylineGraphic();const u=es(o.attributes.location.spatialReference),p=function(e,t,r=1){const i=$a(e,!1);if(i?.length)return 20*T([i[0].x,i[0].y],[i.at(-1).x,i.at(-1).y])*r/t}(this.heightMeasurementPixels,r,u);p&&(this.heightMeasurementResult=p)}async handleDrawVertexAddEvents(e,t){const{currentBestFeature:r,activeViewer:i,heightMeasurementPixels:a,mode:s}=this;if(!r||!i||!e.vertices?.length||"none"===s)return;const o=i?.imageSize;if(!a.length&&o){const r=Ya(e.vertices.at(-1),s,o);this.heightMeasurementPixels.push(r);const i=await this.calculateHeightMeasurementInfo(r,s,t);if(!i?.measurementAngle||!i?.tempDistance)return;this.measurementAngle=i.measurementAngle,this.tempDistance=i.tempDistance}}async load(e){return this.addResolvingPromise(this._loadViewAdapter(e).catch((e=>{if(!j(e))throw e}))),this}async loadBestImage(e,t){return this.selectedPoint=fe(e),this.beforeLoad(),this._fetchFeaturesWithController(e,t)}loadImageError(e){m.getLogger(this).error("oriented-imagery-viewer:load-image",e),this.setMessage("imageLoadError","error",e.message)}async loadSketch(e){if(!this.sketch){const t=import("../Sketch/SketchViewModel.js"),{default:r}=await t;w(e),this.sketch=new r({layer:this._sketchGraphicsLayer,view:this.activeViewer?.imageRenderer,updateOnGraphicClick:!1,defaultUpdateOptions:{reshapeOptions:{edgeOperation:"none",shapeOperation:"none",vertexOperation:void 0},enableMoveAllGraphics:!1,enableRotation:!1,enableScaling:!1,multipleSelectionEnabled:!1,toggleToolOnClick:!1,tool:"transform"}})}return this.sketch}async loadMeasurementAdapter(e){if(!this.sketchAdapter){const t=import("../../chunks/MeasurementAdapter.js"),{default:r}=await t;if(w(e),this.sketchAdapter=new r({viewModel:this}),!this.sketchAdapter.viewModel.isResolved())return}return this.sketchAdapter}async loadTriangulatedMeasurementAdapter(e){if(!this.triangulatedMeasurementAdapter){const t=import("../../chunks/TriangulatedMeasurementAdapter.js"),{default:r}=await t;if(w(e),this.triangulatedMeasurementAdapter=new r({viewModel:this}),!this.triangulatedMeasurementAdapter.viewModel.isResolved())return}return this.triangulatedMeasurementAdapter}async processFeatureResponse(e,t,r){const{features:i}=e;if(this._clearFeatureGeometries(),!this._checkFeatures(i))return;const{features:a,polygons:s,frustums:o}=this.filterByFootprints(i,t,r?.skipFilter);if(!this._checkFeatures(a))return;this.coveragePolygons.addMany(s),this.coverageFrustums.addMany(o);const n=await this.processElevationSample(s,a,r);w(r),await this._updateElevationOfSelectedPointAndLocations(a,t,n),w(r),ht(a,n);const c=this._processSuitableFeatures(a,t);this.updateSuitabilities(c,r?.loadBestImage)}async startMeasurement(e,t){this.sketch||await this.loadSketch(t),await this.loadMeasurementAdapter(t);const{sketch:r,sketchAdapter:i,activeViewer:a,mode:s}=this;if(!r||!i||!a||"none"===s)return;if(this.displayNewMeasurementButton=!1,"panoramic"===s&&(r.defaultCreateOptions.defaultZ=0),await r.create(e),"panoramic"===s){const{drawOperation:e}=r.view.activeTool;e.constraintsEnabled=!1,e._set("elevationDrawSurface",null)}const o=this.activeViewer?.imageRenderer.effectiveTheme.accentColor;o&&this.sketch&&(this.sketch.polygonSymbol=(e=>new _r({color:fr(e,.3),outline:{color:e,width:2}}))(o),this.sketch.polylineSymbol="panoramic"===s?ga:da(o,2.5))}startHeightMeasurement(){this.heightMeasurementPixels=[],this.displayNewMeasurementButton=!1,this.draw??=new Qt({view:this.activeViewer?.imageRenderer}),this.draw.create("polyline").on(["cursor-update","vertex-add","draw-complete"],(e=>this.handleDrawEvents(e)))}createPolylineGraphic(){const e=[this.heightMeasurementPixels[0],this.heightMeasurementPixels.at(-1)],r=this.activeViewer?.imageRenderer.spatialReference;if(this.heightGraphic)this.heightGraphic.geometry=new q({paths:[e],spatialReference:r});else{const i=new q({paths:[e],spatialReference:r}),a=this.activeViewer?.imageRenderer.effectiveTheme.accentColor;this.heightGraphic=new t({geometry:i,symbol:da(a,2.5)}),this.activeViewer?.addGraphic(this.heightGraphic)}}createPolylineGraphicPano(){const e=this.activeViewer?.imageRenderer.spatialReference,r=this.activeViewer?.imageSize;if(!r)return;const i={x:this.heightMeasurementPixels[0][0],y:this.heightMeasurementPixels[0][1]},a={x:this.heightMeasurementPixels.at(-1)[0],y:this.heightMeasurementPixels.at(-1)[1]},{heading:s,pitch:o}=it(i,r[0],r[1]),{heading:n,pitch:c}=it(a,r[0],r[1]),l=[[...at(s,o)],[...at(n,c)]];if(this.heightGraphic)this.heightGraphic.geometry=new q({paths:[l],spatialReference:e});else{const r=new q({paths:[l],spatialReference:e});this.heightGraphic=new t({geometry:r,symbol:ga}),this._panoramicViewer.addGraphic(this.heightGraphic,0)}}async editOverlayedGraphics(e){this.sketchTriangularGraphicsLayer||this._initializeSketchTriangularGraphicsLayer(),this.sketchTriangularGraphicsLayer?.destroyed&&this._handleDestroyedTriangularSketchLayer(),this.sketchTriangularGraphicsLayer.add(e),this.sketchTriangular||(this._initializeSketchTriangular(),await this.loadTriangulatedMeasurementAdapter()),this.updateOverlayedGeometry(e)}updateOverlayedGeometry(e){this.sketchTriangular?.update([e],{tool:"reshape"})}async processMeasurementVectors(e){this.triangularMeasurementActive&&this.currentBestFeature&&(this.measurementVectors?.length<2&&await this.updateMeasurementVectorsArray(e),2===this.measurementVectors.length&&await this.calculateTriangulatedMeasurements(e))}async updateMeasurementVectorsArray(e){const t=this.measurementVectors.length?this.currentBestFeatureMeasurementImage:this.currentBestFeature;if(t){const r=await this.computeMeasurementVector(e,t);r&&this.measurementVectors.push(r)}}async computeMeasurementVector(e,t){const{activeViewer:r,mode:i}=this,a=r?.imageSize;if(!e||!t||!a)return;const s=e.map((e=>[e[0]-.5,-.5-e[1]])),o=this.view?.spatialReference,n=[];for(let e=0;e<s.length;e++){const r={x:s[e][0],y:s[e][1]};let c=await this.getMapPoint(r,{feature:t,imageSize:a,mode:i});o&&!c.spatialReference.equals(o)&&(c=await $(c,o)),n.push(c)}return Ua(n,t)}async handleDrawEvents(e,t){if(this.draw)switch(e.type){case"cursor-update":this.handleDrawCursorUpdateEvents(e);break;case"vertex-add":this.handleDrawVertexAddEvents(e,t);break;case"draw-complete":await this.displayHeightResults()}}initializeMeasurement(e){switch(this.clearMeasurementGraphics(),this.resetMeasurementData(),e){case"distance":this.startMeasurement("polyline");break;case"area":this.startMeasurement("polygon");break;case"height":this.startHeightMeasurement()}}async overlayCameraLocations(e){const{activeViewer:r,currentBestFeature:i,overlayedCameraLocations:a,layer:s,mode:o,state:n,layerFloorFilterClause:c}=this,l=r?.imageSize;if(!l||!i||!s||"none"===o||n.includes("loading"))return;const{polygon:u}=Bi(i.attributes);if(r.removeManyGraphics(a.toArray()),a.removeAll(),e){const{features:e}=await s.queryFeatures({where:R(`${s.objectIdField} <> ${i.attributes.objectId}`,R(s.definitionExpression,c)),geometry:u,returnGeometry:!0,outFields:[s.objectIdField]}),n=await Promise.all(e.map((async e=>{const{attributes:r,geometry:a}=e,s=await this.getPixels(a,{feature:i,imageSize:l,mode:o}),n=ia.clone();return n.outline=new Zt({color:[0,0,0],width:1}),new t({attributes:r,symbol:n,geometry:s})})));a.addMany(n),r.addManyGraphics(a.toArray())}}overlayGraphicsOnImage(e,t){this.removeOverlayedGraphicsOnImage(e),this.overlayedMapFeatures.set(e,t),this.activeViewer?.addManyGraphics(t.toArray())}async overlayMapFeatures(e,i=!1){const{activeViewer:a,currentBestFeature:s,mode:n,state:c,layer:u}=this,p=a?.imageSize;if(!p||!s||"none"===n||"video"===n||c.includes("loading")||!u)return;const{polygon:h}=Bi(s.attributes);try{const{imageGeometryField:t,oiObjectIdField:r}=function(e,t,r){const i=e.fields.find((({name:e,alias:r,type:i})=>wa(t?.length?t:He,e,r)&&"blob"===i)),a=e.fields.find((({name:e,alias:t})=>wa(r?.length?r:Be,e,t)));if(!i||!a)throw new l("invalid-data-capture-layer","Data capture layer is not configured correctly.",{layer:e,imageGeometryField:i,oiObjectIdField:a});return{imageGeometryField:i,oiObjectIdField:a}}(e,u.imageGeometryField,u.imageReferenceField);this.imageGeometryField=t.name,this.oiObjectIdField=r.name}catch(e){m.getLogger(this).warn("oriented-imagery-viewer:overlay-map-features",e)}const{features:d}=await e.queryFeatures({geometry:h,returnGeometry:!0,outFields:["*"]}),g=new o((await Promise.all(d.map((async r=>{const a=r.symbol?.clone()??e.renderer?.getSymbol(r)?.clone(),{attributes:o,geometry:c}=r,l=c,{imageGeometryField:u,oiObjectIdField:h}=this;if(u&&h&&ja(e,u,h)&&`${o[h]}`==`${s.attributes.objectId}`)try{return ba(o,u,e,i,p,n,a)}catch(t){m.getLogger(this).warn("oriented-imagery-viewer:overlay-map-features","couldn't create graphic from attributes, geometry will be used",{error:t,feature:r,layer:e,imageGeometryField:this.imageGeometryField,imageReferenceField:this.oiObjectIdField})}switch(l?.type){case"point":{const r=await this.getPixels(l,{feature:s,imageSize:p,mode:n});return new t({attributes:o,layer:e,symbol:a,geometry:r,visible:e.visible&&i})}case"polygon":{const{rings:r,spatialReference:c}=l,u=r.map((e=>e.map((([e,t,r])=>new H({x:e,y:t,z:r,spatialReference:c}))))),m=await Promise.all(u.map((async e=>this.getPixels(e,{feature:s,imageSize:p,mode:n}).then((e=>e.map(dt))))));return new t({attributes:o,layer:e,symbol:a,geometry:new N({rings:m,spatialReference:Z.WebMercator}),visible:e.visible&&i})}case"polyline":{const{paths:r,spatialReference:c}=l,u=r.map((e=>e.map((([e,t,r])=>new H({x:e,y:t,z:r,spatialReference:c}))))),m=await Promise.all(u.map((async e=>this.getPixels(e,{feature:s,imageSize:p,mode:n}).then((e=>e.map(dt))))));return new t({attributes:o,layer:e,symbol:a,geometry:new q({paths:m,spatialReference:Z.WebMercator}),visible:e.visible&&i})}case"multipoint":{const{points:r,spatialReference:c}=l,u=r.map((([e,t,r])=>new H({x:e,y:t,z:r,spatialReference:c}))),m=await this.getPixels(u,{feature:s,imageSize:p,mode:n}).then((e=>e.map(dt)));return new t({attributes:o,layer:e,symbol:a,geometry:new U({points:m,spatialReference:Z.WebMercator}),visible:e.visible&&i})}}return null})))).filter(r));this.overlayGraphicsOnImage(`${e.id}`,g)}async getPixels(e,t){const{imageSize:r,mode:i,feature:a}=t,s=(await this.worldToImage(Array.isArray(e)?e:[e],a)).map((e=>{if("default"===i)return new H({x:e.x-.5,y:.5-e.y,spatialReference:Z.WebMercator});const[t,a]=r,{heading:s,pitch:o}=it(e,t,a),n=at(s,o);return new H(n,Z.WebMercator)}));return Array.isArray(e)?s:s[0]}async getMapPoint(e,t){const{feature:r,mode:i,imageSize:a}=t,{elevationSample:s,attributes:o}=r,{elevationSource:n,location:c,cameraHeight:l}=o;let u=c.clone();u.spatialReference.isGeographic&&(u=await $(u,Z.WebMercator));const p=await ut(c.spatialReference,c.z??0,l,{elevationSample:s,elevationSource:n,extent:this.footprintExtent});let m;if("elevationSample"in p&&pt(p.elevationSample)&&(r.elevationSample=p.elevationSample),"default"===i){const t=lt(o,a[0],a[1]);m=await Bt(Array.isArray(e)?e:[e],{...t,cameraLocation:u},p)}else{const t=mt(o,a[0],a[1]);m=await Ht(Array.isArray(e)?e:[e],{...t,cameraLocation:u},p)}return Array.isArray(e)?m:m[0]}getActiveSectors(){return ct.filter((e=>this._sectorData?.[e]?.length))}async plotMapPoint(e){return this.plotReferencePoint(e),this.transformAndPlotReferencePointOnImage({feature:this.currentBestFeature,selectedLocation:e,options:{signal:this._transformController?.signal}})}plotReferencePointOnGround(e){this._referencePointOnGround&&(this._overlays?.remove(this._referencePointOnGround),this._referencePointOnGround.destroy()),null!=e&&(this._referencePointOnGround=new t({geometry:new H({...e.toJSON()}),symbol:oa}),this.view?this._overlays?.add(this._referencePointOnGround):this.emit("plot-ground-point",{data:{point:this._referencePointOnGround?.geometry}}))}plotReferencePointOnImage(e){if("image-loaded"===this.state)switch(this.clearReferencePointOnImage(),this.mode){case"default":{const r=G(e)?e.toJSON():e;r.x-=.5,r.y=.5-r.y,this._referencePointOnImage=new t({geometry:new H({spatialReference:this._imageViewer.imageRenderer.spatialReference,...r}),symbol:oa}),this._imageViewer.addGraphic(this._referencePointOnImage,0);break}case"panoramic":{const{imageSize:r}=this._panoramicViewer;if(!r)return;const[i,a]=r,{heading:s,pitch:o}=it(e,i,a),n=at(s,o);this._referencePointOnImage=new t({geometry:new H(n,Z.WebMercator),symbol:ca}),this._panoramicViewer.addGraphic(this._referencePointOnImage,0);break}}}plotLocationPointOnImage(e,t=!1){if("image-loaded"===this.state)switch(this.clearLocationPointOnImage(t),this.mode){case"default":this._plotLocationPointOnDefaultImage(e,t);break;case"panoramic":this._plotLocationPointOnPanoramicImage(e)}}removeAllOverlayMapFeatures(){this.overlayedMapFeatures.forEach((e=>{this._imageViewer.removeManyGraphics(e.toArray())})),this.overlayedMapFeatures.clear()}removeOverlayedGraphicsOnImage(e){const t=this.overlayedMapFeatures.get(e);t?.length&&(this.activeViewer?.removeManyGraphics(t.toArray()),this.overlayedMapFeatures.delete(e))}resetImage(){switch(this.setMessage("onLoadMessage","info"),this.mode){case"default":this._imageViewer.clearImage(),this._imageViewer.clearGraphics();break;case"panoramic":this._panoramicViewer.clearGraphics()}this._clickTask=f(this._clickTask)}resetVideo(){this.setMessage("onLoadMessage","info"),this.videoViewModel?.resetVideoHandler(),this._overlays?.removeAll(),this.videoViewModel=null,this.allLayerFeatures=[],this.currentBestFeature=null}resetMeasurementData(){this.areaMeasurementResult=0,this.areaMeasurementAccuracy=0,this.distanceMeasurementResult=0,this.distanceAccuracyArray=[],this.heightMeasurementPixels=[],this.measurementVectors=[],this.heightMeasurementResult=0,this.tempDistance=null,this.measurementAngle=null,this.heightMeasurementAccuracy=0,this.heightGraphic=null,this.triangulatedDistanceMeasurement=null,this.triangulatedDistanceAccuracy=null,this.triangulatedAreaMeasurement=null,this.triangulatedMeasurementGraphic=null,this.updatingTriangularMeasurementState=!1,this.triangulatedAreaAccuracy=0}async saveDrawing(){const{dataCaptureLayer:e,sketchAdapter:t}=this;if(!e||"data-capture"!==t?.type)return;const{pendingGraphics:r,savedGraphics:i}=t,a=r.get(e.id),s=a?.toArray();if(!a||!s?.length)return;const{addFeatureResults:o}=await this.saveDataCaptureFeatures(s),n=o.reduce(((t,{objectId:r,globalId:i,error:a},o)=>{const n=s[o],{attributes:c}=n;return a?t.error.push(n):(r&&(c[e.objectIdField]=r),i&&e.globalIdField&&(c[e.globalIdField]=i),t.success.push(n)),t}),{success:[],error:[]});i.addMany(n.success),a.removeAll(),a.addMany(n.error)}async saveDataCaptureFeatures(e){const{activeViewer:t,currentBestFeature:i,dataCaptureLayer:a,mode:s}=this,o=t?.imageSize;if(!o||!i||"none"===s||"video"===s)throw new l("orientedimagery","Image size, current best feature and mode are required to save data capture features");if(!a)throw new l("orientedimagery","Data capture layer is not available");const n=await Promise.all(e.map((async e=>{const t=e.clone(),{geometry:r}=t;if(!r)return;const n=r.type,c=a.hasZ,l=a.geometryType,u=n!==l,p=u?await import("../../chunks/transformers.js"):null,m=p?.default[l],h=u?m?.(r):r;if(h)switch(h.type){case"point":return t.geometry=await this.getMapPoint(gt(s,h,o),{feature:i,imageSize:o,mode:s}),c||(delete t.geometry.z,t.geometry.hasZ=!1),t.geometry.hasM=!1,t;case"polygon":{const e=await Promise.all(h.rings.map((async e=>this.getMapPoint(e.map((([e,t,r])=>gt(s,{x:e,y:t,z:r},o))),{feature:i,imageSize:o,mode:s}))));return t.geometry=new N({spatialReference:e[0][0].spatialReference,hasZ:c,hasM:!1,rings:e.map((e=>e.map(dt)))}),t}case"polyline":{const e=await Promise.all(h.paths.map((async e=>this.getMapPoint(e.map((([e,t,r])=>gt(s,{x:e,y:t,z:r},o))),{feature:i,imageSize:o,mode:s}))));return t.geometry=new q({spatialReference:e[0][0].spatialReference,hasZ:c,hasM:!1,paths:e.map((e=>e.map(dt)))}),t}}}))),c=n.filter(r);return a.applyEdits({addFeatures:c}).then((e=>{const{addFeatureResults:t}=e;let r=0;const i=n.map((e=>{const i=t[r++];return e?i:{error:new l("orientedimagery","Error in saving data capture features"),objectId:null,globalId:null}}));return{...e,addFeatureResults:i}}))}async searchBestImage(e,t){try{const r=await Di(e,t);r&&await this.processFeatureResponse(r,e.point,t)}catch(e){j(e)||(this.setMessage("imageLoadError","error",e.message),m.getLogger(this).error("error occurred while finding best image",e))}}selectTriangularMeasurementFeature(e){this.currentBestFeatureMeasurementImage=this.features?.find((({attributes:t})=>t.objectId===Number(e)))}setAdditionalCameraLocationsVisibility(e){this.additionalCameraLocations.forEach((t=>{t.visible=e}))}setAdditionalCoverageVisibility(e){this.additionalFootprints.forEach((t=>{t.visible=e}))}setCurrentCoverageVisibility(e){this.bestFeatureCurrentFootprint&&(this.bestFeatureCurrentFootprint.visible=e),this.currentBestFeatureLocation&&(this.currentBestFeatureLocation.visible=e)}setMapImageConversionToolState(e){this.mapImageConversionToolState=e}setCurrentPanoramaView(e,t){this._panoramicViewer?.set({yaw:e,pitch:t})}async startDataCapture(e,t){const r=this.activeViewer?.imageRenderer,{oiObjectIdField:i,currentBestFeature:a}=this;if(!r||!a||!i)return;const{attributes:{objectId:s}}=a,n=this.overlayedMapFeatures.get(e.id)?.toArray()??[],c=[],l=[];for(const e of n)`${e.getAttribute(i)}`==`${s}`?c.push(e):l.push(e);this.overlayGraphicsOnImage(e.id,new o(l)),this.collectionId=e.id;const u=await this.loadSketch(t),p=await this.loadDataCaptureAdapter(t);w(t),u.layer.addMany(c),u.layer.blendMode="source-atop",p.savedGraphics.addMany(c),r.ui.find("zoom").visible=!1,r.map.layers.add(this.sketchGraphicsLayer)}async stopDataCapture(e=!1){this.sketch?.cancel(),this.sketchGraphicsLayer?.removeAll(),this.sketchAdapter=y(this.sketchAdapter),this.sketch=y(this.sketch),this.collectionId=null;const{dataCaptureLayer:t}=this,r=this.activeViewer?.imageRenderer;if(!r||r.destroyed)return;r.map.layers.remove(this.sketchGraphicsLayer),e&&t&&await this.overlayMapFeatures(t,!0);const i=r.ui.find("zoom");i&&(i.visible=!0)}stopMeasurement(){this.heightMeasurementPixels=[],this.draw?.reset(),this.sketch?.cancel()}toggleAllOverlayMapFeatures(e){this.overlayedMapFeatures.forEach((t=>{this._toggleVisiblity(t,e)}))}toggleOverlayMapFeatures(e,t,r){const i=this.overlayedMapFeatures.get(e);i&&r&&this._toggleVisiblity(i,t)}toggleSelection(e){const{sketch:t}=this;t&&(t.updateOnGraphicClick=e,t.cancel())}async transformAndPlotReferencePointOnImage(e){const{feature:t,selectedLocation:r,options:i}=e;let a=!1,s=!1;const o=this.bestFeatureFootprint?.geometry;switch(o?.type){case"polygon":{const e=r.spatialReference.equals(o.spatialReference)?r:await $(r,o.spatialReference);a=o.contains(e);break}case"mesh":{const e=r.spatialReference.equals(o.spatialReference)?r:await $(r,o.spatialReference);s=o.extent.contains(e);break}}if(!a&&!s)return void this.clearReferencePointOnImage();const n=await this.worldToImage(r,t,i);if(n)return w(i),this.plotReferencePointOnImage(n),{x:n.x,y:n.y};this.clearReferencePointOnImage()}async triangulatedLocationWorkflow(e,t){if(this.currentBestFeature&&e){const{currentBestFeature:r}=this;this.triangulatedPoint&&(this.measurementVectors=[],this.triangulatedPoint=null,this.clearLocationPointOnImage(!0));const i=Ua(e,r);if(!i)return;this.measurementVectors.push(i),await this.plotReferenceLocationPoint(e,t),w(t),this._createTriangularImageLocationHandle()}}async _calculateTriangulatedPointFromGroundPoint(e,t){if(this.currentBestFeatureMeasurementImage&&e){const{currentBestFeatureMeasurementImage:r}=this,i=Ua(e,r);i&&this.measurementVectors.push(i);const a=await async function(e){const t=e[0].camera.spatialReference;if(2!==e?.length)return null;const[r,i]=e,{camera:a,measurePoints:s}=r,{camera:o,measurePoints:n}=i,c=Ta(a,s[0],t),l=Ta(o,n[0],t),u=await ns(c,l);return u?za(u,t)??null:null}(this.measurementVectors);w(t),this.triangulatedPoint=a??this.triangulatedPoint}}async _fetchFeatures(e,t){if(!this.view)return;const r=this.layer;if(r){const i={include:r},a=this.view.toScreen(e);if(!a)return;const s=await this.view.hitTest(a,i);return this._processHitTestResults(r,s,t)}}async _fetchFeaturesWithController(e,t){try{await this._fetchFeatures(e,t)}catch(e){if(j(e))return;this.setMessage("imageLoadError","error"),m.getLogger(this).error("error occurred while fetching features",e)}}_groupFeaturesBySectors(){const{_suitabilities:e,additionalFeatures:t,features:r,invalidCameraHeading:i}=this,a=r.at(0);if(!e||!t||!a||!r||i)return void(this._sectorData=null);this._sectorData={};const s={};this._featureToSector=s;for(const e of ct)this._sectorData[e]=new o;const n=e.map(((e,t)=>({...e,featureIndex:t})));n.sort(((e,t)=>e.trueSuitability-t.trueSuitability));const c=n.map((({distance:e})=>e)),l=Math.max(...c);n.forEach((e=>{const{distance:t,angle:i,featureIndex:o}=e,n=t/l*kt[2],c=ft(t,l),u=yt(i);if(!this._sectorData)return;const p=kt[3]+n*Math.sin(i*Math.PI/180),m=kt[3]+n*Math.cos(i*Math.PI/180);let h;const d=r.at(o),g=d===a,{cameraPitch:y}=d.attributes,f=y<5;if(g&&f)h=-90;else{const e=p-kt[3],t=m-kt[3],r=t/Math.sqrt(e**2+t**2);let i=180*Math.acos(r)/Math.PI;(e<0&&t<0||e<0&&t>0)&&(i*=-1),h=i}const v=""===c?u:`${c}_${u}`;g&&(h===this.bestFeatureAngle?this.previousFeatureAngle=h:this.bestFeatureAngle=h,this.navigatorCurrentBestFeature=f?null:{x:p,y:m,direction:u}),s[`${d.attributes.objectId}`]=v;const w=this._sectorData[v];w.add({angle:i,featureIndex:o,x:p,y:m,objectID:d.attributes.objectId,sector:v,featureIndexInSector:w.length})}))}_handleDestroyedTriangularSketchLayer(){this.sketchTriangularGraphicsLayer&&(this.imageMeasurementViewer.imageRenderer.map.layers.remove(this.sketchTriangularGraphicsLayer),this.sketchTriangularGraphicsLayer=new X,this.imageMeasurementViewer.imageRenderer.map.layers.add(this.sketchTriangularGraphicsLayer),this.sketchTriangular&&(this.sketchTriangular.layer=this.sketchTriangularGraphicsLayer,this.sketchTriangular.view=this.imageMeasurementViewer.imageRenderer))}_initializeSketchTriangular(){this.sketchTriangular=new Yr({view:this.imageMeasurementViewer.imageRenderer,layer:this.sketchTriangularGraphicsLayer,updateOnGraphicClick:!1,defaultUpdateOptions:{toggleToolOnClick:!1}})}_initializeSketchTriangularGraphicsLayer(){this.sketchTriangularGraphicsLayer=new X,this.imageMeasurementViewer.imageRenderer.map.layers.add(this.sketchTriangularGraphicsLayer)}_initializeVideo(){if(this.videoElement||!this.currentBestFeature)return;this.removeHandles(Us),this.videoElement=new Wt({video:this.currentBestFeature.attributes.imagePath,georeference:new qt({extent:new E(vt)}),autoplay:!1}),this.videoElement.content?.loop&&(this.videoElement.content.loop=!1);const e=new Y({source:this.videoElement,title:this.layer?.title,copyright:this.layer?.copyright});this.videoLayer=e,e&&this.videoMapView.map.layers.add(e),this.addHandles(function(e){if(!e)throw new Error("Missing View");return e.ui.remove("zoom"),e.on(["key-down","mouse-wheel","double-click","drag"],(e=>{e.stopPropagation()}))}(this.videoMapView),Us),this.videoViewModel=new ks({oiViewModel:this})}_plotLocationPointOnDefaultImage(e,r=!1){const i=G(e)?e.toJSON():e;i.x-=.5,i.y=.5-i.y,r?(this._correctedLocationPointOnImage=new t({geometry:new H({spatialReference:Z.WebMercator,...i}),symbol:ma}),this.imageMeasurementViewer.addGraphic(this._correctedLocationPointOnImage,0)):(this._locationPointOnImage=new t({geometry:new H({spatialReference:Z.WebMercator,...i}),symbol:ma}),this._imageViewer.addGraphic(this._locationPointOnImage,0))}_plotLocationPointOnPanoramicImage(e){const{imageSize:r}=this._panoramicViewer;if(!r)return;const[i,a]=r,{heading:s,pitch:o}=it(e,i,a),n=at(s,o);this._locationPointOnImage=new t({geometry:new H(n,Z.WebMercator),symbol:ha}),this._panoramicViewer.addGraphic(this._locationPointOnImage,0)}_clearFeatureGeometries(){this.coveragePolygons.removeAll(),this.coverageFrustums.removeAll(),this.pointSources.removeAll()}_checkFeatures(e){return!!e?.length||(this.setMessage("noImageError","error"),this.currentBestFeature=null,!1)}async _getElevationSampleFromGround(e,t,r){if(!e[0])return;const i=await D(e);if(this._updateFootprintWithFeatures(t,i),this.view?.supportsGround)try{return await this.view.map.ground.createElevationSampler(this.footprintExtent,r)}catch(e){j(e)||m.getLogger(this).error(e)}}async processElevationSample(e,t,r){const{elevationSource:i}=t[0].attributes;return await this._getElevationSampleFromGround(e,t,r)||(i&&this.footprintExtent&&ve(i)?await wt({extent:this.footprintExtent,lod:i.lod,url:i.url,rasterFunction:i.rasterFunction}):void 0)}_processSuitableFeatures(e,t){return function(e){const{camera:t,features:r,selectedPoint:i}=e;if(!r.length)return[];e.currentImage??={attributes:{cameraHeading:0,cameraPitch:0}};const a=function(e,t,r){const i=t.clone();return i.z??=0,i.elevation=t.elevation??0,t=>{const{hfovWeight:a,vfovWeight:s,distanceWeight:o}=function(e,t){const r="isOblique"in e?e:new Gi(e),{isOblique:i,isSpherical:a,isNadir:s}=r;return a?{hfovWeight:"2d"===t?0:1,vfovWeight:"2d"===t?0:.6,distanceWeight:"2d"===t?1:.5}:s?{hfovWeight:.25,vfovWeight:1,distanceWeight:1}:i?{hfovWeight:1,vfovWeight:.25,distanceWeight:1}:{hfovWeight:1,vfovWeight:1,distanceWeight:1}}(t.attributes,e?"3d":"2d"),n=t.attributes,{cameraHeight:c,cameraHeading:l,cameraPitch:u,farDistance:p,horizontalFieldOfView:m,verticalFieldOfView:h,isOblique:d}=n,g=n.geometry,y=180*Math.atan2(g.y-i.y,g.x-i.x)/Math.PI,f=B(i,g);let v,w,j=m,k=h,b=!1;e?(v=e.heading,w=e.tilt,j=180,k=180,b=!0):!d||u<10?(v=l,w=u,b=!1):(v=r.attributes.cameraHeading,w=u,b=!0,j=180),v>180&&(v-=360);let M=1;g.spatialReference.isWebMercator&&(M=1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*g.y/C.radius))));const I=Math.sqrt((Math.sqrt((i.x-g.x)**2+(i.y-g.y)**2)/M)**2+((i.z??0)-(i.elevation??0)-c)**2),_=90-180*Math.atan2(i.y-g.y,i.x-g.x)/Math.PI;let P=(Math.abs(_-v)>180?Math.abs(360-Math.abs(_-v)):Math.abs(_-v))/j;P=4*P+1;const F=180*Math.acos((n.cameraHeight-(i.z??0)+(i.elevation??0))/I)/Math.PI;let x=Math.abs(F-w)/k;x=4*x+1;let S=I/Math.sqrt(p**2+c**2);S=4*S+1;const R=a*P+s*x+o*S;let V;if(b){const e=l>180?l-360:l;V=a*((Math.abs(_-e)>180?Math.abs(360-Math.abs(_-e)):Math.abs(_-e))/m*4+1)+s*(Math.abs(F-u)/h*4+1)+o*S}else V=R;return{suitability:R,trueSuitability:V,feature:t,angle:y,distance:f,verticalAngle:Math.abs(180*Math.atan(f/c)/Math.PI)}}}(t,i,e.currentImage);return r.map(a)}({features:e,selectedPoint:t,camera:jt(this.view)?this.view.camera:null,currentImage:this.currentBestFeature})}async _processHitTestResults(e,t,r){const{screenPoint:i,results:[a]}=t,s="graphic"===a?.type&&this.shouldShowSelectedImage,o=a?.mapPoint??this.view?.toMap(i);if(!o)return;o.x=Q(o.x,o.spatialReference);const{layerFloorFilterClause:n}=this,c=e.spatialReference.equals(o.spatialReference)?o:await $(o,e.spatialReference),l=c.spatialReference.isGeographic?K(c):c,u=R("1=1",R(e.definitionExpression,n)),p=l.spatialReference.isGeographic?1:V(l.spatialReference),m={layerInstanceOrURL:e,point:l,queryParams:{where:u,maximumDistance:e.maximumDistance?e.maximumDistance/p:void 0,objectIds:s?[a.graphic.getAttribute(e.objectIdField)]:void 0}};await this.searchBestImage(m,r)}async _queryAndLoadByObjectId(e,t,r,i){this.displayMessage=null;const{response:a}=await async function(e,t,r,i){const a=Array.isArray(t)?t:[t],s=Ls(e.definitionExpression,r,`${e.objectIdField} IN (${a.join(",")})`);try{const t=await e.queryFeatures({where:s,outFields:["*"],returnGeometry:!0},i);return await As(t,e),new Cs(t)}catch(e){return new Cs(void 0,e)}}(e,t,r,i);if(w(i),!a?.features?.length)throw new Ps(t);const s=fe(Bi(a.features[0].attributes).polygon.centroid),o=V(s.spatialReference);this.selectedPoint=s;const n={layerInstanceOrURL:e,point:s,queryParams:{where:R(R("1=1",R(e.definitionExpression,r)),`${e.objectIdField} <> ${t}`),maximumDistance:e.maximumDistance?e.maximumDistance/o:void 0}},c=await Di(n,i);w(i);const{features:l}=c;return l.push(a.features[0]),await this.processFeatureResponse(c,s,{...i,loadBestImage:!1})}_reorderTriangularSketchLayer(){const e=this.imageMeasurementViewer.imageRenderer.map.layers?.length;this.sketchTriangularGraphicsLayer&&e&&this.imageMeasurementViewer.imageRenderer.map.layers.reorder(this.sketchTriangularGraphicsLayer,e-1)}_resetCursor(){const{activeViewer:e,imageMeasurementViewer:t}=this;e&&(e.imageRenderer.cursor=this._previousCursor),t&&(t.imageRenderer.cursor=this._previousCursor)}async _setImageSource(e,t,r,i,a,s){e.imageSource={datasetFormat:t.toUpperCase(),url:r.split("?")[0]},e.customParameters=Object.fromEntries(i),e.imageRotation=a??0,await e.loadImage(s)}_setMeasurementCursor(){const{activeViewer:e,imageMeasurementViewer:t,triangularMeasurementActive:r}=this;e&&(this._previousCursor=e.imageRenderer.cursor,e.imageRenderer.cursor="crosshair"),t&&r&&(t.imageRenderer.cursor="crosshair")}_toggleVisiblity(e,t){e.forEach((e=>{e.visible=t}))}async _updateElevationOfSelectedPointAndLocations(e,t,r,i){const a=pt(r),{location:s,cameraHeight:o}=e[0].attributes,n=await ut(s.spatialReference,s.z,o,{elevationSample:a?r:void 0,elevationSource:a?void 0:e[0].attributes.elevationSource,extent:this.footprintExtent},i);w(i);const[c,...l]=await Nt([t,...e.map((e=>e.attributes.geometry.clone()))],n);w(i),t.elevation=c.z,e.forEach(((e,t)=>{e.attributes.elevation=l[t].z}))}_updateFeatures(e,t=!0){if(!e.length)return this.currentBestFeature=null,void this.additionalFeatures.removeAll();this.features.removeAll(),this.features.addMany(e),this.navigationNodes.removeAll(),this.navigationNodes.addMany(e.map((e=>{const{geometry:t,attributes:r}=e,{isSpherical:i,cameraHeading:a,cameraPitch:s}=r;return new ws({geometry:t,attributes:r,currentHeading:i?0:a,currentPitch:i?0:s})}))),e.length>1?this.additionalFeatures.addMany(e.slice(1)):this.additionalFeatures.removeAll(),this._updateGroundElevation=!0,t&&(this.currentBestFeature=e[0]),"video"===this.mode&&(this._initializeVideo(),this.videoElement?.loaded&&this.videoViewModel?.playVideoFromSelectedLocation(e[0]))}_updateFootprintWithFeatures(e,t){const r=[];for(const{attributes:{geometry:i}}of e)t.contains(i)||r.push([i.x,i.y]);r.sort(((e,t)=>+J([e,t]))),t.addRing(r),this.footprintExtent=Kt(t.extent,2,2)}async _updatePointsAndPolygons(e){const{pointSources:r,currentBestFeature:i,currentCoverageVisible:a,isAdditionalPointSourcesVisible:s,mode:o,layer:n}=this;if(i&&(this.additionalFootprints.removeAll(),this.additionalCameraLocations.removeAll(),this.bestFeatureCurrentFootprint&&(this.bestFeatureCurrentFootprint.destroy(),this.bestFeatureCurrentFootprint=null,this.bestFeatureFootprint=null),!this.invalidCameraHeading)){await(this._adapter?.createFootprints(e)),w(e);for(const e of r)e.imageID===i.attributes.objectId?this.currentBestFeatureLocation=new t({attributes:{imageID:e.imageID},geometry:e.clone(),symbol:ra,visible:a}):this.additionalCameraLocations.push(new t({attributes:{imageID:e.imageID},geometry:e.clone(),symbol:ia,visible:s}));if("video"===o&&n&&!this.allLayerFeatures.length){const e=await async function(e,t){const r=new It;r.where="1=1",r.outFields=["*"],r.orderByFields=["OffsetFromStart ASC"],r.outSpatialReference=t,r.returnGeometry=!0;const i=await e.queryFeatures(r);return Ui(e)(i)}(n,i.geometry.spatialReference);e.features?.length&&(this.allLayerFeatures=e.features)}}}_updateCurrentBestFeature(e){if(!e)return;this.currentBestFeature=this.features?.at(e.featureIndex);const t=this.currentBestFeature?.attributes.cameraPitch&&this.currentBestFeature?.attributes.cameraPitch<5;let r;if(t)r=-90;else{const t=e.x-kt[3],i=e.y-kt[3],a=i/Math.sqrt(t**2+i**2);let s=180*Math.acos(a)/Math.PI;(t<0&&i<0||t<0&&i>0)&&(s*=-1),r=s}r===this.bestFeatureAngle?this.previousFeatureAngle=r:this.bestFeatureAngle=r,this.navigatorCurrentBestFeature=t?null:{x:e.x,y:e.y,direction:e.sector.includes("_")?e.sector.split("_")[1]:e.sector}}_updateImageMeasurementBestFeature(e){e&&(this.currentBestFeatureMeasurementImage=this.features?.at(e.featureIndex))}clearGraphics(){this._imageViewer.clearGraphics(),this._panoramicViewer.clearGraphics(),this.imageMeasurementViewer.clearGraphics()}clearReferencePointOnImage(){this._referencePointOnImage&&(this._imageViewer.removeGraphic(this._referencePointOnImage),this._panoramicViewer.removeGraphic(this._referencePointOnImage),this._referencePointOnImage=y(this._referencePointOnImage))}clearLocationPointOnImage(e=!1){this._locationPointOnImage&&!e&&(this._imageViewer.removeGraphic(this._locationPointOnImage),this._panoramicViewer.removeGraphic(this._locationPointOnImage),this._locationPointOnImage=y(this._locationPointOnImage)),this._correctedLocationPointOnImage&&(this.imageMeasurementViewer.removeGraphic(this._correctedLocationPointOnImage),this._correctedLocationPointOnImage=y(this._correctedLocationPointOnImage))}plotReferencePoint(e){"mapPoint"in e?this.plotReferencePointOnGround(e.mapPoint):this.plotReferencePointOnGround(e)}async plotReferenceLocationPoint(e,t){if(this.currentBestFeatureMeasurementImage){const r=await this.worldToImage(e,this.currentBestFeatureMeasurementImage,{signal:t});w(t),r&&this.plotLocationPointOnImage(r,!0)}}setMessage(e,t,r,i){this.displayMessage={key:e,type:t,data:r,map:i}}async transformAndPlotSelectedLocation(e){const{currentBestFeature:t,invalidCameraHeading:r,selectedPoint:i,activeViewer:a}=this;if(this._crossSymbol&&(this._panoramicViewer.removeGraphic(this._crossSymbol),this._imageViewer.removeGraphic(this._crossSymbol),this._crossSymbol=y(this._crossSymbol)),!i||!t||"image-loaded"!==a?.state||r)return;let s;try{s=await this.worldToImage(i,t,e),w(e),await this.plotSelectedPointOnImage(s,e)}catch(e){j(e)||m.getLogger(this).error("failed to transform map point to pixel, cross symbol will not be plotted on image",{error:e,selectedPoint:i,feature:t})}}async worldToImage(e,t,r){const{footprintExtent:i}=this,{imageSize:a}=this.activeViewer;if("none"===this.mode||!t||!a||!i)return;const{attributes:{location:s,elevationSource:o,cameraHeading:n,cameraHeight:c},elevationSample:l}=t;let u=s.clone();const p=await ut(s.spatialReference,s.z??0,c,{elevationSample:l,elevationSource:o});t.elevationSample=p.elevationSample;const m=Array.isArray(e)?e:[e];let h,d=await Promise.all(m.map((e=>new Promise((t=>{if(!e.hasZ)return t(Nt(e,p));t(e)})))));if(s.spatialReference.isGeographic&&(u=await $(u,Z.WebMercator,r)),d=await Promise.all(d.map((async e=>u.spatialReference.equals(e.spatialReference)?e:await $(e,u.spatialReference,r)))),w(r),"panoramic"===this.mode)h=$e(d,{imageHeight:a[1],imageWidth:a[0],cameraHeading:n,cameraLocation:u});else{const e=bt(t.attributes,a[0],a[1]);h=We(d,{...e,cameraLocation:u})}return Array.isArray(e)?h:h[0]}updateCurrentCoveragePolygon(e){const{additionalFootprints:r,additionalCameraLocations:i,currentBestFeature:a,currentBestFeatureLocation:s,currentCoverageVisible:o,selectedPoint:n,view:c,_adapter:l,mode:u}=this,{attributes:{objectId:p},elevationSample:m}=a;if(this._initialCurrentCoverageUpdate){if(this._overlays?.removeAll(),this._initialCurrentCoverageUpdate=!1,this.bestFeatureCurrentFootprint=y(this.bestFeatureCurrentFootprint),e&&!this.invalidCameraHeading&&(e.visible=o,this.bestFeatureCurrentFootprint=e),c){const e=[...r,...i,s].filter(Mt);c.supportsGround&&m&&l?.updateGroundElevation&&(this._updateGroundElevation&&l.updateGroundElevation(e,m),"panoramic"===u&&l.updateGroundElevation([this.bestFeatureCurrentFootprint],m)),this._updateGroundElevation=!1,n&&(e.splice(-2,0,this.bestFeatureCurrentFootprint),e.push(new t({geometry:n.clone(),symbol:la.clone(),attributes:{imageID:p}}))),this._overlays.graphics.addMany(e)}}else if(c){if(this.invalidCameraHeading)return;this.bestFeatureCurrentFootprint&&(this._overlays?.remove(this.bestFeatureCurrentFootprint),this.bestFeatureCurrentFootprint=y(this.bestFeatureCurrentFootprint));const t=this.bestFeatureCurrentFootprint&&this._overlays?this._overlays.graphics.indexOf(this.bestFeatureCurrentFootprint):-1;e&&(this.bestFeatureCurrentFootprint=e,c?.supportsGround&&m&&l?.updateGroundElevation&&"panoramic"===u&&l.updateGroundElevation([e],m),e.visible=this.currentCoverageVisible,this._overlays?.graphics.add(this.bestFeatureCurrentFootprint,t>=0?t:this._overlays.graphics.length-1))}}};e([A()],qs.prototype,"activeLayer",null),e([A({readOnly:!0})],qs.prototype,"activeViewer",null),e([A()],qs.prototype,"accuracyParametersMissing",null),e([A()],qs.prototype,"additionalFeatures",void 0),e([A({type:o.ofType(t)})],qs.prototype,"additionalCameraLocations",void 0),e([A({type:o.ofType(t)})],qs.prototype,"additionalFootprints",void 0),e([A()],qs.prototype,"areaMeasurementResult",void 0),e([A()],qs.prototype,"areaMeasurementAccuracy",void 0),e([A()],qs.prototype,"allLayerFeatures",void 0),e([A()],qs.prototype,"bestFeatureAngle",void 0),e([A()],qs.prototype,"bestFeatureCurrentFootprint",void 0),e([A({type:t})],qs.prototype,"bestFeatureFootprint",void 0),e([A({type:Number})],qs.prototype,"brightness",null),e([A()],qs.prototype,"cameraHeadingThreshold",void 0),e([A()],qs.prototype,"cameraPitchThreshold",void 0),e([A()],qs.prototype,"clickAction",void 0),e([A()],qs.prototype,"videoViewModel",void 0),e([A()],qs.prototype,"collectionId",void 0),e([A({type:Number})],qs.prototype,"contrast",null),e([A()],qs.prototype,"conversionProps",void 0),e([A()],qs.prototype,"coverageFrustums",void 0),e([A()],qs.prototype,"coveragePolygons",void 0),e([A()],qs.prototype,"currentBestFeature",void 0),e([A()],qs.prototype,"currentBestFeatureMeasurementImage",void 0),e([A()],qs.prototype,"currentBestFeatureLocation",void 0),e([A()],qs.prototype,"currentCoverageVisible",void 0),e([A()],qs.prototype,"currentNode",null),e([A()],qs.prototype,"navigationNodes",void 0),e([A({json:{write:!1}})],qs.prototype,"determineWorkflowForFeature",void 0),e([A({json:{write:!1}})],qs.prototype,"determineWorkflowForTriangularMeasurement",void 0),e([A()],qs.prototype,"disabled",void 0),e([A()],qs.prototype,"displayMessage",void 0),e([A()],qs.prototype,"displayNewMeasurementButton",void 0),e([A()],qs.prototype,"distanceMeasurementResult",void 0),e([A()],qs.prototype,"distanceAccuracyArray",void 0),e([A()],qs.prototype,"dataCaptureLayer",void 0),e([A({readOnly:!0})],qs.prototype,"featureCount",null),e([A()],qs.prototype,"features",void 0),e([A()],qs.prototype,"groundCoordinates",void 0),e([A()],qs.prototype,"groundCoordinatesAccuracy",void 0),e([A()],qs.prototype,"heightMeasurementPixels",void 0),e([A()],qs.prototype,"heightGraphic",void 0),e([A()],qs.prototype,"heightMeasurementResult",void 0),e([A()],qs.prototype,"heightMeasurementAccuracy",void 0),e([A()],qs.prototype,"measurementAngle",void 0),e([A()],qs.prototype,"tempDistance",void 0),e([A({readOnly:!0})],qs.prototype,"imageGalleryEnabled",null),e([A()],qs.prototype,"imageGeometryField",void 0),e([A({readOnly:!0})],qs.prototype,"imageLoaded",null),e([A()],qs.prototype,"imageLocationToolState",void 0),e([A({readOnly:!0})],qs.prototype,"invalidCameraHeading",null),e([A()],qs.prototype,"imagePointsInView",null),e([A()],qs.prototype,"imageMeasurementViewer",void 0),e([A()],qs.prototype,"isAdditionalCoverageVisible",void 0),e([A()],qs.prototype,"isAdditionalPointSourcesVisible",void 0),e([A()],qs.prototype,"measurementVectors",void 0),e([A()],qs.prototype,"layer",void 0),e([A()],qs.prototype,"layerView",null),e([A({readOnly:!0})],qs.prototype,"layerFloorFilterClause",null),e([A({type:Number})],qs.prototype,"localPort",void 0),e([A()],qs.prototype,"mapImageConversionToolState",void 0),e([A()],qs.prototype,"measureType",void 0),e([A()],qs.prototype,"measurementGraphic",void 0),e([A({readOnly:!0,value:"none"})],qs.prototype,"mode",null),e([A()],qs.prototype,"navigationMode",void 0),e([A()],qs.prototype,"navigatorCurrentBestFeature",void 0),e([A()],qs.prototype,"oiObjectIdField",void 0),e([A({type:o.ofType(t)})],qs.prototype,"overlayedCameraLocations",void 0),e([A()],qs.prototype,"overlayedMapFeatures",void 0),e([A()],qs.prototype,"pixelCoordinates",void 0),e([A()],qs.prototype,"preserveAngle",void 0),e([A()],qs.prototype,"pointSources",void 0),e([A({readOnly:!0})],qs.prototype,"popupEnabled",null),e([A()],qs.prototype,"previousFeatureAngle",void 0),e([A()],qs.prototype,"referencePoint",null),e([A({readOnly:!0})],qs.prototype,"sectorData",null),e([A()],qs.prototype,"selectedPoint",void 0),e([A({type:Number})],qs.prototype,"sharpness",null),e([A()],qs.prototype,"shouldShowSelectedImage",void 0),e([A()],qs.prototype,"sketch",void 0),e([A()],qs.prototype,"sketchTriangular",void 0),e([A()],qs.prototype,"sketchTriangularGraphicsLayer",void 0),e([A()],qs.prototype,"draw",void 0),e([A()],qs.prototype,"sketchAdapter",void 0),e([A({readOnly:!0})],qs.prototype,"sketchGraphicsLayer",null),e([A({readOnly:!0})],qs.prototype,"state",null),e([A({readOnly:!0})],qs.prototype,"thumbnails",null),e([A()],qs.prototype,"triangularMeasurementActive",void 0),e([A()],qs.prototype,"triangulatedDistanceMeasurement",void 0),e([A()],qs.prototype,"triangulatedDistanceAccuracy",void 0),e([A()],qs.prototype,"triangulatedAreaMeasurement",void 0),e([A()],qs.prototype,"triangulatedAreaAccuracy",void 0),e([A()],qs.prototype,"triangulatedMeasurementGraphic",void 0),e([A()],qs.prototype,"triangulatedPoint",void 0),e([A()],qs.prototype,"triangulatedMeasurementAdapter",void 0),e([A()],qs.prototype,"updateFootprint",void 0),e([A()],qs.prototype,"updateFootprintPanorama",void 0),e([A()],qs.prototype,"updatingTriangularMeasurementState",void 0),e([A({value:null})],qs.prototype,"view",null),e([A()],qs.prototype,"videoElement",void 0),e([A()],qs.prototype,"videoLayer",void 0),e([A()],qs.prototype,"videoMapView",void 0),e([A()],qs.prototype,"_adapter",void 0),e([A()],qs.prototype,"_sketchGraphicsLayer",null),e([A()],qs.prototype,"_highlightedFeatureHandle",void 0),e([A()],qs.prototype,"_imageViewer",void 0),e([A()],qs.prototype,"_initialCurrentCoverageUpdate",void 0),e([A()],qs.prototype,"_locationPointOnImage",void 0),e([A()],qs.prototype,"_correctedLocationPointOnImage",void 0),e([A()],qs.prototype,"_overlays",void 0),e([A({readOnly:!0})],qs.prototype,"_overlaysView",null),e([A()],qs.prototype,"_panoramicViewer",void 0),e([A()],qs.prototype,"_previousCursor",void 0),e([A()],qs.prototype,"_referencePointOnGround",void 0),e([A()],qs.prototype,"_referencePointOnImage",void 0),e([A()],qs.prototype,"_sectorData",void 0),e([A()],qs.prototype,"_featureToSector",void 0),e([A({readOnly:!0})],qs.prototype,"_updatingHandles",void 0),e([A()],qs.prototype,"footprintExtent",void 0),e([A()],qs.prototype,"_featureChangedTask",void 0),qs=e([L("esri.widgets.OrientedImageryViewer.OrientedImageryViewerViewModel")],qs);const $s=qs;export{Ri as A,xi as B,Ci as C,ii as D,Gi as E,Ms as F,ai as G,si as H,bs as I,ei as J,_s as N,Fi as P,sa as a,Qi as b,li as c,ua as d,$s as default,pa as e,Bi as f,$a as g,Ss as h,Vs as i,xs as j,Rs as k,Ua as l,Ma as m,Da as n,Ea as o,aa as p,Fs as q,ka as r,ja as s,Na as t,Wi as u,Ka as v,Qa as w,Wa as x,ys as y,Vi as z};
