// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../core/libs/gl-matrix-2/math/mat4","../core/libs/gl-matrix-2/factories/mat4f64","../core/libs/gl-matrix-2/factories/vec3f64","../views/3d/webgl-engine/core/shaderModules/glsl","../views/3d/webgl-engine/core/shaderModules/Matrix4BindUniform","../views/3d/webgl-engine/core/shaderModules/Matrix4DrawUniform","../views/3d/webgl-engine/lib/VertexAttribute","../views/webgl/NoParameters","../views/webgl/ShaderBuilder"],(function(e,r,i,t,a,o,s,n,l,d){"use strict";class c extends l.NoParameters{constructor(){super(...arguments),this.origin=t.ZEROS}}function g(){const e=new d.ShaderBuilder;return e.attributes.add(n.VertexAttribute.POSITION,"vec3"),e.outputs.add("fragColor","vec4",0),e.vertex.uniforms.add(new o.Matrix4BindUniform("proj",(e=>e.camera.projectionMatrix)),new s.Matrix4DrawUniform("view",((e,i)=>r.translate(u,i.camera.viewMatrix,e.origin)))).main.add(a.glsl`gl_Position = proj * view * vec4(position, 1.0);
gl_Position.z = min(gl_Position.z, gl_Position.w);`),e.fragment.main.add(a.glsl`fragColor = vec4(1., 0., 0., 0.);`),e}const u=i.create(),w=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaMaskDrawParameters:c,build:g},Symbol.toStringTag,{value:"Module"}));e.FocusAreaMask=w,e.FocusAreaMaskDrawParameters=c,e.build=g}));