// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../views/3d/terrain/interfaces","../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl","../views/3d/webgl-engine/core/shaderModules/FloatPassUniform","../views/3d/webgl-engine/core/shaderModules/glsl","../views/3d/webgl-engine/core/shaderModules/IntegerPassUniform","../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform","../views/webgl/NoParameters","../views/webgl/ShaderBuilder"],(function(e,r,s,a,n,o,i,t,l){"use strict";class d extends t.NoParameters{constructor(){super(...arguments),this.overlayIndex=r.OverlayIndex.INNER,this.opacity=1}}function u(){const e=new l.ShaderBuilder;return e.include(s.ScreenSpacePass),e.fragment.uniforms.add(new i.Texture2DPassUniform("tex",(e=>e.texture))),e.fragment.uniforms.add(new o.IntegerPassUniform("overlayIdx",(e=>e.overlayIndex))),e.fragment.uniforms.add(new a.FloatPassUniform("opacity",(e=>e.opacity))),e.fragment.main.add(n.glsl`vec2 overlayUV = overlayIdx == 0 ? vec2(uv.x * 0.5, uv.y) : vec2(uv.x * 0.5 + 0.5, uv.y);
fragColor = texture(tex, overlayUV) * opacity;`),e}const c=Object.freeze(Object.defineProperty({__proto__:null,OverlayCompositingPassParameters:d,build:u},Symbol.toStringTag,{value:"Module"}));e.OverlayCompositing=c,e.OverlayCompositingPassParameters=d,e.build=u}));