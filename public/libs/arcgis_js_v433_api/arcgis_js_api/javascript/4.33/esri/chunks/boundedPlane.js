// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../core/has","../core/Logger","../core/mathUtils","../core/ObjectStack","../core/libs/gl-matrix-2/math/mat4","../core/libs/gl-matrix-2/factories/mat4f64","./vec32","../core/libs/gl-matrix-2/factories/vec3f64","../geometry/support/aaBoundingRect","../geometry/support/Axis","../geometry/support/lineSegment","../geometry/support/plane","../geometry/support/ray","../geometry/support/vector","../geometry/support/vectorStacks"],(function(t,e,n,i,o,s,r,a,c,u,g,l,d,p,b,f){"use strict";const m=()=>n.getLogger("esri.views.3d.support.geometryUtils.boundedPlane"),h=class{constructor(){this.plane=d.create(),this.origin=c.create(),this.basis1=c.create(),this.basis2=c.create()}};function y(t=J){return{plane:d.create(t.plane),origin:c.clone(t.origin),basis1:c.clone(t.basis1),basis2:c.clone(t.basis2)}}function P(t,e,n){const i=tt.get();return i.origin=t,i.basis1=e,i.basis2=n,i.plane=d.wrap(0,0,0,0),I(i),i}function v(t,e=y()){return x(t.origin,t.basis1,t.basis2,e)}function S(t,e){a.copy(e.origin,t.origin),a.copy(e.basis1,t.basis1),a.copy(e.basis2,t.basis2),d.copy(e.plane,t.plane)}function x(t,e,n,i=y()){return a.copy(i.origin,t),a.copy(i.basis1,e),a.copy(i.basis2,n),I(i),o=i,s="fromValues()",Math.abs(a.dot(o.basis1,o.basis2)/(a.length(o.basis1)*a.length(o.basis2)))>1e-6&&m().warn(s,"Provided basis vectors are not perpendicular"),Math.abs(a.dot(o.basis1,G(o)))>1e-6&&m().warn(s,"Basis vectors and plane normal are not perpendicular"),Math.abs(-a.dot(G(o),o.origin)-o.plane[3])>1e-6&&m().warn(s,"Plane offset is not consistent with plane origin"),i;var o,s}function I(t){d.fromVectorsAndPoint(t.basis2,t.basis1,t.origin,t.plane)}function A(t,e,n){t!==n&&v(t,n);const i=a.scale(f.sv3d.get(),G(t),e);return a.add(n.origin,n.origin,i),n.plane[3]-=e,n}function j(t,e,n){return N(e,n),A(n,B(t,t.origin),n),n}function M(t,e){const n=t.basis1[0],i=t.basis2[1],[o,s]=t.origin;return u.fromValues(o-n,s-i,o+n,s+i,e)}function N(t,e=y()){const n=(t[2]-t[0])/2,i=(t[3]-t[1])/2;return a.set(e.origin,t[0]+n,t[1]+i,0),a.set(e.basis1,n,0,0),a.set(e.basis2,0,i,0),d.fromValues(0,0,1,0,e.plane),e}function V(t,e,n){return!!d.intersectRay(t.plane,e,n)&&X(t,n)}function w(t,e,n){if(V(t,e,n))return n;const i=C(t,e,f.sv3d.get());return a.add(n,e.origin,a.scale(f.sv3d.get(),e.direction,a.distance(e.origin,i)/a.length(e.direction))),n}function C(t,e,n){const o=K.get();H(t,e,o,K.get());let s=Number.POSITIVE_INFINITY;for(const r of et){const c=D(t,r,Q.get()),u=f.sv3d.get();if(d.intersectLineSegment(o,c,u)){const t=a.direction(f.sv3d.get(),e.origin,u),o=Math.abs(i.acosClamped(a.dot(e.direction,t)));o<s&&(s=o,a.copy(n,u))}}return s===Number.POSITIVE_INFINITY?L(t,e,n):n}function E(t,e){return(e-t)/e}function L(t,e,n){if(V(t,e,n))return n;const i=K.get(),o=K.get();H(t,e,i,o);let s=Number.POSITIVE_INFINITY;for(const r of et){const c=D(t,r,Q.get()),u=f.sv3d.get();if(d.intersectLineSegmentClamp(i,c,u)){const t=p.distance2(e,u);if(!d.isPointInside(o,u))continue;t<s&&(s=t,a.copy(n,u))}}return q(t,e.origin)<s&&O(t,e.origin,n),n}function O(t,e,n){const i=d.projectPoint(t.plane,e,f.sv3d.get()),o=l.projectPointClamp(Z(t,t.basis1),i,-1,1,f.sv3d.get()),s=l.projectPointClamp(Z(t,t.basis2),i,-1,1,f.sv3d.get());return a.subtract(n,a.add(f.sv3d.get(),o,s),t.origin),n}function T(t,e,n){const{origin:i,basis1:o,basis2:s}=t,r=a.subtract(f.sv3d.get(),e,i),c=b.projectPointSignedLength(o,r),u=b.projectPointSignedLength(s,r),g=b.projectPointSignedLength(G(t),r);return a.set(n,c,u,g)}function q(t,e){const n=T(t,e,f.sv3d.get()),{basis1:i,basis2:o}=t,s=a.length(i),r=a.length(o),c=Math.max(Math.abs(n[0])-s,0),u=Math.max(Math.abs(n[1])-r,0),g=n[2];return c*c+u*u+g*g}function R(t,e){return Math.sqrt(q(t,e))}function _(t,e){let n=Number.NEGATIVE_INFINITY;for(const i of et){const o=D(t,i,Q.get()),s=l.distance2(o,e);s>n&&(n=s)}return Math.sqrt(n)}function k(t,e){return d.isPointInside(t.plane,e)&&X(t,e)}function F(t,e,n,i){return function(t,e,n){switch(e){case g.Axis.X:a.copy(n,t.basis1),a.normalize(n,n);break;case g.Axis.Y:a.copy(n,t.basis2),a.normalize(n,n);break;case g.Axis.Z:a.copy(n,G(t))}return n}(t,n,i)}function B(t,e){const n=-t.plane[3];return b.projectPointSignedLength(G(t),e)-n}function Y(t,e,n,i){const o=B(t,e),s=a.scale($,G(t),n-o);return a.add(i,e,s),i}function U(t,e){return a.exactEquals(t.basis1,e.basis1)&&a.exactEquals(t.basis2,e.basis2)&&a.exactEquals(t.origin,e.origin)}function z(t,e,n){return t!==n&&v(t,n),s.invert(nt,e),s.transpose(nt,nt),a.transformMat4(n.basis1,t.basis1,nt),a.transformMat4(n.basis2,t.basis2,nt),a.transformMat4(d.getNormal(n.plane),d.getNormal(t.plane),nt),a.transformMat4(n.origin,t.origin,e),d.setOffsetFromPoint(n.plane,n.plane,n.origin),n}function W(t,e,n,i){return t!==i&&v(t,i),s.fromRotation(it,e,n),a.transformMat4(i.basis1,t.basis1,it),a.transformMat4(i.basis2,t.basis2,it),I(i),i}function G(t){return d.getNormal(t.plane)}function X(t,e){const n=a.subtract(f.sv3d.get(),e,t.origin),i=a.squaredLength(t.basis1),o=a.squaredLength(t.basis2),s=a.dot(t.basis1,n),r=a.dot(t.basis2,n);return-s-i<0&&s-i<0&&-r-o<0&&r-o<0}function Z(t,e){const n=Q.get();return a.copy(n.origin,t.origin),a.copy(n.vector,e),n}function D(t,e,n){const{basis1:i,basis2:o,origin:s}=t,r=a.scale(f.sv3d.get(),i,e.origin[0]),c=a.scale(f.sv3d.get(),o,e.origin[1]);a.add(n.origin,r,c),a.add(n.origin,n.origin,s);const u=a.scale(f.sv3d.get(),i,e.direction[0]),g=a.scale(f.sv3d.get(),o,e.direction[1]);return a.scale(n.vector,a.add(u,u,g),2),n}function H(t,e,n,i){const o=G(t);d.fromVectorsAndPoint(o,e.direction,e.origin,n),d.fromVectorsAndPoint(d.getNormal(n),o,e.origin,i)}const J={plane:d.create(),origin:c.fromValues(0,0,0),basis1:c.fromValues(1,0,0),basis2:c.fromValues(0,1,0)},K=new o.ObjectStack(d.create),Q=new o.ObjectStack(l.create),$=c.create(),tt=new o.ObjectStack((()=>y())),et=[{origin:[-1,-1],direction:[1,0]},{origin:[1,-1],direction:[0,1]},{origin:[1,1],direction:[-1,0]},{origin:[-1,1],direction:[0,-1]}],nt=r.create(),it=r.create(),ot=Object.freeze(Object.defineProperty({__proto__:null,BoundedPlaneClass:h,altitudeAt:B,axisAt:F,cameraFrustumCoverage:E,closestPoint:L,closestPointOnSilhouette:C,copy:v,copyWithoutVerify:S,create:y,distance:R,distance2:q,distanceToSilhouette:_,elevate:A,equals:U,extrusionContainsPoint:k,fromAABoundingRect:N,fromValues:x,getExtent:M,intersectRay:V,intersectRayClosestSilhouette:w,normal:G,projectPoint:O,projectPointLocal:T,rotate:W,setAltitudeAt:Y,setExtent:j,transform:z,up:J,updateUnboundedPlane:I,wrap:P},Symbol.toStringTag,{value:"Module"}));t.BoundedPlaneClass=h,t.altitudeAt=B,t.axisAt=F,t.boundedPlane=ot,t.cameraFrustumCoverage=E,t.closestPoint=L,t.closestPointOnSilhouette=C,t.copy=v,t.copyWithoutVerify=S,t.create=y,t.distance=R,t.distance2=q,t.distanceToSilhouette=_,t.elevate=A,t.equals=U,t.extrusionContainsPoint=k,t.fromAABoundingRect=N,t.fromValues=x,t.getExtent=M,t.intersectRay=V,t.intersectRayClosestSilhouette=w,t.normal=G,t.projectPoint=O,t.projectPointLocal=T,t.rotate=W,t.setAltitudeAt=Y,t.setExtent=j,t.transform=z,t.up=J,t.updateUnboundedPlane=I,t.wrap=P}));