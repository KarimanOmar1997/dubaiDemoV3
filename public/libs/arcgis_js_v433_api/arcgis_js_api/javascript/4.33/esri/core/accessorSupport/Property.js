// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","./ObservableBase","./PropertyOrigin","./tracking","./tracking/Flags","./tracking/TrackingTarget"],(function(t,s,e,a,i,r){"use strict";class n extends s.ObservableBase{constructor(t,s){super(),this.propertyName=t,this.metadata=s,this.trackingTarget=new r.TrackingTarget(this),this.flags=0,this.flags=i.Flags.Dirty|(s.nonNullable?i.Flags.NonNullable:0)|(s.hasOwnProperty("value")?i.Flags.HasDefaultValue:0)|(void 0===s.get?i.Flags.DepTrackingInitialized:0)|(void 0===s.dependsOn?i.Flags.AutoTracked:0)}destroy(){this.flags&i.Flags.Dirty&&this.onCommitted(),super.destroy(),this.trackingTarget.destroy()}getComputed(t){t.mutable&&a.trackAccess(this);const s=t.store,r=this.propertyName,n=this.flags,g=s.get(r);if(n&i.Flags.Computing)return g;if(~n&i.Flags.Dirty&&s.has(r))return g;this.flags|=i.Flags.Computing;const o=t.host;let l;n&i.Flags.AutoTracked?l=a.runTracked(this.trackingTarget,this.metadata.get,o):(a.trackExplicitDependencies(o,this),l=this.metadata.get.call(o)),this.flags|=i.Flags.DepTrackingInitialized,s.set(r,l,e.OriginId.COMPUTED);const d=s.get(r);return d===g?this.flags&=~i.Flags.Dirty:a.runUntracked(this.commit,this),this.flags&=~i.Flags.Computing,d}notifyChange(){this.onInvalidated(),this.onCommitted()}invalidate(){this.onInvalidated()}commit(){this.flags&=~i.Flags.Dirty,this.onCommitted()}onInvalidated(){~this.flags&i.Flags.Overridden&&(this.flags|=i.Flags.Dirty);const t=this._observers;if(t&&t.length>0)for(const s of t)s.onInvalidated()}onCommitted(){const t=this._observers;if(t&&t.length>0){const s=t.slice();for(const t of s)t.onCommitted()}}}t.Property=n,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));