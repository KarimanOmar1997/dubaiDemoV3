// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","./DateOnly","./errorSupport","./SqlTimestampOffset","./TimeOnly","../../chunks/datetime"],(function(n,l,e,r,t,a){"use strict";const u={min:{minParams:1,maxParams:1,evaluate:n=>m(n[0],"min")},max:{minParams:1,maxParams:1,evaluate:n=>m(n[0],"max")},avg:{minParams:1,maxParams:1,evaluate:n=>o(n[0])},sum:{minParams:1,maxParams:1,evaluate:n=>function(n){if(null===n)return null;let l=0;for(let r=0;r<n.length;r++){const t=n[r];if(null!==t){if(!i(t))throw new e.SqlError(e.SqlErrorCodes.InvalidValueForAggregateFunction);l+=t}}return l}(n[0])},stddev:{minParams:1,maxParams:1,evaluate:n=>function(n){if(null===n)return null;const l=s(n);return null===l?null:Math.sqrt(l)}(n[0])},count:{minParams:1,maxParams:1,evaluate:n=>null==n[0]?null:n[0].length},var:{minParams:1,maxParams:1,evaluate:n=>s(n[0])}};function o(n){if(null===n)return null;let l=0,r=0;for(let t=0;t<n.length;t++){const a=n[t];if(null!==a){if(!i(a))throw new e.SqlError(e.SqlErrorCodes.InvalidValueForAggregateFunction);r++,l+=a}}return 0===r?null:l/n.length}function i(n){return"number"==typeof n}function m(n,e){if(null===n)return null;let u=null,o=null;for(const i of n){let n=i;n=l.DateOnly.isDateOnly(i)||t.TimeOnly.isTimeOnly(i)?i.toNumber():a.DateTime.isDateTime(i)?i.toMillis():r.SqlTimeStampOffset.isTimestampOffset(i)?i.toMilliseconds():i,(null===u||"max"===e&&null!==o&&null!==n&&o<=n||"min"===e&&null!==o&&null!==n&&o>=n)&&(u=i,o=n)}return u}function s(n){if(null===n)return null;if(0===(n=n.filter((n=>null!==n))).length)return null;const l=o(n);if(null===l)return null;let r=0;for(const t of n){if(!i(t))throw new e.SqlError(e.SqlErrorCodes.InvalidValueForAggregateFunction);r+=(l-t)**2}return r/(n.length-1)}n.aggregateFunction=function(n,l){const r=u[n.toLowerCase()];if(null==r)throw new e.SqlError(e.SqlErrorCodes.FunctionNotRecognized);if(l.length<r.minParams||l.length>r.maxParams)throw new e.SqlError(e.SqlErrorCodes.InvalidParameterCount,{name:n.toUpperCase()});return r.evaluate(l)},n.isAggregate=function(n,l){const e=u[n.toLowerCase()];return null!=e&&l>=e.minParams&&l<=e.maxParams},Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})}));