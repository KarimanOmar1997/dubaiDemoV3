// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","./builderUtils","./shapeUtils","../../support/executorUtils","../../../../../chunks/offsetOperator","../../../../../geometry/support/jsonUtils"],(function(t,e,n,i,o,s){"use strict";var r,a;function l(t,e){return o.execute(t,e,{unit:"meters",joins:"miter",miterLimit:2})}function g(t){let e=0;for(const n of t.paths)e+=n.length;return e}t.VertexPlacement=void 0,(r=t.VertexPlacement||(t.VertexPlacement={}))[r.All=0]="All",r[r.NotBeginning=1]="NotBeginning",r[r.NotEnd=2]="NotEnd",r[r.Interior=3]="Interior",t.VertexEndPlacement=void 0,(a=t.VertexEndPlacement||(t.VertexEndPlacement={}))[a.AtBeginning=4]="AtBeginning",a[a.AtEnd=5]="AtEnd",t.lineVerticesOffset=function({templatePart:o,edits:r,relationships:a,shape:g,distance:h,isProportional:p,offsetDistance:f,vertexBeforeOffset:m,vertexPlacement:c,mode:d}){const P=m||0===f?g:l(g,f);if(null===P||!s.isPolyline(P))return;const u=e.getHeightUnitCorrectionFactor(P);f=m?f:0;let x=0,V=null,A=0;for(let s=0;s<P.paths.length;s++){if(r.length>i.maxDigitizingDisplayEdits&&"digitizing"===d)return;const l=P.paths[s].length,g=s===P.paths.length-1;for(let m=0;m<l;m++){if(r.length>i.maxDigitizingDisplayEdits&&"digitizing"===d)return;if(m>0&&0!==h&&(x+=P.hasZ?n.getSegmentLength3d(P.paths[s][m-1],P.paths[s][m],u):n.getSegmentLength(P.paths[s][m-1],P.paths[s][m])),(0!==m||c!==t.VertexPlacement.NotBeginning)&&!(m===l-1&&c===t.VertexPlacement.NotEnd&&g||(0===m||m===l-1&&g)&&c===t.VertexPlacement.Interior||0===m&&h<0&&p||m===l-1&&h>0&&p)){if(0!==h){let t=1;if(p){const e=h<0?m-1:m+1;if(e>=l||e<0)continue;t=P.hasZ?n.getSegmentLength3d(P.paths[s][m],P.paths[s][e],u):n.getSegmentLength(P.paths[s][m],P.paths[s][e])}const e=x+t*h;V=P.hasZ?n.pointAlongLineWithZAndOffset(P,e,f,u):n.pointAlongLineAndOffset(P,e,0)}else V=n.pointFromPolylineVertex(P,s,m),0!==f&&(V=m===l-1?n.offsetPointFromSegment(V,[P.paths[s][m-1],P.paths[s][m]],f):n.offsetPointFromSegment(V,[P.paths[s][m],P.paths[s][m+1]],f));V&&e.makeFeatureFromGroupPart({templatePart:o,shape:V,edits:r,relationships:a,mode:d},`V${(A+m).toString()}`)}}A+=l}},t.offset=l,t.vertexOffsetFromStartOrEndOfLine=function({templatePart:i,edits:o,relationships:r,shape:a,distance:h,isProportional:p,offsetDistance:f,vertexBeforeOffset:m,vertexPlacement:c,mode:d}){const P=m||0===f?a:l(a,f);if(null===P||!s.isPolyline(P))return;const u=e.getHeightUnitCorrectionFactor(P);f=m?f:0;let x=null,V="";if(0!==h){const e=c===t.VertexEndPlacement.AtBeginning?0:P.paths.length-1,i=c===t.VertexEndPlacement.AtBeginning?0:P.paths[P.paths.length-1].length-1,o=c===t.VertexEndPlacement.AtBeginning?0:n.computedTotalLength(P),s=c===t.VertexEndPlacement.AtBeginning?P.paths[0].length:P.paths[P.paths.length-1].length;let r=1;if(p){const t=h<0?i-1:i+1;if(t>=s||t<0)return;r=P.hasZ?n.getSegmentLength3d(P.paths[e][i],P.paths[e][t],u):n.getSegmentLength(P.paths[e][i],P.paths[e][t])}const a=o+r*h;x=P.hasZ?n.pointAlongLineWithZAndOffset(P,a,f,u):n.pointAlongLineAndOffset(P,a,f),V=c===t.VertexEndPlacement.AtBeginning?"V0":`V${(g(P)-1).toString()}`}else{if(x=c===t.VertexEndPlacement.AtBeginning?n.pointFromPolylineVertex(P,0,0):n.pointFromPolylineVertex(P,P.paths.length-1,P.paths[P.paths.length-1].length-1),0!==f)if(c===t.VertexEndPlacement.AtBeginning)x=n.offsetPointFromSegment(x,[P.paths[0][0],P.paths[0][1]],f);else{const t=P.paths[P.paths.length-1];x=n.offsetPointFromSegment(x,[t[t.length-2],t[t.length-1]],f)}V=c===t.VertexEndPlacement.AtBeginning?"V0":`V${(g(P)-1).toString()}`}x&&e.makeFeatureFromGroupPart({templatePart:i,shape:x,edits:o,relationships:r,mode:d},V)},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));