// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/JSONSupport","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../core/libs/gl-matrix-2/math/mat4","../../core/libs/gl-matrix-2/factories/mat4f64","../../core/libs/gl-matrix-2/math/quat","../../core/libs/gl-matrix-2/factories/quatf64","../../core/libs/gl-matrix-2/factories/vec3f64","./axisAngleDegrees"],(function(t,e,o,r,a,s,i,l,n,c,u,p,d,x){"use strict";var h;t.default=class extends o{static{h=this}constructor(t){super(t),this.translation=d.create(),this.rotationAxis=d.fromArray(x.up),this.rotationAngle=0,this.scale=d.fromValues(1,1,1)}get rotation(){return x.fromAxisAndAngle(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=d.clone(x.axis(t)),this.rotationAngle=x.angle(t)}get localMatrix(){const t=c.create();return u.setAxisAngle(f,x.axis(this.rotation),x.angleRad(this.rotation)),n.fromRotationTranslationScale(t,f,this.translation,this.scale),t}get localMatrixInverse(){return n.invert(c.create(),this.localMatrix)}equals(t){return this===t||null!=t&&n.exactEquals(this.localMatrix,t.localMatrix)}clone(){const t={translation:d.clone(this.translation),rotationAxis:d.clone(this.rotationAxis),rotationAngle:this.rotationAngle,scale:d.clone(this.scale)};return new h(t)}},e.__decorate([r.property({type:[Number],nonNullable:!0,json:{write:!0}})],t.default.prototype,"translation",void 0),e.__decorate([r.property({type:[Number],nonNullable:!0,json:{write:!0}})],t.default.prototype,"rotationAxis",void 0),e.__decorate([r.property({type:Number,nonNullable:!0,json:{write:!0}})],t.default.prototype,"rotationAngle",void 0),e.__decorate([r.property({type:[Number],nonNullable:!0,json:{write:!0}})],t.default.prototype,"scale",void 0),e.__decorate([r.property()],t.default.prototype,"rotation",null),e.__decorate([r.property()],t.default.prototype,"localMatrix",null),e.__decorate([r.property()],t.default.prototype,"localMatrixInverse",null),t.default=h=e.__decorate([l.subclass("esri.geometry.support.MeshTransform")],t.default);const f=p.create();return t.default}));