// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports"],(function(t){"use strict";var i,s;t.GeometryType=void 0,(i=t.GeometryType||(t.GeometryType={}))[i.Unknown=0]="Unknown",i[i.Point=1]="Point",i[i.LineString=2]="LineString",i[i.Polygon=3]="Polygon";class h{constructor(t,i){this.x=t,this.y=i}static fromArray(t){return new h(t[0],t[1])}clone(){return new h(this.x,this.y)}equals(t,i){return t===this.x&&i===this.y}isEqual(t){return t.x===this.x&&t.y===this.y}setCoords(t,i){return this.x=t,this.y=i,this}normalize(){const t=this.x,i=this.y,s=Math.sqrt(t*t+i*i);return this.x/=s,this.y/=s,this}rightPerpendicular(){const t=this.x;return this.x=this.y,this.y=-t,this}leftPerpendicular(){const t=this.x;return this.x=-this.y,this.y=t,this}move(t,i){return this.x+=t,this.y+=i,this}assign(t){return this.x=t.x,this.y=t.y,this}assignAdd(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this}assignSub(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this}rotate(t,i){const s=this.x,h=this.y;return this.x=s*t-h*i,this.y=s*i+h*t,this}rotateReverse(t,i){const s=this.x,h=this.y;return this.x=s*t+h*i,this.y=-s*i+h*t,this}scale(t){return this.x*=t,this.y*=t,this}length(){const t=this.x,i=this.y;return Math.sqrt(t*t+i*i)}sub(t){return this.x-=t.x,this.y-=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}static distance(t,i){const s=i.x-t.x,h=i.y-t.y;return Math.sqrt(s*s+h*h)}static add(t,i){return new h(t.x+i.x,t.y+i.y)}static sub(t,i){return new h(t.x-i.x,t.y-i.y)}}class e{constructor(t,i,s){this.ratio=t,this.x=i,this.y=s}}!function(t){t[t.sideLeft=0]="sideLeft",t[t.sideRight=1]="sideRight",t[t.sideTop=2]="sideTop",t[t.sideBottom=3]="sideBottom"}(s||(s={}));class n{static simplify(t,i,h){if(!h)return;const e=-i,_=t+i,l=-i,x=t+i,y=[],r=[],a=h.length;for(let t=0;t<a;++t){const i=h[t];if(!i||i.length<2)continue;let n,a=i[0];const o=i.length;for(let h=1;h<o;++h)n=i[h],a.x===n.x&&(a.x<=e&&(a.y>n.y?(y.push(t),y.push(h),y.push(s.sideLeft),y.push(-1)):(r.push(t),r.push(h),r.push(s.sideLeft),r.push(-1))),a.x>=_&&(a.y<n.y?(y.push(t),y.push(h),y.push(s.sideRight),y.push(-1)):(r.push(t),r.push(h),r.push(s.sideRight),r.push(-1)))),a.y===n.y&&(a.y<=l&&(a.x<n.x?(y.push(t),y.push(h),y.push(s.sideTop),y.push(-1)):(r.push(t),r.push(h),r.push(s.sideTop),r.push(-1))),a.y>=x&&(a.x>n.x?(y.push(t),y.push(h),y.push(s.sideBottom),y.push(-1)):(r.push(t),r.push(h),r.push(s.sideBottom),r.push(-1)))),a=n}if(0===y.length||0===r.length)return;n.fillParent(h,r,y),n.fillParent(h,y,r);const o=[];n.calcDeltas(o,r,y),n.calcDeltas(o,y,r),n.addDeltas(o,h)}static fillParent(t,i,h){const e=h.length,n=i.length;for(let l=0;l<n;l+=4){const n=i[l],x=i[l+1],y=i[l+2],r=t[n][x-1],a=t[n][x];let o=8092,m=-1;for(let i=0;i<e;i+=4){if(h[i+2]!==y)continue;const e=h[i],n=h[i+1],l=t[e][n-1],x=t[e][n];switch(y){case s.sideLeft:case s.sideRight:if(_(r.y,l.y,x.y)&&_(a.y,l.y,x.y)){const t=Math.abs(x.y-l.y);t<o&&(o=t,m=i)}break;case s.sideTop:case s.sideBottom:if(_(r.x,l.x,x.x)&&_(a.x,l.x,x.x)){const t=Math.abs(x.x-l.x);t<o&&(o=t,m=i)}}}i[l+3]=m}}static calcDeltas(t,i,s){const h=i.length;for(let e=0;e<h;e+=4){const h=[],_=n.calcDelta(e,i,s,h);t.push(i[e]),t.push(i[e+1]),t.push(i[e+2]),t.push(_)}}static calcDelta(t,i,s,h){const e=i[t+3];if(-1===e)return 0;const _=h.length;return _>1&&h[_-2]===e?0:(h.push(e),n.calcDelta(e,s,i,h)+1)}static addDeltas(t,i){const h=t.length;let e=0;for(let i=0;i<h;i+=4){const s=t[i+3];s>e&&(e=s)}for(let n=0;n<h;n+=4){const h=i[t[n]],_=t[n+1],l=e-t[n+3];switch(t[n+2]){case s.sideLeft:h[_-1].x-=l,h[_].x-=l,1===_&&(h[h.length-1].x-=l),_===h.length-1&&(h[0].x-=l);break;case s.sideRight:h[_-1].x+=l,h[_].x+=l,1===_&&(h[h.length-1].x+=l),_===h.length-1&&(h[0].x+=l);break;case s.sideTop:h[_-1].y-=l,h[_].y-=l,1===_&&(h[h.length-1].y-=l),_===h.length-1&&(h[0].y-=l);break;case s.sideBottom:h[_-1].y+=l,h[_].y+=l,1===_&&(h[h.length-1].y+=l),_===h.length-1&&(h[0].y+=l)}}}}const _=(t,i,s)=>t>=i&&t<=s||t>=s&&t<=i;t.Point=h,t.SimpleBuilder=class{setExtent(t){this._ratio=4096===t?1:4096/t}get validateTessellation(){return this._ratio<1}reset(t){this._lines=[],this._line=null}moveTo(t,i){this._line&&this._lines.push(this._line),this._line=[];const s=this._ratio;this._line.push(new h(t*s,i*s))}lineTo(t,i){const s=this._ratio;this._line.push(new h(t*s,i*s))}close(){const t=this._line;t&&!t[0].isEqual(t[t.length-1])&&t.push(t[0])}result(){return this._line&&this._lines.push(this._line),0===this._lines.length?null:this._lines}},t.TileClipper=class{constructor(t,i,s,h=8,e=8){this._lines=[],this._starts=[],this.validateTessellation=!0,this._pixelRatio=h,this._pixelMargin=e,this._tileSize=512*h,this._dz=t,this._yPos=i,this._xPos=s}setPixelMargin(t){t!==this._pixelMargin&&(this._pixelMargin=t,this.setExtent(this._extent))}setExtent(t){this._extent=t,this._finalRatio=this._tileSize/t*(1<<this._dz);let i=this._pixelRatio*this._pixelMargin;i/=this._finalRatio;const s=t>>this._dz;i>s&&(i=s),this._margin=i,this._xmin=s*this._xPos-i,this._ymin=s*this._yPos-i,this._xmax=this._xmin+s+2*i,this._ymax=this._ymin+s+2*i}reset(t){this._type=t,this._lines=[],this._starts=[],this._line=null,this._start=0}moveTo(t,i){this._pushLine(),this._prevIsIn=this._isIn(t,i),this._moveTo(t,i,this._prevIsIn),this._prevPt=new h(t,i),this._firstPt=new h(t,i),this._dist=0}lineTo(t,i){const s=this._isIn(t,i),n=new h(t,i),_=h.distance(this._prevPt,n);let l,x,y,r,a,o,m,u;if(s)this._prevIsIn?this._lineTo(t,i,!0):(l=this._prevPt,x=n,y=this._intersect(x,l),this._start=this._dist+_*(1-this._r),this._lineTo(y.x,y.y,!0),this._lineTo(x.x,x.y,!0));else if(this._prevIsIn)x=this._prevPt,l=n,y=this._intersect(x,l),this._lineTo(y.x,y.y,!0),this._lineTo(l.x,l.y,!1);else{const t=this._prevPt,i=n;if(t.x<=this._xmin&&i.x<=this._xmin||t.x>=this._xmax&&i.x>=this._xmax||t.y<=this._ymin&&i.y<=this._ymin||t.y>=this._ymax&&i.y>=this._ymax)this._lineTo(i.x,i.y,!1);else{const s=[];if((t.x<this._xmin&&i.x>this._xmin||t.x>this._xmin&&i.x<this._xmin)&&(r=(this._xmin-t.x)/(i.x-t.x),u=t.y+r*(i.y-t.y),u<=this._ymin?o=!1:u>=this._ymax?o=!0:s.push(new e(r,this._xmin,u))),(t.x<this._xmax&&i.x>this._xmax||t.x>this._xmax&&i.x<this._xmax)&&(r=(this._xmax-t.x)/(i.x-t.x),u=t.y+r*(i.y-t.y),u<=this._ymin?o=!1:u>=this._ymax?o=!0:s.push(new e(r,this._xmax,u))),(t.y<this._ymin&&i.y>this._ymin||t.y>this._ymin&&i.y<this._ymin)&&(r=(this._ymin-t.y)/(i.y-t.y),m=t.x+r*(i.x-t.x),m<=this._xmin?a=!1:m>=this._xmax?a=!0:s.push(new e(r,m,this._ymin))),(t.y<this._ymax&&i.y>this._ymax||t.y>this._ymax&&i.y<this._ymax)&&(r=(this._ymax-t.y)/(i.y-t.y),m=t.x+r*(i.x-t.x),m<=this._xmin?a=!1:m>=this._xmax?a=!0:s.push(new e(r,m,this._ymax))),0===s.length)a?o?this._lineTo(this._xmax,this._ymax,!0):this._lineTo(this._xmax,this._ymin,!0):o?this._lineTo(this._xmin,this._ymax,!0):this._lineTo(this._xmin,this._ymin,!0);else if(s.length>1&&s[0].ratio>s[1].ratio)this._start=this._dist+_*s[1].ratio,this._lineTo(s[1].x,s[1].y,!0),this._lineTo(s[0].x,s[0].y,!0);else{this._start=this._dist+_*s[0].ratio;for(let t=0;t<s.length;t++)this._lineTo(s[t].x,s[t].y,!0)}this._lineTo(i.x,i.y,!1)}}this._dist+=_,this._prevIsIn=s,this._prevPt=n}close(){if(this._line.length>2){const t=this._firstPt,i=this._prevPt;t.x===i.x&&t.y===i.y||this.lineTo(t.x,t.y);const s=this._line;let h=s.length;for(;h>=4&&(s[0].x===s[1].x&&s[0].x===s[h-2].x||s[0].y===s[1].y&&s[0].y===s[h-2].y);)s.pop(),s[0].x=s[h-2].x,s[0].y=s[h-2].y,--h}}result(i=!0){return this._pushLine(),0===this._lines.length?null:(this._type===t.GeometryType.Polygon&&i&&n.simplify(this._tileSize,this._margin*this._finalRatio,this._lines),this._lines)}resultWithStarts(){if(this._type!==t.GeometryType.LineString)throw new Error("Only valid for lines");this._pushLine();const i=this._lines,s=i.length;if(0===s)return null;const h=[];for(let t=0;t<s;t++)h.push({line:i[t],start:this._starts[t]||0});return h}_isIn(t,i){return t>=this._xmin&&t<=this._xmax&&i>=this._ymin&&i<=this._ymax}_intersect(t,i){let s,e,n;if(i.x>=this._xmin&&i.x<=this._xmax)e=i.y<=this._ymin?this._ymin:this._ymax,n=(e-t.y)/(i.y-t.y),s=t.x+n*(i.x-t.x);else if(i.y>=this._ymin&&i.y<=this._ymax)s=i.x<=this._xmin?this._xmin:this._xmax,n=(s-t.x)/(i.x-t.x),e=t.y+n*(i.y-t.y);else{e=i.y<=this._ymin?this._ymin:this._ymax,s=i.x<=this._xmin?this._xmin:this._xmax;const h=(s-t.x)/(i.x-t.x),_=(e-t.y)/(i.y-t.y);h<_?(n=h,e=t.y+h*(i.y-t.y)):(n=_,s=t.x+_*(i.x-t.x))}return this._r=n,new h(s,e)}_pushLine(){this._line&&(this._type===t.GeometryType.Point?this._line.length>0&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===t.GeometryType.LineString?this._line.length>1&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===t.GeometryType.Polygon&&this._line.length>3&&(this._lines.push(this._line),this._starts.push(this._start))),this._line=[],this._start=0}_moveTo(i,s,e){this._type!==t.GeometryType.Polygon?e&&(i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.push(new h(i,s))):(e||(i<this._xmin&&(i=this._xmin),i>this._xmax&&(i=this._xmax),s<this._ymin&&(s=this._ymin),s>this._ymax&&(s=this._ymax)),i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.push(new h(i,s)),this._isH=!1,this._isV=!1)}_lineTo(i,s,e){let n,_;if(this._type!==t.GeometryType.Polygon)if(e){if(i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.length>0&&(n=this._line[this._line.length-1],n.equals(i,s)))return;this._line.push(new h(i,s))}else this._line&&this._line.length>0&&this._pushLine();else if(e||(i<this._xmin&&(i=this._xmin),i>this._xmax&&(i=this._xmax),s<this._ymin&&(s=this._ymin),s>this._ymax&&(s=this._ymax)),i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line&&this._line.length>0){n=this._line[this._line.length-1];const t=n.x===i,e=n.y===s;if(t&&e)return;this._isH&&t||this._isV&&e?(n.x=i,n.y=s,_=this._line[this._line.length-2],_.x===i&&_.y===s?(this._line.pop(),this._line.length<=1?(this._isH=!1,this._isV=!1):(_=this._line[this._line.length-2],this._isH=_.x===i,this._isV=_.y===s)):(this._isH=_.x===i,this._isV=_.y===s)):(this._line.push(new h(i,s)),this._isH=t,this._isV=e)}else this._line.push(new h(i,s))}},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));