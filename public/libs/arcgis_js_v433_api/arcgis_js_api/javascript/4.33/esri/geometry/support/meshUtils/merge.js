// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Logger","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../MeshComponent","../MeshVertexAttributes","./vertexSpaceConversion"],(function(e,t,n,r,o,l,i){"use strict";const s=()=>t.getLogger("esri.geometry.support.triangleMeshMerge");function a(e,t,n){(function(e,t){return t.normal>0&&!e.vertexAttributes.normal})(e,t)&&"source"===n.shading&&(n.shading="flat")}function c(e,t,n,r,l){if(e.components)for(const o of e.components){const i=o.cloneWithDeduplication(n,r),s=t.position/3;if(i.faces)for(let e=0;e<i.faces.length;e++)i.faces[e]+=s;else{i.faces=new Uint32Array(e.vertexAttributes.position.length/3);for(let e=0;e<i.faces.length;e++)i.faces[e]=e+s}a(e,t,i),l.push(i)}else if(e.vertexAttributes&&e.vertexAttributes.position){const n=e.vertexAttributes.position.length/3,r=new Uint32Array(n),i=t.position/3;for(let e=0;e<n;e++)r[e]=e+i;const s=new o({faces:r});a(e,t,s),l.push(s)}}function u(e,t,n,r,o){if(!t)return;const l=t.position;if(!l)return;const i=t[e],s=n[e];if(null==i){let t=r[e];const n=f[e];if(null!=s){for(let e=0;e<l.length;e+=3)for(let e=0;e<n;e++)s[t++]=o;r[e]=t}}else null!=s&&null!=i&&(function(e,t,n,r,o){for(let l=0;l<o;l++)n[r++]=e[t++]}(i,0,s,r[e],i.length),r[e]+=i.length)}const f={position:3,normal:3,tangent:4,uv:2,color:4};e.merge=function(e,t){if(0===e.length)return s().error("merge()","Must specify one more geometries to merge"),null;const o=e[0].spatialReference;for(const t of e){if(!t.spatialReference.equals(o))return s().error("merge()","Geometries must all be in the same spatial reference"),null;if(!t.loaded)return s().error("merge()","Geometries must all be loaded before merging"),null}const a=function(e){let t=null,o=null,l=!0,i=!0,a=null;const c=r.create();let u=0;for(const r of e){const{vertexSpace:e,transform:f}=r;if(null==o){o=e;const t=o.origin;t&&(a=t)}if(o.type!==e.type)return s().error("merge()",`Inconsistent mesh vertex space for provided geometries. One was ${o.type} while another is ${e.type}. Unable to merge geometries.`),null;null==t||null!=f&&f.equals(t)||(l=!1),null!=f&&null==t&&(t=f);const p=e.origin;p&&(a&&!n.equals(p,a)&&(i=!1),u++,n.add(c,c,p))}if(null==o)throw new Error;const f=o.clone();if(null==f.origin)return{rebake:!1,vertexSpace:f};if(i&&l)return{rebake:!1,vertexSpace:f,transform:t?.clone()};const p=n.scale(c,c,1/u);return f.origin=p,{rebake:!0,vertexSpace:f}}(e);if(null==a)return null;const p=function(e){let t=0,n=0,r=0,o=0,i=0;const s=function(e){let t=!1,n=!1,r=!1,o=!1;for(const l of e){const e=l.vertexAttributes;if(e?.position&&(e.uv&&(t=!0),e.normal&&(n=!0),e.tangent&&(o=!0),e.color&&(r=!0),n&&t&&r&&o))break}return{normal:n,uv:t,color:r,tangent:o}}(e);for(const l of e){const e=l.vertexAttributes;e?.position&&(t+=e.position.length,s.uv&&(n+=e.position.length/f.position*f.uv),s.normal&&(r+=e.position.length/f.position*f.normal),s.color&&(o+=e.position.length/f.position*f.color),s.tangent&&(i+=e.position.length/f.position*f.tangent))}return new l.MeshVertexAttributes({position:new Float64Array(t),uv:n?new Float32Array(n):null,normal:r?new Float32Array(r):null,tangent:i?new Float32Array(i):null,color:o?new Uint8Array(o):null})}(e),g=[],m={position:0,uv:0,normal:0,tangent:0,color:0},v=new Map,h=new Map;for(const n of e){const e=a.rebake?i.convertVertexSpace(n,a.vertexSpace,{allowBufferReuse:!0}):n.vertexAttributes;if(!e)return s().error("merge()","Failed to convert vertex space due to projection errors"),null;if(t&&t.reuseMaterials&&n.components)for(const e of n.components)e.material&&v.set(e.material,e.material);c(n,m,v,h,g),u("position",e,p,m,0),u("normal",e,p,m,0),u("tangent",e,p,m,0),u("uv",n.vertexAttributes,p,m,0),u("color",n.vertexAttributes,p,m,255)}return{vertexAttributes:p,components:g,vertexSpace:a.vertexSpace,transform:a.rebake?null:a.transform,spatialReference:o}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));