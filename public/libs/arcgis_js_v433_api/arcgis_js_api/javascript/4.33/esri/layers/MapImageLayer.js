// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
require({cache:{"esri/layers/mixins/ArcGISMapService":function(){define(["exports","../../chunks/tslib.es6","../../request","../../core/MapUtils","../../core/promiseUtils","../../core/urlUtils","../../core/Version","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/PropertyOrigin","../../geometry/Extent","../../geometry/SpatialReference","../support/arcgisLayerUrl","../support/commonProperties","../../portal/support/portalItemUtils"],(function(e,r,t,i,a,o,s,l,n,p,u,y,d,c,h,f,m,b,g){"use strict";e.ArcGISMapService=e=>{let n=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(e,r){const t=r.capabilities&&r.capabilities.split(",").map((e=>e.toLowerCase().trim()));if(!t)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const i=this.type,a="tile"!==i&&!!r.supportsDynamicLayers,o=t.includes("query"),l=t.includes("map"),n=!!r.exportTilesAllowed,p=t.includes("tilemap"),u=t.includes("data"),y="tile"!==i&&(!r.tileInfo||a),d="tile"!==i&&(!r.tileInfo||a),c="tile"!==i,h="tile"!==i&&a&&r.currentVersion>=11.1,f=r.cimVersion?s.Version.parse(r.cimVersion):null,m=f?.greaterEqual(1,4)??!1,b=f?.greaterEqual(2,0)??!1;return{operations:{supportsExportMap:l,supportsExportTiles:n,supportsIdentify:o,supportsQuery:u,supportsTileMap:p},exportMap:l?{supportsArcadeExpressionForLabeling:m,supportsCIMSymbols:b,supportsDynamicLayers:a,supportsSublayerOrderBy:h,supportsSublayerDefinitionExpression:d,supportsSublayerVisibility:y,supportsSublayersChanges:c}:null,exportTiles:n?{maxExportTilesCount:+r.maxExportTilesCount}:null}}readVersion(e,r){let t=r.currentVersion;return t||(t=r.hasOwnProperty("capabilities")||r.hasOwnProperty("tables")?10:r.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),t}async fetchRelatedService(e){const r=this.portalItem;if(!r||!g.isHostedLayer(r))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=r.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},e).then((e=>e.find((e=>"Feature Service"===e.type))??null),(()=>null)));const t=await this._relatedFeatureServicePromise;return a.throwIfAborted(e),t?{itemId:t.id,url:t.url}:null}async fetchSublayerInfo(e,r){const{source:i}=e;if(this?.portalItem&&"tile"===this.type&&"map-layer"===i?.type&&g.isHostedLayer(this.portalItem)&&e.originIdOf("url")<c.OriginId.SERVICE){const t=await this.fetchRelatedService(r);t&&(e.url=o.join(t.url,i.mapLayerId.toString()),e.layerItemId=t.itemId)}const{url:a}=e;let s;if("data-layer"===i.type)s=(await t(a,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...r})).data;else if(a&&e.originIdOf("url")>c.OriginId.SERVICE)try{const e=await this._fetchAllLayersAndTablesFromService(a),r=m.parse(a)?.sublayer??i.mapLayerId;s=e.get(r)}catch{}else{let t=e.id;"map-layer"===i?.type&&(t=i.mapLayerId);try{s=(await this.fetchAllLayersAndTables(r)).get(t)}catch{}}return s}async fetchAllLayersAndTables(e){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,e)}async _fetchAllLayersAndTablesFromService(e,r){await this.load(r),this._allLayersAndTablesMap||=new Map;const s=m.parse(e),l=i.getOrCreateMapValue(this._allLayersAndTablesMap,s?.url.path,(()=>t(o.join(s?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then((e=>{const r=new Map,{layers:t,tables:i}=e.data,a=[...t??[],...i??[]];for(const e of a)r.set(e.id,e);return{result:r}}),(e=>({error:e}))))),n=await l;if(a.throwIfAborted(r),"result"in n)return n.result;throw n.error}};return r.__decorate([l.property({readOnly:!0})],n.prototype,"capabilities",void 0),r.__decorate([y.reader("service","capabilities",["capabilities","cimVersion","currentVersion","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],n.prototype,"readCapabilities",null),r.__decorate([l.property({json:{read:{source:"copyrightText"}}})],n.prototype,"copyright",void 0),r.__decorate([l.property({type:h})],n.prototype,"fullExtent",void 0),r.__decorate([l.property(b.id)],n.prototype,"id",void 0),r.__decorate([l.property({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],n.prototype,"legendEnabled",void 0),r.__decorate([l.property(b.popupEnabled)],n.prototype,"popupEnabled",void 0),r.__decorate([l.property({type:f})],n.prototype,"spatialReference",void 0),r.__decorate([l.property({readOnly:!0})],n.prototype,"version",void 0),r.__decorate([y.reader("service","version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],n.prototype,"readVersion",null),n=r.__decorate([d.subclass("esri.layers.mixins.ArcGISMapService")],n),n},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}))},"esri/layers/mixins/SublayersOwner":function(){define(["exports","../../chunks/tslib.es6","../../core/Collection","../../core/CollectionFlattener","../../core/Error","../../core/Logger","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/RandomLCG","../../core/accessorSupport/utils","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/PropertyOrigin","../support/Sublayer","../support/sublayerUtils"],(function(e,r,t,i,a,o,s,l,n,p,u,y,d,c,h){"use strict";const f=t.ofType(c);function m(e,r){e&&e.forEach((e=>{r(e),e.sublayers&&e.sublayers.length&&m(e.sublayers,r)}))}e.SublayersOwner=e=>{let n=class extends e{constructor(...e){super(...e),this.allSublayers=new i({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={[d.OriginId.SERVICE]:{},[d.OriginId.PORTAL_ITEM]:{},[d.OriginId.WEB_SCENE]:{},[d.OriginId.WEB_MAP]:{},[d.OriginId.LINK_CHART]:{}},this.subtables=null,this.addHandles([s.watch((()=>this.sublayers),((e,r)=>this._handleSublayersChange(e,r)),s.sync),s.watch((()=>this.subtables),((e,r)=>this._handleSublayersChange(e,r)),s.sync)])}destroy(){this.allSublayers.destroy()}readSublayers(e,r){if(!r||!e)return;const{sublayersSourceJSON:t}=this,i=d.nameToId(r.origin);if(i<d.OriginId.SERVICE)return;if(t[i]={context:r,visibleLayers:e.visibleLayers||t[i].visibleLayers,layers:e.layers||t[i].layers},i>d.OriginId.SERVICE)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:a,origin:o}=this.createSublayersForOrigin("web-document"),s=u.getProperties(this);s.setDefaultOrigin(o),this._set("sublayers",new f(a)),s.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find((r=>r.id===e))}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){let r;const t="web-document"===e?d.nameToId("web-map"):d.nameToId(e);let i=d.OriginId.SERVICE,a=this.sublayersSourceJSON[d.OriginId.SERVICE].layers,o=this.sublayersSourceJSON[d.OriginId.SERVICE].context,s=null;const l=[d.OriginId.PORTAL_ITEM,d.OriginId.WEB_SCENE,d.OriginId.WEB_MAP].filter((e=>e<=t));for(const e of l){const r=this.sublayersSourceJSON[e];h.isSublayerOverhaul(r.layers)&&(i=e,a=r.layers,o=r.context,r.visibleLayers&&(s={visibleLayers:r.visibleLayers,context:r.context}))}const n=[d.OriginId.PORTAL_ITEM,d.OriginId.WEB_SCENE,d.OriginId.WEB_MAP].filter((e=>e>i&&e<=t));let p=null;for(const e of n){const{layers:t,visibleLayers:i,context:a}=this.sublayersSourceJSON[e];t&&(p={layers:t,context:a},r??=e),i&&(s={visibleLayers:i,context:a})}const u=function(e,r){const t=[],i={};return e?(e.forEach((e=>{const a=new c;if(a.read(e,r),i[a.id]=a,null!=e.parentLayerId&&-1!==e.parentLayerId){const r=i[e.parentLayerId];r.sublayers||(r.sublayers=[]),r.sublayers.unshift(a)}else t.unshift(a)})),t):t}(a,o),y=new Map,b=new Set;if(p)for(const e of p.layers)y.set(e.id,e);if(s?.visibleLayers)for(const e of s.visibleLayers)b.add(e);return m(u,(e=>{p&&e.read(y.get(e.id),p.context),s&&e.read({defaultVisibility:b.has(e.id)},s.context)})),{origin:d.idToName(i),originWithPartialOverrides:r?d.idToName(r):null,sublayers:new f({items:u})}}read(e,r){super.read(e,r),this.readSublayers(e,r)}_handleSublayersChange(e,r){r&&(r.forEach((e=>{e.parent=null,e.layer=null})),this.removeHandles("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this.addHandles([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))],"sublayers-owner"),"tile"===this.type&&this.addHandles(e.on("before-changes",(e=>{o.getLogger("esri.layers.TileLayer").error(new a("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()})),"sublayers-owner"))}};return r.__decorate([l.property({readOnly:!0})],n.prototype,"allSublayers",void 0),r.__decorate([l.property({readOnly:!0,type:t.ofType(c)})],n.prototype,"serviceSublayers",void 0),r.__decorate([l.property({value:null,type:f,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],n.prototype,"sublayers",void 0),r.__decorate([l.property({readOnly:!0})],n.prototype,"sublayersSourceJSON",void 0),r.__decorate([l.property({type:f,json:{read:{source:"tables"}}})],n.prototype,"subtables",void 0),n=r.__decorate([y.subclass("esri.layers.mixins.SublayersOwner")],n),n},e.forEachSublayer=m,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}))},"esri/layers/support/Sublayer":function(){define(["require","exports","../../chunks/tslib.es6","../../PopupTemplate","../../request","../../core/Collection","../../core/Error","../../core/has","../../core/Identifiable","../../core/lang","../../core/Loadable","../../core/Logger","../../core/MultiOriginJSONSupport","../../core/sql","../../core/urlUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/cast","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../core/accessorSupport/ensureType","../../core/accessorSupport/PropertyOrigin","../../core/accessorSupport/utils","../../geometry/Extent","../../geometry/SpatialReference","../../geometry/support/typeUtils","../graphics/sources/support/QueryTask","../mixins/OrderedLayer","./featureLayerUtils","./FeatureType","./Field","./FieldsIndex","./fieldUtils","./LabelClass","./labelingInfo","./LayerFloorInfo","./OrderByInfo","./Relationship","./serviceCapabilitiesUtils","./source/DataLayerSource","./source/MapLayerSource","../../renderers/support/typeUtils","../../rest/utils","../../rest/support/AttachmentQuery","../../rest/support/Query","../../support/popupUtils","../../symbols/support/typeUtils","../../tables/AttributeTableTemplate"],(function(e,r,t,i,a,o,s,l,n,p,u,y,d,c,h,f,m,b,g,S,I,_,v,w,O,x,E,L,T,P,F,D,A,M,R,C,V,j,q,N,U,B,k,J,Q,$,G,W){"use strict";const K=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));var H;function z(e){return"esriSMS"===e?.type}function Z(e,r,t){const i=t.minimumWritableOrigin||t.origin;return!!i&&e.originIdOf(r)>=_.nameToId(i)}function X(e,r,t){const i=Z(this,r,t);return{ignoreOrigin:!0,allowNull:i,enabled:!!t&&"map-image"===t.layer?.type&&(t.writeSublayerStructure||i)}}function Y(e,r,t){return{enabled:!!t&&"tile"===t.layer?.type&&(Z(this,r,t)||this._isOverridden(r))}}function ee(e,r,t){return{ignoreOrigin:!0,enabled:t&&t.writeSublayerStructure||!1}}function re(e,r,t){return{ignoreOrigin:!0,enabled:!!t?.writeSublayerStructure&&this.originIdOf(r)>_.OriginId.SERVICE}}function te(e,r,t){return{ignoreOrigin:!0,enabled:!!t&&(t.writeSublayerStructure||Z(this,r,t))}}let ie=0;const ae=new Set(["layer","parent","loaded","loadStatus","loadError","loadWarnings"]);return r.default=class extends(d.MultiOriginJSONMixin(n.IdentifiableMixin(u))){static{H=this}constructor(e){super(e),this.attributeTableTemplate=null,this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.isTable=!1,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.relationships=null,this.sourceJSON=null,this.spatialReference=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}async load(e){return this.addResolvingPromise((async()=>{const{layer:r,url:t}=this;if(!r&&!t)throw new s("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const i=r?await r.fetchSublayerInfo(this,e):(await a(t,{responseType:"json",query:{f:"json"},...e})).data;i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service",layer:r,url:k.parseUrl(t)}))})()),this}readCapabilities(e,r){r=r.layerDefinition||r;const{attachment:t,operations:{supportsQuery:i,supportsQueryAttachments:a},query:{supportsFormatPBF:o,supportsOrderBy:s,supportsPagination:l},data:{supportsAttachment:n},queryRelated:p}=q.getFeatureLayerCapabilities(r,this.url);return{attachment:{supportsOrderByFields:t?.supportsOrderByFields??!1,supportsResize:t?.supportsResize??!1},exportMap:{supportsModification:!!r.canModifyLayer},operations:{supportsQuery:i,supportsQueryAttachments:a},data:{supportsAttachment:n},query:{supportsFormatPBF:o,supportsOrderBy:s,supportsPagination:l},queryRelated:p}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get effectiveScaleRange(){const{minScale:e,maxScale:r}=this;return{minScale:e,maxScale:r}}readMaxScaleRange(e,r){return{minScale:(r=r.layerDefinition||r).minScale??0,maxScale:r.maxScale??0}}get fieldsIndex(){return new D(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,r){if((r=r.layerDefinition||r).globalIdField)return r.globalIdField;if(r.fields)for(const e of r.fields)if("esriFieldTypeGlobalID"===e.type)return e.name}get id(){return this._get("id")??ie++}set id(e){this._get("id")!==e&&(!1!==this.layer?.capabilities?.exportMap?.supportsDynamicLayers?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}readIsTable(e,r){return"Table"===r.type}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,r,t,i){e&&e.length&&(r.layerDefinition={drawingInfo:{labelingInfo:e.map((e=>e.write({},i)))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers?.forEach((r=>r.layer=e))}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,r){return r.minScale||r.layerDefinition?.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,r){return r.maxScale||r.layerDefinition?.maxScale||0}readObjectIdFieldFromService(e,r){if((r=r.layerDefinition||r).objectIdField)return r.objectIdField;const t=r.fields?.find((e=>"esriFieldTypeOID"===e.type));return t?.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,r){const{layerDefinition:t}=r;return 1-.01*(t?.transparency??t?.drawingInfo?.transparency??0)}writeOpacity(e,r,t,i){r.layerDefinition={drawingInfo:{transparency:100-100*e}}}set orderBy(e){this._setAndNotifyLayer("orderBy",e)}writeParent(e,r){this.parent&&this.parent!==this.layer?r.parentLayerId=I.ensureInteger(this.parent.id):r.parentLayerId=-1}get queryTask(){if(!this.layer)return null;const{capabilities:e,fieldsIndex:r,layer:t,url:i}=this,{spatialReference:a}=t,o="gdbVersion"in t?t.gdbVersion:void 0,s=l("featurelayer-pbf")&&e?.query.supportsFormatPBF;return new E({fieldsIndex:r,gdbVersion:o,pbfSupported:s,queryAttachmentsSupported:e?.operations?.supportsQueryAttachments??!1,sourceSpatialReference:a,url:i})}set renderer(e){if(A.fixRendererFields(e,this.fieldsIndex),e)for(const r of e.symbols)if(G.isSymbol3D(r)){y.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new U.MapLayerSource({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return I.ensureType(o.ofType(H),e)}writeSublayers(e,r,t){this.sublayers?.length&&(r[t]=this.sublayers.map((e=>e.id)).toArray().reverse())}readTitle(e,r){return r.layerDefinition?.name??r.name}readTypeIdField(e,r){let t=(r=r.layerDefinition||r).typeIdField;if(t&&r.fields){t=t.toLowerCase();const e=r.fields.find((e=>e.name.toLowerCase()===t));e&&(t=e.name)}return t}get url(){const e=this.layer?.parsedUrl??this._lastParsedUrl,r=this.source;if(!e)return null;if(this._lastParsedUrl=e,"map-layer"===r?.type)return`${e.path}/${r.mapLayerId}`;const t={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${h.objectToQuery(t)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,r,t,i){r[t]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=v.getProperties(this),r=new H;return v.getProperties(r).store=e.clone(ae),this.commitProperty("url"),r._lastParsedUrl=this._lastParsedUrl,r}createPopupTemplate(e){return $.createPopupTemplate(this,e)}createQuery(){return new Q({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;const r=(await new Promise(((r,t)=>e(["../FeatureLayer"],(e=>r(K(e))),t)))).default,{layer:t,url:i}=this;let a;if(i&&this.originIdOf("url")>_.OriginId.SERVICE)a=new r({url:i});else{if(!t?.parsedUrl)throw new s("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{const e=t.parsedUrl;a=new r({url:e.path}),e&&this.source&&("map-layer"===this.source.type?a.layerId=this.source.mapLayerId:a.dynamicDataSource=this.source)}}return null!=t?.refreshInterval&&(a.refreshInterval=t.refreshInterval),this.definitionExpression&&(a.definitionExpression=this.definitionExpression),this.floorInfo&&(a.floorInfo=p.clone(this.floorInfo)),this.originIdOf("labelingInfo")>_.OriginId.SERVICE&&(a.labelingInfo=p.clone(this.labelingInfo)),this.originIdOf("labelsVisible")>_.OriginId.DEFAULTS&&(a.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>_.OriginId.DEFAULTS&&(a.legendEnabled=this.legendEnabled),this.originIdOf("visible")>_.OriginId.DEFAULTS&&(a.visible=this.visible),this.originIdOf("minScale")>_.OriginId.DEFAULTS&&(a.minScale=this.minScale),this.originIdOf("maxScale")>_.OriginId.DEFAULTS&&(a.maxScale=this.maxScale),this.originIdOf("opacity")>_.OriginId.DEFAULTS&&(a.opacity=this.opacity),this.originIdOf("popupTemplate")>_.OriginId.DEFAULTS&&(a.popupTemplate=p.clone(this.popupTemplate)),this.originIdOf("renderer")>_.OriginId.SERVICE&&(a.renderer=p.clone(this.renderer)),"data-layer"===this.source?.type&&(a.dynamicDataSource=this.source.clone()),this.originIdOf("title")>_.OriginId.DEFAULTS&&(a.title=this.title),"map-image"===t?.type&&t.originIdOf("customParameters")>_.OriginId.DEFAULTS&&(a.customParameters=t.customParameters),"tile"===t?.type&&t.originIdOf("customParameters")>_.OriginId.DEFAULTS&&(a.customParameters=t.customParameters),a}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){return T.getFeatureType(this.types,this.typeIdField,e)}getFieldDomain(e,r){const t=r?.feature,i=this.getFeatureType(t);if(i){const r=i.domains&&i.domains[e];if(r&&"inherited"!==r.type)return r}return this._getLayerDomain(e)}async queryAttachments(e,r){await this.load(),e=J.from(e);const t=this.capabilities;if(!t?.data?.supportsAttachment)throw new s("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:a,globalIds:o,num:l,size:n,start:p,where:u}=e;if(!t?.operations?.supportsQueryAttachments&&(i?.length>0||o?.length>0||n?.length>0||l||p||u))throw new s("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e);if(!(a?.length||o?.length||u))throw new s("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return!t?.attachment?.supportsOrderByFields&&e.orderByFields?.length&&((e=e.clone()).orderByFields=null),this.queryTask.executeAttachmentQuery(e,r)}async queryFeatureCount(e=this.createQuery(),r){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryFeatureCount:not-supported","this layer doesn't support queries.");if(!this.url)throw new s("queryFeatureCount:not-supported","this layer has no url.");const t=this.layer?.apiKey;return await this.queryTask.executeForCount(e,{...r,query:{...this.layer?.customParameters,token:t}})}async queryFeatures(e=this.createQuery(),r){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new s("queryFeatures:not-supported","this layer has no url.");const t=await this.queryTask.execute(e,{...r,query:{...this.layer?.customParameters,token:this.layer?.apiKey}});if(t?.features)for(const e of t.features)e.sourceLayer=this;return t}async queryObjectIds(e=this.createQuery(),r){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryObjectIds:not-supported","this layer doesn't support queries.");if(!this.url)throw new s("queryObjectIds:not-supported","this layer has no url.");const t=this.layer?.apiKey;return await this.queryTask.executeForIds(e,{...r,query:{...this.layer?.customParameters,token:t}})}async queryRelatedFeatures(e,r){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryRelatedFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new s("queryRelatedFeatures:not-supported","this layer has no url.");const t=this.layer?.apiKey;return await this.queryTask.executeRelationshipQuery(e,{...r,query:{...this.layer?.customParameters,token:t}})}async queryRelatedFeaturesCount(e,r){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new s("queryRelatedFeaturesCount:not-supported","this layer doesn't support queries.");if(!this.capabilities.queryRelated.supportsCount)throw new s("queryRelatedFeaturesCount:not-supported","this layer doesn't support query related counts.");if(!this.url)throw new s("queryRelatedFeaturesCount:not-supported","this layer has no url.");const t=this.layer?.apiKey;return await this.queryTask.executeRelationshipQueryForCount(e,{...r,query:{...this.layer?.customParameters,token:t}})}toExportImageJSON(e){const r={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}},t=c.sqlAnd(e,this.definitionExpression);null!=t&&(r.definitionExpression=t);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce(((e,r)=>(e[r]=this.originIdOf(r),e)),{});if(Object.keys(i).some((e=>i[e]>_.OriginId.SERVICE))){const e=r.drawingInfo={};if(i.renderer>_.OriginId.SERVICE&&(e.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>_.OriginId.SERVICE&&(e.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>_.OriginId.SERVICE)if(this.labelingInfo){!this.loaded&&this.labelingInfo?.some((e=>!e.labelPlacement))&&y.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let r=this.labelingInfo;null!=this.geometryType&&(r=R.validateLabelingInfo(this.labelingInfo,x.featureGeometryTypeKebabDictionary.toJSON(this.geometryType))),e.showLabels=!0,e.labelingInfo=r.filter((e=>e.labelPlacement)).map((e=>e.toJSON({origin:"service",layer:this.layer})))}else e.showLabels=!1;i.opacity>_.OriginId.SERVICE&&(e.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(e.renderer)}return(this.layer?.capabilities?.exportMap?.supportsSublayerOrderBy??!1)&&this.originIdOf("orderBy")>_.OriginId.SERVICE&&(r.orderBy=this.orderBy?.map((e=>e.toJSON()))??null),r}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,(e=>{e.color||"esriSMSX"!==e.style&&"esriSMSCross"!==e.style||(e.outline?.color?e.color=e.outline.color:e.color=[0,0,0,0])}))}_forEachSimpleMarkerSymbols(e,r){if(e){const t=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(const e of t)z(e.symbol)&&r(e.symbol);"symbol"in e&&z(e.symbol)&&r(e.symbol),"defaultSymbol"in e&&z(e.defaultSymbol)&&r(e.defaultSymbol)}}_setAndNotifyLayer(e,r){const t=this.layer,i=this._get(e);let a,o;switch(e){case"definitionExpression":case"floorInfo":a="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":a="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":a="supportsDynamicLayers",o="supportsModification";break;case"orderBy":a="supportsSublayerOrderBy",o="supportsModification"}const s=v.getProperties(this).getDefaultOrigin();if("service"!==s){if(a&&!1===this.layer?.capabilities?.exportMap?.[a])return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${a}'`);if(o&&!1===this.capabilities?.exportMap[o])return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${o}'`)}"source"!==e||"not-loaded"===this.loadStatus?(this._set(e,r),"service"!==s&&i!==r&&t&&t.emit&&t.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,r){r&&(r.forEach((e=>{e.parent=null,e.layer=null})),this.removeAllHandles()),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this.addHandles([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this.layer})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null})),e.on("before-changes",(e=>{(this.layer?.capabilities?.exportMap?.supportsSublayersChanges??1)||(y.getLogger(this).error(new s("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())}))]))}_logLockedError(e,r){const{layer:t,declaredClass:i}=this;y.getLogger(i).error(new s("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${t?.id}'`,{reason:r,sublayer:this,layer:t}))}_getLayerDomain(e){return this.fieldsIndex.get(e)?.domain??null}static{this.test={isMapImageLayerOverridePolicy:e=>e===re||e===ee||e===X,isTileImageLayerOverridePolicy:e=>e===Y}}},t.__decorate([f.property({type:W,json:{name:"attributeTableInfo",write:{overridePolicy:X},origins:{"web-scene":{write:!1}}}})],r.default.prototype,"attributeTableTemplate",void 0),t.__decorate([f.property({readOnly:!0})],r.default.prototype,"capabilities",void 0),t.__decorate([b.reader("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],r.default.prototype,"readCapabilities",null),t.__decorate([f.property()],r.default.prototype,"defaultPopupTemplate",null),t.__decorate([f.property({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:X}}})],r.default.prototype,"definitionExpression",null),t.__decorate([f.property({readOnly:!0})],r.default.prototype,"effectiveScaleRange",null),t.__decorate([b.reader("service","maxScaleRange",["minScale","maxScale"])],r.default.prototype,"readMaxScaleRange",null),t.__decorate([f.property({type:[F],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],r.default.prototype,"fields",void 0),t.__decorate([f.property({readOnly:!0})],r.default.prototype,"fieldsIndex",null),t.__decorate([f.property({type:C,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:X},origins:{"web-scene":{read:!1,write:!1}}}})],r.default.prototype,"floorInfo",null),t.__decorate([f.property({type:w,json:{read:{source:"layerDefinition.extent"}}})],r.default.prototype,"fullExtent",void 0),t.__decorate([f.property({type:x.featureGeometryTypeKebabDictionary.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:x.featureGeometryTypeKebabDictionary.read}}}}})],r.default.prototype,"geometryType",void 0),t.__decorate([f.property({type:String})],r.default.prototype,"globalIdField",void 0),t.__decorate([b.reader("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],r.default.prototype,"readGlobalIdFieldFromService",null),t.__decorate([f.property({type:I.Integer,json:{write:{ignoreOrigin:!0}}})],r.default.prototype,"id",null),t.__decorate([f.property({readOnly:!0})],r.default.prototype,"isTable",void 0),t.__decorate([b.reader("service","isTable",["type"])],r.default.prototype,"readIsTable",null),t.__decorate([f.property({value:null,type:[M],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:re}}})],r.default.prototype,"labelingInfo",null),t.__decorate([S.writer("labelingInfo")],r.default.prototype,"writeLabelingInfo",null),t.__decorate([f.property({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:ee}}})],r.default.prototype,"labelsVisible",null),t.__decorate([f.property({value:null})],r.default.prototype,"layer",null),t.__decorate([f.property({type:String,json:{write:{overridePolicy:Y}}})],r.default.prototype,"layerItemId",void 0),t.__decorate([f.property({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:te}}})],r.default.prototype,"legendEnabled",void 0),t.__decorate([f.property({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],r.default.prototype,"listMode",null),t.__decorate([f.property({type:Number,value:0,json:{write:{overridePolicy:ee}}})],r.default.prototype,"minScale",null),t.__decorate([b.reader("minScale",["minScale","layerDefinition.minScale"])],r.default.prototype,"readMinScale",null),t.__decorate([f.property({type:Number,value:0,json:{write:{overridePolicy:ee}}})],r.default.prototype,"maxScale",null),t.__decorate([b.reader("maxScale",["maxScale","layerDefinition.maxScale"])],r.default.prototype,"readMaxScale",null),t.__decorate([f.property()],r.default.prototype,"objectIdField",void 0),t.__decorate([b.reader("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],r.default.prototype,"readObjectIdFieldFromService",null),t.__decorate([f.property({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:ee}}})],r.default.prototype,"opacity",null),t.__decorate([b.reader("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],r.default.prototype,"readOpacity",null),t.__decorate([S.writer("opacity")],r.default.prototype,"writeOpacity",null),t.__decorate([f.property({value:null,type:[V],json:{name:"layerDefinition.orderBy",read:{reader:L.readOrderByInfos},write:{overridePolicy:X},origins:{"web-scene":{read:!1,write:!1}}}})],r.default.prototype,"orderBy",null),t.__decorate([f.property({json:{type:I.Integer,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:ee}}})],r.default.prototype,"parent",void 0),t.__decorate([S.writer("parent")],r.default.prototype,"writeParent",null),t.__decorate([f.property({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:te,writer(e,r,t){r[t]=!e}}}})],r.default.prototype,"popupEnabled",void 0),t.__decorate([f.property({type:i,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:te}}})],r.default.prototype,"popupTemplate",void 0),t.__decorate([f.property({readOnly:!0})],r.default.prototype,"queryTask",null),t.__decorate([f.property({type:[j],readOnly:!0,json:{origins:{service:{read:{source:"layerDefinition.relationships"}}}}})],r.default.prototype,"relationships",void 0),t.__decorate([f.property({types:B.rendererTypes,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:re},origins:{"web-scene":{types:B.webSceneRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:re}}}}})],r.default.prototype,"renderer",null),t.__decorate([f.property({types:{key:"type",base:null,typeMap:{"data-layer":N.DataLayerSource,"map-layer":U.MapLayerSource}},cast(e){if(e){if("mapLayerId"in e)return I.ensureClass(U.MapLayerSource,e);if("dataSource"in e)return I.ensureClass(N.DataLayerSource,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:ee}}})],r.default.prototype,"source",null),t.__decorate([f.property()],r.default.prototype,"sourceJSON",void 0),t.__decorate([f.property({type:O,json:{origins:{service:{read:{source:"layerDefinition.extent.spatialReference"}}}}})],r.default.prototype,"spatialReference",void 0),t.__decorate([f.property({value:null,json:{type:[I.Integer],write:{target:"subLayerIds",allowNull:!0,overridePolicy:ee}}})],r.default.prototype,"sublayers",null),t.__decorate([m.cast("sublayers")],r.default.prototype,"castSublayers",null),t.__decorate([S.writer("sublayers")],r.default.prototype,"writeSublayers",null),t.__decorate([f.property({type:String,json:{name:"name",write:{overridePolicy:te}}})],r.default.prototype,"title",void 0),t.__decorate([b.reader("service","title",["name","layerDefinition.name"])],r.default.prototype,"readTitle",null),t.__decorate([f.property({type:String})],r.default.prototype,"typeIdField",void 0),t.__decorate([f.property({json:{read:!1},readOnly:!0,value:"sublayer"})],r.default.prototype,"type",void 0),t.__decorate([b.reader("typeIdField",["layerDefinition.typeIdField"])],r.default.prototype,"readTypeIdField",null),t.__decorate([f.property({type:[P],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],r.default.prototype,"types",void 0),t.__decorate([f.property({type:String,json:{name:"layerUrl",write:{overridePolicy:Y}}})],r.default.prototype,"url",null),t.__decorate([f.property({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:ee}}})],r.default.prototype,"visible",null),t.__decorate([S.writer("visible")],r.default.prototype,"writeVisible",null),r.default=H=t.__decorate([g.subclass("esri.layers.support.Sublayer")],r.default),r.default}))},"esri/layers/support/sublayerUtils":function(){define(["exports","../../core/accessorSupport/PropertyOrigin"],(function(e,r){"use strict";function t(e,r){if(!e?.length||null==r)return!0;const t=r.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).map((e=>e.id)).toArray();if(e.length>t.length)return!1;let i=0;const a=t.length;for(const{id:r}of e){for(;i<a&&t[i]!==r;)i++;if(i>=a)return!1}return!0}e.isExportDynamic=function(e,i,a){return!!e.some((e=>{const t=e.source,i=!t||"map-layer"===t.type&&t.mapLayerId===e.id&&(null==t.gdbVersion||t.gdbVersion===a);e.commitProperty("renderer"),e.commitProperty("labelingInfo"),e.commitProperty("opacity"),e.commitProperty("labelsVisible"),e.commitProperty("orderBy");const o=e.layer?.capabilities?.exportMap?.supportsSublayerOrderBy??!1;return!i||e.originIdOf("renderer")>r.OriginId.SERVICE||e.originIdOf("labelingInfo")>r.OriginId.SERVICE||e.originIdOf("opacity")>r.OriginId.SERVICE||e.originIdOf("labelsVisible")>r.OriginId.SERVICE||o&&e.originIdOf("orderBy")>r.OriginId.SERVICE}))||!t(e,i)},e.isSublayerOverhaul=function(e){return!!e&&e.some((e=>null!=e.minScale||null!=e.layerDefinition?.minScale))},e.shouldWriteSublayerStructure=function(e,r,i){return r.flatten((({sublayers:e})=>e)).length!==e.length||!!e.some((e=>e.originIdOf("minScale")>i||e.originIdOf("maxScale")>i||e.originIdOf("renderer")>i||e.originIdOf("labelingInfo")>i||e.originIdOf("opacity")>i||e.originIdOf("labelsVisible")>i||e.originIdOf("source")>i))||!t(e,r)},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}))},"esri/layers/support/ExportImageParameters":function(){define(["exports","../../chunks/tslib.es6","../../core/Accessor","../../core/sql","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../geometry/support/scaleUtils","./floorFilterUtils","./sublayerUtils"],(function(e,r,t,i,a,o,s,l,n,p,u,y){"use strict";const d={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};e.ExportImageParameters=class extends t{constructor(e){super(e),this.floors=null,this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map((e=>{const r=u.getLayerFloorFilterClause(this.floors,e);return e.toExportImageJSON(r)}));return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&y.isExportDynamic(this.visibleSublayers,this.layer.serviceSublayers,this.layer.gdbVersion)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.removeHandles("layer"),e&&this.addHandles([e.allSublayers.on("change",(()=>this.notifyChange("visibleSublayers"))),e.on("sublayer-update",(e=>this.notifyChange(d[e.propertyName])))],"layer"))}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map((e=>e.id)).join(","):"show:-1":null}get layerDefs(){const e=!!this.floors?.length,r=this.visibleSublayers.filter((r=>null!=r.definitionExpression||e&&null!=r.floorInfo));return r.length?JSON.stringify(r.reduce(((e,r)=>{const t=u.getLayerFloorFilterClause(this.floors,r),a=i.sqlAnd(t,r.definitionExpression);return null!=a&&(e[r.id]=a),e}),{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers");const e=this.layer;return e&&(e.commitProperty("dpi"),e.commitProperty("imageFormat"),e.commitProperty("imageTransparency"),e.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){const e=[];if(!this.layer)return e;const r=this.layer.sublayers,t=this.scale,i=r=>{r.visible&&(0===t||p.isInScaleRange(t,r.minScale,r.maxScale))&&(r.sublayers?r.sublayers.forEach(i):e.unshift(r))};r&&r.forEach(i);const a=this._get("visibleSublayers");return!a||a.length!==e.length||a.some(((r,t)=>e[t]!==r))?e:a}toJSON(){const e=this.layer;let r={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?r.dynamicLayers=this.dynamicLayers:r={...r,layers:this.layers,layerDefs:this.layerDefs},r}},r.__decorate([a.property({readOnly:!0})],e.ExportImageParameters.prototype,"dynamicLayers",null),r.__decorate([a.property()],e.ExportImageParameters.prototype,"floors",void 0),r.__decorate([a.property({readOnly:!0})],e.ExportImageParameters.prototype,"hasDynamicLayers",null),r.__decorate([a.property()],e.ExportImageParameters.prototype,"layer",null),r.__decorate([a.property({readOnly:!0})],e.ExportImageParameters.prototype,"layers",null),r.__decorate([a.property({readOnly:!0})],e.ExportImageParameters.prototype,"layerDefs",null),r.__decorate([a.property({type:Number})],e.ExportImageParameters.prototype,"scale",void 0),r.__decorate([a.property({readOnly:!0})],e.ExportImageParameters.prototype,"version",null),r.__decorate([a.property({readOnly:!0})],e.ExportImageParameters.prototype,"visibleSublayers",null),e.ExportImageParameters=r.__decorate([n.subclass("esri.layers.support.ExportImageParameters")],e.ExportImageParameters),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}))},"esri/layers/support/floorFilterUtils":function(){define(["exports"],(function(e){"use strict";function r(e,r){if(!e?.length)return null;const t=e.filter((e=>""!==e)).map((e=>`'${e}'`));return t.push("''"),`${r} IN (${t.join(",")}) OR ${r} IS NULL`}e.getFloorFilterClause=function(e){const t=e.layer;return"floorInfo"in t&&t.floorInfo?.floorField&&"floors"in e.view?r(e.view.floors,t.floorInfo.floorField):null},e.getLayerFloorFilterClause=function(e,t){return"floorInfo"in t&&t.floorInfo?.floorField?r(e,t.floorInfo.floorField):null},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}))},"esri/layers/support/imageBitmapUtils":function(){define(["exports","../../core/Error","../../core/promiseUtils"],(function(e,r,t){"use strict";e.createBitmap=async function(e,i,a){let o;try{o=await createImageBitmap(e)}catch(e){throw new r("request:server",`Unable to load ${i}`,{url:i,error:e})}return t.throwIfAborted(a),o},e.createTileBitmap=async function(e,i,a,o,s){let l;try{l=await createImageBitmap(e)}catch(e){throw new r("request:server",`Unable to load tile ${i}/${a}/${o}`,{error:e,level:i,row:a,col:o})}return t.throwIfAborted(s),l},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}))},"*noref":1}}),define(["require","../chunks/tslib.es6","../request","../core/Error","../core/loadAll","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/has","../core/RandomLCG","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../core/accessorSupport/PropertyOrigin","../geometry/Extent","../geometry/support/scaleUtils","../geometry/support/spatialReferenceUtils","./Layer","./mixins/APIKeyMixin","./mixins/ArcGISMapService","./mixins/ArcGISService","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./mixins/SublayersOwner","./mixins/TemporalLayer","./support/commonProperties","./support/ExportImageParameters","./support/imageBitmapUtils","./support/Sublayer","./support/sublayerUtils","./support/versionUtils","../symbols/support/ElevationInfo","../chunks/TimeExtent","../time/timeZoneUtils","../webdoc/interfaces"],(function(e,r,t,i,a,o,s,l,n,p,u,y,d,c,h,f,m,b,g,S,I,_,v,w,O,x,E,L,T,P,F,D,A,M,R,C,V,j,q,N){"use strict";let U=class extends(v.BlendLayer(P.TemporalLayer(L.ScaleRangeLayer(T.SublayersOwner(I.ArcGISMapService(_.ArcGISService(O.OperationalLayer(x.PortalLayer(o.MultiOriginJSONMixin(E.RefreshableLayer(S.APIKeyMixin(w.CustomParametersMixin(g))))))))))))){constructor(...r){super(...r),this._exportImageParameters=new D.ExportImageParameters({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.elevationInfo=new V({mode:"on-the-ground"}),this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null,this._debouncedSaveOperations=s.debounce((async(r,t,i)=>{const{save:a,saveAs:o}=await new Promise(((r,t)=>e(["./save/mapImageLayerUtils"],r,t)));switch(r){case N.SaveOperationType.SAVE:return a(this,t);case N.SaveOperationType.SAVE_AS:return o(this,i,t)}}))}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(s.throwIfAbortError).then((()=>this._fetchService(r)))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,r){const t=r.supportedImageFormatTypes;return t&&t.includes("PNG32")?"png32":"png24"}writeSublayers(e,r,t,i){if(!this.loaded||!e)return;const a=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let o=!1;const s=h.nameToId(i.origin);let l;if(this.capabilities?.operations.supportsExportMap&&this.capabilities?.exportMap?.supportsDynamicLayers)if(s===h.OriginId.PORTAL_ITEM){const e=this.createSublayersForOrigin("service").sublayers;o=R.shouldWriteSublayerStructure(a,e,h.OriginId.SERVICE)}else if(s>h.OriginId.PORTAL_ITEM){const e=this.createSublayersForOrigin("portal-item");o=R.shouldWriteSublayerStructure(a,e.sublayers,h.nameToId(e.origin)),l=e.originWithPartialOverrides}const n=[],p={writeSublayerStructure:o,...i,minimumWritableOrigin:l};let u=o||this.hasVisibleLayersForOrigin(s);a.forEach((e=>{const r=e.write({},p);n.push(r),u=u||"user"===e.originOf("visible")})),n.some((e=>Object.keys(e).length>1))&&(r.layers=n),u&&(r.visibleLayers=a.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,r,t,i){const a=i?.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=i?.floors??null,this._exportImageParameters.scale=m.getScale({extent:e,width:r})*a;const o=this._exportImageParameters.toJSON(),s=!i?.rotation||this.version<10.3?{}:{rotation:-i.rotation},l=e?.spatialReference,n=b.srToRESTValue(l);o.dpi*=a;const p={};if(i?.timeExtent){const{start:e,end:r}=i.timeExtent.toJSON();p.time=e&&r&&e===r?""+e:`${e??"null"},${r??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(p.time="null,null");return{bbox:e?e.xmin+","+e.ymin+","+e.xmax+","+e.ymax:void 0,bboxSR:n,imageSR:n,size:r+","+t,...o,...s,...p}}async fetchImage(e,r,t,i){const{data:a}=await this._fetchImage("image",e,r,t,i);return a}async fetchImageBitmap(e,r,t,i){const{data:a,url:o}=await this._fetchImage("blob",e,r,t,i);return A.createBitmap(a,o,i?.signal)}async fetchRecomputedExtents(e={}){const r={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:i}=await t(this.url,r),{extent:a,fullExtent:o,timeExtent:s}=i,l=a||o;return{fullExtent:l&&f.fromJSON(l),timeExtent:s&&j.TimeExtent.fromJSON({start:s[0],end:s[1]})}}loadAll(){return a.loadAll(this,(e=>{e(this.allSublayers),e(this.subtables)}))}async save(e){return this._debouncedSaveOperations(N.SaveOperationType.SAVE,e)}async saveAs(e,r){return this._debouncedSaveOperations(N.SaveOperationType.SAVE_AS,r,e)}serviceSupportsSpatialReference(e){return C.serviceSupportsSpatialReference(this,e)}async _fetchImage(e,r,a,o,l){const n={responseType:e,signal:l?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(r,a,o,l),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},p=this.parsedUrl.path+"/export";if(null!=n.query?.dynamicLayers&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new i("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:n.query});try{const{data:e}=await t(p,n);return{data:e,url:p}}catch(e){if(s.isAbortError(e))throw e;throw new i("mapimagelayer:image-fetch-error",`Unable to load image: ${p}`,{error:e})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:r,ssl:i}=await t(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});i&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r,this.read(r,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){return!(null==e||!this.sublayersSourceJSON[e]?.visibleLayers)}};return r.__decorate([l.property(q.timeZoneProperty("dateFieldsTimeReference"))],U.prototype,"dateFieldsTimeZone",void 0),r.__decorate([l.property({type:Boolean})],U.prototype,"datesInUnknownTimezone",void 0),r.__decorate([l.property()],U.prototype,"dpi",void 0),r.__decorate([l.property()],U.prototype,"elevationInfo",void 0),r.__decorate([l.property()],U.prototype,"gdbVersion",void 0),r.__decorate([l.property()],U.prototype,"imageFormat",void 0),r.__decorate([y.reader("imageFormat",["supportedImageFormatTypes"])],U.prototype,"readImageFormat",null),r.__decorate([l.property({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],U.prototype,"imageMaxHeight",void 0),r.__decorate([l.property({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],U.prototype,"imageMaxWidth",void 0),r.__decorate([l.property()],U.prototype,"imageTransparency",void 0),r.__decorate([l.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],U.prototype,"isReference",void 0),r.__decorate([l.property({json:{read:!1,write:!1}})],U.prototype,"labelsVisible",void 0),r.__decorate([l.property({type:["ArcGISMapServiceLayer"]})],U.prototype,"operationalLayerType",void 0),r.__decorate([l.property({json:{read:!1,write:!1}})],U.prototype,"popupEnabled",void 0),r.__decorate([l.property(q.timeZoneProperty("preferredTimeReference"))],U.prototype,"preferredTimeZone",void 0),r.__decorate([l.property()],U.prototype,"sourceJSON",void 0),r.__decorate([l.property({json:{write:{ignoreOrigin:!0}}})],U.prototype,"sublayers",void 0),r.__decorate([c.writer("sublayers",{layers:{type:[M]},visibleLayers:{type:[n.Integer]}})],U.prototype,"writeSublayers",null),r.__decorate([l.property({type:["show","hide","hide-children"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],U.prototype,"listMode",void 0),r.__decorate([l.property({json:{read:!1},readOnly:!0,value:"map-image"})],U.prototype,"type",void 0),r.__decorate([l.property(F.url)],U.prototype,"url",void 0),U=r.__decorate([d.subclass("esri.layers.MapImageLayer")],U),U}));