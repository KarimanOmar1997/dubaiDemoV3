// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["../chunks/tslib.es6","../PopupTemplate","../core/Clonable","../core/Collection","../core/Error","../core/Logger","../core/MultiOriginJSONSupport","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/subclass","../geometry/SpatialReference","./Layer","./graphics/sources/ParquetSource","./graphics/sources/support/clientSideDefaults","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/DisplayFilteredLayer","./mixins/FeatureEffectLayer","./mixins/FeatureReductionLayer","./mixins/OperationalLayer","./mixins/OrderedLayer","./mixins/PortalLayer","./mixins/ScaleRangeLayer","./mixins/TemporalLayer","./support/commonProperties","./support/FeatureTemplate","./support/Field","./support/fieldProperties","./support/fieldUtils","./support/LabelClass","./support/labelingInfo","./support/ParquetEncodingBase","./support/ParquetEncodingLocation","./support/ParquetEncodingWkb","./support/parquetUtils","../renderers/support/typeUtils","../rest/support/Query","../support/popupUtils"],(function(e,t,r,i,o,a,s,p,n,l,d,c,u,y,m,f,g,h,_,b,F,I,w,P,q,x,L,T,v,S,R,j,O,D,G,M,U){"use strict";const C=L.defineFieldProperties(),E={types:{key:"type",base:R.ParquetEncodingBase,typeMap:{wkb:O,location:j}}};let W=class extends(f.DisplayFilteredLayer(h.FeatureReductionLayer(g.FeatureEffectLayer(y.BlendLayer(b.OrderedLayer(w.TemporalLayer(I.ScaleRangeLayer(_.OperationalLayer(F.PortalLayer(s.MultiOriginJSONMixin(m.CustomParametersMixin(r.ClonableMixin(d))))))))))))){constructor(e){super(e),this.capabilities=u.createCapabilities(!1,!1),this.copyright=null,this.fields=null,this.fieldsIndex=null,this.encoding=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.objectIdField=null,this.outFields=null,this.popupTemplate=null,this.source=null,this.spatialReference=l.WGS84,this.templates=null,this.title="Parquet",this.type="parquet",this.urls=new i}async load(e){return this.addResolvingPromise(this._load(e)),this}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){T.fixRendererFields(e,this.fieldsIndex),this._set("renderer",e)}createPopupTemplate(e){return U.createPopupTemplate(this,e)}createQuery(){const e=new M;return e.returnGeometry=!0,e.outFields=["*"],e}async createSource(e){const t=await D.completeParquetLayerInfo({urls:this.urls,fields:this.fields,objectIdField:this.objectIdField,encoding:this.encoding,geometryType:this.geometryType,spatialReference:this.spatialReference,metadata:this.metadata},{customParameters:this.customParameters});let{fields:r,geometryType:i,encoding:s,spatialReference:p,objectIdField:n,urls:d,metadata:u}=t;if(null==r)throw new o("parquet-layer:missing-metadata","Unable to create parquet source: cannot infer fields",t);if(null==i)throw new o("parquet-layer:missing-metadata","Unable to create parquet source: cannot infer geometryType",t);if(null==s)throw new o("parquet-layer:missing-metadata","Unable to create parquet source: cannot infer encoding",t);if(null==p)throw new o("parquet-layer:missing-metadata","Unable to create parquet source: cannot infer spatialReference",t);if(!p.isGeographic&&!p.isWebMercator)throw new o("parquet-layer:unsupported","Unable to create parquet source: currently only geographic and Web Mercator supported",t);p.isGeographic&&!p.isWGS84&&(a.getLogger("parquet-layer").warn("Found a geographic projection that is not WGS84. Handling as WGS84.",{spatialReference:t.spatialReference}),p=l.WGS84),null==n&&(n="__OBJECTID",r.push(new x({name:n,type:"oid",alias:n})));const y=new c.ParquetSource({urls:d.items,fields:r,objectIdField:n,spatialReference:p,encoding:s,geometryType:i,metadata:u,customParameters:this.customParameters??void 0});return await y.load(e),y}getFieldDomain(e,t){return null}getField(e){return this.fieldsIndex.get(e)}async _load(e){const t=await this.createSource(e);this._set("source",t),this.fields=t.fields,this.objectIdField=t.objectIdField,this.encoding=t.encoding,this.metadata=t.metadata,this.geometryType=t.geometryType,this.spatialReference=t.spatialReference,T.fixRendererFields(this.renderer,this.fieldsIndex),T.fixTimeInfoFields(this.timeInfo,this.fieldsIndex)}};return e.__decorate([p.property({readOnly:!0,json:{read:!1,write:!1}})],W.prototype,"capabilities",void 0),e.__decorate([p.property({type:String})],W.prototype,"copyright",void 0),e.__decorate([p.property({readOnly:!0})],W.prototype,"defaultPopupTemplate",null),e.__decorate([p.property({type:[x],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],W.prototype,"fields",void 0),e.__decorate([p.property(C.fieldsIndex)],W.prototype,"fieldsIndex",void 0),e.__decorate([p.property(E)],W.prototype,"encoding",void 0),e.__decorate([p.property({json:{read:{reader:D.parquetGeometryTypeKebabDict.read}}})],W.prototype,"geometryType",void 0),e.__decorate([p.property(P.labelsVisible)],W.prototype,"labelsVisible",void 0),e.__decorate([p.property({type:[v],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:S.reader},write:!0}})],W.prototype,"labelingInfo",void 0),e.__decorate([p.property()],W.prototype,"metadata",void 0),e.__decorate([p.property({type:String,json:{name:"layerDefinition.objectIdField",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"objectIdField"}}}})],W.prototype,"objectIdField",void 0),e.__decorate([p.property(C.outFields)],W.prototype,"outFields",void 0),e.__decorate([p.property({type:t,json:{name:"popupInfo",write:!0}})],W.prototype,"popupTemplate",void 0),e.__decorate([p.property({types:G.rendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",write:!0,origins:{service:{name:"drawingInfo.renderer"}}}})],W.prototype,"renderer",null),e.__decorate([p.property({json:{read:!1},cast:null,type:c.ParquetSource,readOnly:!0})],W.prototype,"source",void 0),e.__decorate([p.property({type:l})],W.prototype,"spatialReference",void 0),e.__decorate([p.property({type:[q]})],W.prototype,"templates",void 0),e.__decorate([p.property()],W.prototype,"title",void 0),e.__decorate([p.property({json:{read:!1},readOnly:!0})],W.prototype,"type",void 0),e.__decorate([p.property({type:i.ofType(String)})],W.prototype,"urls",void 0),W=e.__decorate([n.subclass("esri.layers.ParquetLayer")],W),W}));