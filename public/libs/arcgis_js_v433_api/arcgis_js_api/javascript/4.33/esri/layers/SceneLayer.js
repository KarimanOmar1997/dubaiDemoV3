// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["require","../chunks/tslib.es6","../Graphic","../PopupTemplate","../core/Clonable","../core/Collection","../core/Error","../core/handleUtils","../core/Logger","../core/maybe","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/reactiveUtils","../core/accessorSupport/decorators/property","../core/has","../core/RandomLCG","../core/accessorSupport/utils","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/PropertyOrigin","../geometry/Point","./Layer","./graphics/sources/support/uploadAssetErrors","./mixins/APIKeyMixin","./mixins/ArcGISService","./mixins/CustomParametersMixin","./mixins/EditBusLayer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/ScaleRangeLayer","./mixins/SceneService","./mixins/TemporalLayer","./mixins/TemporalSceneLayer","./support/arcgisLayerUrl","./support/associatedFeatureServiceUtils","./support/capabilities","./support/commonProperties","./support/featureLayerUtils","./support/FeatureReduction","./support/FeatureReductionSelection","./support/fieldProperties","./support/FieldsIndex","./support/fieldUtils","./support/I3SLayerDefinitions","./support/infoFor3D","./support/LabelClass","./support/labelingInfo","./support/LayerFloorInfo","./support/lazyLayerLoader","./support/meshSpatialReferenceScaleUtils","./support/RangeInfo","./support/SceneFilter","./support/sceneLayerCacheUtils","./support/sceneLayerStatistics","../renderers/support/styleUtils","../renderers/support/typeUtils","../rest/support/Query","../support/elevationInfoUtils","../support/popupUtils","../support/zipUtils","../views/3d/layers/i3s/I3SUtil","../views/layers/support/popupUtils","../webdoc/support/opacityUtils"],(function(e,t,r,i,a,o,s,n,l,p,d,y,c,u,h,f,g,m,_,v,b,I,w,L,F,S,E,O,P,T,A,x,D,j,R,U,q,C,M,N,G,Q,V,k,K,H,z,$,W,Z,B,J,X,Y,ee,te,re,ie,ae,oe,se,ne,le){"use strict";const pe=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),de=new Set(["3DObject","Point"]),ye=G.defineFieldProperties();let ce=class extends(D.TemporalSceneLayer(E.EditBusLayer(A.SceneService(F.ArcGISService(O.OperationalLayer(P.PortalLayer(T.ScaleRangeLayer(d.MultiOriginJSONMixin(S.CustomParametersMixin(L.APIKeyMixin(a.ClonableMixin(I)))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new o,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.attributeTableTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._set("renderer",null),this.associatedLayer=p.destroyMaybe(this.associatedLayer)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){const r=this.getField(e)?.domain??null;return this.associatedLayer?C.getFieldDomain(this.associatedLayer,e,t,r):r}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer?.types??[]}get typeIdField(){return this.associatedLayer?.typeIdField??null}get templates(){return this.associatedLayer?.templates??null}get formTemplate(){return this.associatedLayer?.formTemplate??null}get fieldsIndex(){return new Q(this.fields)}readNodePages(e,t,r){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:k.I3SNodePageDefinition.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.effectiveCapabilities)}get effectiveEditingEnabled(){return null!=this.associatedLayer&&C.computeEffectiveEditingEnabled(this.associatedLayer)}get geometryType(){return he[this.profile]||"mesh"}set renderer(e){V.fixRendererFields(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){e=null!=e?e:U.zeroCapabilities;const{query:t,queryRelated:r,editing:{supportsGlobalId:i,supportsRollbackOnFailure:a,supportsUploadWithItemId:o,supportsGeometryUpdate:s,supportsReturnServiceEditsInSourceSpatialReference:n},data:{supportsZ:l,supportsM:p,isVersioned:d,supportsAttachment:y},operations:{supportsEditing:c,supportsAdd:u,supportsUpdate:h,supportsDelete:f,supportsQuery:g,supportsQueryAttachments:m,supportsAsyncConvert3D:_}}=e,v=e.operations.supportsChangeTracking,b=!!this.associatedLayer?.infoFor3D;return{query:t,queryRelated:r,editing:{supportsGlobalId:i,supportsReturnServiceEditsInSourceSpatialReference:n,supportsRollbackOnFailure:a,supportsGeometryUpdate:b&&s,supportsUploadWithItemId:o},data:{supportsAttachment:y,supportsZ:l,supportsM:p,isVersioned:d},operations:{supportsQuery:g,supportsQueryAttachments:m,supportsEditing:c&&v,supportsAdd:b&&u&&v,supportsDelete:b&&f&&v,supportsUpdate:h&&v,supportsAsyncConvert3D:_}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.associatedLayer?.editingEnabled??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){return this.associatedLayer?.infoFor3D??null}get relationships(){return this.associatedLayer?.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return this.associatedLayer?.displayField??null}readProfile(e,t){const r=t.store.profile;return null!=r&&ue[r]?ue[r]:(l.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}get useViewTime(){return this.associatedLayer?.useViewTime??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=null!=e?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(y.throwIfAbortError),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await ee.loadStyleRenderer(this,{origin:"service"},t),V.fixRendererFields(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){null!=this.filter&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){l.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new re;return"mesh"===this.geometryType?this.capabilities.query.supportsReturnMesh&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e?.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new s("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new s("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){const r=V.unpackFieldNames(this.fieldsIndex,await ne.getRequiredFields(this,ne.getFetchPopupTemplate(this)));return se.queryAttributesFromCachedAttributesId(this.parsedUrl?.path??"",this.attributeStorageInfo??[],e,t,r,this.apiKey,this.customParameters)}async queryCachedFeature(e,t){const i=await this.queryCachedAttributes(e,[t]);if(!i||0===i.length)throw new s("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const a=new r;return a.attributes=i[0],a.layer=this,a.sourceLayer=this,a}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryAttachments(e,t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(l.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return ae.createPopupTemplate(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new s("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new s("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){return await this.load(t),await this.fetchStatistics(e,t)}async saveAs(e,t){return this._debouncedSaveOperations(A.SaveOperationType.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(A.SaveOperationType.SAVE,e)}async applyEdits(t,r){const{applyEdits:i}=await new Promise(((t,r)=>e(["./graphics/editingSupport"],t,r)));let a=r;await this.load();const o=this.associatedLayer;if(!o)throw new s(`${this.type}-layer:not-editable`,"Service is not editable");await o.load();const{globalIdField:n}=o,l=!!o.infoFor3D,p=a?.globalIdUsed??!0;if(l&&null==n)throw new s(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(l&&!p)throw new s(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return j.isHostedAgolService(o.url)&&l&&null!=t.deleteFeatures&&null!=n&&(a={...a,globalIdToObjectId:await C.getGlobalIdToObjectIdMap(o,t.deleteFeatures,n)}),i(this,o.source,t,a)}async uploadAssets(e,t){if(await this.load(),null==this.associatedLayer)throw new s(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}async convertMesh(t,r){r??={};const i=e=>{throw l.getLogger(this).error(".convertMesh()",e.message),e};await this.load(),this.infoFor3D||i(new s("invalid:layer","SceneLayer has no capability for mesh conversion"));const a=await this.extractAndFilterFiles(t),o=a.reduce(((e,t)=>K.isFileEditFormat(this.infoFor3D,t)?e+1:e),0);0===o&&i(new w.NoModelError),o>1&&i(new w.MultipleModelsError);const n=this.spatialReference,p=r.location??new b({x:0,y:0,z:0,spatialReference:n}),d=p.spatialReference.isGeographic?"local":"georeferenced",{default:y}=await new Promise(((t,r)=>e(["../geometry/Mesh"],(e=>t(pe(e))),r))),c=y.createWithExternalSource(p,{type:"client",files:a},{vertexSpace:d,transform:Z.getMeshTransformForMetersToSpatialReference(p.spatialReference),unitConversionDisabled:!0}),[u]=await this.uploadAssets([c],{...r,useAssetOrigin:!r.location});return u}async extractAndFilterFiles(e){await this.load();const t=this.infoFor3D;return t?(await oe.extractZipFiles(e)).filter((e=>K.isFileSupported(t,e))):e}validateLayer(e){if(e.layerType&&!de.has(e.layerType))throw new s("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new s("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new s("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});!function(e,t){let r=!1,i=!1;if(null==e)r=!0,i=!0;else{const a=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,i=a;break;case"vertex-reference-frame":r=!0,i=!a;break;default:r=!1}}if(!r)throw new s("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!i)throw new s("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new s("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!!this.attributeStorageInfo?.some((t=>t.name===e.name)),r=!!this.associatedLayer?.fields?.some((t=>t&&e.name===t.name)),i={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=i}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPropertyOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){if(!this.associatedLayer?.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPropertyOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled","attributeTableTemplate"],t=g.getProperties(this);for(let r=0;r<e.length;r++){const i=e[r],a=this.originIdOf(i),o=this.associatedLayer.originIdOf(i);a<o&&(o===v.OriginId.SERVICE||o===v.OriginId.PORTAL_ITEM)&&t.setAtOrigin(i,this.associatedLayer[i],o)}}_applyAssociatedLayerExtentOverride(){const e=this.associatedLayer?.getAtOrigin("fullExtent","service");null!=this.associatedLayer?.infoFor3D&&e&&j.isHostedAgolService(this.associatedLayer?.url)&&X.cacheIsOutOfSync(this)&&g.getProperties(this).setAtOrigin("fullExtent",e.clone(),v.OriginId.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:r,portalItem:i}=await R.findAssociatedFeatureService(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),a=await W.layerLookupMap.FeatureLayer();this.associatedLayer=new a({url:t,customParameters:this.customParameters,layerId:r,portalItem:i}),await this.associatedLayer.load()}catch(e){y.isAbortError(e)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){const e=new AbortController;this.addHandles(n.abortHandle(e));try{await c.whenOnce((()=>this.popupEnabled&&null!=this.popupTemplate),e.signal)}catch(e){return void y.throwIfNotAbortError(e)}const t=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?l.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${t}`):l.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${t}`)}_validateElevationInfo(){const e=this.elevationInfo;"mesh-pyramids"===this.profile&&ie.logInvalidElevationInfoWarning(l.getLogger(this),ie.elevationModeUnsupportedMessage("Mesh scene layers","relative-to-scene",e)),ie.logInvalidElevationInfoWarning(l.getLogger(this),ie.featureExpressionUnsupportedMessage("Scene layers",e))}async fetchStatistics(e,t){return await Y.fetchStatistics({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:this.parsedUrl?.path??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:t?.signal})}};t.__decorate([u.property({types:{key:"type",base:M.FeatureReduction,typeMap:{selection:N}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],ce.prototype,"featureReduction",void 0),t.__decorate([u.property({type:[B.RangeInfo],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],ce.prototype,"rangeInfos",void 0),t.__decorate([u.property({json:{read:!1}})],ce.prototype,"associatedLayer",void 0),t.__decorate([u.property({type:["show","hide"]})],ce.prototype,"listMode",void 0),t.__decorate([u.property({type:["ArcGISSceneServiceLayer"]})],ce.prototype,"operationalLayerType",void 0),t.__decorate([u.property({json:{read:!1},readOnly:!0})],ce.prototype,"type",void 0),t.__decorate([u.property({...ye.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],ce.prototype,"fields",void 0),t.__decorate([u.property()],ce.prototype,"types",null),t.__decorate([u.property()],ce.prototype,"typeIdField",null),t.__decorate([u.property()],ce.prototype,"templates",null),t.__decorate([u.property()],ce.prototype,"formTemplate",null),t.__decorate([u.property({readOnly:!0,clonable:!1})],ce.prototype,"fieldsIndex",null),t.__decorate([u.property({type:$,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],ce.prototype,"floorInfo",void 0),t.__decorate([u.property(ye.outFields)],ce.prototype,"outFields",void 0),t.__decorate([u.property({type:k.I3SNodePageDefinition,readOnly:!0,json:{read:!1}})],ce.prototype,"nodePages",void 0),t.__decorate([m.reader("service","nodePages",["nodePages","pointNodePages"])],ce.prototype,"readNodePages",null),t.__decorate([u.property({type:[k.I3SMaterialDefinition],readOnly:!0})],ce.prototype,"materialDefinitions",void 0),t.__decorate([u.property({type:[k.I3STextureSetDefinition],readOnly:!0})],ce.prototype,"textureSetDefinitions",void 0),t.__decorate([u.property({type:[k.I3SGeometryDefinition],readOnly:!0})],ce.prototype,"geometryDefinitions",void 0),t.__decorate([u.property({readOnly:!0})],ce.prototype,"serviceUpdateTimeStamp",void 0),t.__decorate([u.property({readOnly:!0})],ce.prototype,"attributeStorageInfo",void 0),t.__decorate([u.property({readOnly:!0})],ce.prototype,"statisticsInfo",void 0),t.__decorate([u.property({type:o.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],ce.prototype,"excludeObjectIds",void 0),t.__decorate([u.property({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],ce.prototype,"definitionExpression",void 0),t.__decorate([u.property({type:J,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],ce.prototype,"filter",void 0),t.__decorate([u.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],ce.prototype,"path",void 0),t.__decorate([u.property(q.elevationInfo)],ce.prototype,"elevationInfo",null),t.__decorate([u.property({readOnly:!0,json:{read:!1}})],ce.prototype,"effectiveCapabilities",null),t.__decorate([u.property({readOnly:!0})],ce.prototype,"effectiveEditingEnabled",null),t.__decorate([u.property({type:String})],ce.prototype,"geometryType",null),t.__decorate([u.property(q.labelsVisible)],ce.prototype,"labelsVisible",void 0),t.__decorate([u.property({type:[H],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:z.reader},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:z.reader},write:!0}})],ce.prototype,"labelingInfo",void 0),t.__decorate([u.property(q.legendEnabled)],ce.prototype,"legendEnabled",void 0),t.__decorate([u.property({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){if("number"==typeof e&&e>=0&&e<=1)return e;const r=t.layerDefinition?.drawingInfo?.transparency;return void 0!==r?le.transparencyToOpacity(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],ce.prototype,"opacity",void 0),t.__decorate([u.property({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],ce.prototype,"priority",void 0),t.__decorate([u.property({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],ce.prototype,"semantic",void 0),t.__decorate([u.property({types:te.webSceneRendererTypes,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],ce.prototype,"renderer",null),t.__decorate([u.property({json:{read:!1}})],ce.prototype,"cachedDrawingInfo",void 0),t.__decorate([m.reader("service","cachedDrawingInfo")],ce.prototype,"readCachedDrawingInfo",null),t.__decorate([u.property({readOnly:!0,json:{read:!1}})],ce.prototype,"capabilities",null),t.__decorate([u.property({type:Boolean,json:{read:!1}})],ce.prototype,"editingEnabled",null),t.__decorate([u.property({readOnly:!0,json:{write:!1,read:!1}})],ce.prototype,"infoFor3D",null),t.__decorate([u.property({readOnly:!0,json:{write:!1,read:!1}})],ce.prototype,"relationships",null),t.__decorate([u.property(q.popupEnabled)],ce.prototype,"popupEnabled",void 0),t.__decorate([u.property({type:i,json:{name:"popupInfo",write:!0}})],ce.prototype,"popupTemplate",void 0),t.__decorate([u.property({readOnly:!0,json:{read:!1}})],ce.prototype,"defaultPopupTemplate",null),t.__decorate([u.property(q.attributeTableTemplate)],ce.prototype,"attributeTableTemplate",void 0),t.__decorate([u.property({type:String,json:{read:!1}})],ce.prototype,"objectIdField",void 0),t.__decorate([m.reader("service","objectIdField",["objectIdField","fields"])],ce.prototype,"readObjectIdField",null),t.__decorate([u.property({type:String,json:{read:!1}})],ce.prototype,"globalIdField",void 0),t.__decorate([m.reader("service","globalIdField",["globalIdField","fields"])],ce.prototype,"readGlobalIdField",null),t.__decorate([u.property({readOnly:!0,type:String,json:{read:!1}})],ce.prototype,"displayField",null),t.__decorate([u.property({type:String,json:{read:!1}})],ce.prototype,"profile",void 0),t.__decorate([m.reader("service","profile",["store.profile"])],ce.prototype,"readProfile",null),t.__decorate([u.property({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],ce.prototype,"normalReferenceFrame",void 0),t.__decorate([u.property(q.screenSizePerspectiveEnabled)],ce.prototype,"screenSizePerspectiveEnabled",void 0),t.__decorate([u.property({json:{read:!1,origins:{service:{read:!0}}}})],ce.prototype,"serviceItemId",void 0),t.__decorate([u.property(x.useViewTimeProperty)],ce.prototype,"useViewTime",null),ce=t.__decorate([_.subclass("esri.layers.SceneLayer")],ce);const ue={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},he={"mesh-pyramids":"mesh",points:"point"};return ce}));