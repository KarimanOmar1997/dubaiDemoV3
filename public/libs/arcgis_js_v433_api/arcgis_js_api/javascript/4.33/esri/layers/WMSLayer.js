// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["../chunks/tslib.es6","../config","../Graphic","../PopupTemplate","../request","../core/Collection","../core/CollectionFlattener","../core/Error","../core/jsonMap","../core/lang","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/reactiveUtils","../core/sanitizerUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../core/accessorSupport/write","../geometry/Extent","../geometry/SpatialReference","../geometry/support/scaleUtils","../geometry/support/spatialReferenceUtils","./Layer","./mixins/BlendLayer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./mixins/TemporalLayer","./ogc/crsUtils","./support/arcgisLayerUrl","./support/commonProperties","./support/ExportWMSImageParameters","./support/imageBitmapUtils","./support/WMSSublayer","./support/wmsUtils"],(function(e,r,t,a,o,s,i,n,l,p,u,c,y,d,m,h,f,g,_,b,w,x,v,S,I,F,P,R,E,L,O,M,U,j,T,W,C,q,N){"use strict";const $=new l.JSONMap({bmp:"image/bmp",gif:"image/gif",jpg:"image/jpeg",png:"image/png",svg:"image/svg+xml"},{ignoreUnknown:!1});function k(e){return"text/html"===e}function B(e){return"text/plain"===e}let A=class extends(P.BlendLayer(M.TemporalLayer(L.RefreshableLayer(O.ScaleRangeLayer(R.OperationalLayer(E.PortalLayer(u.MultiOriginJSONMixin(F)))))))){constructor(...e){super(...e),this.allSublayers=new i({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.customParameters=null,this.customLayerParameters=null,this.copyright=null,this.description=null,this.dimensions=null,this.fullExtent=null,this.fullExtents=null,this.featureInfoFormats=null,this.featureInfoUrl=null,this.fetchFeatureInfoFunction=null,this.imageFormat=null,this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.legendEnabled=!0,this.mapUrl=null,this.isReference=null,this.operationalLayerType="WMS",this.spatialReference=null,this.spatialReferences=null,this.sublayers=null,this.type="wms",this.version=null,this.addHandles([y.on((()=>this.sublayers),"after-add",(({item:e})=>{e.parent=e.layer=this}),y.sync),y.on((()=>this.sublayers),"after-remove",(({item:e})=>{e.layer=e.parent=null}),y.sync),y.watch((()=>this.sublayers),((e,r)=>{if(r)for(const e of r)e.layer=e.parent=null;if(e)for(const r of e)r.parent=r.layer=this}),y.sync)])}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}destroy(){this.allSublayers.destroy()}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WMS"]},e).catch(c.throwIfAbortError).then((()=>this._fetchService(r))).then((()=>this._checkLayerValidity()))),Promise.resolve(this)}readFullExtentFromItemOrMap(e,r){const t=r.extent;return t?new x({xmin:t[0][0],ymin:t[0][1],xmax:t[1][0],ymax:t[1][1]}):null}writeFullExtent(e,r){r.extent=[[e.xmin,e.ymin],[e.xmax,e.ymax]]}get featureInfoFormat(){return null==this.featureInfoFormats?null:this.featureInfoFormats.find(k)??this.featureInfoFormats.find(B)??null}set featureInfoFormat(e){null==e?(this.revert("featureInfoFormat","service"),this._clearOverride("featureInfoFormat")):(k(e)||B(e))&&this._override("featureInfoFormat",e)}readImageFormat(e,r){const t=r.supportedImageFormatTypes;return t&&t.includes("image/png")?"image/png":t&&t[0]}readSpatialReferenceFromItemOrDocument(e,r){return new v(r.spatialReferences[0])}writeSpatialReferences(e,r){const t=this.spatialReference?.wkid;e&&t?(r.spatialReferences=e.filter((e=>e!==t)),r.spatialReferences.unshift(t)):r.spatialReferences=e}readSublayersFromItemOrMap(e,r,t){return z(r.layers,t,r.visibleLayers)}readSublayers(e,r,t){return z(r.layers,t)}writeSublayers(e,r,t,a){r.layers=[];const o=new Map,s=e.flatten((({sublayers:e})=>e??[]));for(const e of s)if("number"==typeof e.parent?.id){const r=o.get(e.parent.id);null!=r?r.push(e.id):o.set(e.parent.id,[e.id])}for(const e of s){const t={sublayer:e,...a},s=e.write({parentLayerId:"number"==typeof e.parent?.id?e.parent.id:-1},t);if(o.has(e.id)&&(s.sublayerIds=o.get(e.id)),!e.sublayers&&e.name){const a=e.write({},t);delete a.id,r.layers.push(a)}}r.visibleLayers=s.filter((({visible:e,sublayers:r})=>e&&!r)).map((({name:e})=>e)).toArray()}set url(e){if(!e)return void this._set("url",e);const{path:r,query:t}=m.urlToObject(e);for(const e in t)/^(request|service)$/i.test(e)&&delete t[e];const a=m.addQueryParameters(r,t??{});this._set("url",a)}createExportImageParameters(e,r,t,a){const o=a?.pixelRatio??1,s=S.getScale({extent:e,width:r})*o,i=new W.ExportWMSImageParameters({layer:this,scale:s}),{xmin:n,ymin:l,xmax:p,ymax:u,spatialReference:c}=e,y=N.normalizeWKID(c,this.spatialReferences),d="1.3.0"===this.version&&U.isAxesOrderReversedForWkid(y)?`${l},${n},${u},${p}`:`${n},${l},${p},${u}`,m=i.toJSON(),h="1.3.0"===this.version?"crs":"srs";return{bbox:d,[h]:null==y||isNaN(y)?void 0:"EPSG:"+y,...m}}async fetchImage(e,r,t,a){const s=this.mapUrl,i=this.createExportImageParameters(e,r,t,a);if(!i.layers){const e=document.createElement("canvas");return e.width=r,e.height=t,e}const n=N.toTimeQueryParameter(a?.timeExtent),l={responseType:"image",query:this._mixCustomParameters({width:r,height:t,...i,time:n,...this.refreshParameters}),signal:a?.signal};return o(s??"",l).then((e=>e.data))}async fetchImageBitmap(e,r,t,a){const s=this.mapUrl??"",i=this.createExportImageParameters(e,r,t,a);if(!i.layers){const e=document.createElement("canvas");return e.width=r,e.height=t,e}const n=N.toTimeQueryParameter(a?.timeExtent),l={responseType:"blob",query:this._mixCustomParameters({width:r,height:t,...i,time:n,...this.refreshParameters}),signal:a?.signal},{data:p}=await o(s,l);return C.createBitmap(p,s,a?.signal)}fetchFeatureInfo(e,r,t,a,o){const s=S.getScale({extent:e,width:r}),i=new W.ExportWMSImageParameters({layer:this,scale:s}),n=N.getPopupLayers(i.visibleSublayers);if(null==this.featureInfoUrl||null==n)return Promise.resolve([]);if(null==this.fetchFeatureInfoFunction&&null==this.featureInfoFormat)return Promise.resolve([]);const l="1.3.0"===this.version?{I:a,J:o}:{x:a,y:o},p={query_layers:n,request:"GetFeatureInfo",info_format:this.featureInfoFormat,feature_count:25,width:r,height:t,...l},u={...this.createExportImageParameters(e,r,t),...p},c=this._mixCustomParameters(u);return null!=this.fetchFeatureInfoFunction?this.fetchFeatureInfoFunction(c):this._defaultFetchFeatureInfoFunction(m.addQueryParameters(this.featureInfoUrl,c))}findSublayerById(e){return this.allSublayers.find((r=>r.id===e))}findSublayerByName(e){return this.allSublayers.find((r=>r.name===e))}serviceSupportsSpatialReference(e){return j.isWmsServer(this.url)||null!=this.spatialReferences&&this.spatialReferences.some((r=>{const t=900913===r?v.WebMercator:new v({wkid:r});return I.equals(t,e)}))}_defaultFetchFeatureInfoFunction(e){const r=document.createElement("iframe");r.src=m.addProxy(d.renderingSanitizer.sanitizeUrl(m.makeAbsolute(e))),r.style.border="none",r.style.margin="0",r.style.width="100%",r.setAttribute("sandbox","");const o=new a({title:this.title,content:r}),s=new t({sourceLayer:this,popupTemplate:o});return Promise.resolve([s])}async _fetchService(e){if(!this.resourceInfo&&this.parsedUrl?.path){const{path:r,query:t}=this.parsedUrl,{data:a}=await o(r,{query:{SERVICE:"WMS",REQUEST:"GetCapabilities",...t,...this.customParameters},responseType:"xml",signal:e});this.resourceInfo=N.parseCapabilities(a)}if(this.parsedUrl){const e=new m.Url(this.parsedUrl.path),{httpsDomains:t}=r.request;"https"!==e.scheme||e.port&&"443"!==e.port||!e.host||t.includes(e.host)||t.push(e.host)}this.read(this.resourceInfo,{origin:"service"})}_checkLayerValidity(){if(!this.allSublayers.length)throw new n("wmslayer:empty-layer","The layer doesn't have any sublayer")}_mixCustomParameters(e){if(!this.customLayerParameters&&!this.customParameters)return e;const r={...this.customParameters,...this.customLayerParameters};for(const t in r)e[t.toLowerCase()]=r[t];return e}};function z(e,r,t){e=e??[];const a=new Map;e.every((e=>null==e.id))&&(e=p.clone(e)).forEach(((e,r)=>e.id=r));for(const o of e){const e=new q;e.read(o,r),t&&!t.includes(e.name)&&(e.visible=!1),a.set(e.id,e)}const o=[];for(const r of e){const e=null!=r.id?a.get(r.id):null;if(e)if(null!=r.parentLayerId&&r.parentLayerId>=0){const t=a.get(r.parentLayerId);if(!t)continue;t.sublayers||(t.sublayers=new s),t.sublayers.push(e)}else o.push(e)}return o}return e.__decorate([h.property({readOnly:!0})],A.prototype,"allSublayers",void 0),e.__decorate([h.property({json:{type:Object,write:!0}})],A.prototype,"customParameters",void 0),e.__decorate([h.property({json:{type:Object,write:!0}})],A.prototype,"customLayerParameters",void 0),e.__decorate([h.property({type:String,json:{write:!0}})],A.prototype,"copyright",void 0),e.__decorate([h.property()],A.prototype,"description",void 0),e.__decorate([h.property({readOnly:!0})],A.prototype,"dimensions",void 0),e.__decorate([h.property({json:{type:[[Number]],read:{source:"extent"},write:{target:"extent"},origins:{"web-document":{write:{ignoreOrigin:!0}},"portal-item":{write:{ignoreOrigin:!0}}}}})],A.prototype,"fullExtent",void 0),e.__decorate([g.reader(["web-document","portal-item"],"fullExtent",["extent"])],A.prototype,"readFullExtentFromItemOrMap",null),e.__decorate([b.writer(["web-document","portal-item"],"fullExtent",{extent:{type:[[Number]]}})],A.prototype,"writeFullExtent",null),e.__decorate([h.property({type:[x]})],A.prototype,"fullExtents",void 0),e.__decorate([h.property({type:String,json:{write:{ignoreOrigin:!0}}})],A.prototype,"featureInfoFormat",null),e.__decorate([h.property({type:[String],readOnly:!0})],A.prototype,"featureInfoFormats",void 0),e.__decorate([h.property({type:String,json:{write:{ignoreOrigin:!0}}})],A.prototype,"featureInfoUrl",void 0),e.__decorate([h.property()],A.prototype,"fetchFeatureInfoFunction",void 0),e.__decorate([h.property({type:String,json:{origins:{"web-document":{default:"image/png",type:$.jsonValues,read:{reader:$.read,source:"format"},write:{writer:$.write,target:"format"}}}}})],A.prototype,"imageFormat",void 0),e.__decorate([g.reader("imageFormat",["supportedImageFormatTypes"])],A.prototype,"readImageFormat",null),e.__decorate([h.property({type:Number,json:{read:{source:"maxHeight"},write:{target:"maxHeight"}}})],A.prototype,"imageMaxHeight",void 0),e.__decorate([h.property({type:Number,json:{read:{source:"maxWidth"},write:{target:"maxWidth"}}})],A.prototype,"imageMaxWidth",void 0),e.__decorate([h.property()],A.prototype,"imageTransparency",void 0),e.__decorate([h.property(T.legendEnabled)],A.prototype,"legendEnabled",void 0),e.__decorate([h.property({type:["show","hide","hide-children"]})],A.prototype,"listMode",void 0),e.__decorate([h.property({type:String,json:{write:{ignoreOrigin:!0}}})],A.prototype,"mapUrl",void 0),e.__decorate([h.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],A.prototype,"isReference",void 0),e.__decorate([h.property({type:["WMS"]})],A.prototype,"operationalLayerType",void 0),e.__decorate([h.property()],A.prototype,"resourceInfo",void 0),e.__decorate([h.property({type:v,json:{origins:{service:{read:{source:"extent.spatialReference"}}},write:!1}})],A.prototype,"spatialReference",void 0),e.__decorate([g.reader(["web-document","portal-item"],"spatialReference",["spatialReferences"])],A.prototype,"readSpatialReferenceFromItemOrDocument",null),e.__decorate([h.property({type:[f.Integer],json:{read:!1,origins:{service:{read:!0},"web-document":{read:!1,write:{ignoreOrigin:!0}},"portal-item":{read:!1,write:{ignoreOrigin:!0}}}}})],A.prototype,"spatialReferences",void 0),e.__decorate([b.writer(["web-document","portal-item"],"spatialReferences")],A.prototype,"writeSpatialReferences",null),e.__decorate([h.property({type:s.ofType(q),json:{write:{target:"layers",overridePolicy(e,r,t){if(function(e,r){return e.some((e=>{for(const t in e)if(w.willPropertyWrite(e,t,null,r))return!0;return!1}))}(this.allSublayers,t))return{ignoreOrigin:!0}}}}})],A.prototype,"sublayers",void 0),e.__decorate([g.reader(["web-document","portal-item"],"sublayers",["layers","visibleLayers"])],A.prototype,"readSublayersFromItemOrMap",null),e.__decorate([g.reader("service","sublayers",["layers"])],A.prototype,"readSublayers",null),e.__decorate([b.writer("sublayers",{layers:{type:[q]},visibleLayers:{type:[String]}})],A.prototype,"writeSublayers",null),e.__decorate([h.property({json:{read:!1},readOnly:!0,value:"wms"})],A.prototype,"type",void 0),e.__decorate([h.property(T.url)],A.prototype,"url",null),e.__decorate([h.property({type:String,json:{write:{ignoreOrigin:!0}}})],A.prototype,"version",void 0),A=e.__decorate([_.subclass("esri.layers.WMSLayer")],A),A}));