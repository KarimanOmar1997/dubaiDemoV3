// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../request","../../core/Accessor","../../core/ByteSizeUnit","../../core/Error","../../core/handleUtils","../../core/has","../../core/LRUCache","../../core/PooledArray","../../core/promiseUtils","../../core/reactiveUtils","../../core/scheduling","../../core/urlUtils","../../core/accessorSupport/decorators/property","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","./TileKey","./Tilemap"],(function(e,t,i,r,a,l,s,o,n,c,h,p,f,u,m,y,d,v,_,b){"use strict";var T;function g(e,t,i){return new l("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})}e.TilemapCache=class extends r{static{T=this}constructor(e){super(e),this._pendingTilemapRequests={},this.request=i,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new n.LRUCache(2*a.ByteSizeUnit.MEGABYTES),this.addHandles(p.watch((()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]}),(()=>this._initializeTilemapDefinition()),p.initial))}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(e,t,i){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";const r=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return r?r.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,r){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(g(e,t,i)):this._fetchTilemap(e,t,i,r).catch((e=>e)).then((r=>{if(r instanceof b.Tilemap){const a=r.getAvailability(t,i);if("unavailable"===a)throw g(e,t,i);return a}if(h.isAbortError(r))throw r;return"unknown"}))}fetchAvailabilityUpsample(e,t,i,r,a){r.level=e,r.row=t,r.col=i;const l=this.layer.tileInfo;l.updateTileInfo(r);const s=this.fetchAvailability(e,t,i,a).catch((e=>{if(h.isAbortError(e))throw e;if(l.upsampleTile(r))return this.fetchAvailabilityUpsample(r.level,r.row,r.col,r,a);throw e}));return this._fetchAvailabilityUpsamplePrefetch(r.id,e,t,i,a,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,r,a,l){if(!this._prefetchingEnabled||null==e)return;const o=`prefetch-${e}`;if(this.hasHandles(o))return;const n=new AbortController;l.then((()=>n.abort()),(()=>n.abort()));let c=!1;const p=s.makeHandle((()=>{c||(c=!0,n.abort())}));if(this.addHandles(p,o),await f.waitTicks(10,n.signal).catch((()=>{})),c||(c=!0,this.removeHandles(o)),h.isAborted(n))return;const u=new _.TileKey(e,t,i,r),m={...a,signal:n.signal},y=this.layer.tileInfo;for(let e=0;T._prefetches.length<T._maxPrefetch&&y.upsampleTile(u);++e){const e=this.fetchAvailability(u.level,u.row,u.col,m);T._prefetches.push(e);const t=()=>{T._prefetches.removeUnordered(e)};e.then(t,t)}}static{this._maxPrefetch=4}static{this._prefetches=new c({initialSize:T._maxPrefetch})}_fetchTilemap(e,t,i,r){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new l("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const a=this._tmpTilemapDefinition,s=this._tilemapFromCache(e,t,i,a);if(s)return Promise.resolve(s);const o=r?.signal;return r={...r,signal:null},new Promise(((e,t)=>{h.onAbort(o,(()=>t(h.createAbortError())));const i=b.tilemapDefinitionId(a);let l=this._pendingTilemapRequests[i];if(!l){l=b.Tilemap.fromDefinition(a,r).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>{delete this._pendingTilemapRequests[i]};this._pendingTilemapRequests[i]=l,l.then(e,e)}l.then(e,t)}))}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:t,customParameters:i}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:u.objectToQuery({...e.query,...i,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,r){r.level=e,r.row=t-t%this.size,r.col=i-i%this.size;const a=b.tilemapDefinitionId(r);return this._tilemapCache.get(a)}get test(){}},t.__decorate([m.property({constructOnly:!0})],e.TilemapCache.prototype,"layer",void 0),t.__decorate([m.property({constructOnly:!0})],e.TilemapCache.prototype,"minLOD",void 0),t.__decorate([m.property({constructOnly:!0})],e.TilemapCache.prototype,"maxLOD",void 0),t.__decorate([m.property({constructOnly:!0})],e.TilemapCache.prototype,"request",void 0),t.__decorate([m.property({constructOnly:!0})],e.TilemapCache.prototype,"size",void 0),e.TilemapCache=T=t.__decorate([v.subclass("esri.layers.support.TilemapCache")],e.TilemapCache),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));