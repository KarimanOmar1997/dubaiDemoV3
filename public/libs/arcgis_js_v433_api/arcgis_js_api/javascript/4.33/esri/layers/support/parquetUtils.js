// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../core/Collection","../../core/Error","../../core/jsonMap","../../geometry/SpatialReference","./Field","./locationUtils","./ParquetEncodingLocation","./ParquetEncodingWkb","../../libs/parquet/parquet"],(function(e,t,n,o,r,i,a,l,u,c){"use strict";const s=new o.JSONMap({esriGeometryPoint:"point",esriGeometryPolygon:"polygon",esriGeometryPolyline:"polyline",esriGeometryMultipoint:"multipoint"});async function p(e,t={}){if(e.geometryType&&e.spatialReference&&e.encoding&&e.fields)return e;if(e.urls.length<1)throw new n("parquet:bad-input","At least one url must be specified",e);const o=e.metadata??await c.ParquetMetadata.create(e.urls.getItemAt(0),(()=>t.customParameters)),s=o.tryReadGeoMetadata(),p={...e,metadata:o};if(null==p.fields&&(p.fields=o.fields.map((e=>i.fromJSON(e)))),null==p.encoding&&(p.encoding=function(e,t){if(null!=t){const n=t.primary_column,o=t.columns[n],r=e.tryReadEsriMetadata();return new u({primaryFieldName:n,orientation:o.orientation??null,multiscale:r?.multiscale})}const n=a.inferLocationInfo(e.fields.map((e=>e.name)));return new l({latitudeFieldName:n.latitudeFieldName,longitudeFieldName:n.longitudeFieldName})}(o,s)),!p.encoding)return p;switch(p.encoding.type){case"location":null==p.spatialReference&&(p.spatialReference=r.WGS84),null==p.geometryType&&(p.geometryType="point");break;case"wkb":{if(!s)return p;const e=s.primary_column,t=s.columns[e];p.geometryType||(p.geometryType=function(e){const{geometry_types:t}=e,o=new Set;for(const e of t){const t=m(e);t&&o.add(t)}if(o.size>1)throw new n("unsupported","Parquet mixed geometry types are not support",{geometryTypes:o});return 1===o.size?o.values().next().value:void 0}(t)),p.spatialReference||(p.spatialReference=function(e){const t=e.crs?.id?.code;return t&&"number"==typeof t?new r({wkid:t}):void 0}(t))}}return p}function m(e){switch(e){case"Point":return"point";case"Polygon":case"MultiPolygon":return"polygon";case"LineString":return"polyline";case"MultiPoint":return"multipoint";default:return null}}e.completeParquetLayerInfo=p,e.getParquetLayerInfo=function(e,n={}){return p({urls:new t(e)},n)},e.parquetGeometryTypeKebabDict=s,e.toParquetJSONGeometryType=function(e){return s.toJSON(e)},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));