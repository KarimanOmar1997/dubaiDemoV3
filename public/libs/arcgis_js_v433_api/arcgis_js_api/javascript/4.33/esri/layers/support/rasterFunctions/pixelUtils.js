// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/mathUtils","../PixelBlock","../rasterFormats/pixelRangeUtils"],(function(t,e,n,l){"use strict";var i,o;function r(t){return null!=t&&t.pixels?.length>0}function s(t,e,l,i,o){const r=t.length,s=n.createEmptyBand(o,r);if(e)for(let n=0;n<r;n++)e[n]&&(s[n]=l[t[n]-i]);else for(let e=0;e<r;e++)s[e]=l[t[e]-i];return s}function a(t,e,n,l){const i=null!=n&&n.length>=2?new Set(n):null,o=1===n?.length?n[0]:null,r=!!e?.length;for(let n=0;n<t.length;n++)if(l[n]){const s=t[n];if(r){let t=!1;for(let n=0;n<e.length;n+=2)if(s>=e[n]&&s<=e[n+1]){t=!0;break}t||(l[n]=0)}l[n]&&(s===o||i?.has(s))&&(l[n]=0)}}function h(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][l]){n=!0;break}n||(e[l]=0)}}function f(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][l]){n=!0;break}n&&(e[l]=0)}}function c(t,e,n,l,i,o,r,s){return{xmin:i<=n*t?0:i<n*t+t?i-n*t:t,ymin:o<=l*e?0:o<l*e+e?o-l*e:e,xmax:i+r<=n*t?0:i+r<n*t+t?i+r-n*t:t,ymax:o+s<=l*e?0:o+s<l*e+e?o+s-l*e:e}}function u(t,e,n,l,i,o){const{width:r,height:s}=n.block,{x:a,y:h}=n.offset,{width:f,height:u}=n.mosaic,p=c(r,s,l,i,a,h,f,u);let x=0,d=0;if(o){const t=o.hasGCSSShiftTransform?360:o.halfWorldWidth??0,e=r*o.resolutionX,n=o.startX+l*e;n<t&&n+e>t?d=o.rightPadding:n>=t&&(x=o.leftMargin-o.rightPadding,d=0)}if(p.xmax-=d,"number"!=typeof e)for(let n=p.ymin;n<p.ymax;n++){const o=(i*s+n-h)*f+(l*r-a)+x,c=n*r;for(let n=p.xmin;n<p.xmax;n++)t[o+n]=e[c+n]}else for(let n=p.ymin;n<p.ymax;n++){const o=(i*s+n-h)*f+(l*r-a)+x;for(let n=p.xmin;n<p.xmax;n++)t[o+n]=e}}function p(t,e,l={}){const{clipOffset:i,clipSize:o,alignmentInfo:s,blockWidths:a}=l;if(a)return function(t,e,l){const i=t.find((t=>null!=t));if(null==i)return null;const o=t.some((t=>null==t||!!t.mask)),{width:s,height:a}=e,h=o?new Uint8Array(s*a):null,{blockWidths:f}=l,c=[],u=i.getPlaneCount(),p=n.getPixelArrayConstructor(i.pixelType);if(o)for(let e=0,n=0;e<t.length;n+=f[e],e++){const l=t[e];if(!r(l))continue;const i=l.mask;for(let t=0;t<a;t++)for(let o=0;o<f[e];o++)h[t*s+o+n]=null==i?255:i[t*l.width+o]}const x=t.some((t=>t?.bandMasks&&t.bandMasks.length>1)),d=x?[]:void 0,m=s*a;for(let e=0;e<u;e++){const n=new p(m),l=x?new Uint8Array(m):void 0;for(let i=0,o=0;i<t.length;o+=f[i],i++){const h=t[i];if(!r(h))continue;const c=h.pixels[e];if(null!=c){for(let t=0;t<a;t++)for(let e=0;e<f[i];e++)n[t*s+e+o]=c[t*h.width+e];if(l){const t=h.bandMasks?.[e]??h.mask;for(let e=0;e<a;e++)for(let n=0;n<f[i];n++)l[e*s+n+o]=t?t[e*h.width+n]:255}}}c.push(n),d&&l&&d.push(l)}const g=new n({width:s,height:a,mask:h,bandMasks:d,pixels:c,pixelType:i.pixelType});return g.updateStatistics(),g}(t,e,{blockWidths:a});const h=t.find((t=>r(t)));if(null==h)return null;const f=o?o.width:e.width,c=o?o.height:e.height,p=h.width,x=h.height,d=e.width/p,m=e.height/x,g={offset:i||{x:0,y:0},mosaic:o||e,block:{width:p,height:x}},y=h.pixelType,w=n.getPixelArrayConstructor(y),k=h.pixels.length,M=[];let A,U;for(let e=0;e<k;e++){U=new w(f*c);for(let n=0;n<m;n++)for(let l=0;l<d;l++){const i=t[n*d+l];r(i)&&(A=i.pixels[e],u(U,A,g,l,n,s))}M.push(U)}const T=t.some((t=>null==t||null!=t.mask&&t.mask.length>0)),b=t.some((t=>t?.bandMasks&&t.bandMasks.length>1)),B=T?new Uint8Array(f*c):void 0,v=b?[]:void 0;if(B){for(let e=0;e<m;e++)for(let n=0;n<d;n++){const l=t[e*d+n],i=null!=l?l.mask:null;u(B,null!=i?i:l?255:0,g,n,e,s)}if(v)for(let e=0;e<k;e++){const n=new Uint8Array(f*c);for(let l=0;l<m;l++)for(let i=0;i<d;i++){const o=t[l*d+i],r=o?.bandMasks?.[e]??o?.mask;u(n,null!=r?r:o?255:0,g,i,l,s)}v.push(n)}}const S=new n({width:f,height:c,pixels:M,pixelType:y,bandMasks:v,mask:B});return S.updateStatistics(),S}function x(t){if(!r(t))return null;const e=t.clone(),{width:n,height:l,pixels:i}=t,o=i[0],s=e.pixels[0],a=t.mask;for(let t=2;t<l-1;t++){const e=new Map;for(let l=t-2;l<t+2;l++)for(let t=0;t<4;t++){const i=l*n+t;g(e,o[i],a?a[i]:1)}s[t*n]=d(e),s[t*n+1]=s[t*n+2]=s[t*n];let l=3;for(;l<n-1;l++){let i=(t-2)*n+l+1;g(e,o[i],a?a[i]:1),i=(t-1)*n+l+1,g(e,o[i],a?a[i]:1),i=t*n+l+1,g(e,o[i],a?a[i]:1),i=(t+1)*n+l+1,g(e,o[i],a?a[i]:1),i=(t-2)*n+l-3,m(e,o[i],a?a[i]:1),i=(t-1)*n+l-3,m(e,o[i],a?a[i]:1),i=t*n+l-3,m(e,o[i],a?a[i]:1),i=(t+1)*n+l-3,m(e,o[i],a?a[i]:1),s[t*n+l]=d(e)}s[t*n+l+1]=s[t*n+l]}for(let t=0;t<n;t++)s[t]=s[n+t]=s[2*n+t],s[(l-1)*n+t]=s[(l-2)*n+t];return e.updateStatistics(),e}function d(t){if(0===t.size)return 0;let e=0,n=-1,l=0;const i=t.keys();let o=i.next();for(;!o.done;)l=t.get(o.value),l>e&&(n=o.value,e=l),o=i.next();return n}function m(t,e,n){if(0===n)return;const l=t.get(e);1===l?t.delete(e):t.set(e,l-1)}function g(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function y(t,e,l){let{x:i,y:o}=e;const{width:s,height:a}=l;if(0===i&&0===o&&a===t.height&&s===t.width)return t;const{width:h,height:f}=t,c=Math.max(0,o),u=Math.max(0,i),p=Math.min(i+s,h),x=Math.min(o+a,f);if(p<0||x<0||!r(t))return null;i=Math.max(0,-i),o=Math.max(0,-o);const{pixels:d}=t,m=s*a,g=d.length,y=[];for(let e=0;e<g;e++){const l=d[e],r=n.createEmptyBand(t.pixelType,m);for(let t=c;t<x;t++){const e=t*h;let n=(t+o-c)*s+i;for(let t=u;t<p;t++)r[n++]=l[e+t]}y.push(r)}const w=new Uint8Array(m),k=t.mask;for(let t=c;t<x;t++){const e=t*h;let n=(t+o-c)*s+i;for(let t=u;t<p;t++)w[n++]=k?k[e+t]:1}const M=new n({width:l.width,height:l.height,pixelType:t.pixelType,pixels:y,mask:w});return M.updateStatistics(),M}function w(t,e=!0){if(!r(t))return null;const{pixels:l,width:i,height:o,mask:s,pixelType:a}=t,h=[],f=Math.round(i/2),c=Math.round(o/2),u=o-1,p=i-1;for(let t=0;t<l.length;t++){const r=l[t],s=n.createEmptyBand(a,f*c);let x=0;for(let t=0;t<o;t+=2)for(let n=0;n<i;n+=2){const l=r[t*i+n];if(e){const e=n===p?l:r[t*i+n+1],o=t===u?l:r[t*i+n+i],a=n===p?o:t===u?e:r[t*i+n+i+1];s[x++]=(l+e+o+a)/4}else s[x++]=l}h.push(s)}let x=null;if(null!=s){x=new Uint8Array(f*c);let t=0;for(let n=0;n<o;n+=2)for(let l=0;l<i;l+=2){const o=s[n*i+l];if(e){const e=l===p?o:s[n*i+l+1],r=n===u?o:s[n*i+l+i],a=l===p?r:n===u?e:s[n*i+l+i+1];x[t++]=o*e*r*a?1:0}else x[t++]=o}}return new n({width:f,height:c,pixelType:a,pixels:h,mask:x})}function k(t,e,n,l,i=0){const{width:o,height:r}=t,{width:s,height:a}=e,h=l.cols,f=l.rows,c=Math.ceil(s/h-.1/h),u=Math.ceil(a/f-.1/f);let p,x,d,m,g,y,w;const k=c*h,M=k*u*f,A=new Float32Array(M),U=new Float32Array(M),T=new Uint32Array(M),b=new Uint32Array(M);let B,v,S=0;for(let t=0;t<u;t++)for(let e=0;e<c;e++){p=12*(t*c+e),x=n[p],d=n[p+1],m=n[p+2],g=n[p+3],y=n[p+4],w=n[p+5];for(let n=0;n<f;n++){S=(t*f+n)*k+e*h,v=(n+.5)/f;for(let t=0;t<n;t++)B=(t+.5)/h,A[S+t]=(x*B+d*v+m)*o+i,U[S+t]=(g*B+y*v+w)*r+i,T[S+t]=Math.floor(A[S+t]),b[S+t]=Math.floor(U[S+t])}p+=6,x=n[p],d=n[p+1],m=n[p+2],g=n[p+3],y=n[p+4],w=n[p+5];for(let n=0;n<f;n++){S=(t*f+n)*k+e*h,v=(n+.5)/f;for(let t=n;t<h;t++)B=(t+.5)/h,A[S+t]=(x*B+d*v+m)*o+i,U[S+t]=(g*B+y*v+w)*r+i,T[S+t]=Math.floor(A[S+t]),b[S+t]=Math.floor(U[S+t])}}return{offsets_x:A,offsets_y:U,offsets_xi:T,offsets_yi:b,gridWidth:k}}t.NoDataInterpretation=void 0,(i=t.NoDataInterpretation||(t.NoDataInterpretation={}))[i.matchAny=0]="matchAny",i[i.matchAll=1]="matchAll",t.MissingBandAction=void 0,(o=t.MissingBandAction||(t.MissingBandAction={}))[o.bestMatch=0]="bestMatch",o[o.fail=1]="fail",t.approximateTransform=function(t,e,l,i,o="nearest"){if(!r(t))return null;"majority"===o&&(t=x(t));const{pixels:s,mask:a,bandMasks:h,pixelType:f}=t,c=t.width,u=t.height,p=n.getPixelArrayConstructor(f),d=s.length,{width:m,height:g}=e;let y=!1;for(let t=0;t<l.length;t+=3)-1===l[t]&&-1===l[t+1]&&-1===l[t+2]&&(y=!0);const{offsets_x:w,offsets_y:M,offsets_xi:A,offsets_yi:U,gridWidth:T}=k({width:c,height:u},e,l,i,"majority"===o?.5:0);let b;const B=(t,e,n,l)=>{const i=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let o=0;o<g;o++){b=o*T;for(let r=0;r<m;r++){if(w[b]<0||M[b]<0)t[o*m+r]=0;else if(l)t[o*m+r]=e[A[b]+U[b]*c];else{const l=Math.floor(w[b]),s=Math.floor(M[b]),a=Math.ceil(w[b]),h=Math.ceil(M[b]),f=w[b]-l,u=M[b]-s;if(!n||n[l+s*c]&&n[a+s*c]&&n[l+h*c]&&n[a+h*c]){const n=(1-f)*e[l+s*c]+f*e[a+s*c],p=(1-f)*e[l+h*c]+f*e[a+h*c];t[o*m+r]=(1-u)*n+u*p+i}else t[o*m+r]=e[A[b]+U[b]*c]}b++}}},v=[];let S;const C=h?.length===d,P=[];for(let t=0;t<d;t++){if(C){const e=new Uint8Array(m*g);B(e,h[t],h[t],!0),P.push(e)}S=new p(m*g),B(S,s[t],C?h[t]:a,"nearest"===o||"majority"===o),v.push(S)}const R=new n({width:m,height:g,pixelType:f,pixels:v,bandMasks:C?P:void 0});if(null!=a)R.mask=new Uint8Array(m*g),B(R.mask,a,a,!0);else if(y){R.mask=new Uint8Array(m*g);for(let t=0;t<m*g;t++)R.mask[t]=w[t]<0||M[t]<0?0:1}return R.updateStatistics(),R},t.clip=y,t.clipTile=function(t){const{pixelBlock:e,tileSize:n,level:l,row:i,col:o,useBilinear:s}=t;if(!r(e))return null;const{width:a,height:h}=n,f=2**l,c=f*a,u=f*h;let p=y(e,{y:i*u,x:o*c},{width:c,height:u});if(!p)return null;for(let t=l;t>0;t--)p=w(p,s);return p},t.colorize=function(t,e){if(!r(t))return t;if(!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),l=n.pixels;let i=n.mask;const o=n.width*n.height;if(1!==l.length)return t;const{indexedColormap:s,indexed2DColormap:a,offset:h,alphaSpecified:f}=e,c=l[0],u=new Uint8Array(c.length),p=new Uint8Array(c.length),x=new Uint8Array(c.length);let d,m=0;if(s){const t=s.length-1;if(null!=i)for(let e=0;e<o;e++)i[e]&&(m=4*(c[e]-h),m<h||m>t?i[e]=0:(u[e]=s[m],p[e]=s[m+1],x[e]=s[m+2],i[e]=s[m+3]));else{i=new Uint8Array(o);for(let e=0;e<o;e++)m=4*(c[e]-h),m<h||m>t?i[e]=0:(u[e]=s[m],p[e]=s[m+1],x[e]=s[m+2],i[e]=s[m+3]);n.mask=i}}else if(a)if(null!=i)for(let t=0;t<o;t++)i[t]&&(d=a[c[t]],u[t]=d[0],p[t]=d[1],x[t]=d[2],i[t]=d[3]);else{i=new Uint8Array(o);for(let t=0;t<o;t++)d=a[c[t]],u[t]=d[0],p[t]=d[1],x[t]=d[2],i[t]=d[3];n.mask=i}return n.pixels=[u,p,x],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=f,n},t.compositeBands=function(t){if(!t?.length||t.some((t=>!r(t))))return null;if(1===t.length)return t[0]?.clone()??null;const e=t,{width:l,height:i,pixelType:o}=e[0];if(e.some((t=>t.width!==l||t.height!==i)))return null;const s=e.map((({mask:t})=>t)).filter((t=>null!=t));let a=null;s.length&&(a=new Uint8Array(l*i),a.set(s[0]),s.length>1&&f(s.slice(1),a));const h=[];e.forEach((({pixels:t})=>h.push(...t)));const c=e.map((({statistics:t})=>t)).filter((t=>t?.length)),u=[];return c.forEach((t=>u.push(...t))),new n({pixelType:o,width:l,height:i,mask:a,pixels:h,statistics:u.length?u:null})},t.createColormapLUT=function(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0])),l=n[0][0]<0?n[0][0]:0,i=Math.max(256,n[n.length-1][0]-l+1),o=new Uint8Array(4*i),r=[],s=5===n[0].length;if(i>65536)return n.forEach((t=>{r[t[0]-l]=s?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:l,alphaSpecified:s};if(t.fillUnspecified){let t=n[0];for(let e=t[0]-l,r=0;e<i;e++)o[4*e]=t[1],o[4*e+1]=t[2],o[4*e+2]=t[3],o[4*e+3]=s?t[4]:255,e===t[0]-l&&(t=r===n.length-1?t:n[++r])}else for(let t=0;t<n.length;t++){const e=n[t],i=4*(e[0]-l);o[i]=e[1],o[i+1]=e[2],o[i+2]=e[3],o[i+3]=s?e[4]:255}return{indexedColormap:o,offset:l,alphaSpecified:s}},t.createMaskLUT=function(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const l=t.includes("16")?65536:256,i=t.includes("s")?-l/2:0,o=new Uint8Array(l);if(e)for(let t=0;t<e.length;t++){const n=Math.ceil(e[2*t]-i),l=Math.floor(e[2*t+1]-i);for(let t=n;t<=l;t++)o[t]=255}else o.fill(255);if(n)for(let t=0;t<n.length;t++)o[n[t]-i]=0;return{lut:o,offset:i}},t.createRangeMaps=function(t,n,l=!1){const i=1e-5,o=new Float32Array(27),r=n.length;for(let s=0;s<9;s++)o[3*s]=t[2*s]??e.numberMaxFloat32-1,o[3*s+1]=t[2*s+1]??e.numberMaxFloat32,o[3*s+2]=n[s]??0,s<r&&(s>0&&(o[3*s]-=i),t[2*s+1]!==t[2*s]&&(s<r-1||!l)&&(o[3*s+1]-=i));return o},t.createRemapLUT=function(t){const{srcPixelType:e,inputRanges:i,outputValues:o,allowUnmatched:r,noDataRanges:s,isLastInputRangeInclusive:a,outputPixelType:h}=t;if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const f=e.includes("16")?65536:256,c=e.includes("s")?-f/2:0,u=n.createEmptyBand(h,f),p=new Uint8Array(f);r&&p.fill(255);const[x,d]=l.getPixelValueRange(h);if(i?.length&&o?.length){const t=1e-6,e=i.map((e=>e-t));e[0]=i[0],a&&(e[e.length-1]=i[i.length-1]);for(let t=0;t<e.length;t++){const n=o[t]>d?d:o[t]<x?x:o[t],l=Math.ceil(e[2*t]-c),r=i[2*t+1]===i[2*t]?l:Math.floor(e[2*t+1]-c);for(let t=l;t<=r;t++)u[t]=n,p[t]=255}}if(s?.length)for(let t=0;t<s.length;t++){const e=Math.ceil(s[2*t]-c),n=Math.floor(s[2*t+1]-c);for(let t=e;t<=n;t++)p[t]=0}return{lut:u,offset:c,mask:p}},t.extractBands=function(t,e){return e?.length&&r(t)?t.extractBands(e):t},t.getClipBounds=c,t.getLocalArithmeticNorthRotations=function(t,e){const{coefficients:n,spacing:l}=e,{offsets_x:i,offsets_y:o,gridWidth:r}=k(t,t,n,{rows:l[0],cols:l[1]}),{width:s,height:a}=t,h=new Float32Array(s*a),f=180/Math.PI;for(let t=0;t<a;t++)for(let e=0;e<s;e++){const n=t*r+e,l=0===t?n:n-r,c=t===a-1?n:n+r,u=i[l]-i[c],p=o[c]-o[l];if(isNaN(u)||isNaN(p))h[t*s+e]=90;else{let n=Math.atan2(p,u)*f;n=(360+n)%360,h[t*s+e]=n}}return h},t.interpolateOffsets=k,t.isValidPixelBlock=r,t.lookupBandValues=s,t.lookupPixels=function(t,e){if(!r(t))return null;const{pixels:l,mask:i}=t,o=l.length;let a=e.lut;const{offset:h}=e;a&&1===a[0].length&&(a=l.map((()=>a)));const f=[],c=e.outputPixelType||"u8";for(let t=0;t<o;t++){const e=s(l[t],i,a[t],h||0,c);f.push(e)}const u=new n({width:t.width,height:t.height,pixels:f,mask:i,pixelType:c});return u.updateStatistics(),u},t.mask=function(t,e){if(!r(t))return null;const{width:l,height:i,pixels:o}=t,c=l*i,u=new Uint8Array(c);t.mask?u.set(t.mask):u.fill(255);const p=o.length,{includedRanges:x,noDataValues:d,outputPixelType:m,matchAll:g,lookups:y}=e;if(y){const t=[];for(let e=0;e<p;e++){const n=y[e],l=s(o[e],u,n.lut,n.offset||0,"u8");t.push(l)}1===t.length?u.set(t[0]):g?h(t,u):f(t,u)}else if(g){const t=[];for(let e=0;e<p;e++){const n=new Uint8Array(c);n.set(u),a(o[e],x?.slice(2*e,2*e+2),d?.[e],n),t.push(n)}1===t.length?u.set(t[0]):h(t,u)}else for(let t=0;t<p;t++)a(o[t],x?.slice(2*t,2*t+2),d?.[t],u);return new n({width:l,height:i,pixelType:m,pixels:o,mask:u})},t.maxMapSizeGpu=9,t.mosaic=p,t.mosaicPixelData=function(t,e){if(!t||0===t.length)return null;const n=t.find((t=>t.pixelBlock));if(null==n?.pixelBlock)return null;const l=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,i=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,o=.01*Math.min(l,i),r=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>o?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>o?t.extent.xmin-e.extent.xmin:0)),s=Math.min.apply(null,r.map((t=>t.extent.xmin))),a=Math.min.apply(null,r.map((t=>t.extent.ymin))),h=Math.max.apply(null,r.map((t=>t.extent.xmax))),f=Math.max.apply(null,r.map((t=>t.extent.ymax))),c={x:Math.round((e.xmin-s)/l),y:Math.round((f-e.ymax)/i)},u={width:Math.round((h-s)/l),height:Math.round((f-a)/i)},x={width:Math.round((e.xmax-e.xmin)/l),height:Math.round((e.ymax-e.ymin)/i)};return Math.round(u.width/n.pixelBlock.width)*Math.round(u.height/n.pixelBlock.height)!==r.length||c.x<0||c.y<0||u.width<x.width||u.height<x.height?null:{extent:e,pixelBlock:p(r.map((t=>t.pixelBlock)),u,{clipOffset:c,clipSize:x})}},t.remap=function(t,e){if(!r(t))return null;const{width:i,height:o}=t,{inputRanges:s,outputValues:a,outputPixelType:h,noDataRanges:f,allowUnmatched:c,replacementValue:u,isLastInputRangeInclusive:p}=e,x=t.pixels[0],d=n.createEmptyBand(h,x.length),m=t.mask,g=new Uint8Array(i*o);m?g.set(m):g.fill(255);const y=t.pixelType.startsWith("f")?1e-6:0,w=s.map((t=>t-y));w[0]=s[0],w[w.length-1]=s[s.length-1]+(p?1e-6:0);const k=s.length/2,[M,A]=l.getPixelValueRange(h);for(let t=0;t<o;t++)for(let e=0;e<i;e++){const n=t*i+e;if(g[n]){const t=x[n];let e=!1;for(let l=k-1;l>=0;l--)if(t===s[2*l]||t>w[2*l]&&t<w[2*l+1]){d[n]=a[l],e=!0;break}e||(c?d[n]=t>A?A:t<M?M:u??t:g[n]=0)}}const U=f?.length;if(U)for(let t=0;t<o;t++)for(let e=0;e<i;e++){const n=t*i+e;if(!m||m[n]){const t=x[n];for(let e=0;e<U;e+=2)if(t>=f[e]&&t<=f[e+1]){d[n]=0,g[n]=0;break}}}return new n({width:i,height:o,pixelType:h,pixels:[d],mask:g})},t.remapColor=function(t,e){if(!r(t))return null;const n=t.clone(),{pixels:l}=n,i=n.width*n.height,o=e.length,s=Math.floor(o/2),a=e[Math.floor(s)],h=l[0],f=new Uint8Array(i),c=new Uint8Array(i),u=new Uint8Array(i);let p=n.mask;const x=4===e[0].mappedColor.length;p||(p=new Uint8Array(i),p.fill(x?255:1),n.mask=p);for(let t=0;t<i;t++)if(p[t]){const n=h[t];let l=!1,i=s,r=a,x=0,d=o-1;for(;d-x>1;){if(n===r.value){l=!0;break}n>r.value?x=i:d=i,i=Math.floor((x+d)/2),r=e[Math.floor(i)]}l||(n===e[x].value?(r=e[x],l=!0):n===e[d].value?(r=e[d],l=!0):n<e[x].value?l=!1:n>e[x].value&&(n<e[d].value?(r=e[x],l=!0):d===o-1?l=!1:(r=e[d],l=!0))),l?(f[t]=r.mappedColor[0],c[t]=r.mappedColor[1],u[t]=r.mappedColor[2],p[t]=r.mappedColor[3]):f[t]=c[t]=u[t]=p[t]=0}return n.pixels=[f,c,u],n.mask=p,n.pixelType="u8",n.maskIsAlpha=x,n},t.resampleByMajority=x,t.setValidBoundary=function(t,e,n){if(!r(t))return null;const{width:l,height:i}=t,o=e.x,s=e.y,a=n.width+o,h=n.height+s;if(o<0||s<0||a>l||h>i)return t;if(0===o&&0===s&&a===l&&h===i)return t;t.mask||(t.mask=new Uint8Array(l*i));const f=t.mask;for(let t=0;t<i;t++){const e=t*l;for(let n=0;n<l;n++)f[e+n]=t<s||t>=h||n<o||n>=a?0:1}return t.updateStatistics(),t},t.split=function(t,e,n=0,l=!0){if(!r(t))return null;const{width:i,height:o}=e;let{width:s,height:a}=t;const h=new Map,f={x:0,y:0},c=1+n;let u=t;for(let t=0;t<c;t++){const n=Math.ceil(s/i),r=Math.ceil(a/o);for(let l=0;l<r;l++){f.y=l*o;for(let o=0;o<n;o++){f.x=o*i;const n=y(u,f,e);h.set(`${t}/${l}/${o}`,n)}}t<c-1&&(u=w(u,l)),s=Math.round(s/2),a=Math.round(a/2)}return h},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));