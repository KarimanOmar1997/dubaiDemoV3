// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../core/colorUtils","../../core/fontUtils","../../core/has","../../core/lang","../../core/Logger","../../core/screenUtils","../../core/string","./animationUtils","./CIMSymbolHelper","./constants","./defaultCIMValues","./enums","./fitVectorMarker","./OverrideHelper","./SDFHelper","./utils","./effects/CIMEffectHelper","../../views/2d/engine/webgl/definitions"],(function(e,t,r,i,a,o,s,l,n,m,c,p,u,d,h,y,f,g,v){"use strict";const O=()=>o.getLogger("esri.symbols.cim.cimAnalyzer");function M(e){const t=e.markerPlacement;return t&&t.angleToLine?u.Alignment.MAP:u.Alignment.SCREEN}function S(e){if(e&&0===e.indexOf("Level_")){const t=parseInt(e.slice(6),10);if(!isNaN(t))return t}return 0}function C(e){const t=e.symbolLayers;if(!t)return!1;const r=t.find((e=>e.effects?.find((e=>"CIMGeometricEffectDashes"===e.type&&null!=e.dashTemplate)))),i=t.find((e=>e.effects?.find((e=>"CIMGeometricEffectAddControlPoints"===e.type))));return!!r||!!i}function _(e){return a.clone(e).map((e=>({...e,propertyName:f.uncapitalize(e.propertyName)})))}function k(e){return n.shouldUseAnimatedPath(e)?{type:"animation-params",params:e}:null}e.CIMAnalyzer=class{constructor(e){this._cimLayers=[],this._poMap={},this._primitiveOverrides=[],this._hasTextStringTemplates=!1,e&&(this._resourceManager=e)}analyzeSymbolReference(e,r,i){if(this._cimLayers=i??[],!e)return this._cimLayers;if(this._reset(),this._hasTextStringTemplates=e.hasTextStringTemplates??!1,e.primitiveOverrides){this._primitiveOverrides=e.primitiveOverrides;for(const e of this._primitiveOverrides){const r=e.valueExpressionInfo;if(r)this._setPoMap(e.primitiveName,e.propertyName,r);else if(null!=e.value){let r=e.value;e.propertyName.includes("Color")&&(t.isRGB(r)&&(r=f.colorToArray(r)),r=f.normalizeAlpha(r)),this._setPoMap(e.primitiveName,e.propertyName,r)}}}return this._analyzeSymbol(e.symbol,r),this._cimLayers}_reset(){this._cimLayers=[],this._poMap={},this._primitiveOverrides=[]}_analyzeSymbol(e,t){switch(e?.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":this._analyzeMultiLayerSymbol(e,t)}}_analyzeMultiLayerSymbol(e,t){const r=e?.symbolLayers;if(!r)return;for(let e=0;e<r.length;e++){const t=r[e];"CIMVectorMarker"===t.type&&(r[e]=d.fitVectorMarker(t,this._resourceManager.geometryEngine))}const i=e.effects;let a=u.Alignment.SCREEN;const o=f.getSize(e)??0;if("CIMPointSymbol"===e.type&&"Map"===e.angleAlignment&&(a=u.Alignment.MAP),function(e,t){if(t?.some((e=>"CIMGeometricEffectRadial"===e.type))&&t?.some((e=>"CIMGeometricEffectTaperedPolygon"===e.type))&&2===e.length){const t=e.find((e=>"CIMSolidFill"===e.type)),r=e.find((e=>"CIMSolidStroke"===e.type)),i=r?.effects?.some((e=>"CIMGeometricEffectDashes"===e.type));if(null!=t&&null!=r&&!i)return!0}return!1}(r,i))return this._analyzeCompositeOutlineFill(r,i,o);let s={transform:[0,0,0,1],fromColor:[1,1,1,1],toColor:[1,1,1,1],colorMix:[0,0,0,0],toOpacity:[1,1,1,1],opacityMix:[0,0,0,0],shift:[1,1,1,1],hasAnimations:n.checkForAnimations(e),hasShiftAnimation:!1,hasMotionAnimations:!1};s=n.getAnimationParams(this._poMap,e,s);const l="CIMPolygonSymbol"===e.type;let m=r.length;for(;m--;){const n=r[m];if(!n||!1===n.enable)continue;let c;i?.length&&(c=[...i]);const p=n.effects;p?.length&&(i?c.push(...p):c=[...p]);let u=null;if(c){u=[];for(const e of c){const t=h.OverrideHelper.findEffectOverrides(e,this._primitiveOverrides);t&&u.push(t)}}const d=[];switch(h.OverrideHelper.findApplicableOverrides(n,this._primitiveOverrides,d),n.type){case"CIMSolidFill":this._analyzeSolidFill(n,u,s,f.hasStrokeLayer(r));break;case"CIMPictureFill":this._analyzePictureFill(n,u,s);break;case"CIMHatchFill":this._analyzeHatchFill(n,u);break;case"CIMGradientFill":this._analyzeGradientFill(n,u);break;case"CIMSolidStroke":this._analyzeSolidStroke(n,u,l,o,s);break;case"CIMPictureStroke":this._analyzePictureStroke(n,u,l,o,s);break;case"CIMGradientStroke":this._analyzeGradientStroke(n,u,l,o);break;case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":{"CIMLineSymbol"!==e.type&&"CIMPolygonSymbol"!==e.type||(a=M(n));const r=[],i=n.primitiveName;i&&r.push(i);const m=l&&f.isCIMMarkerStrokePlacement(n.markerPlacement);this._analyzeMarker(n,u,null,r,a,o,t,[],s,!1,m);break}default:O().error("Cannot analyze CIM layer",n.type)}}}_analyzeSolidFill(e,t,r,i){const{primitiveName:a,type:o}=e,s=f.normalizeAlpha(e.color),l=n.getAnimationParams(this._poMap,e,r);if(i||!t?.some((e=>"CIMGeometricEffectTaperedPolygon"===e.effect.type)))this._cimLayers.push({type:"fill",spriteRasterizationParam:null,colorLocked:!!e.colorLocked,color:this._getValueOrOverrideExpression(o,a,"Color",s),height:0,angle:0,offsetX:0,offsetY:0,scaleX:1,effects:t,applyRandomOffset:!1,sampleAlphaOnly:!0,hasUnresolvedReplacementColor:!1,animationParams:k(l)});else{const r=this._getValueOrOverrideExpression(o,a,"Color",s);this._cimLayers.push({type:"outlineFill",colorLocked:!!e.colorLocked,color:r,effects:t,outlineColor:r,outlineColorLocked:!!e.colorLocked,...c.antialiasingOutlineFillSettings,outlineEffects:t})}}_analyzePictureFill(e,t,r){const{primitiveName:i,type:a}=e,o=f.getTintColor(e),s=f.getNumericValue(e.height,p.defaultCIMValues.CIMPictureFill.height);let l=f.getNumericValue(e.scaleX,1);if("width"in e&&"number"==typeof e.width){const t=e.width;let r=1;const i=this._resourceManager.getResource(e.url);null!=i&&(r=i.width/i.height),l/=r*(s/t)}const m={type:"sprite-rasterization-param",resource:e,overrides:this._getPrimitiveMaterialOverrides(i,a)},c=n.getAnimationParams(this._poMap,e,r);this._cimLayers.push({type:"fill",spriteRasterizationParam:m,colorLocked:!!e.colorLocked,effects:t,color:this._getValueOrOverrideExpression(a,i,"TintColor",o),height:this._getValueOrOverrideExpression(a,i,"Height",s),scaleX:this._getValueOrOverrideExpression(a,i,"ScaleX",l),angle:this._getValueOrOverrideExpression(a,i,"Rotation",f.getNumericValue(e.rotation)),offsetX:this._getValueOrOverrideExpression(a,i,"OffsetX",f.getNumericValue(e.offsetX)),offsetY:this._getValueOrOverrideExpression(a,i,"OffsetY",f.getNumericValue(e.offsetY)),applyRandomOffset:!1,sampleAlphaOnly:!1,hasUnresolvedReplacementColor:!1,animationParams:k(c)})}_analyzeHatchFill(e,t){const{primitiveName:r,type:i}=e,a=this._analyzeMaterialOverrides(r,["Rotation","OffsetX","OffsetY"]),o=f.normalizePrimitiveOverrideProps(a);let s=[255,255,255,1],l=!1;if(e.lineSymbol?.symbolLayers)for(const t of e.lineSymbol.symbolLayers){if("CIMSolidStroke"!==t.type)continue;const e=t.primitiveName??r;l||!e||t.colorLocked||null==this._poMap[e]?.Color&&null==this._poMap[e]?.StrokeColor||(s=f.normalizeAlpha(t.color),s=this._maybeGetValueOrOverrideExpression(e,"StrokeColor")??this._getValueOrOverrideExpression(i,e,"Color",s),l=!0);const a=this._maybeGetValueOrOverrideExpression(e,"StrokeWidth");if(a){let t=null,r=null;"number"==typeof a?t=a:r=a.valueExpressionInfo;let s=o.find((e=>"strokeWidth"===e.propertyName));s?s.propertyName="width":(s={type:"CIMPrimitiveOverride",primitiveName:e,propertyName:"width",valueExpressionInfo:r,value:t,defaultValue:f.getDefaultCIMValue(i,"width")},o.push(s))}}const n={type:"sprite-rasterization-param",resource:e,overrides:o};this._cimLayers.push({type:"fill",spriteRasterizationParam:n,colorLocked:!!e.colorLocked,effects:t,color:s,height:this._getValueOrOverrideExpression(i,r,"Separation",f.getNumericValue(e.separation,p.defaultCIMValues.CIMHatchFill.separation)),scaleX:1,angle:this._getValueOrOverrideExpression(i,r,"Rotation",f.getNumericValue(e.rotation)),offsetX:this._getValueOrOverrideExpression(i,r,"OffsetX",f.getNumericValue(e.offsetX)),offsetY:this._getValueOrOverrideExpression(i,r,"OffsetY",f.getNumericValue(e.offsetY)),applyRandomOffset:!1,sampleAlphaOnly:!0,hasUnresolvedReplacementColor:!l})}_analyzeGradientFill(e,t){const{angle:r,gradientMethod:i,gradientSize:a,gradientSizeUnits:o,gradientType:s,interval:l,primitiveName:n,type:m}=e,c=p.defaultCIMValues.CIMGradientFill,d=e.colorRamp;this._cimLayers.push({type:"gradientFill",spriteRasterizationParam:{type:"sprite-rasterization-param",resource:e,overrides:this._getPrimitiveMaterialOverrides(n,m)},colorLocked:!1,effects:t,color:[255,255,255,1],gradientMethod:this._getValueOrOverrideExpression(m,n,"GradientMethod",i??"Linear"),angle:this._getValueOrOverrideExpression(m,n,"Angle",f.getNumericValue(r,c.angle)),gradientType:this._getValueOrOverrideExpression(m,n,"GradientType",s??c.gradientType),interval:this._getValueOrOverrideExpression(m,n,"Interval",f.getNumericValue(l,"CIMFixedColorRamp"===d.type?d.colors.length:c.interval)),gradientSize:this._getValueOrOverrideExpression(m,n,"GradientSize",f.getNumericValue(a,c.gradientSize)),gradientSizeUnits:"Absolute"===o?u.SymbolUnits.Absolute:"Relative"===o?u.SymbolUnits.Relative:c.gradientSizeUnits})}_analyzeCompositeOutlineFill(e,t,r){const i=e.find((e=>"CIMSolidFill"===e.type)),a=e.find((e=>"CIMSolidStroke"===e.type));if(null==i||null==a)return;const o=[...t??[],...i.effects??[]].map((e=>h.OverrideHelper.findEffectOverrides(e,this._primitiveOverrides))).filter((e=>null!=e)),s=[...t??[],...a.effects??[]].map((e=>h.OverrideHelper.findEffectOverrides(e,this._primitiveOverrides))).filter((e=>null!=e)),l=f.getNumericValue(a.width,p.defaultCIMValues.CIMSolidStroke.width),n=f.getEnum(a.capStyle,p.defaultCIMValues.CIMSolidStroke.capstyle),m=f.getEnum(a.joinStyle,p.defaultCIMValues.CIMSolidStroke.joinstyle),c=a.miterLimit;this._cimLayers.push({type:"outlineFill",colorLocked:!!i.colorLocked,color:this._getValueOrOverrideExpression(i.type,i.primitiveName,"Color",f.normalizeAlpha(i.color)),effects:o,outlineColorLocked:!!a.colorLocked,outlineColor:this._getValueOrOverrideExpression(a.type,a.primitiveName,"Color",f.normalizeAlpha(a.color)),outlineWidth:this._getValueOrOverrideExpression(a.type,a.primitiveName,"Width",l),cap:this._getValueOrOverrideExpression(a.type,a.primitiveName,"CapStyle",n),join:this._getValueOrOverrideExpression(a.type,a.primitiveName,"JoinStyle",m),miterLimit:c&&this._getValueOrOverrideExpression(a.type,a.primitiveName,"MiterLimit",c),referenceWidth:r,outlineEffects:s})}_analyzeSolidStroke(e,t,r,i,a){const{primitiveName:o,type:s}=e,l=f.normalizeAlpha(e.color),m=f.getNumericValue(e.width,p.defaultCIMValues.CIMSolidStroke.width),c=f.getEnum(e.capStyle,p.defaultCIMValues.CIMSolidStroke.capstyle),u=f.getEnum(e.joinStyle,p.defaultCIMValues.CIMSolidStroke.joinstyle),d=e.miterLimit;let h,y,g,v,O=[];if(this._analyzePrimitiveOverrides(o,t,null,null)&&(O=this._getPrimitiveMaterialOverrides(o,s)),t&&Array.isArray(t)&&t.length>0){const e=t[t.length-1].effect;e&&"CIMGeometricEffectDashes"===e.type&&"NoConstraint"===e.lineDashEnding&&(h=e.dashTemplate,y=e.scaleDash,g=e.offsetAlongLine,v=e.primitiveName,(t=[...t]).pop())}null!=v&&O.push(...this._getPrimitiveMaterialOverrides(v,s).filter((e=>"dashTemplate"===e.propertyName)));const M=void 0!==h?{type:"sprite-rasterization-param",resource:{type:"dash",dashTemplate:h,primitiveName:v},overrides:O}:null,C=n.getAnimationParams(this._poMap,e,a);this._cimLayers.push({type:"line",spriteRasterizationParam:M,isOutline:r,colorLocked:!!e.colorLocked,effects:t,color:this._getValueOrOverrideExpression(s,o,"Color",l),width:this._getValueOrOverrideExpression(s,o,"Width",m),cap:this._getValueOrOverrideExpression(s,o,"CapStyle",c),join:this._getValueOrOverrideExpression(s,o,"JoinStyle",u),miterLimit:d&&this._getValueOrOverrideExpression(s,o,"MiterLimit",d),referenceWidth:i,zOrder:S(e.name),dashTemplate:this._maybeGetValueOrOverrideExpression(v,"DashTemplate")??h,offsetAlongLine:this._getValueOrOverrideExpression(s,v,"OffsetAlongLine",g??0),scaleDash:y,sampleAlphaOnly:!0,animationParams:k(C)})}_analyzePictureStroke(e,t,r,i,a){const{primitiveName:o,type:s}=e,l=f.getTintColor(e),m=f.getNumericValue(e.width,p.defaultCIMValues.CIMPictureStroke.width),c=f.getEnum(e.capStyle,p.defaultCIMValues.CIMPictureStroke.capstyle),u=f.getEnum(e.joinStyle,p.defaultCIMValues.CIMPictureStroke.joinstyle),d=e.miterLimit,h={type:"sprite-rasterization-param",resource:e,overrides:this._getPrimitiveMaterialOverrides(o,s)},y=n.getAnimationParams(this._poMap,e,a);this._cimLayers.push({type:"line",spriteRasterizationParam:h,isOutline:r,colorLocked:!!e.colorLocked,effects:t,color:this._getValueOrOverrideExpression(s,o,"TintColor",l),width:this._getValueOrOverrideExpression(s,o,"Width",m),cap:this._getValueOrOverrideExpression(s,o,"CapStyle",c),join:this._getValueOrOverrideExpression(s,o,"JoinStyle",u),miterLimit:d&&this._getValueOrOverrideExpression(s,o,"MiterLimit",d),referenceWidth:i,zOrder:S(e.name),dashTemplate:null,scaleDash:!1,sampleAlphaOnly:!1,animationParams:k(y)})}_analyzeGradientStroke(e,t,r,i){const{gradientMethod:a,gradientSize:o,gradientSizeUnits:s,gradientType:l,interval:n,primitiveName:m,type:c}=e,d=p.defaultCIMValues.CIMGradientStroke,h=f.getNumericValue(e.width,d.width),y=f.getEnum(e.capStyle,d.capstyle),g=f.getEnum(e.joinStyle,d.joinstyle),v=e.miterLimit,O=e.colorRamp;this._cimLayers.push({type:"gradientStroke",spriteRasterizationParam:{type:"sprite-rasterization-param",resource:e,overrides:this._getPrimitiveMaterialOverrides(m,c)},colorLocked:!!e.colorLocked,effects:t,color:[255,255,255,1],width:this._getValueOrOverrideExpression(c,m,"Width",h),cap:this._getValueOrOverrideExpression(c,m,"CapStyle",y),join:this._getValueOrOverrideExpression(c,m,"JoinStyle",g),miterLimit:v&&this._getValueOrOverrideExpression(c,m,"MiterLimit",v),referenceWidth:i,isOutline:r,gradientMethod:this._getValueOrOverrideExpression(c,m,"GradientMethod",a??d.gradientMethod),gradientType:this._getValueOrOverrideExpression(c,m,"GradientType",l??d.gradientType),interval:this._getValueOrOverrideExpression(c,m,"Interval",f.getNumericValue(n,"CIMFixedColorRamp"===O.type?O.colors.length:d.interval)),gradientSize:this._getValueOrOverrideExpression(c,m,"GradientSize",f.getNumericValue(o,d.gradientSize)),gradientSizeUnits:"Absolute"===s?u.SymbolUnits.Absolute:"Relative"===s?u.SymbolUnits.Relative:d.gradientSizeUnits})}_analyzeMarker(e,t,r,i,a,o,s,l,m,c=!1,u=!1){c||=!!e.colorLocked;let d=m;if(d=n.handleAbsoluteAnchor(e,d),d=n.handleMarker(this._poMap,e,d),d=n.handleRelativeAnchor(e,d),d=n.getAnimationParams(this._poMap,e,d),this._analyzeMarkerInsidePolygon(e,t,c,d))return;const h=f.getNumericValue(e.size,p.defaultCIMValues.CIMVectorMarker.size),y=f.getNumericValue(e.rotation),g=f.getNumericValue(e.offsetX),v=f.getNumericValue(e.offsetY),{primitiveName:O,type:M}=e,S=this._getValueOrOverrideExpression(M,O,"Size",h),C=this._getValueOrOverrideExpression(M,O,"Rotation",y),_=this._getValueOrOverrideExpression(M,O,"OffsetX",g),k=this._getValueOrOverrideExpression(M,O,"OffsetY",v);switch(e.type){case"CIMPictureMarker":this._analyzePictureMarker(e,t,r,i,a,o,S,C,_,k,l,d,c,u);break;case"CIMVectorMarker":this._analyzeVectorMarker(e,t,r,i,a,o,S,C,_,k,l,d,s,c,u)}}_analyzeMarkerInsidePolygon(e,t,r,i){const{markerPlacement:a,type:o}=e;if(!a||"CIMMarkerPlacementInsidePolygon"!==a.type||i.hasMotionAnimations)return!1;if("CIMVectorMarker"===o||"CIMPictureMarker"===o){const r=e.primitiveName;if(r&&this._analyzePrimitiveOverrides([r],t,null,null))return!1;const i=a.primitiveName;if(i&&this._analyzePrimitiveOverrides([i],t,null,null))return!1;if("CIMVectorMarker"===o){const{markerGraphics:t}=e;if(t)for(const e of t){const{symbol:t}=e;if("CIMPolygonSymbol"===t?.type&&t.symbolLayers){const{symbolLayers:e}=t;for(const t of e)if("CIMSolidStroke"===t.type)return!1}}}else{const{animatedSymbolProperties:t}=e;if(t)return!1}}const l=Math.abs(a.stepX),n=Math.abs(a.stepY);if(0===l||0===n)return!0;let m,c;if("Random"===a.gridType){const e=s.px2pt(v.randomInsidePolygonTextureSize),t=Math.max(Math.floor(e/l),1);m=n*Math.max(Math.floor(e/n),1),c=t*l/m}else a.shiftOddRows?(m=2*n,c=l/n*.5):(m=n,c=l/n);const p=f.getTintColor(e),u="CIMCharacterMarker"===e.type?null:{type:"sprite-rasterization-param",resource:e,overrides:[]};return this._cimLayers.push({type:"fill",spriteRasterizationParam:u,colorLocked:r,effects:t,color:p,height:m,scaleX:c,angle:a.gridAngle,offsetX:f.getNumericValue(a.offsetX),offsetY:f.getNumericValue(a.offsetY),applyRandomOffset:"Random"===a.gridType,sampleAlphaOnly:"CIMPictureMarker"!==e.type,hasUnresolvedReplacementColor:!0}),!0}_analyzePictureMarker(e,t,r,i,o,s,n,m,c,p,u,d,h,y){const{animatedSymbolProperties:g,primitiveName:v,type:O}=e;let M=f.getNumericValue(e.scaleX,1);const S=f.getTintColor(e);r||(r=this._createMarkerPlacementOverrideExpression(e.markerPlacement));const C=this._createGIFAnimatedSymbolPropertiesOverrideExpression(g),_=e.anchorPoint??{x:0,y:0};if("width"in e&&"number"==typeof e.width){const t=e.width;let r=1;const i=this._resourceManager.getResource(e.url);null!=i&&(r=i.width/i.height),M/=r*(f.getNumericValue(e.size)/t)}const P=[...i];let z;e.primitiveName&&P.push(e.primitiveName),g||C?z={type:"animated",url:e.url,urlHash:"H"+l.numericHash(e.url),playAnimation:e.animatedSymbolProperties?.playAnimation,reverseAnimation:e.animatedSymbolProperties?.reverseAnimation,randomizeStartTime:e.animatedSymbolProperties?.randomizeStartTime,randomizeStartSeed:e.animatedSymbolProperties?.randomizeStartSeed,startTimeOffset:e.animatedSymbolProperties?.startTimeOffset,duration:e.animatedSymbolProperties?.duration,repeatType:e.animatedSymbolProperties?.repeatType,repeatDelay:e.animatedSymbolProperties?.repeatDelay}:(z=a.clone(e),z.markerPlacement=null);const b={type:"sprite-rasterization-param",resource:z,overrides:this._getMaterialOverrides(P,O)};C&&b.overrides.push(...C.overrides);const V=n;this._cimLayers.push({type:"marker",spriteRasterizationParam:b,colorLocked:h,effects:t,scaleSymbolsProportionally:!1,alignment:o,size:n,scaleX:this._getValueOrOverrideExpression(O,v,"ScaleX",M),rotation:m,offsetX:c,offsetY:p,transform:{type:"cim-marker-transform-param",params:u},color:this._getValueOrOverrideExpression(O,v,"TintColor",S),anchorPoint:{x:_.x,y:_.y},isAbsoluteAnchorPoint:"Relative"!==e.anchorPointUnits,outlineColor:[0,0,0,0],outlineWidth:0,frameHeight:0,widthRatio:1,rotateClockwise:!!e.rotateClockwise,referenceSize:s,sizeRatio:1,isOutline:y,markerPlacement:r,animationParams:k(d),baseSize:V})}_analyzeVectorMarker(e,t,r,i,a,o,s,l,m,c,p,u,d,h,y){const f=e.markerGraphics;if(!f)return;const g=e.frame;let v=0;v=g?g.ymax-g.ymin:o;const O=!!e.scaleSymbolsProportionally;if(v){const t={offsetX:m,offsetY:c,rotation:l,size:s,frameHeight:v,rotateClockWise:!!e.rotateClockwise,absoluteAnchorPoint:!1,scaleSymbolsProportionally:O};p=[...p,t]}r||(r=this._createMarkerPlacementOverrideExpression(e.markerPlacement));for(const s of f)if(s){const l=s.symbol;if(!l)continue;const m=s.primitiveName;m&&i.push(m);let c,f=u;if(("CIMPointSymbol"===l.type||"CIMTextSymbol"===l.type)&&g){let t=0,r=0;const i=s.geometry;"x"in i&&"y"in i&&(t+=i.x-.5*(g.xmin+g.xmax),r+=i.y-.5*(g.ymin+g.ymax));const a=e.anchorPoint;let o=!1;a&&("Absolute"===e.anchorPointUnits?(t-=a.x,r-=a.y,o=!0):g&&(t-=(g.xmax-g.xmin)*a.x,r-=(g.ymax-g.ymin)*a.y));const l={offsetX:t,offsetY:r,rotation:0,size:0,frameHeight:0,rotateClockWise:!1,absoluteAnchorPoint:o,scaleSymbolsProportionally:O};c=[...p,l]}const M=s.geometry,[S,_]=n.getFrameTranslation(M,g);switch(0===S&&0===_||(f=n.translate(f,S,_)),"CIMPointSymbol"===l.type&&(f=n.getAnimationParams(this._poMap,l,f)),l.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":d||C(l)?(f={...f,transform:{type:"AnimatedTransform",relativeTranslation:!1,absoluteScale:!0,translation:n.getStaticParam([0,0]),rotation:n.getStaticParam(0),scale:n.getStaticParam(v),parent:u.transform}},this._analyzeMultiLayerGraphicNonSDF(e,t,r,s,i,a,o,c??p,f,v,h,y)):this._analyzeMultiLayerGraphic(e,t,r,s,i,a,o,c??p,f,v,h,y);break;case"CIMTextSymbol":this._analyzeTextGraphic(t,r,s,i,a,o,c??p,h)}m&&i.pop()}}_analyzeMultiLayerGraphic(e,t,r,i,a,o,s,l,m,c,p,u){const d=i.symbol.symbolLayers;d&&(!(e=>e&&2===e.length&&e[0].enable&&e[1].enable&&"CIMSolidStroke"===e[0].type&&"CIMSolidFill"===e[1].type&&null==e[0].path&&null==e[1].path&&!e[0].effects&&!e[1].effects&&!e[0].animations&&!e[1].animations)(d)||n.shouldUseAnimatedPath(m)?function(e){return e.some((e=>"CIMSolidFill"!==e.type&&"CIMSolidStroke"!==e.type&&("CIMVectorMarker"!==e.type&&"CIMPictureMarker"!==e.type||null!=e.markerPlacement)))}(d)?this._analyzeMultiLayerGraphicNonSDF(e,t,r,i,a,o,s,l,m,c,!!p,u):this._analyzeMarkerGraphicSymbolLayers(e,t,r,i,a,o,s,l,m,c,p,u):this._analyzeCompositeMarkerGraphic(e,t,r,i,d,o,s,l,c,p,u))}_analyzeMarkerGraphicSymbolLayers(e,t,r,i,a,o,s,l,m,c,u,d){const h=i.symbol,v=h.symbolLayers;if(!v)return;const M=this._resourceManager.geometryEngine,S=g.CIMEffectHelper.applyEffects(h.effects,i.geometry,M);if(!S)return;let C=v.length;for(;C--;){const h=v[C];if(!h||!1===h.enable)continue;const _=h.primitiveName;switch(_&&a.push(_),h.type){case"CIMSolidFill":case"CIMSolidStroke":{const a=g.CIMEffectHelper.applyEffects(h.effects,S,M),v=y.getExtent(a);if(!v)continue;const O="Relative"!==e.anchorPointUnits,C=f.getStrokeWidth(h)??0,{frameSizeRatio:P,anchorX:z,anchorY:b,widthRatio:V,sdfPaddingRatio:x}=y.getSDFMetrics(v,e.frame,e.size,e.anchorPoint,O,C,e.scaleSymbolsProportionally),I="CIMSolidFill"===h.type,E={type:"sdf",geom:a,sdfPaddingRatio:x,asFill:I},{path:L}=h,N=I?f.normalizeAlpha(f.getFillColor(h)):null==L?f.normalizeAlpha(f.getStrokeColor(h)):[0,0,0,0],A=I?[0,0,0,0]:f.normalizeAlpha(f.getStrokeColor(h));if(!I&&!C)break;const R=i.primitiveName;let T=null;I&&!h.colorLocked&&(T=this._maybeGetValueOrOverrideExpression(R,"FillColor"));let F=null;I||h.colorLocked||(F=this._maybeGetValueOrOverrideExpression(R,"StrokeColor"));const w=T??this._getValueOrOverrideExpression(h.type,_,"Color",N),G=F??this._getValueOrOverrideExpression(h.type,_,"Color",A),X=this._maybeGetValueOrOverrideExpression(R,"StrokeWidth")??this._getValueOrOverrideExpression(h.type,_,"Width",C),H=L?{type:"sprite-rasterization-param",resource:{type:"path",path:L,asFill:I},overrides:[]}:{type:"sprite-rasterization-param",resource:E,overrides:[]},D=n.getAnimationParams(this._poMap,h,m),W=f.getNumericValue(e.size,p.defaultCIMValues.CIMVectorMarker.size),U=this._getValueOrOverrideExpression(e.type,e.primitiveName,"Size",W);this._cimLayers.push({type:"marker",spriteRasterizationParam:H,colorLocked:!!h.colorLocked||!!u,effects:t,scaleSymbolsProportionally:!!e.scaleSymbolsProportionally,alignment:o,anchorPoint:{x:z,y:b},isAbsoluteAnchorPoint:O,size:c,rotation:0,offsetX:0,offsetY:0,scaleX:1,transform:{type:"cim-marker-transform-param",params:l},frameHeight:c,widthRatio:V,rotateClockwise:!1,referenceSize:s,sizeRatio:P,color:w,outlineColor:G,outlineWidth:X,isOutline:d,markerPlacement:r,animationParams:k(D),isStroke:"CIMSolidFill"!==h.type,baseSize:U,...y.getSDFDimensions(a,x)});break}case"CIMPictureMarker":case"CIMVectorMarker":if(h.markerPlacement){O().error("Error analyzing CIM, got unexpected marker placement");break}this._analyzeMarker(h,t,r,a,o,s,!1,l,m,u,d)}_&&a.pop()}}_analyzeTextGraphic(e,t,i,a,o,s,l,n){h.OverrideHelper.findApplicableOverrides(i,this._primitiveOverrides,[]);const m=i.geometry;if(!("x"in m)||!("y"in m))return;const c=i.symbol,u=f.fromCIMFontDecoration(c),d=f.fromCIMFontStyle(c.fontStyleName),y=r.getFontFamily(c.fontFamilyName);c.font={family:y,decoration:u,...d};const g=f.getNumericValue(c.height,p.defaultCIMValues.CIMTextSymbol.height),v=f.getNumericValue(c.angle),O=f.getNumericValue(c.offsetX),M=f.getNumericValue(c.offsetY),{haloSymbol:S}=c,C=f.getNumericValue(c.haloSize,0);let _=[0,0,0,0];if(S?.symbolLayers?.length){const e=S.symbolLayers;for(const t of e)if(t.color){_=this._getValueOrOverrideExpression(c?.haloSymbol?.type??"CIMPolygonSymbol",t.primitiveName,"Color",f.normalizeAlpha(t.color));break}}const k=i.primitiveName;let P=[0,0,0,1],z=[0,0,0,0],b=0,V=!1;if(c.symbol?.symbolLayers)for(const e of c.symbol.symbolLayers){const t=e.primitiveName;if("CIMSolidStroke"===e.type)z=this._getValueOrOverrideExpression("CIMSolidStroke",t,"Color",f.normalizeAlpha(e.color)),b=this._getValueOrOverrideExpression("CIMSolidStroke",t,"Width",f.getStrokeWidth(e)??0);else if("CIMSolidFill"===e.type){const r=f.normalizeAlpha(e.color);V=V??!!e.colorLocked,P=this._getValueOrOverrideExpression("CIMSolidFill",t??k,"Color",r)}}let x=null,I=null,E=null,L=null,N=null;k&&(x=this._maybeGetValueOrOverrideExpression(k,"TextSize"),I=this._maybeGetValueOrOverrideExpression(k,"TextAngle"),E=this._maybeGetValueOrOverrideExpression(k,"TextOffsetX"),L=this._maybeGetValueOrOverrideExpression(k,"TextOffsetY"),V||(N=this._maybeGetValueOrOverrideExpression(k,"FillColor")));const A=N??P;let R=null,T=null,F=0;if(c.callout&&"CIMBackgroundCallout"===c.callout.type){const e=c.callout;if(e.backgroundSymbol){const t=e.backgroundSymbol.symbolLayers;if(t)for(const e of t)"CIMSolidFill"===e.type?R=f.normalizeAlpha(e.color):"CIMSolidStroke"===e.type&&(T=f.normalizeAlpha(e.color),F=f.getNumericValue(e.width,p.defaultCIMValues.CIMSolidStroke.width))}}const w=this._getValueOrOverrideExpression(c.type,i.primitiveName,"TextString",i.textString??"");if(null==w)return;const{fontStyleName:G}=c,X=y+(G?"-"+G.toLowerCase():"-regular"),H=this._getMaterialOverrides(a,c.type);H.push(...this._getPrimitiveMaterialOverrides(i.primitiveName,c.type)),this._collectDictionaryTemplateOverrides(H,i);const D={type:"text-rasterization-param",resource:{type:"text",textString:i.textString??"",font:c.font,symbol:c,primitiveName:i.primitiveName},overrides:H};this._cimLayers.push({type:"text",lineWidth:c.lineWidth,textRasterizationParam:D,colorLocked:!!n||!!V,effects:e,alignment:o,anchorPoint:{x:0,y:0},isAbsoluteAnchorPoint:!1,fontName:X,decoration:u,haloSize:C,haloColor:_,weight:d.weight,style:d.style,size:x??g,angle:I??v,offsetX:E??O,offsetY:L??M,transform:{type:"cim-marker-transform-param",params:l},horizontalAlignment:f.fromCIMHorizontalAlignment(c.horizontalAlignment),verticalAlignment:f.fromCIMVerticalAlignment(c.verticalAlignment),text:w,color:A,outlineColor:z,outlineSize:b,backgroundColor:R,borderLineColor:T,borderLineWidth:F,referenceSize:s,sizeRatio:1,markerPlacement:t})}_collectDictionaryTemplateOverrides(e,t){if(t.textString&&this._hasTextStringTemplates){const r=f.getTextCasing(t.symbol);e.push({propertyName:"textString",defaultValue:"",valueExpressionInfo:{type:"dictionary-template",textCase:r,template:t.textString},primitiveName:t.primitiveName})}}_analyzeMultiLayerGraphicNonSDF(e,t,r,i,a,o,l,n,c,u,d,h){const y=function(e,t){return{type:e.type,enable:!0,name:e.name,colorLocked:e.colorLocked,primitiveName:e.primitiveName,anchorPoint:e.anchorPoint,anchorPointUnits:e.anchorPointUnits,offsetX:0,offsetY:0,rotateClockwise:e.rotateClockwise,rotation:0,size:e.size,billboardMode3D:e.billboardMode3D,depth3D:e.depth3D,frame:e.frame,markerGraphics:[t],scaleSymbolsProportionally:e.scaleSymbolsProportionally,respectFrame:e.respectFrame,clippingPath:e.clippingPath}}(e,i),g=e.primitiveName,O=this._analyzeMaterialOverrides(g,["Rotation","OffsetX","OffsetY"]),M=f.normalizePrimitiveOverrideProps(O),[S,C,_]=m.CIMSymbolHelper.getTextureAnchor(y,this._resourceManager,v.rasterizedVectorMarkerMinSize),P=this._getMaterialOverrides(a,e.type);P.push(...M);const z={type:"sprite-rasterization-param",resource:{...y,avoidSDFRasterization:!0},overrides:P},b=f.getNumericValue(e.size,p.defaultCIMValues.CIMVectorMarker.size),V=this._getValueOrOverrideExpression(e.type,g,"Size",b);this._cimLayers.push({type:"marker",spriteRasterizationParam:z,colorLocked:d,effects:t,scaleSymbolsProportionally:!!e.scaleSymbolsProportionally,alignment:o,anchorPoint:{x:S,y:C},isAbsoluteAnchorPoint:!1,size:u,rotation:0,offsetX:0,offsetY:0,transform:{type:"cim-marker-transform-param",params:n},color:[255,255,255,1],outlineColor:[0,0,0,0],outlineWidth:0,scaleX:1,frameHeight:u,widthRatio:1,rotateClockwise:!!e.rotateClockwise,referenceSize:l,sizeRatio:_/s.pt2px(e.size),isOutline:h,markerPlacement:r,animationParams:k(c),baseSize:V})}_createMarkerPlacementOverrideExpression(e){if(!e)return null;const t=[];return h.OverrideHelper.findApplicableOverrides(e,this._primitiveOverrides,t),{type:"cim-marker-placement-param",placement:e,overrides:_(t)}}_createGIFAnimatedSymbolPropertiesOverrideExpression(e){if(!e)return null;const t=[];return h.OverrideHelper.findApplicableOverrides(e,this._primitiveOverrides,t),{type:"cim-gif-animation-params",animation:e,overrides:_(t)}}_analyzeCompositeMarkerGraphic(e,t,r,i,a,o,s,l,n,m,c){const u=i.geometry,d=a[0],h=a[1],g=y.getExtent(u);if(!g)return;const v="Relative"!==e.anchorPointUnits,O=f.getNumericValue(d.width,p.defaultCIMValues.CIMSolidStroke.width),{frameSizeRatio:M,anchorX:S,anchorY:C,widthRatio:_,sdfPaddingRatio:k}=y.getSDFMetrics(g,e.frame,e.size,e.anchorPoint,v,O,e.scaleSymbolsProportionally),{path:P}=h,z=h.primitiveName,b=d.primitiveName,V=i.primitiveName;let x=null;h.colorLocked||m||(x=this._maybeGetValueOrOverrideExpression(V,"FillColor"));const I=x??this._getValueOrOverrideExpression(h.type,z,"Color",f.normalizeAlpha(h.color));let E=null;d.colorLocked||m||(E=this._maybeGetValueOrOverrideExpression(V,"StrokeColor"));const L=E??this._getValueOrOverrideExpression(d.type,b,"Color",f.normalizeAlpha(d.color)),N=this._maybeGetValueOrOverrideExpression(V,"StrokeWidth")??this._getValueOrOverrideExpression(d.type,b,"Width",O),A={type:"sprite-rasterization-param",resource:P?{type:"path",path:P,asFill:!0}:{type:"sdf",geom:u,sdfPaddingRatio:k,asFill:!0},overrides:[]};this._cimLayers.push({type:"marker",spriteRasterizationParam:A,colorLocked:m,effects:t,scaleSymbolsProportionally:!!e.scaleSymbolsProportionally,alignment:o,anchorPoint:{x:S,y:C},isAbsoluteAnchorPoint:v,size:n,rotation:0,offsetX:0,offsetY:0,scaleX:1,transform:{type:"cim-marker-transform-param",params:l},frameHeight:n,widthRatio:_,rotateClockwise:!1,referenceSize:s,sizeRatio:M,color:I,outlineColor:L,outlineWidth:N,isOutline:c,markerPlacement:r})}_setPoMap(e,t,r){let i;this._poMap[e]?i=this._poMap[e]:(i={},this._poMap[e]=i),i[t]=r}_maybeGetValueOrOverrideExpression(e,t,r){return this._getValueOrOverrideExpression("",e,t,r,!1)}_getValueOrOverrideExpression(e,t,r,i,a=!0){if(a&&!f.isValidCIMValue(i)&&(i=f.getDefaultCIMValue(e,r.toLowerCase())),null==t)return i;const o=this._poMap[t];if(null==o)return i;const s=o[r];return"string"==typeof s||"number"==typeof s||Array.isArray(s)?s:s?{valueExpressionInfo:s,defaultValue:i}:i}_analyzePrimitiveOverrides(e,t,r,i){if(null==e)return!1;"string"==typeof e&&(e=[e]);for(const t of this._primitiveOverrides)if(e.includes(t.primitiveName)&&t.valueExpressionInfo)return!0;if(null!=t)for(const e of t)if(e?.overrides.length>0)return!0;if(null!=r)for(const e of r)if(e?.overrides.length>0)return!0;if(null!=i)for(const e of i)if(e?.overrides.length>0)return!0;return!1}_getMaterialOverrides(e,t){if(!e)return[];const r=[];for(const i of e)r.push(...this._getPrimitiveMaterialOverrides(i,t));return r}_getPrimitiveMaterialOverrides(e,t){if(!e)return[];const r=f.normalizePrimitiveOverrideProps(this._primitiveOverrides.filter((t=>t.primitiveName===e)));return r.forEach((e=>e.defaultValue=f.getDefaultCIMValue(t,e.propertyName.toLowerCase()))),r}_analyzeMaterialOverrides(e,t){return this._primitiveOverrides.filter((r=>r.primitiveName!==e||!t.includes(r.propertyName)))}},e.analyzeCIMResource=function(e,t){if(!t||0===t.length)return e;const r=a.clone(e);return h.OverrideHelper.applyOverrides(r,t),r},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));