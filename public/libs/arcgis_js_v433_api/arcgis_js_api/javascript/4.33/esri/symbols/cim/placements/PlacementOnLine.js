// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../CIMCursor","../CurveHelper","../enums"],(function(e,t,n,i){"use strict";class s{static{this.instance=null}static local(){return null===s.instance&&(s.instance=new s),s.instance}execute(e,t,n,i,s){return new a(e,t,n)}}class a extends t.PathTransformationCursor{constructor(e,t,i){super(e),this._curveHelper=new n.CurveHelper,this._angleToLine=void 0===t.angleToLine||t.angleToLine,this._offset=void 0!==t.offset?t.offset*i:0,this._relativeTo=t.relativeTo,this._position=void 0!==t.startPointOffset?t.startPointOffset*i:0,this._epsilon=.001*i}processPath(e){const t=this._position;if(this._relativeTo===i.PlacementOnLineRelativeTo.SegmentMidpoint){if(this.iteratePath||(this.iteratePath=!0),e.nextPoint()){let[t,n]=[e.x,e.y],[i,s]=[0,0];const a=[0,0];for(;e.nextPoint();){i=e.x,s=e.y;const o=this._curveHelper.getLength(t,n,i,s);if(o<this._epsilon){t=i,n=s;continue}const r=.5+this._position/o,[l,c]=this._curveHelper.getAngleCS(a,t,n,i,s,r),h=this._curveHelper.getCoord2D(t,n,i,s,r);return this.internalPlacement.setTranslate(h[0]-this._offset*c,h[1]+this._offset*l),this._angleToLine&&this.internalPlacement.setRotateCS(l,c),this.internalPlacement}}return this.iteratePath=!1,null}const n=this._relativeTo===i.PlacementOnLineRelativeTo.LineEnd;return this.onLine(e,t,n)}onLine(e,t,n){let s,a=!1;switch(this._relativeTo){case i.PlacementOnLineRelativeTo.LineMiddle:default:e.seekPathStart(),s=e.pathLength()/2+t;break;case i.PlacementOnLineRelativeTo.LineBeginning:s=t;break;case i.PlacementOnLineRelativeTo.LineEnd:s=t,a=!0}n?e.seekPathEnd():e.seekPathStart();let o=0;if(n?e.prevPoint():e.nextPoint()){let[t,i]=[e.x,e.y],[r,l]=[0,0];const c=[0,0];for(;n?e.prevPoint():e.nextPoint();){r=e.x,l=e.y;const n=this._curveHelper.getLength(t,i,r,l);if(o+n>s){const e=(s-o)/n,[h,u]=this._curveHelper.getAngleCS(c,t,i,r,l,e),f=this._curveHelper.getCoord2D(t,i,r,l,e),P=a?-this._offset:this._offset;return this.internalPlacement.setTranslate(f[0]-P*u,f[1]+P*h),this._angleToLine&&(a?this.internalPlacement.setRotateCS(-h,-u):this.internalPlacement.setRotateCS(h,u)),this.internalPlacement}t=r,i=l,o+=n}}return null}}e.PlacementOnLine=s,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));