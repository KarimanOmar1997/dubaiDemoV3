// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../core/jsonMap","../../core/JSONSupport","../../core/maybe","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","./FeatureExpressionInfo","./unitConversionUtils"],(function(e,t,r,o,s,n,i,u,a,p,f,d,l,c){"use strict";var h;const x=r.strict()({onTheGround:"on-the-ground",relativeToGround:"relative-to-ground",relativeToScene:"relative-to-scene",absoluteHeight:"absolute-height"}),y=new r.JSONMap({foot:"feet",kilometer:"kilometers",meter:"meters",mile:"miles","us-foot":"us-feet",yard:"yards"});return e.default=class extends o{static{h=this}constructor(e){super(e),this.featureExpressionInfo=void 0,this.offset=null}readFeatureExpressionInfo(e,t){return null!=e?e.expression?e:void 0:t.featureExpression&&0===t.featureExpression.value?{expression:"0"}:void 0}writeFeatureExpressionInfo(e,t,r,o){t[r]=e.write({},o),"0"===e.expression&&(t.featureExpression={value:0})}get mode(){const{offset:e,featureExpressionInfo:t}=this;return this._isOverridden("mode")?this._get("mode"):null!=e||t?"relative-to-ground":"on-the-ground"}set mode(e){this._override("mode",e)}set unit(e){this._set("unit",e)}write(e,t){return this.offset||this.mode||this.featureExpressionInfo||this.unit?super.write(e,t):null}clone(){return new h({mode:this.mode,offset:this.offset,featureExpressionInfo:this.featureExpressionInfo?this.featureExpressionInfo.clone():void 0,unit:this.unit})}equals(e){return this.mode===e.mode&&this.offset===e.offset&&this.unit===e.unit&&s.equalsMaybe(this.featureExpressionInfo,e.featureExpressionInfo)}},t.__decorate([n.property({type:l,json:{write:!0}})],e.default.prototype,"featureExpressionInfo",void 0),t.__decorate([p.reader("featureExpressionInfo",["featureExpressionInfo","featureExpression"])],e.default.prototype,"readFeatureExpressionInfo",null),t.__decorate([d.writer("featureExpressionInfo",{featureExpressionInfo:{type:l},"featureExpression.value":{type:[0]}})],e.default.prototype,"writeFeatureExpressionInfo",null),t.__decorate([n.property({type:x.apiValues,nonNullable:!0,json:{type:x.jsonValues,read:x.read,write:{writer:x.write,isRequired:!0}}})],e.default.prototype,"mode",null),t.__decorate([n.property({type:Number,json:{write:!0}})],e.default.prototype,"offset",void 0),t.__decorate([n.property({type:c.supportedUnits,json:{type:String,read:y.read,write:y.write}})],e.default.prototype,"unit",null),e.default=h=t.__decorate([f.subclass("esri.symbols.support.ElevationInfo")],e.default),e.default}));