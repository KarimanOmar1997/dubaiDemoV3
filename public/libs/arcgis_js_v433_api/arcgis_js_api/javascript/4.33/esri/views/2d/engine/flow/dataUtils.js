// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/has","../../../../core/Logger","../../../../core/mathUtils","../../../../core/promiseUtils","../../../../core/RandomLCG","../../../../geometry/Extent","../../../../geometry/support/spatialReferenceUtils"],(function(t,e,n,r,o,l,a,i){"use strict";const s=()=>n.getLogger("esri.views.2d.engine.flow.dataUtils");function c(t,e){const n=function(t,e,n,r){if(0===r)return t;const o=Math.round(3*r),l=new Array(2*o+1);let a=0;for(let t=-o;t<=o;t++){const e=Math.exp(-t*t/(r*r));l[t+o]=e,a+=e}for(let t=-o;t<=o;t++)l[t+o]/=a;const i=new Float32Array(t.length);for(let r=0;r<n;r++)for(let n=0;n<e;n++){let a=0,s=0;for(let i=-o;i<=o;i++){if(n+i<0||n+i>=e)continue;const c=l[i+o];a+=c*t[2*(r*e+(n+i))],s+=c*t[2*(r*e+(n+i))+1]}i[2*(r*e+n)]=a,i[2*(r*e+n)+1]=s}const s=new Float32Array(t.length);for(let t=0;t<e;t++)for(let r=0;r<n;r++){let a=0,c=0;for(let s=-o;s<=o;s++){if(r+s<0||r+s>=n)continue;const f=l[s+o];a+=f*i[2*((r+s)*e+t)],c+=f*i[2*((r+s)*e+t)+1]}s[2*(r*e+t)]=a,s[2*(r*e+t)+1]=c}return s}(e.data,e.width,e.height,t.smoothing);return t.interpolate?(t,r)=>{const o=Math.floor(t),l=Math.floor(r);if(o<0||o>=e.width)return[0,0];if(l<0||l>=e.height)return[0,0];const a=t-o,i=r-l,s=o,c=l,f=o<e.width-1?o+1:o,u=l<e.height-1?l+1:l,h=n[2*(c*e.width+s)],d=n[2*(c*e.width+f)],m=n[2*(u*e.width+s)],w=n[2*(u*e.width+f)],g=n[2*(c*e.width+s)+1],p=n[2*(c*e.width+f)+1];return[(h*(1-i)+m*i)*(1-a)+(d*(1-i)+w*i)*a,(g*(1-i)+n[2*(u*e.width+s)+1]*i)*(1-a)+(p*(1-i)+n[2*(u*e.width+f)+1]*i)*a]}:(t,r)=>{const o=Math.round(t),l=Math.round(r);return o<0||o>=e.width||l<0||l>=e.height?[0,0]:[n[2*(l*e.width+o)],n[2*(l*e.width+o)+1]]}}function f(t,e,n,r,o,l,a,i,s){const c=[];let f=n,u=r,h=0,[d,m]=e(f,u);d*=t.velocityScale,m*=t.velocityScale;const w=Math.sqrt(d*d+m*m);let g,p;c.push({x:f,y:u,t:h,speed:w});for(let n=0;n<t.verticesPerLine;n++){let[n,r]=e(f,u);n*=t.velocityScale,r*=t.velocityScale;const d=Math.sqrt(n*n+r*r);if(d<t.minSpeedThreshold)return c;const m=n/d,w=r/d;if(f+=m*t.segmentLength,u+=w*t.segmentLength,h+=t.segmentLength/d,Math.acos(m*g+w*p)>t.maxTurnAngle)return c;if(t.collisions){const t=Math.round(f*s),e=Math.round(u*s);if(t<0||t>a-1||e<0||e>i-1)return c;const n=l[e*a+t];if(-1!==n&&n!==o)return c;l[e*a+t]=o}c.push({x:f,y:u,t:h,speed:d}),g=m,p=w}return c}function u(t,e,n,r){const o=[],a=new l,i=1/Math.max(t.lineCollisionWidth,1),s=Math.round(n*i),c=Math.round(r*i),u=new Int32Array(s*c);for(let t=0;t<u.length;t++)u[t]=-1;const h=[];for(let e=0;e<r;e+=t.lineSpacing)for(let r=0;r<n;r+=t.lineSpacing)h.push({x:r,y:e,sort:a.getFloat()});h.sort(((t,e)=>t.sort-e.sort));for(const{x:n,y:r}of h)if(a.getFloat()<t.density){const l=f(t,e,n,r,o.length,u,s,c,i);if(l.length<2)continue;o.push(l)}return o}function h(t,e){const n=new l,r=t.reduce(((t,e)=>t+e.length),0),o=new Float32Array(4*r),a=new Array(t.length);let i=0,s=0;for(const r of t){const t=i;for(const t of r)o[4*i]=t.x,o[4*i+1]=t.y,o[4*i+2]=t.t,o[4*i+3]=t.speed,i++;a[s++]={startVertex:t,numberOfVertices:r.length,totalTime:r[r.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:o,lineDescriptors:a}}function d(t,e){const{lineVertices:n,lineDescriptors:r}=t;let o=0,l=0;for(const t of r)o+=2*t.numberOfVertices,l+=6*(t.numberOfVertices-1);const a=new Float32Array(9*o),i=new Uint32Array(l);let s=0,c=0;function f(t,e,n,r,o,l,i,c){const f=9*s;let u=0;a[f+u++]=t,a[f+u++]=e,a[f+u++]=1,a[f+u++]=n,a[f+u++]=l,a[f+u++]=i,a[f+u++]=r/2,a[f+u++]=o/2,a[f+u++]=c,s++,a[f+u++]=t,a[f+u++]=e,a[f+u++]=-1,a[f+u++]=n,a[f+u++]=l,a[f+u++]=i,a[f+u++]=-r/2,a[f+u++]=-o/2,a[f+u++]=c,s++}for(const t of r){const{totalTime:r,timeSeed:o}=t;let l=null,a=null,u=null,h=null,d=null,m=null;for(let w=0;w<t.numberOfVertices;w++){const g=n[4*(t.startVertex+w)],p=n[4*(t.startVertex+w)+1],y=n[4*(t.startVertex+w)+2],x=n[4*(t.startVertex+w)+3];let M=null,A=null,I=null,F=null;if(w>0){M=g-l,A=p-a;const t=Math.sqrt(M*M+A*A);if(M/=t,A/=t,w>1){let t=M+d,n=A+m;const r=Math.sqrt(t*t+n*n);t/=r,n/=r;const o=Math.min(1/(t*M+n*A),e);t*=o,n*=o,I=-n,F=t}else I=-A,F=M;null!==I&&null!==F&&(f(l,a,u,I,F,r,o,x),i[c++]=s-2,i[c++]=s,i[c++]=s-1,i[c++]=s,i[c++]=s+1,i[c++]=s-1)}l=g,a=p,u=y,d=M,m=A,h=x}f(l,a,u,-m,d,r,o,h)}return{vertexData:a,indexData:i}}function m(t){const{lineVertices:e,lineDescriptors:n}=t;let r=0,o=0;for(const t of n){const e=t.numberOfVertices-1;r+=4*e*2,o+=6*e*2}const l=new Float32Array(16*r),a=new Uint32Array(o);let i,s,c,f,u,h,d,m,w,g,p,y,x,M,A=0,I=0;function F(t,e){let n=w+p,r=g+y;const o=Math.sqrt(n*n+r*r);n/=o,r/=o;const F=w*n+g*r;n/=F,r/=F;let V=p+x,S=y+M;const b=Math.sqrt(V*V+S*S);V/=b,S/=b;const v=p*V+y*S;V/=v,S/=v,function(t,e,n,r,o,a,i,s,c,f,u,h,d,m){const w=16*A;let g=0;for(const p of[1,2])for(const y of[1,2,3,4])l[w+g++]=t,l[w+g++]=e,l[w+g++]=n,l[w+g++]=r,l[w+g++]=i,l[w+g++]=s,l[w+g++]=c,l[w+g++]=f,l[w+g++]=p,l[w+g++]=y,l[w+g++]=d,l[w+g++]=m,l[w+g++]=o/2,l[w+g++]=a/2,l[w+g++]=u/2,l[w+g++]=h/2,A++}(i,s,c,f,-r,n,u,h,d,m,-S,V,t,e),a[I++]=A-8,a[I++]=A-7,a[I++]=A-6,a[I++]=A-7,a[I++]=A-5,a[I++]=A-6,a[I++]=A-4,a[I++]=A-3,a[I++]=A-2,a[I++]=A-3,a[I++]=A-1,a[I++]=A-2}function V(t,e,n,r,o,l){if(w=p,g=y,p=x,y=M,null==w&&null==g&&(w=p,g=y),null!=u&&null!=h){x=t-u,M=e-h;const n=Math.sqrt(x*x+M*M);x/=n,M/=n}null!=w&&null!=g&&F(o,l),i=u,s=h,c=d,f=m,u=t,h=e,d=n,m=r}function S(t,e){w=p,g=y,p=x,y=M,null==w&&null==g&&(w=p,g=y),null!=w&&null!=g&&F(t,e)}for(const t of n){i=null,s=null,c=null,f=null,u=null,h=null,d=null,m=null,w=null,g=null,p=null,y=null,x=null,M=null;const{totalTime:n,timeSeed:r}=t;for(let o=0;o<t.numberOfVertices;o++)V(e[4*(t.startVertex+o)],e[4*(t.startVertex+o)+1],e[4*(t.startVertex+o)+2],e[4*(t.startVertex+o)+3],n,r);S(n,r)}return{vertexData:l,indexData:a}}function w(t,e){const n=e.pixels,{width:o,height:l}=e,a=new Float32Array(o*l*2),i=e.mask||new Uint8Array(o*l*2);if(e.mask||i.fill(255),"vector-uv"===t)for(let t=0;t<o*l;t++)a[2*t]=n[0][t],a[2*t+1]=-n[1][t];else if("vector-magdir"===t)for(let t=0;t<o*l;t++){const e=n[0][t],o=r.deg2rad(n[1][t]),l=Math.cos(o-Math.PI/2),i=Math.sin(o-Math.PI/2);a[2*t]=l*e,a[2*t+1]=i*e}return{data:a,mask:i,width:o,height:l}}async function g(t,e,n,r,o,l){const a={requestProjectedLocalDirections:!0,signal:l};if(null!=o&&(a.timeExtent=o),"imagery"===t.type){await t.load({signal:l});const o=await t.internalFetchImage(e,n,r,a);return null==o?.pixelData?.pixelBlock?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:w(t.rasterInfo.dataType,o.pixelData.pixelBlock)}await t.load({signal:l});const i=await t.fetchPixels(e,n,r,a);return null==i?.pixelBlock?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:w(t.serviceRasterInfo.dataType,i.pixelBlock)}t.createAnimatedLinesData=h,t.createFlowFieldFromData=c,t.createFlowMesh=async function(t,n,r,l){const a=performance.now(),i=c(n,r),f=performance.now(),w=u(n,i,r.width,r.height),g=performance.now(),p=h(w,!0),y=performance.now(),x="Streamlines"===t?d(p,10):m(p),M=performance.now();return e("esri-2d-profiler")&&(s().info("I.1","_createFlowFieldFromData (ms)",Math.round(f-a)),s().info("I.2","_getStreamlines (ms)",Math.round(g-f)),s().info("I.3","createAnimatedLinesData (ms)",Math.round(y-g)),s().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(M-y)),s().info("I.5","createFlowMesh (ms)",Math.round(M-a)),s().info("I.6","Mesh size (bytes)",x.vertexData.buffer.byteLength+x.indexData.buffer.byteLength)),await Promise.resolve(),o.throwIfAborted(l),x},t.createParticlesMesh=m,t.createStreamlinesMesh=d,t.getStreamlines=u,t.loadImagery=async function(t,n,r,o,l,c){const f=performance.now(),u=i.getInfo(n.spatialReference);if(!u){const a=await g(t,n,r,o,l,c);return e("esri-2d-profiler")&&s().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-f)),e("esri-2d-profiler")&&s().info("I.9","Number of parts",1),a}const[h,d]=u.valid,m=d-h,w=Math.ceil(n.width/m),p=n.width/w,y=Math.round(r/w);let x=n.xmin;const M=[],A=performance.now();for(let e=0;e<w;e++){const e=new a({xmin:x,xmax:x+p,ymin:n.ymin,ymax:n.ymax,spatialReference:n.spatialReference});M.push(g(t,e,y,o,l,c)),x+=p}const I=await Promise.all(M);e("esri-2d-profiler")&&s().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-A)),e("esri-2d-profiler")&&s().info("I.9","Number of parts",I.length);const F={data:new Float32Array(r*o*2),mask:new Uint8Array(r*o),width:r,height:o};let V=0;for(const t of I){for(let e=0;e<t.height;e++)for(let n=0;n<t.width;n++)V+n>=r||(F.data[2*(e*r+V+n)]=t.data[2*(e*t.width+n)],F.data[2*(e*r+V+n)+1]=t.data[2*(e*t.width+n)+1],F.mask[e*r+V+n]=t.mask[e*t.width+n]);V+=t.width}return e("esri-2d-profiler")&&s().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-f)),F},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));