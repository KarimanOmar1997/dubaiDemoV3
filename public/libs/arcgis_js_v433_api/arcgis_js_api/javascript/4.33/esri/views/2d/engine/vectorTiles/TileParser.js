// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["../../../../core/pbf","../../../../core/promiseUtils","../../../../geometry/libtess","../../../../geometry/support/TileClipper","./Feature","./GeometryUtils","./IndexMemoryBuffer","./SourceLayerData","./VertexMemoryBuffer","./buckets/CircleBucket","./buckets/FillBucket","./buckets/LineBucket","./buckets/SymbolBucket","./style/StyleDefinition","../../tiling/enums"],(function(e,t,r,s,i,l,n,o,a,c,u,f,y,h,p){"use strict";return class{constructor(t,r,i,n,o,a){if(this._pbfTiles={},this._tileClippers={},this._client=i,this._tile=r,this._sourceDataMaxLOD=n,a){this._styleLayerUIDs=new Set;for(const e of a)this._styleLayerUIDs.add(e)}this._styleRepository=o,this._layers=this._styleRepository?.layers??[];const[c,u,f]=r.tileKey.split("/").map(parseFloat);this._level=c;const y=l.getTileMargins(this._level);for(const r of Object.keys(t)){const i=t[r];if(this._pbfTiles[r]=new e(new Uint8Array(i.protobuff),new DataView(i.protobuff)),i.refKey){const[e]=i.refKey.split("/").map(parseFloat),t=c-e;if(t>0){const e=(1<<t)-1,i=u&e,l=f&e;this._tileClippers[r]=new s.TileClipper(t,i,l,8,y)}}this._tileClippers[r]||(this._tileClippers[r]=new s.SimpleBuilder)}}_canParseStyleLayer(e){return!this._styleLayerUIDs||this._styleLayerUIDs.has(e)}async parse(e){const t=r.loadLibtess(),s=this._initialize(e),{returnedBuckets:i}=s;this._processLayers(s),this._linkReferences(s),this._filterFeatures(s);const l=[],n=new Set,o=(e,t)=>{n.has(e)||(l.push({name:e,repeat:t}),n.add(e))},a={};for(const e of i)e.getResources(e.tileClipper,o,a);if(this._tile.status===p.TileStatus.INVALID)return[];const c=this._fetchResources(l,a,e);return Promise.all([...c,t]).then((()=>this._processFeatures(s.returnedBuckets)))}_initialize(e){const t=e?.signal;return{signal:t,sourceNameToTileData:this._parseTileData(this._pbfTiles),layers:this._layers,zoom:this._level,sourceNameToTileClipper:this._tileClippers,sourceNameToUniqueSourceLayerBuckets:{},sourceNameToUniqueSourceLayers:{},returnedBuckets:[],layerIdToBucket:{},referencerUIDToReferencedId:new Map}}_processLayers(e){const{sourceNameToTileData:t,zoom:r,layers:s,sourceNameToTileClipper:i,sourceNameToUniqueSourceLayerBuckets:l,sourceNameToUniqueSourceLayers:n,returnedBuckets:o,layerIdToBucket:a,referencerUIDToReferencedId:c}=e,u=this._sourceDataMaxLOD;for(let e=s.length-1;e>=0;e--){const f=s[e];if(r<u){if(f.minzoom&&r<Math.floor(f.minzoom)||f.maxzoom&&r>=f.maxzoom)continue}else if(f.maxzoom&&r>=f.maxzoom)continue;if(f.type===h.StyleLayerType.BACKGROUND||!this._canParseStyleLayer(f.uid)||!t[f.source]||!i[f.source])continue;const y=t[f.source],p=i[f.source],_=f.sourceLayer,m=y[_];if(m){let e=n[f.source];if(e||(e=n[f.source]=new Set),e.add(f.sourceLayer),f.refLayerId)c.set(f.uid,f.refLayerId);else{const e=this._createBucket(f);if(e){e.layerUIDs=[f.uid],e.layerExtent=m.extent,e.tileClipper=p;let t=l[f.source];t||(t=l[f.source]={});let r=t[_];r||(r=t[_]=[]),r.push(e),o.push(e),a[f.id]=e}}}}}_linkReferences(e){const{layerIdToBucket:t,referencerUIDToReferencedId:r}=e;r.forEach(((e,r)=>{t[e]&&t[e].layerUIDs.push(r)}))}_filterFeatures(e){const{signal:r,sourceNameToTileData:s,sourceNameToUniqueSourceLayerBuckets:l,sourceNameToUniqueSourceLayers:n}=e,o=10*this._level,a=10*(this._level+1),c=[],u=[];for(const e of Object.keys(n))n[e].forEach((t=>{c.push(t),u.push(e)}));for(let e=0;e<c.length;e++){const n=u[e],f=c[e];if(!s[n]||!l[n])continue;const y=s[n][f],h=l[n][f];if(!h||0===h.length)continue;if(t.isAborted(r))return;let p=0;const _=y.getData();for(;_.nextTag(2);){const e=_.getMessage(),t=new i(e,y,p++);e.release();const r=t.values;if(r){const e=r._minzoom;if(e&&e>=a)continue;const t=r._maxzoom;if(t&&t<=o)continue}for(const e of h)e.pushFeature(t)}}}_fetchResources(e,t,r){const s=[],i=this._tile.getWorkerTileHandler();let l,n;e.length>0&&(l=i.fetchSprites(e,this._client,r),s.push(l));for(const e in t){const l=t[e];l.size>0&&(n=i.fetchGlyphs(this._tile.tileKey,e,l,this._client,r),s.push(n))}return s}_processFeatures(e){const t=e.filter((e=>e.hasFeatures()||this._canParseStyleLayer(e.layer.uid)));for(const e of t)e.processFeatures(e.tileClipper);return t}_parseTileData(e){const t={};for(const r of Object.keys(e)){const s=e[r],i={};for(;s.next();)switch(s.tag()){case 3:{const e=s.getMessage(),t=new o(e);e.release(),i[t.name]=t;break}default:s.skip()}t[r]=i}return t}_createBucket(e){switch(e.type){case h.StyleLayerType.BACKGROUND:return null;case h.StyleLayerType.FILL:return this._createFillBucket(e);case h.StyleLayerType.LINE:return this._createLineBucket(e);case h.StyleLayerType.CIRCLE:return this._createCircleBucket(e);case h.StyleLayerType.SYMBOL:return this._createSymbolBucket(e)}}_createFillBucket(e){return new u(e,this._level,this._tile.getWorkerTileHandler().getSpriteItems(),new a.FillVertexBuffer(e.fillMaterial.getStride()),new n.TriangleIndexBuffer,new a.OutlineVertexBuffer(e.outlineMaterial.getStride()),new n.TriangleIndexBuffer)}_createLineBucket(e){return new f(e,this._level,this._tile.getWorkerTileHandler().getSpriteItems(),new a.LineVertexBuffer(e.lineMaterial.getStride()),new n.TriangleIndexBuffer)}_createCircleBucket(e){return new c(e,this._level,this._tile.getWorkerTileHandler().getSpriteItems(),new a.CircleVertexBuffer(e.circleMaterial.getStride()),new n.TriangleIndexBuffer)}_createSymbolBucket(e){const t=this._tile;return new y(t.tileKey,e,this._level,new a.SymbolVertexBuffer(e.iconMaterial.getStride()),new n.TriangleIndexBuffer,new a.SymbolVertexBuffer(e.textMaterial.getStride()),new n.TriangleIndexBuffer,t.placementEngine,t.getWorkerTileHandler())}}}));