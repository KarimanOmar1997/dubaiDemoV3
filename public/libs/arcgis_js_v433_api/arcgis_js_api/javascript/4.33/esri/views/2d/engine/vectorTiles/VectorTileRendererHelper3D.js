// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/libs/gl-matrix-2/math/mat3","../../../../core/libs/gl-matrix-2/factories/mat3f64","../../../../core/libs/gl-matrix-2/math/common","../../tiling/TileInfoView","../../tiling/TileKey","../../tiling/TileQueue","../../tiling/TileStrategy","./constants","./decluttering/jobsUtil","./style/StyleDefinition","../webgl/RenderableTile","../webgl/TileReshuffleManager","../../../webgl/enums"],(function(e,t,i,l,n,s,r,a,o,d,c,h,u,p){"use strict";class g{constructor(){this.size=[0,0],this.pixelRatio=1,this.rotation=0,this.displayMat3=i.create(),this.displayViewMat3=i.create(),this.transform=null,this.inverseTransform=null,this.viewMat2d=null,this.viewMat3=null,this.id=0,this.extent=null,this.center=null,this.scale=1,this.resolution=0,this.worldScreenWidth=0,this.spatialReference=null,this.viewpoint=null,this.getScreenTransform=null,this.toMap=null,this.toScreen=null,this.clone=null,this.copy=null,this.toJSON=null}}e.VectorTileRendererHelper3D=class{constructor(){this._renderParams={reshuffleManager:new u.TileReshuffleManager,context:null,drawPhase:1,state:new g,stationary:!0,pixelRatio:1,displayLevel:-1,requiredLevel:-1,globalOpacity:1,renderPass:"background",styleLayer:null,styleLayerUID:-1,painter:null,glyphMosaic:null,spriteMosaic:null,profiler:null,renderingOptions:null,requestRender:null,allowDelayedRender:!1,deltaTime:-1,timeline:null,time:0,hasClipping:!1,blendMode:null,dataUploadCounter:0,effects:null,inFadeTransition:!1,requireFBO:!1,highlightGradient:null,stencilSymbols:!0,is3D:!0,backgroundColor:null},this._backgroundTile=new h.RenderableTile(new s(0,0,0,0),0,0,0,o.tilePixelSize,o.tilePixelSize,o.tileCoordSize,o.tileCoordSize),this._heading=0,this._declutteredForHeading=new WeakMap}dispose(){this._renderParams=null}renderBackground(e,t,i,l,n,s,r,a,o,d){const c=this._backgroundTile;this._updateRenderParameters(e,t,c,i,n,s,r,a,o,d),this._renderParams.stencilSymbols=!1,i.drawBackground(this._renderParams,c,l)}renderContent(e,t,i,l,n,s,r,a,o,d,c,h){this._declutter(i),l.forAll((({sourceLayerInfo:{data:e}})=>this._declutter(e)));const u=l.length>0;u&&this._stencilSymbols(e,t,i,l,n,s,r,a,o,d,c,h);let g=1;i.stencilRef=u?g:0,e.setStencilFunction(p.CompareFunction.EQUAL,i.stencilRef,255),this._render(e,t,i,n,s,r,a,o,d,c,h),l.forAll((({sourceLod:t,offset:i,sourceLayerInfo:{data:l}})=>{l.stencilRef=++g,this._renderSymbols(e,t,l,n,s,r,a,i,d,c,h)}))}_stencilSymbols(e,t,i,l,n,s,r,a,o,d,c,h){let u=1;i.stencilRef=u,e.setDepthTestEnabled(!1),e.setDepthWriteEnabled(!1),e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(p.StencilOperation.KEEP,p.StencilOperation.KEEP,p.StencilOperation.REPLACE),e.setStencilWriteMask(255),e.setStencilFunction(p.CompareFunction.ALWAYS,i.stencilRef,255),this._stencilTileSymbols(e,t,i,n,s,r,a,o,d,c,h),l.forAll((({sourceLod:t,offset:i,sourceLayerInfo:{data:l}})=>{l.stencilRef=++u,e.setStencilFunction(p.CompareFunction.ALWAYS,l.stencilRef,255),this._stencilTileSymbols(e,t,l,n,s,r,a,i,d,c,h)})),e.setStencilWriteMask(0),e.setBlendingEnabled(!0),e.setDepthTestEnabled(!0),e.setColorMask(!0,!0,!0,!0)}_renderSymbols(e,t,i,l,n,s,r,a,o,d,h){e.setStencilFunction(p.CompareFunction.EQUAL,i.stencilRef,255),this._render(e,t,i,l,n,s,r,a,o,d,h,c.StyleLayerType.SYMBOL)}_render(e,t,i,l,n,s,r,a,o,d,c,h){this._updateRenderParameters(e,t,i,l,s,r,a,o,d,c),this._renderParams.stencilSymbols=!1,l.drawTile(this._renderParams,i,n,h)}_stencilTileSymbols(e,t,i,l,n,s,r,a,o,d,c){this._updateRenderParameters(e,t,i,l,s,r,a,o,d,c),this._renderParams.stencilSymbols=!0,i.triangleCount=0,l.drawSymbols(this._renderParams,i,n)}_updateRenderParameters(e,i,n,s,r,a,d,c,h,u){"type"in n&&"vector-tile"===n.type&&!n.stage&&n.attachWithContext(e);const p=i[0]-r.getLevelShift(i[0]),g=this._renderParams;g.context=e,g.painter=s,g.glyphMosaic=s.glyphMosaic,g.spriteMosaic=s.spriteMosaic,g.pixelRatio=h*u,g.displayLevel=p,g.requiredLevel=p;const m=r.getScale(i[0]),[y,S]=r.getOffset(i,a*m),f=o.tileCoordinateScale*a*m/c,_=n.transforms.displayViewScreenMat3;_[0]=f,_[4]=-f,_[6]=-1-y-d[0]*a*2,_[7]=1+S+(1-d[1])*a*2-2;const b=g.state,M=c/u;b.size[0]=M,b.size[1]=M,b.pixelRatio=u,b.rotation=(360-this._heading)%360;const R=2/M;t.set(b.displayViewMat3,R,0,0,0,-R,0,-1,1,1);const T=t.identity(b.displayMat3),w=l.toRadian(this._heading);t.translate(T,T,[M/2,M/2]),t.rotate(T,T,w),t.translate(T,T,[-M/2,-M/2]),t.multiply(T,b.displayViewMat3,T)}updateHeading(e){this._heading=e}_declutter(e){this._declutteredForHeading.get(e)!==this._heading&&(d.declutterSingleTile(e,(360-this._heading)%360),this._declutteredForHeading.set(e,this._heading))}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));