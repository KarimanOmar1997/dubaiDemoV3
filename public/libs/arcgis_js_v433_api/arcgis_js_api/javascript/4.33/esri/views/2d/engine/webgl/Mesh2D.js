// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["../../../../core/Error","../../../../core/Logger","../../../../chunks/earcut","../../../../core/libs/gl-matrix-2/math/vec2","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../layers/graphics/featureConversionUtils","../../../../layers/graphics/OptimizedGeometry","./number","../../../webgl/BufferObject","../../../webgl/enums"],(function(e,t,r,i,n,o,s,c,a,f){"use strict";const h=(e,t,r,i)=>{let n=0;for(let i=1;i<r;i++){const r=e[2*(t+i-1)],o=e[2*(t+i-1)+1];n+=(e[2*(t+i)]-r)*(e[2*(t+i)+1]+o)}return i?n>0:n<0},m=({coords:e,lengths:t},i)=>{const n=[];for(let o=0,s=0;o<t.length;s+=t[o],o+=1){const c=s,a=[];for(;o<t.length-1&&h(e,s+t[o],t[o+1],i);o+=1,s+=t[o])a.push(s+t[o]-c);const f=e.slice(2*c,2*(s+t[o])),m=r.earcut(f,a,2);for(const e of m)n.push(e+c)}return n};class u{constructor(e,t,r,i=!1){this._cache={},this.vertices=e,this.indices=t,this.primitiveType=r,this.isMapSpace=i}static fromPath(e){const t=o.convertFromNestedArray(new s,e.path,!1,!1),r=t.coords,i=new Uint32Array(m(t,!0)),n=new Uint32Array(r.length/2);for(let e=0;e<n.length;e++)n[e]=c.i1616to32(Math.floor(r[2*e]),Math.floor(r[2*e+1]));return new u({geometry:n},i,f.PrimitiveType.TRIANGLES)}static fromGeometry(r,i){const n=i.geometry?.type;switch(n){case"polygon":return u.fromPolygon(r,i.geometry);case"extent":return u.fromMapExtent(r,i.geometry);default:return t.getLogger("esri.views.2d.engine.webgl.Mesh2D").error(new e("mapview-bad-type",`Unable to create a mesh from type ${n}`,i)),u.fromScreenExtent({xmin:0,ymin:0,xmax:1,ymax:1})}}static fromPolygon(e,t){const r=o.convertFromPolygon(new s,t,!1,!1),a=r.coords,h=new Uint32Array(m(r,!1)),y=new Uint32Array(a.length/2),l=n.create(),g=n.create();for(let t=0;t<y.length;t++)i.set(l,a[2*t],a[2*t+1]),e.toScreen(g,l),y[t]=c.i1616to32(Math.floor(g[0]),Math.floor(g[1]));return new u({geometry:y},h,f.PrimitiveType.TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:t,ymin:r,ymax:i}){const n={geometry:new Uint32Array([c.i1616to32(e,r),c.i1616to32(t,r),c.i1616to32(e,i),c.i1616to32(e,i),c.i1616to32(t,r),c.i1616to32(t,i)])},o=new Uint32Array([0,1,2,3,4,5]);return new u(n,o,f.PrimitiveType.TRIANGLES)}static fromMapExtent(e,t){const[r,i]=e.toScreen([0,0],[t.xmin,t.ymin]),[n,o]=e.toScreen([0,0],[t.xmax,t.ymax]),s={geometry:new Uint32Array([c.i1616to32(r,i),c.i1616to32(n,i),c.i1616to32(r,o),c.i1616to32(r,o),c.i1616to32(n,i),c.i1616to32(n,o)])},a=new Uint32Array([0,1,2,3,4,5]);return new u(s,a,f.PrimitiveType.TRIANGLES)}destroy(){null!=this._cache.indexBuffer&&this._cache.indexBuffer.dispose(),this._cache.vertexBuffers?.forEach((e=>e?.dispose())),this._cache.indexBuffer=this._cache.vertexBuffers=null}getIndexBuffer(e,t=f.Usage.STATIC_DRAW){return this._cache.indexBuffer??=a.BufferObject.createIndex(e,t,this.indices),this._cache.indexBuffer}getVertexBuffers(e,t=f.Usage.STATIC_DRAW){return this._cache.vertexBuffers??=new Map(Object.keys(this.vertices).reduce(((r,i)=>(r.push([i,a.BufferObject.createVertex(e,t,this.vertices[i])]),r)),new Array)),this._cache.vertexBuffers}}return u}));