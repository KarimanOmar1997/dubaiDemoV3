// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["../../../../config","../../../../request","../../../../core/BidiText","../../../../core/Error","../../../../core/fontUtils","../../../../core/has","../../../../core/Logger","../../../../core/promiseUtils","../../../../core/QueueProcessor","../../../../core/screenUtils","../../../../core/string","../../../../symbols/cim/CIMResourceManager","../../../../symbols/cim/CIMSymbolHelper","../../../../symbols/cim/Rasterizer","../../../../symbols/cim/utils","./definitions","./enums","./GlyphMosaic","./GlyphSource","./Rect","./SDFConverter","./SpriteMosaic","./urlUtils","./Utils","./animatedFormats/AnimatableTextureResource","./animations/store/AnimationStore","../../../webgl/enums"],(function(e,t,i,s,r,a,n,o,c,l,h,u,d,p,g,m,y,M,f,_,I,S,w,T,z,x,R){"use strict";const C="arial-unicode-ms-regular",P=()=>n.getLogger("esri.views.MapView"),b=(e,t,i)=>P().error(new s(e,t,i));class v{static fromMosaic(e,t){return new v(e,t.page,t.sdf,t.samplingMode)}constructor(e,t,i,s){this.mosaicType=e,this.page=t,this.sdf=i,this.samplingMode=s}}function A(e){switch(e.type){case"CIMVectorMarker":case"CIMPictureMarker":return $(e);default:return!0}}const $=e=>e&&"markerPlacement"in e&&e.markerPlacement&&"CIMMarkerPlacementInsidePolygon"===e.markerPlacement.type;return class{constructor(i){this._requestRender=i,this._resourceManager=new u,this._invalidFontsMap=new Map,this._sdfConverter=new I(m.svgSdfTextureInnerSize),this._bindingInfos=new Array,this._hashToBindingIndex=new Map,this._ongoingRasterizations=new Map,this._imageRequestQueue=new c.QueueProcessor({concurrency:10,process:async(e,i)=>{o.throwIfAborted(i);try{return await t(e,{responseType:"image",signal:i})}catch(t){if(!o.isAbortError(t))throw new s("mapview-invalid-resource",`Could not fetch requested resource at ${e}`,t);throw t}}}),this.animationStore=new x.AnimationStore,this._spriteMosaic=new S(2048,2048,500),this._glyphSource=new f(`${e.fontsUrl}/{fontstack}/{range}.pbf`),this._glyphMosaic=new M(1024,1024,this._glyphSource),this._rasterizer=new p(this.resourceManager)}dispose(){this._spriteMosaic.dispose(),this._glyphMosaic.dispose(),this._rasterizer.dispose(),this._sdfConverter.dispose(),this._spriteMosaic=null,this._glyphMosaic=null,this._sdfConverter=null,this._hashToBindingIndex.clear(),this._hashToBindingIndex=null,this._bindingInfos=null,this._ongoingRasterizations.clear(),this._ongoingRasterizations=null,this._imageRequestQueue.clear(),this._imageRequestQueue=null,this._resourceManager.destroy(),this.animationStore.destroy()}get sprites(){return this._spriteMosaic}get glyphs(){return this._glyphMosaic}get resourceManager(){return this._resourceManager}async rasterizeItem(e,t){if(null==e)return b("mapview-null-resource","Unable to rasterize null resource"),null;if("animation-info"===e.type){const{resource:t}=e,i=this.animationStore.add(t),{location:s}=i;return{rect:new _(s.column,s.row,t.length,1),page:s.page,type:"sprite",width:t.length,height:1,rasterizationScale:1,sdfPaddingRatio:.5,samplingMode:"Linear",sdfDecodeCoeff:1,simplePattern:!1}}if("cim-rasterization-info"!==e.type)return b("mapview-unexpected-resource","Unable to rasterize resource"),null;const{resource:i}=e;if("text"===i.type){const e=await this._rasterizeText(i,t);for(const t of e.glyphs)this._setTextureBinding(y.MosaicType.GLYPH,t);return e}const s=await this._rasterizeSprite(i,t);return s&&this._setTextureBinding(y.MosaicType.SPRITE,s),s}getMosaicInfo(e,t,i=!1){const s=this._getTextureBindingInfo(e,t,i);return s?{size:s.size,texture:{texture:s.texture,unit:"sprite"===s.type?m.textureBindingSpriteAtlas:m.textureBindingGlyphAtlas}}:(b("mapview-invalid-resource",`Unable to find resource for ${t}`),{size:[0,0],texture:{texture:null,unit:0}})}_getTextureBindingInfo(e,t,i){const s=this._bindingInfos[t-1],r=s.page,a="Nearest"===s.samplingMode?R.TextureSamplingMode.NEAREST:i?R.TextureSamplingMode.LINEAR_MIPMAP_LINEAR:R.TextureSamplingMode.LINEAR;switch(s.mosaicType){case y.MosaicType.SPRITE:{const t=[this.sprites.getWidth(r),this.sprites.getHeight(r)],i=this._spriteMosaic.getTexture(e,r);return i.setSamplingMode(a),{type:"sprite",texture:i,size:t}}case y.MosaicType.GLYPH:{const t=[this.glyphs.width,this.glyphs.height],i=this._glyphMosaic.getTexture(e,r);return this._glyphMosaic.bind(e,a,r,m.textureBindingGlyphAtlas),i.setSamplingMode(a),{type:"glyph",texture:i,size:t}}default:return b("mapview-texture-manager",`Cannot handle unknown type ${s.mosaicType}`),null}}_hashMosaic(e,t){return 1|e<<1|(t.sdf?1:0)<<2|("Nearest"===t.samplingMode?1:0)<<3|t.page<<4}_setTextureBinding(e,t){const i=this._hashMosaic(e,t);if(!this._hashToBindingIndex.has(i)){const s=v.fromMosaic(e,t),r=this._bindingInfos.length+1;this._hashToBindingIndex.set(i,r),this._bindingInfos.push(s)}t.textureBinding=this._hashToBindingIndex.get(i)}async _rasterizeText(e,t){const{font:s,textString:n}=e,o=r.getFullyQualifiedFontName(s),c=this._invalidFontsMap.has(o),[l,h]=i.bidiText(n),u=T.charCodes(l);try{const e=c?C:o;return a("esri-2d-stabilize-glyphs")&&await this._glyphMosaic.preloadASCIIGlyphCache(e),{type:"glyphs",glyphs:await this._glyphMosaic.getGlyphItems(e,u,t),isRightToLeft:h}}catch(e){return((e,t="")=>{P().warnOnce(e,t)})(`Font ${o} is not available on the web, using "Arial Unicode MS Regular"`),this._invalidFontsMap.set(o,!0),{type:"glyphs",glyphs:await this._glyphMosaic.getGlyphItems(C,u,t),isRightToLeft:h}}}_hashSpriteResource(e){switch(e.type){case"path":return`path:${e.path}.${e.asFill?1:0}`;case"CIMPictureMarker":return`${e.type}:${e.url}:${e.size}:${T.getCIMMarkerPlacementHash(e.markerPlacement)}`;case"CIMPictureFill":return`${e.type}:${e.url}:${e.height}`;case"CIMPictureStroke":return`${e.type}:${e.url}:${e.width}`;case"dash":return`dash:${e.capStyle}.${g.normalizeDashTemplate(e.dashTemplate).join("")}`;case"sdf":return`sdf:${JSON.stringify(e.geom)}.${e.asFill?1:0}`;case"fill-style":return`fill_style:${e.style}`;case"animated":return JSON.stringify(w.discardUrlIfHasUrlHash(e));case"CIMGradientFill":case"CIMGradientStroke":return`gradient:${JSON.stringify(e.colorRamp)}.${e.gradientType}.${e.interval}`;case"CIMHatchFill":case"CIMVectorMarker":return JSON.stringify(e)}}async _rasterizeSprite(e,t){if(!e)return null;const i=h.numericHash(this._hashSpriteResource(e));if(this._spriteMosaic.has(i))return this._spriteMosaic.getSpriteItem(i);if("url"in e&&e.url||"CIMPictureFill"===e.type||"CIMPictureStroke"===e.type||"CIMPictureMarker"===e.type||"CIMVectorMarker"===e.type){const t=[];d.CIMSymbolHelper.fetchResources({type:"CIMPointSymbol",symbolLayers:[e]},this._resourceManager,t),t.length>0&&await Promise.all(t)}switch(e.type){case"CIMPictureMarker":return"CIMMarkerPlacementInsidePolygon"===e.markerPlacement?.type?this._rasterizeJSONResource(i,e):this._handleAsyncResource(i,e,t);case"animated":case"CIMPictureFill":case"CIMPictureStroke":case"path":return this._handleAsyncResource(i,e,t);case"CIMGradientFill":case"CIMGradientStroke":case"CIMHatchFill":case"CIMVectorMarker":case"dash":case"fill-style":case"sdf":return this._rasterizeJSONResource(i,e)}}_rasterizeJSONResource(e,t){const i=this._rasterizer.rasterizeJSONResource(t);if(i){const{size:s,image:r,sdf:a,simplePattern:n,rasterizationScale:o,samplingMode:c,sdfPaddingRatio:l,sdfDecodeCoeff:h}=i;return this._addItemToMosaic(e,s,{type:"static",data:r},A(t),a,n,o,c,l,h)}return null}async _handleAsyncResource(e,t,i){if(this._ongoingRasterizations.has(e))return this._ongoingRasterizations.get(e);let s;return s="path"===t.type?this._handleSVG(t,e,i):this._handleImage(t,e,i),this._ongoingRasterizations.set(e,s),s.finally((()=>this._ongoingRasterizations.delete(e))),s}async _handleSVG(e,t,i){const s=[m.svgSdfTextureInnerSize,m.svgSdfTextureInnerSize],{asFill:r}=e,a=await this._sdfConverter.draw(e.path,r,i);return this._addItemToMosaic(t,s,{type:"static",data:new Uint32Array(a.buffer)},!1,!0,!0)}async _handleGIFOrPNG(e,t,i){const s=e.url,r=this.resourceManager.getResource(s);if(null==r)return null;const{width:a,height:n}=r;if(r instanceof HTMLImageElement){if("animated"===e.type)return b("mapview-unexpected-resource","Attempt to configure animations for a non-animated image."),null;const i="colorSubstitutions"in e?e.colorSubstitutions:void 0,{size:s,sdf:o,image:c}=this._rasterizer.rasterizeImageResource(a,n,r,i);return this._addItemToMosaic(t,s,{type:"static",data:c},A(e),o,!1)}let o,c,l;"animated"===e.type?(o=!1,c={type:"CIMAnimatedSymbolProperties",playAnimation:e.playAnimation,reverseAnimation:e.reverseAnimation,randomizeStartTime:e.randomizeStartTime,randomizeStartSeed:e.randomizeStartSeed,startTimeOffset:e.startTimeOffset,duration:e.duration,repeatType:e.repeatType,repeatDelay:e.repeatDelay},l=e.startGroup||0):(o=A(e),c={type:"CIMAnimatedSymbolProperties"},l=0);const h=new z.AnimatableTextureResource(r,this._requestRender,c,l);return this._addItemToMosaic(t,[h.width,h.height],{type:"animated",data:h},o,!1,!1)}async _handleImage(e,t,i){const r=e.url;if((e=>{return e&&(e.includes(".gif")||null!=(t=e)&&t.startsWith("data:image/gif"));var t})(r)||(e=>{return e&&(e.includes(".png")||null!=(t=e)&&t.startsWith("data:image/png"));var t})(r))return this._handleGIFOrPNG(e,t,i);if("animated"===e.type)return b("mapview-unexpected-resource","Attempt to configure animations for a non-animated image."),null;try{let s;const a=this.resourceManager.getResource(r);if(null!=a&&a instanceof HTMLImageElement)s=a;else{const{data:e}=await this._imageRequestQueue.push(r,{...i});s=e}if(T.isSVGImage(r))if("width"in e&&"height"in e)s.width=l.pt2px(e.width),s.height=l.pt2px(e.height);else if("cim"in e){const t=e;s.width=l.pt2px(t.width??t.scaleX*t.size),s.height=l.pt2px(t.size)}if(!s.width||!s.height)return null;const n=s.width,o=s.height,c="colorSubstitutions"in e?e.colorSubstitutions:void 0,{size:h,sdf:u,image:d}=this._rasterizer.rasterizeImageResource(n,o,s,c);return this._addItemToMosaic(t,h,{type:"static",data:d},A(e),u,!1)}catch(e){if(!o.isAbortError(e))throw new s("mapview-invalid-resource",`Could not fetch requested resource at ${r}. ${e.message}`);throw e}}_addItemToMosaic(e,t,i,s,r,a,n,o,c,l){return this._spriteMosaic.addSpriteItem(e,t,i,s,r,a,n,o,c,l)}}}));