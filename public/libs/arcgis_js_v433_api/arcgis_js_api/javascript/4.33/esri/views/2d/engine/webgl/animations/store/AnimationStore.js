// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../webgl/enums","../../../../../webgl/Texture","../../../../../webgl/TextureDescriptor","../../../../../webgl/ValidatedTextureDescriptor"],(function(e,t,s,r,o){"use strict";class i{constructor(e,t){this.parent=e,this.key=t,this.payload=null,this._children=new Map}get(e){return this._children.get(e)}ensure(e){let t=this._children.get(e);return t||(t=new i(this,e),this._children.set(e,t)),t}delete(e){this._children.delete(e)}}class n{constructor(){this._root=new i(null,NaN)}set(e,t){let s=this._root;for(const t of e)for(const e of t)s=s.ensure(e);return s.payload=t,s}delete(e){e.parent?.delete(e.key)}get(e){let t=this._root;for(const s of e)for(const e of s){const s=t.get(e);if(!s)return;t=s}return t.payload||void 0}}class h{constructor(){this._pages=[]}add(e){0===this._pages.length&&this._pages.push(new u);let t=this._pages.length-1,s=this._pages[t].add(e);if(s||(this._pages.push(new u),t=this._pages.length-1,s=this._pages[t].add(e)),!s)throw new Error("Data allocation failed.");return{...s,page:t}}remove(e){this._pages[e.page].remove(e)}getTexture(e,t){return this._pages[t].getTexture(e)}destroy(){}}class u{constructor(){this._cursor={row:0,column:0},this._columns=1024,this._rows=1024,this._data=new Float32Array(this._columns*this._rows*4),this._texture=null,this._textureCursor={row:0,column:0}}add(e){if(e.length>this._columns)throw new Error(`The maximum allocation size is ${this._columns} texels.`);const t={...this._cursor};if(t.column+=e.length,t.column>=this._columns&&(t.column=e.length,t.row++),t.row>=this._rows)return null;this._cursor=t;const s={...this._cursor};s.column-=e.length;let r=4*(s.row*this._columns+s.column);for(let t=0;t<e.length;t++)this._data[r++]=e[t][0],this._data[r++]=e[t][1],this._data[r++]=e[t][2],this._data[r++]=e[t][3];return s}remove(e){}getTexture(e){if(!this._texture){const i=new r.TextureDescriptor(this._columns,this._rows);i.pixelFormat=t.PixelFormat.RGBA,i.dataType=t.PixelType.FLOAT,i.wrapMode=t.TextureWrapMode.CLAMP_TO_EDGE,i.samplingMode=t.TextureSamplingMode.NEAREST,i.hasMipmap=!1;const n=new o.ValidatedTextureDescriptor(e,i);this._texture=new s.Texture(e,n)}if(this._cursor.row===this._textureCursor.row&&this._cursor.column===this._textureCursor.column)return this._texture;const i=this._textureCursor.row,n=this._cursor.row-i+1;return this._texture.updateData(0,0,i,this._columns,n,this._data,i),this._textureCursor.row=this._cursor.row,this._textureCursor.column=this._cursor.column,this._texture}destroy(){this._texture?.dispose()}}e.AnimationStore=class{constructor(){this._entries=new n,this._nodes=new Map,this._book=new h}add(e){let t=this._entries.get(e);if(!t){const s=this._book.add(e),r=new Object;t={location:s,references:0,handle:r};const o=this._entries.set(e,t);this._nodes.set(r,o)}return t.references++,t}remove(e){const t=this._nodes.get(e.handle);t&&t.payload&&(t.payload.references--,0===t.payload.references&&(this._book.remove(t.payload.location),this._entries.delete(t),this._nodes.delete(e.handle)))}getTexture(e,t){return this._book.getTexture(e,t)}destroy(){this._book.destroy()}},e.PrefixMap=n,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));