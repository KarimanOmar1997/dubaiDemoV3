// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../webgl/BufferObject","../../../../webgl/FramebufferObject","../../../../../core/has","../../../../webgl/checkWebGLError","../../../../webgl/enums","../../../../webgl/FBOAttachmentType","../../../../webgl/Texture","../../../../webgl/VertexArrayObject","./definitions"],(function(e,t,r,s,n,i,o,f,u,a){"use strict";e.Mesh=class{constructor(e,r){this._boundPart=null,this.vertexBuffers=new Map,this.indexBuffers=new Map,this.groups=[];for(const s in r.vertex){const{data:n,attributes:o}=r.vertex[s],f=t.BufferObject.createVertex(e,i.Usage.STATIC_DRAW,n);this.vertexBuffers.set(s,{buffer:f,attributes:o})}for(const s in r.index){const{data:n}=r.index[s],o=t.BufferObject.createIndex(e,i.Usage.STATIC_DRAW,n);this.indexBuffers.set(s,{buffer:o})}for(const e of r.groups)this.groups.push({...e,vertexArrays:new Map});this.parts=r.parts}bind(e,t,r){this._boundPart=r;const{group:s}=this.parts[this._boundPart],n=this.groups[s];if(!n)throw new Error(`Missing group ${s}.`);let i=n.vertexArrays.get(t.stringHash);if(!i){const r=new Set(t.locations.keys()),s=n.index?this.indexBuffers.get(n.index)?.buffer:null,o=new Map,f=new Map;for(const[e,{buffer:t,attributes:s}]of this.vertexBuffers){const n=s.filter((e=>r.has(e.name)));n.length>0&&(o.set(e,n),f.set(e,t))}i=new u.VertexArrayObject(e,t.locations,o,f,s),n.vertexArrays.set(t.stringHash,i)}e.bindVAO(i)}draw(e){if(null==this._boundPart)throw new Error("Mesh.bind() has not been called.");const{start:t,count:r}=this.parts[this._boundPart],{group:s}=this.parts[this._boundPart],{primitive:n,index:i}=this.groups[s];if(i){const s=this.indexBuffers.get(i);if(!s)throw new Error(`Missing index buffer "${i}".`);const{indexType:o}=s.buffer;if(!o)throw new Error("Buffer type error.");e.drawElements(n,r,o,t*a.dataSizeInBytes[o])}else e.drawArrays(n,t,r)}unbind(e){this._boundPart=null,e.bindVAO(null)}destroy(){for(const{vertexArrays:e}of this.groups)for(const[t,r]of e)r.disposeVAOOnly();for(const{buffer:e}of this.vertexBuffers.values())e.dispose();for(const{buffer:e}of this.indexBuffers.values())e.dispose()}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));