// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../definitions","../Technique","../TechniqueType","../shaders/BitmapShader","../../../../../../webgl/enums"],(function(e,i,t,n,a,o){"use strict";const s={nearest:{samplingMode:o.TextureSamplingMode.NEAREST,mips:!1},bilinear:{samplingMode:o.TextureSamplingMode.LINEAR,mips:!1},bicubic:{samplingMode:o.TextureSamplingMode.LINEAR,mips:!1},trilinear:{samplingMode:o.TextureSamplingMode.LINEAR_MIPMAP_LINEAR,mips:!0}},r=(e,i,t)=>{if("dynamic"===t.samplingMode){const{state:t}=e,n=i.resolution/i.pixelRatio/t.resolution,a=Math.round(e.pixelRatio)!==e.pixelRatio,o=n>1.05||n<.95;return t.rotation||o||a||i.isSourceScaled||i.rotation?s.bilinear:s.nearest}return s[t.samplingMode]};class p extends t.Technique{constructor(){super(...arguments),this.name="BrushBitmap",this.type=n.TechniqueType.Bitmap,this.shaders={bitmap:new a.BitmapShader}}render(e,t){const{context:n,renderingOptions:a,painter:p}=e;for(const c of t.bitmaps){const t=c.texture;if(!c.source||!c.isReady||null==t)continue;const l=r(e,c,a);e.timeline.begin(this.name),p.setPipelineState({depth:!1,stencil:{test:{mask:255,ref:c.stencilRef,compare:o.CompareFunction.EQUAL,op:{fail:o.StencilOperation.KEEP,zFail:o.StencilOperation.KEEP,zPass:o.StencilOperation.KEEP}},write:!1},color:{write:[!0,!0,!0,!0],blendMode:"additive"===c.blendFunction?"additive":"composite"}}),c.setSamplingProfile(l);const{coordScale:u,computedOpacity:d,transforms:m}=c,h={texture:{texture:t,unit:i.textureBindingBitmap},dvsMat3:m.displayViewScreenMat3,coordScale:u,opacity:d};p.submitDrawMesh(n,{shader:this.shaders.bitmap,uniforms:{config:h},defines:{bicubic:l===s.bicubic},optionalAttributes:null,useComputeBuffer:!1},p.quadMesh),e.timeline.end(this.name)}}}e.BitmapTechnique=p,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));