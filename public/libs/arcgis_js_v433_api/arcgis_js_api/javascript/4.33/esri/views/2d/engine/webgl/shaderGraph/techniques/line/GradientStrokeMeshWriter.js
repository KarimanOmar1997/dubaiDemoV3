// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../core/screenUtils","../../../../../../../geometry/GeometryCursor","../../../../../../../symbols/cim/enums","../../../definitions","../fill/meshWriterUtils","./gradientStrokeConstants","./LineMeshWriter","../../../../../../webgl/enums"],(function(e,t,i,r,n,s,a,o,c){"use strict";const p={createComputedParams:e=>e,optionalAttributes:o.LineVertexSpec.optionalAttributes,attributes:{...o.LineVertexSpec.attributes,bitset:{type:c.DataType.UNSIGNED_BYTE,count:1,pack:({gradientMethod:e,gradientSizeUnits:t,gradientType:i})=>s.packBitset([[a.bitset.isAlongLine,"alongline"===e.toLowerCase()],[a.bitset.isAbsoluteSize,t===r.SymbolUnits.Absolute],[a.bitset.isDiscrete,"discrete"===i.toLowerCase()]])},tlbr:{type:c.DataType.UNSIGNED_SHORT,count:4,pack:({sprite:e})=>{const{rect:t,width:i,height:r}=e,s=t.x+n.spritePadding+n.gradientTextureExternalPadding,a=t.y+n.spritePadding;return[s,a,s+i-2*n.gradientTextureExternalPadding,a+r]}},accumulatedDistance:{type:c.DataType.HALF_FLOAT,count:1,packTessellation:({distance:e,pathLength:t,distanceOffset:i})=>(i+e)/t},gradientSize:{type:c.DataType.HALF_FLOAT,count:1,pack:({gradientSize:e,gradientSizeUnits:i})=>i===r.SymbolUnits.Relative?e/100:t.pt2px(e)},totalLength:{type:c.DataType.HALF_FLOAT,count:1,packTessellation:({pathLength:e})=>e},segmentDirection:{type:c.DataType.BYTE,count:2,packPrecisionFactor:16,packTessellation:({directionX:e,directionY:t})=>[e,t]}}};class d extends o.LineMeshWriter{get _preventEffectClipping(){return!0}constructor(e,t,i,r){super(e,t,i,r),this.vertexSpec=p,this._tessellationOptions.textured=!0}_write(e,t,r){const n=r??i.GeometryCursor.fromFeatureSetReaderCIM(t);if(!n)return;const{sprite:s}=this.evaluatedMeshParams;this._writeGeometry(e,t,n,s?.textureBinding)}}e.GradientStrokeMeshWriter=d,e.GradientStrokeVertexSpec=p,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));