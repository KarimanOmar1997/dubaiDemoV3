// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../core/screenUtils","../../../../../../../core/libs/gl-matrix-2/math/mat2d","../../../../../../../core/libs/gl-matrix-2/factories/mat2df32","../../../../../../../core/libs/gl-matrix-2/math/vec2","../../../../../../../geometry/GeometryCursor","../../../../../../../symbols/cim/CIMEffects","../../../../../../../symbols/cim/constants","../../../../../../../symbols/cim/enums","../../../../../../../symbols/cim/placements/CIMMarkerPlacementHelper","../../../definitions","../fill/meshWriterUtils","./ComputedMarkerParams","./markerConstants","../mesh/loadGeometryEngine","../mesh/MeshWriter","../../../../../../webgl/enums"],(function(e,t,a,r,s,o,i,n,c,l,d,u,m,p,h,M,y){"use strict";const f=128/Math.PI,x={createComputedParams:e=>m.ComputedMarkerParams.from(e),optionalAttributes:{zoomRange:{type:y.DataType.SHORT,count:2,packPrecisionFactor:d.minMaxZoomPrecisionFactor,pack:({scaleInfo:e},{tileInfo:t})=>u.getMinMaxZoom(e,t)}},attributes:{pos:{type:y.DataType.SHORT,count:2,pack:"position",packPrecisionFactor:10},id:{type:y.DataType.UNSIGNED_BYTE,count:3,pack:"id"},bitset:{type:y.DataType.UNSIGNED_BYTE,count:1,pack:({sprite:e,alignment:t,scaleSymbolsProportionally:a,overrideOutlineColor:r,colorLocked:s})=>{let o=0;return e.sdf&&(o|=u.getBitMask(p.MarkerConstants.bitset.isSDF)),t===c.Alignment.MAP&&(o|=u.getBitMask(p.MarkerConstants.bitset.isMapAligned)),a&&(o|=u.getBitMask(p.MarkerConstants.bitset.scaleSymbolsProportionally)),r&&(o|=u.getBitMask(p.MarkerConstants.bitset.overrideOutlineColor)),s&&(o|=u.getBitMask(p.MarkerConstants.bitset.colorLocked)),o}},offset:{type:y.DataType.HALF_FLOAT,count:2,packAlternating:{count:4,pack:({angle:e,computedWidth:t,computedHeight:o,anchorX:i,anchorY:n,offsetX:c,offsetY:l,rotateClockwise:d})=>{const u=function(e,t,s,o,i=!1){const n=r.create(),c=i?1:-1;return a.identity(n),(t||s)&&a.translate(n,n,[t,-s]),o&&a.rotate(n,n,.017453292519944444*c*-o),n}(0,c,l,-e,d),m=-(.5+i)*t,p=-(.5-n)*o,h=[m,p],M=[m+t,p],y=[m,p+o],f=[m+t,p+o];return s.transformMat2d(h,h,u),s.transformMat2d(M,M,u),s.transformMat2d(y,y,u),s.transformMat2d(f,f,u),[h,M,y,f]}}},textureUV:{type:y.DataType.SHORT,count:2,packPrecisionFactor:4,packAlternating:{count:4,pack:({texXmax:e,texXmin:t,texYmax:a,texYmin:r})=>[[t,r],[e,r],[t,a],[e,a]]}},color:{type:y.DataType.UNSIGNED_BYTE,count:4,normalized:!0,pack:({color:e})=>u.processColorInput(e)},outlineColor:{type:y.DataType.UNSIGNED_BYTE,count:4,normalized:!0,pack:({outlineColor:e})=>u.processColorInput(e)},sizing:{type:y.DataType.UNSIGNED_BYTE,count:4,pack:({rawWidth:e,rawHeight:t,outlineSize:a,referenceSize:r})=>{const s=Math.max(e,t);return[u.packByteSqrt(s,128),u.packByteSqrt(a,128),u.packByteSqrt(r,128),0]}},placementAngle:{type:y.DataType.UNSIGNED_BYTE,count:1,packTessellation:({placementAngle:e})=>{return t=e*f,t%=256,Math.abs(t>=0?t:t+256);var t}},sdfDecodeCoeff:{type:y.DataType.UNSIGNED_SHORT,count:1,packPrecisionFactor:64,pack:({sdfDecodeCoeff:e})=>e}}};class g extends M.MeshWriter{constructor(){super(...arguments),this.vertexSpec=x}getBoundsInfo(){return this.evaluatedMeshParams.boundsInfo}_write(e,t,a){const r=this.evaluatedMeshParams.sprite?.textureBinding,s=t.getDisplayId();e.recordStart(this.instanceId,this.attributeLayout,r);const o=this.evaluatedMeshParams.minPixelBuffer,c=Math.max(this.evaluatedMeshParams.computedWidth,o),l=Math.max(this.evaluatedMeshParams.computedHeight,o),d=-this.evaluatedMeshParams.anchorX*this.evaluatedMeshParams.computedWidth,u=this.evaluatedMeshParams.anchorY*this.evaluatedMeshParams.computedHeight,m=this.evaluatedMeshParams.offsetX+d,p=-this.evaluatedMeshParams.offsetY+u;if(null!=this.evaluatedMeshParams.placement){let r=null;if(null!=a){const e=Math.max(this.evaluatedMeshParams.computedWidth,this.evaluatedMeshParams.computedHeight);if(r=i.clipCursorToTileExtent(a,2*e,!1),null===r)return}this._writePlacedMarkers(e,t,r,c,l)}else if(a?.nextPath()){a.nextPoint();const t=a.x,r=a.y;e.recordBounds(t+m,r+p,c,l),this._writeQuad(e,s,t,r)}else if("esriGeometryPolygon"===t.geometryType){const a=t.readCentroidForDisplay();if(!a)return;const[r,o]=a.coords;e.recordBounds(r+m,o+p,c,l),this._writeQuad(e,s,r,o)}else if("esriGeometryPoint"===t.geometryType){const a=t.readXForDisplay(),r=t.readYForDisplay();e.recordBounds(a+m,r+p,c,l),this._writeQuad(e,s,a,r)}else{const a=t.readGeometryForDisplay();a?.forEachVertex(((t,a)=>{e.recordBounds(t+m,a+p,c,l),Math.abs(t)>n.maxTileCoordValue||Math.abs(a)>n.maxTileCoordValue||this._writeQuad(e,s,t,a)}))}e.recordEnd()}_writePlacedMarkers(e,a,r,s,i){const c=r??o.GeometryCursor.fromFeatureSetReaderCIM(a);if(!c)return;const d=l.CIMMarkerPlacementHelper.getPlacement(c,-1,this.evaluatedMeshParams.placement,t.pt2px(1),e.id,h.getGeometryEngine());if(!d)return;const u=a.getDisplayId();let m=d.next();const p=this.evaluatedMeshParams.offsetX,M=-this.evaluatedMeshParams.offsetY;for(;null!=m;){const t=m.tx,a=-m.ty;if(Math.abs(t)>n.maxTileCoordValue||Math.abs(a)>n.maxTileCoordValue){m=d.next();continue}const r=-m.getAngle();e.recordBounds(t+p,a+M,s,i),this._writeQuad(e,u,t,a,r),m=d.next()}}_writeQuad(e,t,a,r,s){const o=e.vertexCount(),i=null==s?null:{placementAngle:s};this._writeVertex(e,t,a,r,i),e.indexWrite(o+0),e.indexWrite(o+1),e.indexWrite(o+2),e.indexWrite(o+1),e.indexWrite(o+3),e.indexWrite(o+2)}}e.MarkerMeshWriter=g,e.MarkerVertexSpec=x,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));