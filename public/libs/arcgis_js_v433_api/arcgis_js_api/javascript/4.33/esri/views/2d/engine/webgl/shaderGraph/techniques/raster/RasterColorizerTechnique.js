// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../Technique","../TechniqueType","../shaders/raster/RasterColorizerLUTShader","../shaders/raster/RasterColorizerShadedReliefShader","../shaders/raster/RasterColorizerStretchShader","../../../../../../webgl/enums"],(function(e,t,i,o,r,n,s){"use strict";class a extends t.Technique{constructor(){super(...arguments),this.name="BrushRasterColorizer",this.type=i.RasterTechniqueType.RasterColorizer,this.shaders={lut:new o.RasterColorizerLUTShader,stretch:new n.RasterColorizerStretchShader,shadedRelief:new r.RasterColorizerShadedReliefShader}}render(e,t){for(const i of t.bitmaps){if(!i.source||i.suspended)continue;e.timeline.begin(this.name);const{painter:t}=e;t.setPipelineState({depth:!1,stencil:{test:{mask:255,ref:i.stencilRef,compare:s.CompareFunction.EQUAL,op:{fail:s.StencilOperation.KEEP,zFail:s.StencilOperation.KEEP,zPass:s.StencilOperation.KEEP}},write:!1},color:{write:[!0,!0,!0,!0],blendMode:"composite"}}),i.updateTexture(e),i.processedTexture||i.updateProcessedTexture();const{type:o}=i.symbolizerParameters,r="stretch"===o?this._getStretchOptions(i):"lut"===o?this._getLutOptions(i):this._getShadedReliefOptions(i);"bilinear"!==i.interpolation||e.context.capabilities.textureFloatLinear||(r.defines.bilinear=!0),t.submitDrawMesh(e.context,r,t.quadMesh),e.timeline.end(this.name)}}_getLutOptions(e){const{config:t,projectionConfig:i,colormapConfig:o,pixelMaskConfig:r,projectionDefines:n}=this._getCommonConfig(e),s=this._getInterpolationDefines("nearest",!1);return{shader:this.shaders.lut,uniforms:{projectionConfig:i,config:t,colormapConfig:o,pixelMaskConfig:r},defines:{...n,...s,applyPixelMask:!!r},optionalAttributes:null,useComputeBuffer:!1}}_getStretchOptions(e){const t=e.symbolizerParameters,{config:i,projectionConfig:o,colormapConfig:r,pixelMaskConfig:n,projectionDefines:s}=this._getCommonConfig(e),a=this._getInterpolationDefines(e.interpolation,1===t.bandCount);return{shader:this.shaders.stretch,uniforms:{projectionConfig:o,config:i,stretchConfig:t,colormapConfig:r,pixelMaskConfig:n},defines:{...s,...a,isMultiband:t.bandCount>1,applyColormap:!!r,useGamma:t.useGamma,noOp:e.isRendereredSource&&!e.processed,applyPixelMask:!!n},optionalAttributes:null,useComputeBuffer:!1}}_getShadedReliefOptions(e){const t=e.symbolizerParameters,{config:i,projectionConfig:o,colormapConfig:r,pixelMaskConfig:n,projectionDefines:s}=this._getCommonConfig(e),a=this._getInterpolationDefines(e.interpolation,!0);return{shader:this.shaders.shadedRelief,uniforms:{projectionConfig:o,config:i,hillshadeConfig:t,colormapConfig:r,pixelMaskConfig:n},defines:{...s,...a,isMultidirectional:t.hillshadeType>0,applyColormap:!!r,applyPixelMask:!!n},optionalAttributes:null,useComputeBuffer:!1}}_getCommonConfig(e){const{coordScale:t,computedOpacity:i,transforms:o}=e,{names:r,textures:n}=e.getTextures({useProcessedTexture:e.processed}),s=n[r.indexOf("u_image")],a=e.getRasterTextureSize(),l={texture:{texture:s,unit:0},dvsMat3:o.displayViewScreenMat3,coordScale:t,srcImageSize:a,opacity:i},p=n[r.indexOf("u_transformGrid")],{transformGrid:c}=e,u=!(!p||!c),f=u?{transformTexture:{texture:p,unit:2},targetImageSize:[e.width,e.height],transformSpacing:c.spacing,transformGridSize:c.size}:void 0,d=n[r.indexOf("u_colormap")],{colormap:m,colormapOffset:g}=e.symbolizerParameters,h=d&&m?{colormapTexture:{texture:d,unit:1},colormapOffset:g??0,colormapMaxIndex:m.length/4-1}:void 0,C=n[r.indexOf("u_mask")];return{config:l,projectionConfig:f,colormapConfig:h,pixelMaskConfig:C?{maskTexture:{texture:C,unit:3}}:void 0,projectionDefines:{applyProjection:u,lookupProjection:u&&1===c.spacing[0]}}}_getInterpolationDefines(e,t){const i="bilinear"===e&&t;return{bilinear:i,bicubic:"cubic"===e,nearestOnEdge:i}}}e.RasterColorizerTechnique=a,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));