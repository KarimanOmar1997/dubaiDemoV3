// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../../core/maybe","../../../../definitions","../../Technique","./textureUtils","../../../../../../../webgl/enums","../../../../../../../webgl/rasterUtils"],(function(e,t,r,n,s,a,o){"use strict";class i extends n.Technique{shutdown(e){super.shutdown(e),this._fbo?.dispose(),this._fbo=void 0}render(e,n){const{rasterFunction:i}=e;if(!i)return;const{context:u}=e,c="indexedColormap"in i.parameters?o.createColormapTexture(u,i.parameters.indexedColormap):void 0,d="Reproject"===i.name,l=u.getBoundFramebufferObject(),p=u.getViewport();for(const o of n.bitmaps){const l=d?!(o.rasterTexture&&o.projected):!o.processed;if(!o.source||!l||o.suspended)continue;e.timeline.begin(this.name);const{painter:p}=e;p.setPipelineState({depth:!1,stencil:{test:!1,write:!1},color:{write:[!0,!0,!0,!0],blendMode:"custom",blendParameters:{srcRGB:a.BlendFactor.ONE,dstRGB:a.BlendFactor.ZERO,srcAlpha:a.BlendFactor.ONE,dstAlpha:a.BlendFactor.ZERO}}}),d||(o.processedTexture=t.disposeMaybe(o.processedTexture)),o.updateTexture(e);const[g,m]=o.getRasterTextureSize(d),h=g===r.tileSize&&m===r.tileSize,f=h?n.processorFbo:s.createNewFBO(u,g,m);u.bindFramebuffer(f),u.setViewport(0,0,f.width,f.height),this._process(e,o,c);const x=s.createProcessedTexture(e.context,g,m);if(f.copyToTexture(0,0,g,m,0,0,x),d)o.rasterTexture=x;else{const t=e.hasBranches?i.id:0;o.functionTextures[t]=x}h||f.dispose(),e.timeline.end(this.name)}c?.dispose(),u.bindFramebuffer(l),u.setViewport(p.x,p.y,p.width,p.height)}_getCommonConfig(e,t){const{rasterFunction:r,hasBranches:n}=e,{raster:s,rasters:a}=r.parameters,o=n?s?.id??a?.filter((e=>"Constant"!==e.name))?.[0]?.id??-1:0,i=t.functionTextures[o]??t.rasterTexture,u="Reproject"===r.name;return{texture:{texture:i,unit:0},srcImageSize:t.getRasterTextureSize(u)}}_getMultipleInputConfig(e,t){return t?.length?2===t.length?{twoRasterConfig:this._getTwoInputConfig(t,e)}:3===t.length?{threeRasterConfig:this._getThreeInputConfig(t,e)}:{}:{}}_getConstantCount(e){return e?.filter((e=>"Constant"===e.name)).length??0}_getTextures(e,t){return e.filter((e=>"Constant"!==e.name)).map((e=>null!=e.id&&"Identity"!==e.name?t.functionTextures[e.id]:t.rasterTexture))}_getTwoInputConfig(e,t){const r=this._getTextures(e,t),n=r[1]?{texture:r[1],unit:1}:void 0,s=e.findIndex((e=>"Constant"===e.name)),a=0===s?new Float32Array([0,1,0,1,0,0,0,0,0]):new Float32Array([1,0,0,0,1,0,0,0,0]);return{image1:n,image1Const:s>-1?e[s].parameters.value:0,imageSwap:a}}_getThreeInputConfig(e,t){const r=this._getTextures(e,t);let n=0,s=0,a=new Float32Array([1,0,0,0,1,0,0,0,1]);const o=r[1]?{texture:r[1],unit:1}:void 0,i=r[2]?{texture:r[2],unit:2}:void 0,u=[];if(e.forEach(((e,t)=>"Constant"===e.name&&u.push(t))),1===u.length)n=e[u[0]].parameters.value,a=0===u[0]?new Float32Array([0,1,0,0,0,1,1,0,0]):1===u[0]?new Float32Array([1,0,0,0,0,1,0,1,0]):new Float32Array([1,0,0,0,1,0,0,0,1]);else if(2===u.length){n=e[u[0]].parameters.value,s=e[u[1]].parameters.value;const t=e.findIndex((e=>"Constant"!==e.name));a=0===t?new Float32Array([1,0,0,0,1,0,0,0,1]):1===t?new Float32Array([0,1,0,1,0,0,0,0,1]):new Float32Array([0,0,1,1,0,0,0,1,0])}return{image1:o,image2:i,image1Const:n,image2Const:s,imageSwap:a}}}e.BaseRasterProcessorTechnique=i,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));