// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../../chunks/tslib.es6","../../../GraphShaderModule","../../../graph/glsl","./projection"],(function(e,o,t,i,r){"use strict";class n extends t.VertexInput{}o.__decorate([t.location(0,i.Vec2)],n.prototype,"position",void 0);class p extends t.FragmentInput{}class a extends t.UniformGroup{}o.__decorate([t.uniform(i.Sampler2D)],a.prototype,"texture",void 0),o.__decorate([t.uniform(i.Mat3)],a.prototype,"dvsMat3",void 0),o.__decorate([t.uniform(i.Vec2)],a.prototype,"coordScale",void 0),o.__decorate([t.uniform(i.Vec2)],a.prototype,"srcImageSize",void 0),o.__decorate([t.uniform(i.Float)],a.prototype,"opacity",void 0);class c extends t.UniformGroup{}o.__decorate([t.uniform(i.Sampler2D)],c.prototype,"maskTexture",void 0);class s extends t.GraphShaderModule{constructor(){super(...arguments),this.applyProjection=!0,this.lookupProjection=!1,this.bilinear=!1,this.bicubic=!1,this.nearestOnEdge=!1,this.applyPixelMask=!1}vertex(e){const o=e.position,{dvsMat3:t,coordScale:r}=this.config,n=t.multiply(new i.Vec3(o.multiply(r),1));return{uv:o,glPosition:new i.Vec4(n,1)}}fragment(e){const o=new t.FragmentOutput,n=r.getPixelLocation(e.uv,this.applyProjection?this.projectionConfig:void 0,this.lookupProjection),p=i.ifElse(r.isOutside(n),new i.Vec4(0,0,0,0),this._colorize(n));let a=p.a.multiply(this.config.opacity);if(this.applyPixelMask){const o=this._getPixelMask(e.uv);a=a.multiply(o)}return o.fragColor=new i.Vec4(p.rgb,1).multiply(a),o}_getPixel(e){const{config:o,bicubic:t,bilinear:i,nearestOnEdge:n}=this;return r.getPixel(e,o,{bicubic:t,bilinear:i,nearestOnEdge:n})}_getPixelMask(e){const{maskTexture:o}=this.pixelMaskConfig,t=i.texture2D(o,e);return i.sign(t.a)}}o.__decorate([t.define],s.prototype,"applyProjection",void 0),o.__decorate([t.define],s.prototype,"lookupProjection",void 0),o.__decorate([t.define],s.prototype,"bilinear",void 0),o.__decorate([t.define],s.prototype,"bicubic",void 0),o.__decorate([t.define],s.prototype,"nearestOnEdge",void 0),o.__decorate([t.define],s.prototype,"applyPixelMask",void 0),o.__decorate([t.uniform(a)],s.prototype,"config",void 0),o.__decorate([t.option(r.ProjectionConfig)],s.prototype,"projectionConfig",void 0),o.__decorate([t.option(c)],s.prototype,"pixelMaskConfig",void 0),o.__decorate([o.__param(0,t.input(n))],s.prototype,"vertex",null),o.__decorate([o.__param(0,t.input(p))],s.prototype,"fragment",null),e.BaseRasterColorizerShader=s,e.PixelMaskConfig=c,e.RasterColorizerFragmentInput=p,e.RasterConfig=a,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));