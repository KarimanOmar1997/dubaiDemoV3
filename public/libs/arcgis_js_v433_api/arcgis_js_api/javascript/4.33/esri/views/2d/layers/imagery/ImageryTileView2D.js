// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../core/has","../../../../core/accessorSupport/decorators/property","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../layers/support/rasterDatasets/datasetUtils","../../../../layers/support/rasterFormats/pixelRangeUtils","../../../../layers/support/rasterFunctions/clipUtils","../../engine/imagery/RasterTileContainer","./BaseImageryTileSubView2D","../support/util"],(function(e,t,r,s,i,n,a,o,l,c,u,p,d){"use strict";return e.default=class extends p.BaseImageryTileSubView2D{constructor(){super(...arguments),this.type="raster"}get canUseWebGLForProcessing(){const{loaded:e,symbolizer:t}=this.layer;if(!e||!t)return!1;const s=t.lookup.colormapLut?.indexedColormap,i=s&&s.length>this._maxIndexedColormapSize,n=l.getBytesPerPixel(this.layer.serviceRasterInfo);return!(r("ios")&&n>4)&&this.useWebGLForProcessing&&t.canRenderInWebGL&&!i&&!("majority"===this.layer.interpolation&&d.canUseMajorityInterpolationOnDataSource(this.layer))}attach(){super.attach(),this.container=new u.RasterTileContainer(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}fetchTile(e,t){return this.layer.fetchTile(e.level,e.row,e.col,t)}updateRasterFunctionParameters(){const{raster:e,type:t}=this.layer,{container:r}=this;if("Function"!==e.datasetFormat||"wcs"===t)return r.rasterFunctionChain=null,r.children.forEach((e=>{const{bitmap:t}=e;t&&(t.suspended=!0,t.processed=!1,t.projected&&(t.invalidateTexture(),t.rasterTexture=null))})),void(this._rasterFunctionState="na");const s=this._rasterFunctionState,{rasterFunction:i,primaryRasters:n}=e,a=i.supportsGPU&&(!n||n.rasters.length<=1),o=a?i.flatWebGLFunctionChain:null,{renderer:l}=this.layer,c=!a||!o?.functions.length||"raster-stretch"===l?.type&&l.dynamicRangeAdjustment||!this.canUseWebGLForProcessing;r.rasterFunctionChain=c?null:this._addProjection(o);const u=null==i?"na":r.rasterFunctionChain?"gpu":"cpu",p=s===u||"na"===s&&"cpu"===u&&0===o?.functions?.length;r.children.forEach((e=>{const{bitmap:t}=e;t&&(t.suspended=!p,t.processed=!1,t.processedTexture=null)})),this._rasterFunctionState=u}async updateTileSource(e,t){const r=this._getBandIds(),s=this._getLayerInterpolation(),{canUseWebGLForProcessing:i}=this,{source:n,globalSymbolizerParams:a,suspended:l,coords:u,resolution:p}=t,d=this.layerView.hasTilingEffects?a:t.symbolizerParams,{bitmap:h}=e;if([h.x,h.y]=u,h.resolution=p,null!=n?.pixelBlock){const e={extent:n.extent,pixelBlock:n.pixelBlock,srcPixelSize:n.srcTilePixelSize};if(h.rawPixelData=e,i)h.source=n.pixelBlock,h.isRendereredSource=!1;else{const t=await this.layer.applyRenderer(e,"stretch"===a?.type?a:void 0);h.source=t,h.isRendereredSource=!0}h.symbolizerParameters=i?d:null,h.transformGrid=i?n.transformGrid:null}else{const e=this.createEmptyTilePixelBlock();h.source=e,h.symbolizerParameters=i?d:null,h.transformGrid=null}h.bandIds=i?r:null,h.width=this._tileInfoView.tileInfo.size[0],h.height=this._tileInfoView.tileInfo.size[1],h.interpolation=s,h.suspended=l;const{raster:y}=this.layer;if(o.isFunctionRaster(y)){const t=y.getClippingGeometry(this.layerView.view.spatialReference);if(t){const r=y.getTileExtentFromTileInfo(e.key.level,e.key.row,e.key.col,this._tileInfoView.tileInfo);h.mask=c.convertGeometryToMask({srcExtent:r,geometry:t,size:[h.width,h.height]})}}h.invalidateTexture()}async updateTileSymbolizerParameters(e,t){const{local:r,global:s}=t,i=this._getBandIds(),n=this._getLayerInterpolation(),{canUseWebGLForProcessing:a}=this,{bitmap:o}=e,{rawPixelData:l}=o;a||null==l?(o.isRendereredSource&&null!=l&&(o.source=l.pixelBlock),o.isRendereredSource=!1):(o.source=await this.layer.applyRenderer(l,"stretch"===s?.type?s:void 0),o.isRendereredSource=!0),o.symbolizerParameters=a?this.layerView.hasTilingEffects?s:r:null,o.bandIds=a?i:null,o.interpolation=n,o.suspended=!1}_getLayerInterpolation(){const{interpolation:e,renderer:t}=this.layer;if(!t)return e;const r=t.type;return"raster-colormap"===r||"unique-value"===r?"nearest":"raster-stretch"===t.type&&null!=t.colorRamp?"bilinear"===e||"cubic"===e?"bilinear":"nearest":e}_addProjection(e){return e?.functions?.length&&!e.hasFocalFunction&&e.functions.unshift({name:"Reproject",parameters:{targetImageSize:this._tileInfoView.tileInfo.size,requireNNEdge:e.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1}),e}},t.__decorate([s.property()],e.default.prototype,"canUseWebGLForProcessing",null),t.__decorate([s.property()],e.default.prototype,"container",void 0),t.__decorate([s.property()],e.default.prototype,"layer",void 0),t.__decorate([s.property()],e.default.prototype,"type",void 0),e.default=t.__decorate([a.subclass("esri.views.2d.layers.imagery.ImageryTileView2D")],e.default),e.default}));