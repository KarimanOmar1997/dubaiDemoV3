// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","./TileKey"],(function(e,s){"use strict";function i(e,s){const i=new Set;for(const t of e instanceof Set?e.values():e.keys())s.has(t)||i.add(t);return i}class t{constructor(e,s,i){const t=i?e.getTileCoverage(i,0,!0,"closest"):null,r=e.getTileCoverage(s,0,!0,"closest");if(this._tileKeys=new Map,t)for(const e of t.keys())this._tileKeys.set(e.id,e);if(r)for(const e of r.keys())this._tileKeys.set(e.id,e)}get coverageSet(){return new Set(this._tileKeys.keys())}keys(){return this._tileKeys.values()}}class r{constructor(e){this.version=e}}e.FeatureTileSubscriptionManager=class{constructor(e){this._subscriptions=new Map,this._visible=new Set,this._paused=new Set,this._version=0,this._config=e}destroy(){}get coverageSet(){return this._coverage?.coverageSet??new Set}get subscriptions(){return new Set(this._subscriptions.keys())}suspend(){this._suspendedOverage=this._coverage,this._coverage=null,this._updateSubscriptions()}resume(){null==this._coverage&&(this._coverage=this._suspendedOverage,this._suspendedOverage=null,this._updateSubscriptions())}update(e,s){return this._version=(this._version+1)%Number.MAX_SAFE_INTEGER,this._updateCoverage(e,s),this._updateSubscriptions(),new Set(this._visible)}updateVisibility(){const e=this._updateVisibility();return this._visible=e,this._visible}_updateCoverage(e,s){this._coverage=new t(this._config.tileInfoView,e,s)}_updateSubscriptions(){const e=this.coverageSet,s=this._updateVisibility(),t=i(s,e),n=i(this._subscriptions,s),o=i(e,this._subscriptions),a=i(n,e),u=i(t,a),c=i(u,this._paused);this._visible=s;for(const e of o.values())this._subscriptions.set(e,new r(this._version));for(const e of c.values())this._paused.add(e);for(const e of a.values())this._subscriptions.delete(e),this._paused.delete(e);(o.size||a.size||c.size)&&this._sendUpdateSubscriptions(o,a,c)}_sendUpdateSubscriptions(e,s,i){const t=Array.from(e.values()).map((e=>({tileId:e,version:this._subscriptions.get(e).version})));this._config.updateSubscriptions({subscribe:t,unsubscribe:Array.from(s.values()),pause:Array.from(i.values())})}_updateVisibility(){const e=new Set,s=new Set;if(!this._coverage)return e;for(const i of this._coverage.keys())this._config.isDone(i)?e.add(i.id):this._addVisibleParent(e,s,i)||this._addVisibleChildren(e,i)||e.add(i.id);return e}_addVisibleParent(e,i,t){let r=!1;for(const n of this._visible.values())new s(n).containsChild(t)&&(e.add(n),i.add(n),r=!0);return r}_addVisibleChildren(e,i){let t=!1;for(const r of this._visible.values()){const n=new s(r);i.containsChild(n)&&(e.add(r),t=!0)}return t}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));