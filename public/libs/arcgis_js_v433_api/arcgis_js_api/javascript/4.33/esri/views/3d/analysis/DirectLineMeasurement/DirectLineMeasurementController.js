// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/Logger","../../../../core/quantityUtils","../../../../core/reactiveUtils","../../../../core/unitUtils","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../interfaces","../support/projectionUtils","../../../support/euclideanLengthMeasurementUtils"],(function(e,t,n,i,r,o,a,s,l,c,u,d,p,v){"use strict";e.DirectLineMeasurementController=class extends n{constructor(e){super(e)}initialize(){this.addHandles([o.watch((()=>({viewData:this.viewData,startPoint:this.analysis.startPoint})),(({viewData:e,startPoint:t})=>{e.elevationAlignedStartPoint=this._applyProjectionAndElevationAlignment(t)}),o.syncAndInitial),o.watch((()=>({viewData:this.viewData,endPoint:this.analysis.endPoint})),(({viewData:e,endPoint:t})=>{e.elevationAlignedEndPoint=this._applyProjectionAndElevationAlignment(t)}),o.syncAndInitial),o.watch((()=>({result:this._computedResult,viewData:this.viewData})),(({result:e,viewData:t})=>{t.result=e}),o.syncAndInitial)])}_applyProjectionAndElevationAlignment(e){if(null==e)return e;const{spatialReference:t,elevationProvider:n}=this.view;return p.applyProjectionAndElevationAlignment(e,t,n)??(p.logFailedGeometryProjectionError(this.analysis,e.spatialReference,i.getLogger(this)),null)}get _computedResult(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t,measurementMode:n,unit:i}=this.viewData;if(null==e||null==t)return null;const o=v.euclideanDistanceBetweenPoints(e,t),s=this.geodesicLengthMeasurementUtils.geodesicDistanceBetweenPoints(e,t);if(null==o)return null;let l,c;switch(n){case d.MeasurementMode.Auto:c=null!=s?"geodesic":"euclidean",l=s??o.horizontal;break;case d.MeasurementMode.Geodesic:if(null==s)return null;c="geodesic",l=s;break;case d.MeasurementMode.Euclidean:c="euclidean",l=o.horizontal}let u=o.direct,p=o.vertical;const y=a.adaptiveLengthUnit(u.value,u.unit,i),h=a.adaptiveLengthUnit(l.value,l.unit,i),m=a.adaptiveVerticalLengthUnit(p.value,p.unit,i);return u=r.toUnit(u,y),l=r.toUnit(l,h),p=r.toUnit(p,m),{mode:c,directDistance:u,horizontalDistance:l,verticalDistance:p}}},t.__decorate([s.property({constructOnly:!0})],e.DirectLineMeasurementController.prototype,"view",void 0),t.__decorate([s.property({constructOnly:!0})],e.DirectLineMeasurementController.prototype,"analysis",void 0),t.__decorate([s.property({constructOnly:!0})],e.DirectLineMeasurementController.prototype,"viewData",void 0),t.__decorate([s.property({constructOnly:!0})],e.DirectLineMeasurementController.prototype,"geodesicLengthMeasurementUtils",void 0),t.__decorate([s.property()],e.DirectLineMeasurementController.prototype,"_computedResult",null),e.DirectLineMeasurementController=t.__decorate([u.subclass("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],e.DirectLineMeasurementController),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));