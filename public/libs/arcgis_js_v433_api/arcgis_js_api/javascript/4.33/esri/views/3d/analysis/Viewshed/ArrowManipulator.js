// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../Color","../../../../core/Handles","../../../../core/reactiveUtils","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../Slice/sliceToolConfig","./ViewshedConfiguration","../../interactive/Manipulator3D","../../interactive/RenderObject","../../webgl-engine/lib/basicInterfaces","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/Material","../../webgl-engine/materials/ColorMaterial","../../../interactive/interfaces"],(function(e,t,a,r,i,o,n,l,s,c,u,d,g,p,f,h,m){"use strict";class M extends u.Manipulator3D{constructor(e,t){super({view:e,autoScaleRenderObjects:!1,worldSized:!1,radius:c.viewshedToolManipulatorConfiguration.collisionRadius}),this._handles=new a,this._setupManipulatorVisual(t)}destroy(){this._handles.remove(),super.destroy()}_setupManipulatorVisual(e){const t=this._createMaterial(),a=[l.fromValues(0,0,0),l.fromValues(0,0,1)],r=p.createTubeGeometry(t,a,e,16,!1),u=p.createTubeGeometry(t,a,e*s.displayFocusMultiplier,16,!1),g=b(!1,t,e),f=b(!0,t,e),h=o.create();i.fromTranslation(h,a[a.length-1]),i.mul(h,h,i.fromXRotation(w,Math.PI/2)),i.mul(h,h,i.fromYRotation(w,Math.PI/2)),g.transformation=h,f.transformation=h,this.renderObjects=[new d.RenderObject(r,m.ManipulatorStateFlags.Unfocused),new d.RenderObject(u,m.ManipulatorStateFlags.Focused),new d.RenderObject(g,m.ManipulatorStateFlags.Unfocused),new d.RenderObject(f,m.ManipulatorStateFlags.Focused)];const M=l.fromValues(0,c.viewshedToolManipulatorConfiguration.getScaleOrientArrowTipLength(!0),0),v=n.transformMat4(M,M,h),O=[...a,v];this.collisionType={type:"line",paths:[O]}}_createMaterial(){const e=new h.ColorMaterial({cullFace:g.CullFaceOptions.Back,renderOccluded:f.RenderOccludedFlag.OccludeAndTransparent,isDecoration:!0});return this._handles.add(r.watch((()=>t.toUnitRGBA(this.view.effectiveTheme.accentColor)),(t=>e.setParameters({color:t})),r.initial)),e}}function b(e,t,a){const r=c.viewshedToolManipulatorConfiguration.getScaleOrientArrowTipLength(e);let i=2*a;e&&(i*=s.displayFocusMultiplier);const o=r/2;return p.createExtrudedTriangle(t,r,o,o,i,0)}const w=o.create();e.ArrowManipulator=M,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));