// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../core/libs/gl-matrix-2/factories/vec3f64","./ChapmanApproximation.glsl","../../../chunks/ChapmanAtmosphere.glsl","../webgl-engine/core/shaderTechnique/ReloadableShaderModule","../webgl-engine/core/shaderTechnique/ShaderTechnique","../../webgl/enums","../../webgl/renderState"],(function(e,r,a,n,t,o,i,s,l){"use strict";class c extends n.ChapmanApproximationParameters{constructor(){super(...arguments),this.innerFadeDistance=0,this.altitudeFade=0,this.backgroundColor=a.create()}}class d extends i.ShaderTechnique{constructor(r,a){super(r,a,new o.ReloadableShaderModule(t.ChapmanAtmosphere,(()=>new Promise(((r,a)=>e(["./ChapmanAtmosphere.glsl"],r,a))))))}initializePipeline(e){return l.makePipelineState({blending:e.reduced?l.copySource:l.simpleBlendingParams(s.BlendFactor.SRC_ALPHA,s.BlendFactor.ONE_MINUS_SRC_ALPHA),depthTest:{func:e.reduced?s.CompareFunction.ALWAYS:s.CompareFunction.LEQUAL},colorWrite:l.defaultColorWrite})}}r.ChapmanAtmospherePassParameters=c,r.ChapmanAtmosphereTechnique=d,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})}));