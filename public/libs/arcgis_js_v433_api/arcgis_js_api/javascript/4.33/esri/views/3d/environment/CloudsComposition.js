// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/maybe","../../../core/reactiveUtils","../../../core/Logger","../../../core/has","../../../core/RandomLCG","../../../core/Error","../../../core/accessorSupport/decorators/subclass","../../../geometry/ellipsoidUtils","../webgl","./CloudsCompositionTechnique","../webgl-engine/effects/OpaqueEnvironment","../webgl-engine/lib/basicInterfaces","../webgl-engine/lib/glUtil3D","../../webgl/enums"],(function(e,i,t,s,n,o,r,a,d,l,c,u,h,p,m,b){"use strict";e.CloudsComposition=class extends h.OpaqueEnvironment{constructor(e){super(e),this._planetRadius=l.getReferenceEllipsoid(e.view.spatialReference).radius}initialize(){this.techniques.precompile(u.CloudsCompositionTechnique),this.addHandles([s.watch((()=>null!=this.view.environment.weather&&this.view.environment.atmosphereEnabled),(e=>e?this._enable():this._disable()),s.initial)])}destroy(){this._vao=t.disposeMaybe(this._vao)}render(e){const i=e.find((({name:e})=>e===c.InternalRenderCategory.OPAQUE_ENVIRONMENT)),t=this.bindParameters.clouds;if(!t.data)return i;const s=this.techniques.get(u.CloudsCompositionTechnique);if(!s.compiled)return this.requestRender(p.RenderRequestType.UPDATE),i;const n=this.renderingContext;this._vao??=m.createQuadVAO(n);const o=n.bindTechnique(s,this.bindParameters);return n.bindVAO(this._vao),o.assertCompatibleVertexAttributeLocations(this._vao),n.drawArrays(b.PrimitiveType.TRIANGLE_STRIP,0,4),t.isFading&&this.requestRender(p.RenderRequestType.UPDATE),i}},e.CloudsComposition=i.__decorate([d.subclass("esri.views.3d.environment.CloudsComposition")],e.CloudsComposition),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));