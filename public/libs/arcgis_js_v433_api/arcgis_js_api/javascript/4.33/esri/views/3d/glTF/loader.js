// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Logger","../../../core/libs/gl-matrix-2/factories/mat4f64","./LoaderResult","./internal/Resource","../../webgl/enums"],(function(e,t,o,r,s,a){"use strict";let i=0;function n(e){const t=e.json;let o=null;return t.nodes.forEach((e=>{const t=e.extras;null!=t&&(t.ESRI_proxyEllipsoid||t.ESRI_lod)&&(o=t)})),o}function l(e){return e.extensions?.MSFT_lod&&Array.isArray(e.extensions.MSFT_lod.ids)}function u(e,t,o){const s=t=>{const s=`${o}_tex_${t&&t.id}${t?.name?"_"+t.name:""}`;if(t&&!e.textures.has(s)){const o=r.makeTextureSource(t.data,{wrap:{s:t.wrapS,t:t.wrapT},mipmap:c.has(t.minFilter),noUnpackFlip:!0});e.textures.set(s,o)}return s},a=`${o}_mat_${t.id}_${t.name}`;if(!e.materials.has(a)){const o=r.makeMaterialParameters({color:[t.color[0],t.color[1],t.color[2]],opacity:t.color[3],alphaMode:t.alphaMode,alphaCutoff:t.alphaCutoff,doubleSided:t.doubleSided,colorMixMode:t.ESRI_externalColorMixMode,colorTexture:t.colorTexture?s(t.colorTexture):void 0,normalTexture:t.normalTexture?s(t.normalTexture):void 0,occlusionTexture:t.occlusionTexture?s(t.occlusionTexture):void 0,emissiveTexture:t.emissiveTexture?s(t.emissiveTexture):void 0,metallicRoughnessTexture:t.metallicRoughnessTexture?s(t.metallicRoughnessTexture):void 0,emissiveFactor:[t.emissiveFactor[0],t.emissiveFactor[1],t.emissiveFactor[2]],colorTextureTransform:t.colorTextureTransform,normalTextureTransform:t.normalTextureTransform,occlusionTextureTransform:t.occlusionTextureTransform,emissiveTextureTransform:t.emissiveTextureTransform,metallicRoughnessTextureTransform:t.metallicRoughnessTextureTransform,metallicFactor:t.metallicFactor,roughnessFactor:t.roughnessFactor,receiveShadows:t.receiveShadows,receiveAmbientOcclusion:t.receiveAmbientOcclusion});e.materials.set(a,o)}return a}const c=new Set([a.TextureSamplingMode.LINEAR_MIPMAP_LINEAR,a.TextureSamplingMode.LINEAR_MIPMAP_NEAREST]);e.loadGLTF=async function(e,r,c={},m=!0){const d=await s.GLTFResource.load(e,r,c),T="gltf_"+i++,p={lods:[],materials:new Map,textures:new Map,meta:n(d)},x=!(!d.json.asset.extras||"symbolResource"!==d.json.asset.extras.ESRI_type),f=d.json.asset.extras?.ESRI_webstyleSymbol?.webstyle,g=new Map;await async function(e,o){const r=e.json,s=r.scenes[r.scene||0].nodes,a=s.length>1,i=[];for(const e of s){const t=r.nodes[e];i.push(n(e,0)),l(t)&&!a&&t.extensions.MSFT_lod.ids.forEach(((e,t)=>n(e,t+1)))}async function n(s,a){const l=r.nodes[s],u=e.getNodeTransform(s);if(null!=l.weights&&t.getLogger("esri.views.3d.glTF").warn("[Unsupported Feature] Morph targets are not supported."),null!=l.mesh){const e=r.meshes[l.mesh];for(const t of e.primitives)i.push(o(t,u,a,e.name))}for(const e of l.children||[])i.push(n(e,a))}await Promise.all(i)}(d,(async(e,r,s,i)=>{const n=g.get(s)??0;g.set(s,n+1);const l=void 0!==e.mode?e.mode:a.PrimitiveType.TRIANGLES,x=l===a.PrimitiveType.TRIANGLES||l===a.PrimitiveType.TRIANGLE_STRIP||l===a.PrimitiveType.TRIANGLE_FAN?l:null;if(null==x)return void t.getLogger("esri.views.3d.glTF").warn("[Unsupported Feature] Unsupported primitive mode ("+a.PrimitiveType[l]+"). Skipping primitive.");if(!d.hasPositions(e))return void t.getLogger("esri.views.3d.glTF").warn("Skipping primitive without POSITION vertex attribute.");const f=d.getPositionData(e,c),h=d.getMaterial(e,c,m),v=d.hasNormals(e)?d.getNormalData(e,c):null,S=d.hasTangents(e)?d.getTangentData(e,c):null,w=d.hasTextureCoordinates(e)?d.getTextureCoordinates(e,c):null,R=d.hasVertexColors(e)?d.getVertexColors(e,c):null,_=d.getIndexData(e,c),y={name:i,transform:o.clone(r),attributes:{position:await f,normal:v?await v:null,texCoord0:w?await w:null,color:R?await R:null,tangent:S?await S:null},indices:await _,primitiveType:x,material:u(p,await h,T)};let M=null;null!=p.meta?.ESRI_lod&&"screenSpaceRadius"===p.meta.ESRI_lod.metric&&(M=p.meta.ESRI_lod.thresholds[s]),p.lods[s]=p.lods[s]||{parts:[],name:i,lodThreshold:M},p.lods[s].parts[n]=y}));for(const e of p.lods)e.parts=e.parts.filter((e=>!!e));const h=await d.getLoadedBuffersSize();return{model:p,meta:{isEsriSymbolResource:x,uri:d.uri,ESRI_webstyle:f},customMeta:{},cachedMemory:h}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));