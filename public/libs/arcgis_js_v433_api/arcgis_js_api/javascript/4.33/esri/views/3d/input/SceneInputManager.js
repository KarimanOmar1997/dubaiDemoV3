// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/Accessor","../../../core/has","../../../core/maybe","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","./handlers/DoubleClickZoom","./handlers/DragRotate","./handlers/DragZoom","./handlers/GamepadNavigation","./handlers/KeyboardNavigation","./handlers/MouseWheelZoom","./handlers/PinchAndPanNavigation","./handlers/PointerDownCancelAnimation","./handlers/TwoFingerTilt","../../input/BrowserEventSource","../../input/InputManager","../../input/handlers/PreventContextMenu","../../input/handlers/support","../../input/recognizers/Drag","../../input/recognizers/ImmediateDoubleClick","../../input/recognizers/PointerClickHoldAndDrag","../../input/recognizers/SingleAndDoubleClick","../../input/recognizers/VerticalTwoFingerDrag","../state/controllers/RotateController"],(function(e,t,o,r,n,i,a,s,d,c,g,l,p,u,h,m,w,y,v,_,P,D,A,M,b,T,f,N){"use strict";let R=class extends t{constructor(){super(...arguments),this.mode="default",this._updateMode=({mode:e,dragPrimary:t,dragSecondary:o,dragTertiary:r})=>{"pro"===e&&(o="zoom",r="pan"===t?"rotate":"pan");const n={dragPrimary:t,dragSecondary:o,dragTertiary:r};this._modeDragPan&&(this._modeDragPan.pointerActions=D.getPointerActions("pan",n)),this._modeDragRotate&&(this._modeDragRotate.pointerActions=D.getPointerActions("rotate",n)),this._modeDragZoom&&(this._modeDragZoom.pointerActions=D.getPointerActions("zoom",n))}}destroy(){this.disconnect()}get primaryDragAction(){return this.view.navigation.actionMap.dragPrimary}set primaryDragAction(e){const{actionMap:t}=this.view.navigation;t.dragPrimary=e,t.dragSecondary="pan"===e?"rotate":"pan"}get updating(){return!!this._inputManager?.updating}get latestPointerType(){return this._inputManager?.latestPointerType}get latestPointerLocation(){return this._inputManager?.latestPointerLocation}get multiTouchActive(){return this._inputManager?.multiTouchActive??!1}disconnect(){this.removeAllHandles(),this.view.viewEvents.disconnect(),this._modeDragPan=null,this._modeDragRotate=null,this._modeDragZoom=null,this._modeKeyboardNavigation=null,this._inputManager=r.destroyMaybe(this._inputManager),this._source=r.destroyMaybe(this._source)}connect(){const e=this.view;this._source=new v.BrowserEventSource(this.view.surface,e.input);const t=[new M.ImmediateDoubleClick,new b.PointerClickHoldAndDrag,new T.SingleAndDoubleClick,new A.Drag(this.view.navigation),new f.VerticalTwoFingerDrag],o=new _.InputManager({eventSource:this._source,recognizers:t});this._inputManager=o,o.installHandlers("prevent-context-menu",[new P.PreventContextMenu],_.ViewEventPriorities.INTERNAL);const r={fov:"Shift",pan:{left:"ArrowLeft",right:"ArrowRight",forward:"ArrowUp",backward:"ArrowDown",up:["u","U"],down:["j","J"]},lookAround:{headingLeft:["a","A"],headingRight:["d","D"],tiltUp:["w","W"],tiltDown:["s","S"],modifier:"b"},zoom:{zoomIn:["+","="],zoomOut:["-","_"]},reset:{heading:["n","N"],tilt:["p","P"]}};this._modeDragPan=new m.PinchAndPanNavigation(e,["primary"]),this._modeDragRotate=new g.DragRotate(e,["secondary"],N.PivotPoint.CENTER),this._modeDragZoom=new l.DragZoom(e,["tertiary"],r.fov),this._modeKeyboardNavigation=new u.KeyboardNavigation(e,r),o.installHandlers("navigation",[new w.PointerDownCancelAnimation(e),new c.DoubleClickZoom(e),new p.GamepadNavigation(e),new h.MouseWheelZoom(e,r.fov),new g.DragRotate(e,["primary"],N.PivotPoint.EYE,[r.lookAround.modifier]),new g.DragRotate(e,["secondary"],N.PivotPoint.CENTER,[r.lookAround.modifier]),new m.PinchAndPanNavigation(e,["tertiary"],[r.lookAround.modifier]),this._modeDragRotate,this._modeDragZoom,this._modeDragPan,this._modeKeyboardNavigation,new y.TwoFingerTilt(e)],_.ViewEventPriorities.INTERNAL),this.view.viewEvents.connect(o),this.addHandles([n.watch((()=>this.view.navigation?.browserTouchPanEnabled),(e=>{this._source.browserTouchPanningEnabled=!e}),n.initial),n.watch((()=>{const{actionMap:e}=this.view.navigation,{dragPrimary:t,dragSecondary:o,dragTertiary:r}=e;return{mode:this.mode,dragPrimary:t,dragSecondary:o,dragTertiary:r}}),this._updateMode,n.syncAndInitial)])}isModifierKeyDown(e){return this._inputManager?.isModifierKeyDown(e)??!1}get test(){}};return e.__decorate([i.property()],R.prototype,"view",void 0),e.__decorate([i.property({type:["default","pro"]})],R.prototype,"mode",void 0),e.__decorate([i.property({readOnly:!0})],R.prototype,"updating",null),e.__decorate([i.property()],R.prototype,"latestPointerType",null),e.__decorate([i.property()],R.prototype,"latestPointerLocation",null),e.__decorate([i.property()],R.prototype,"multiTouchActive",null),e.__decorate([i.property()],R.prototype,"_inputManager",void 0),R=e.__decorate([d.subclass("esri.views.3d.input.SceneInputManager")],R),R}));