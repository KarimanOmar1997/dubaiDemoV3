// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../Color","../../../../../core/Handles","../../../../../core/handleUtils","../../../../../core/has","../../../../../core/maybe","../../../../../core/reactiveUtils","../../../../../core/libs/gl-matrix-2/math/mat4","../../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../geometry/support/vectorStacks","../../Manipulator3D","../../RenderObject","../dragEventPipeline3D","../ManipulatorType","./config","./Manipulation","./moveUtils","../snapping/SnapToScene","../../../webgl-engine/lib/basicInterfaces","../../../webgl-engine/lib/GeometryUtil","../../../webgl-engine/lib/Material","../../../webgl-engine/materials/ColorMaterial","../../../../interactive/dragEventPipeline","../../../../interactive/interfaces"],(function(e,t,a,i,n,r,s,l,o,c,u,p,d,h,_,g,m,M,S,f,T,v,b,y,w,D){"use strict";class R extends M.Manipulation{constructor(e){super(),this._handles=new a,this._snapToScene=new f.SnapToScene,this._scale=1,this._radius=m.discRadius,this._view=e.view,this._tool=e.tool,this._discMaterial=this._createMaterial(),this._discMaterialTransparent=this._createMaterial(.5),null!=e.snapToScene&&(this.snapToScene=e.snapToScene),null!=e.radius&&(this._radius=e.radius),this._createManipulator(),this.forEachManipulator((e=>this._tool.manipulators.add(e)))}destroy(){this._handles=r.destroyMaybe(this._handles),this.forEachManipulator((e=>{this._tool.manipulators.remove(e),e.destroy()})),this._tool=null,this._view=null,this._manipulator=null}forEachManipulator(e){e(this._manipulator,g.ManipulatorType.TRANSLATE_XY)}get displayScale(){return this._scale}set displayScale(e){this._scale=e,this._updateManipulatorTransform()}get snapToScene(){return this._snapToScene.enabled}set snapToScene(e){this._snapToScene.enabled=e}get radius(){return this._radius}set radius(e){e!==this._radius&&(this._radius=e,this._updateManipulator())}get discManipulator(){return this._manipulator}createManipulatedObjectDragPipeline(e,t,a){if(!t.operations)return i.makeHandle();const n=t.graphic,r=t.elevationInfo,s=t.operations.data.spatialReference;return S.createManipulatedMoveDragPipeline(t,a,(t=>this.createDragPipeline(((a,i,n,r,s)=>(({steps:i,cancel:n}=e(a,i,n,r,s)),t(a,i,n))),r,s,n)))}createDragPipeline(e,t,a,i){const n=this._view;return w.createManipulatorDragEventPipeline(this._manipulator,((r,s,l,o,c)=>{const u=s.next(w.dragAtLocation(n,r.elevationAlignedLocation)).next(_.screenToMapXYAtLocation(n,r.elevationAlignedLocation,t,a,i)).next(...this._snapToScene.createDragEventPipelineStep(n,t)).next((e=>({...e,manipulatorType:g.ManipulatorType.TRANSLATE_XY}))).next(w.addScreenDelta());e(r,u,l,o,c)}))}_updateManipulatorTransform(){const e=l.fromScaling(p.sm4d.get(),c.set(p.sv3d.get(),this.displayScale,this.displayScale,this.displayScale));this._manipulator.modelTransform=e}_createManipulator(){const e=this._view;this._manipulator=new d.Manipulator3D({view:e,worldSized:!1,autoScaleRenderObjects:!1,focusMultiplier:1,touchMultiplier:1,collisionType:{type:"disc",direction:u.fromValues(0,0,1)},worldOriented:!0}),this._updateManipulator()}_updateManipulator(){const e=v.createCylinderGeometry(this._discMaterial,m.discHeight,1,m.geometrySegments,u.fromValues(0,0,1),u.fromValues(0,0,0));e.transformation=l.fromScaling(o.create(),u.fromValues(this._radius,this._radius,this._radius)),this._manipulator.renderObjects=[new h.RenderObject(e,D.ManipulatorStateFlags.Focused),new h.RenderObject(e.instantiate({material:this._discMaterialTransparent}),D.ManipulatorStateFlags.Unfocused)],this._manipulator.radius=m.discCollisionRadius*(this._radius/m.discRadius)}_createMaterial(e=1){const a=new y.ColorMaterial({cullFace:T.CullFaceOptions.Back,renderOccluded:b.RenderOccludedFlag.Transparent,isDecoration:!0});return this._handles.add(s.watch((()=>t.toUnitRGBA(this._view.effectiveTheme.accentColor)),(t=>{t[3]*=e,a.setParameters({color:t})}),s.initial)),a}get test(){}}e.MoveXYDiscManipulation=R,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));