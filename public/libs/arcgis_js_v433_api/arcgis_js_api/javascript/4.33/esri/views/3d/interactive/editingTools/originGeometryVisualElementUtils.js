// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/handleUtils","../../../../core/mathUtils","../../../../core/reactiveUtils","../../../../core/signal","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/projection/projectPointToVector","../../../../geometry/projection/projectVectorToVector","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/aaBoundingRect","../../../../support/elevationInfoUtils","./GrabbingState","./manipulatedObjectUtils","./ManipulatorState","./settings","../visualElements/ExtendedLineVisualElement","../visualElements/LaserlineVisualElement","../visualElements/PointVisualElement","../../layers/graphics/elevationAlignmentUtils","../../layers/graphics/ElevationContext","../../webgl-engine/lib/Material"],(function(e,t,n,a,i,l,o,s,r,c,u,p,d,h,v,m,g,f,b,y,E,w){"use strict";function j(e){return null==e?null:"point"===e.type?e:"mesh"===e.type?e.origin.clone():null}const V=o.create(),S=c.create();e.createVisualElements=function(e){const o=[],T=function(e,n){const{view:i,object:l}=e,o=new b.PointVisualElement({view:i,geometry:j(h.manipulatedObjectGeometry(l)),elevationInfo:l.elevationInfo,isDecoration:!0});return function(e,n,i){const{view:l,object:o}=e,r=new m.Settings({getTheme:()=>l.effectiveTheme});(function(e,n,a){const{view:i,object:l}=e;let o=null;const r=()=>{const e=j(h.manipulatedObjectGeometry(l));null!=e&&p.featureExpressionInfoIsZero(l.elevationInfo)&&(e.z=0),(e=>{null!=o&&(o.remove(),o=null),l.isDraped&&null!=e&&(o=function(t,a){const i=t.elevationProvider.spatialReference;s.projectPointToVector(a,V,i);const l=V[0],o=V[1];return t.elevationProvider.on("elevation-change",(t=>{u.containsXY(t.extent,l,o)&&(n.geometry=e)}))}(i,e))})(e),n.geometry=e};a.push(l.on("committed",r),t.refHandle((()=>o))),r()})(e,n,i),r.visualElements.pointObjects.outline.apply(n),i.push(a.watch((()=>o.visible),(()=>{n.attached=o.visible}),a.initial))}(e,o,n),n.push(t.destroyHandle(o)),o}(e,o);return function(e,o,s){const{view:u,object:b}=e,T=new m.Settings({getTheme:()=>u.effectiveTheme}),x=new g.ExtendedLineVisualElement({view:u,extensionType:T.visualElements.zVerticalLine.extensionType,innerWidth:1,attached:!1,writeDepthEnabled:!1,renderOccluded:w.RenderOccludedFlag.OccludeAndTransparent,isDecoration:!0});o.push(a.watch((()=>T.visualElements.zVerticalLine),(e=>e.apply(x)),a.initial));const P=new f.LaserlineVisualElement({view:u,intersectsLineInfinite:!0,attached:!1,isDecoration:!0}),I=n.deg2rad(T.visualElements.heightPlaneAngleCutoff),L=new f.LaserlineVisualElement({view:u,attached:!1,angleCutoff:I,isDecoration:!0}),M=b.elevationInfo,O=E.ElevationContext.fromElevationInfo(M),A="on-the-ground"===M.mode||!M.offset&&"absolute-height"!==M.mode,D=new v.ManipulatorState,H=i.signal(1);o.push(a.watch((()=>({heightPlane:T.visualElements.heightPlane,alpha:H.value})),(({heightPlane:e,alpha:t})=>e.apply(L,t)),a.initial));const C=i.signal(1);o.push(a.watch((()=>({shadowStyle:T.visualElements.pointObjects.shadowStyle,alpha:C.value})),(({shadowStyle:e,alpha:t})=>e.apply(P,t)),a.initial));const R=()=>{D.update(e);let t=j(h.manipulatedObjectGeometry(b));const n=A&&(b.isDraped||null==t||!t.hasZ);let a=!0;if(n||null==t)a=!1;else{p.featureExpressionInfoIsZero(b.elevationInfo)&&(t=t.clone(),t.z=0);const e=y.evaluateElevationAlignmentAtPoint(t,u.elevationProvider,O,u.renderCoordsHelper);l.set(V,t.x,t.y,e),r.projectVectorToVector(V,t.spatialReference,V,u.renderCoordsHelper.spatialReference),x.setStartEndFromWorldDownAtLocation(V),P.intersectsWorldUpAtLocation=V}const i=D.grabbingState&d.GrabbingState.Z?T.visualElements.laserlineAlphaMultiplier:1;H.value=i;const o=c.empty(S);!n&&b.visible&&s.calculateMapBounds(o)&&r.projectVectorToVector(c.getMin(o,V),u.spatialReference,V,u.renderCoordsHelper.spatialReference)?(L.heightManifoldTarget=V,L.attached=!0):L.attached=!1;const v=D.grabbingState&d.GrabbingState.XY?T.visualElements.laserlineAlphaMultiplier:1;C.value=v;const m=a&&b.visible&&!n;P.attached=m,x.attached=m};o.push(a.watch((()=>[b.visible,b.isDraped]),R),b.on("committed",R)),e.forEachManipulator((e=>{o.push(e.events.on("grab-changed",R))})),o.push(t.destroyHandle(P)),o.push(t.destroyHandle(x)),o.push(t.destroyHandle(L)),R()}(e,o,T),{visualElement:T,remove:()=>t.removeHandles(o)}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));