// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/has","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../chunks/vec42","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../geometry/support/clipRay","../../../../geometry/support/frustum","../../../../geometry/support/lineSegment","../../../../geometry/support/ray","./EngineVisualElement","./LaserlineVisualElement","../../terrain/OverlayRenderer","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/Material","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/RibbonLineMaterial"],(function(e,t,i,r,s,n,a,l,o,h,d,c,_,u,p,y,f,m){"use strict";class g extends d.EngineVisualElement{constructor(t){super(t),this._ray=h.create(),this._isWorldDown=!1,this._start=r.create(),this._end=r.fromValues(1,0,0),this._width=1,this._color=n.fromValues(1,0,1,1),this._polygonOffset=!1,this._writeDepthEnabled=!0,this._innerWidth=0,this._innerColor=n.fromValues(1,1,1,1),this._stipplePattern=null,this._stippleOffColor=null,this._stipplePreferContinuous=!0,this._falloff=0,this._extensionType=e.ExtensionType.LINE,this._laserlineStyle=null,this._laserlineEnabled=!1,this._renderOccluded=p.RenderOccludedFlag.OccludeAndTransparent,this._fadedExtensions=R,this._laserline=new c.LaserlineVisualElement({view:this.view,isDecoration:t.isDecoration}),this.applyProperties(t)}destroy(){this._laserline.destroy(),super.destroy()}createObject3DResourceFactory(e){return{view:e,createResources:e=>this._createObject3DResources(e),destroyResources:b,recreateGeometry:(e,t)=>this._recreateObject3DGeometry(e,t),cameraChanged:()=>this._updateGeometry(),forEachMaterial:(e,t)=>t(e.material)}}createDrapedResourceFactory(e){return{view:e,createResources:()=>this._createDrapedResources(),destroyResources:b,recreateGeometry:e=>this._recreateDrapedGeometry(e),forEachMaterial:(e,t)=>t(e.material)}}updateVisibility(e){super.updateVisibility(e),this._laserline.visible=e}onAttachedChange(){this._laserline.attached=this._laserlineAttached}setStartEndFromWorldDownAtLocation(e){this._isWorldDown=!0,i.copy(this._start,e),this.view.renderCoordsHelper.worldUpAtPosition(e,this._end),i.subtract(this._end,e,this._end),h.fromPoints(this._start,this._end,this._ray),this._updateGeometry()}get start(){return this._start}set start(e){this._isWorldDown=!1,i.exactEquals(this._start,e)||(i.copy(this._start,e),h.fromPoints(this._start,this._end,this._ray),this._updateGeometry())}get end(){return this._end}set end(e){this._isWorldDown=!1,i.exactEquals(this._end,e)||(i.copy(this._end,e),h.fromPoints(this._start,this._end,this._ray),this._updateGeometry())}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this._updateMaterial())}get color(){return this._color}set color(e){s.exactEquals(e,this._color)||(s.copy(this._color,e),this._updateMaterial())}get polygonOffset(){return this._polygonOffset}set polygonOffset(e){e!==this._polygonOffset&&(this._polygonOffset=e,this._updateMaterial())}get writeDepthEnabled(){return this._writeDepthEnabled}set writeDepthEnabled(e){this._writeDepthEnabled!==e&&(this._writeDepthEnabled=e,this._updateMaterial())}get innerWidth(){return this._innerWidth}set innerWidth(e){e!==this._innerWidth&&(this._innerWidth=e,this._updateMaterial())}get innerColor(){return this._innerColor}set innerColor(e){s.exactEquals(e,this._innerColor)||(s.copy(this._innerColor,e),this._updateMaterial())}get stipplePattern(){return this._stipplePattern}set stipplePattern(e){const t=null!=e!=(null!=this._stipplePattern);this._stipplePattern=e,t?this.recreate():this._updateMaterial()}get stippleOffColor(){return this._stippleOffColor}set stippleOffColor(e){null!=e&&null!=this._stippleOffColor&&s.exactEquals(e,this._stippleOffColor)||(this._stippleOffColor=null!=e?n.clone(e):null,this._updateMaterial())}get stipplePreferContinuous(){return this._stipplePreferContinuous}set stipplePreferContinuous(e){e!==this._stipplePreferContinuous&&(this._stipplePreferContinuous=e,this._updateMaterial())}get falloff(){return this._falloff}set falloff(e){e!==this._falloff&&(this._falloff=e,this._updateMaterial())}get extensionType(){return this._extensionType}set extensionType(e){e!==this._extensionType&&(this._extensionType=e,this.recreateGeometry())}get _laserlineAttached(){return this._laserlineEnabled&&null!=this._laserlineStyle&&this.attached&&!this.isDraped}get laserlineStyle(){return this._laserlineStyle}set laserlineStyle(e){this._laserlineStyle=e,this._laserline.attached=this._laserlineAttached,null!=e&&(this._laserline.style=e)}get laserlineEnabled(){return this._laserlineEnabled}set laserlineEnabled(e){this._laserlineEnabled!==e&&(this._laserlineEnabled=e,this._laserline.attached=this._laserlineAttached)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get _normalizedRenderOccluded(){return this.isDraped&&this._renderOccluded===p.RenderOccludedFlag.OccludeAndTransparentStencil?p.RenderOccludedFlag.OccludeAndTransparent:this._renderOccluded}get fadedExtensions(){return this._fadedExtensions}set fadedExtensions(e){this._fadedExtensions=e??R,this.recreateGeometry()}_updateMaterial(){const{materialParameters:e}=this;this.object3dResources.resources?.material.setParameters(e),this.drapedResources.resources?.material.setParameters(e)}get materialParameters(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stipplePreferContinuous:this._stipplePreferContinuous,innerWidth:this._innerWidth,innerColor:this._innerColor,falloff:this._falloff,hasPolygonOffset:this._polygonOffset,renderOccluded:this._normalizedRenderOccluded,isDecoration:this.isDecoration,writeDepth:this._writeDepthEnabled}}_createObject3DResources(e){const t=new m.RibbonLineMaterial(this.materialParameters),i=new Array;return this._createObject3DGeometry(t,e,i),{material:t,geometries:i}}_recreateObject3DGeometry(e,t){e.geometries.length=0,this._createObject3DGeometry(e.material,t,e.geometries)}_createObject3DGeometry(e,t,i){const r=this._createGeometry(e);i.push(r),t.addGeometry(r),this._updateVerticesObject3D(t)}_createDrapedResources(){const e=new m.RibbonLineMaterial(this.materialParameters);return{material:e,geometries:[this._createDrapedGeometry(e)]}}_recreateDrapedGeometry(e){e.geometries=[this._createDrapedGeometry(e.material)]}_createDrapedGeometry(e){const t=this._createGeometry(e);return this._updateVerticesDraped(t),new y.RenderGeometry(t)}_createGeometry(t){const i=this.extensionType===e.ExtensionType.FADED,s=i?[r.create(),r.create(),r.create(),r.create()]:[r.create(),r.create()],n=i?[1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0]:null;return u.createPolylineGeometry(t,s,null,n)}_updateGeometry(){if(this.isDraped)this.drapedResources.recreateGeometry();else{const e=this.object3dResources.object;e&&this._updateVerticesObject3D(e)}}_updateVerticesObject3D(e){const t=this._lineSegment;this._updateVertexAttributesObject3D(e,t),this._laserline.intersectsLine=t}_updateVerticesDraped(e){this._updateVertexAttributesDraped(e,this._lineSegment)}get _lineSegment(){return this._extensionType===e.ExtensionType.FADED?this._updateLineSegmentFinite(x):this._updateLineSegmentInfinite(this._extensionType,x)}_updateLineSegmentFinite(e){return o.fromPoints(this._start,this._end,e)}_updateLineSegmentInfinite(t,r){const s=this.view.state.camera;switch(a.fromRay(this._ray,D),t){case e.ExtensionType.LINE:D.c0=-Number.MAX_VALUE;break;case e.ExtensionType.RAY:case e.ExtensionType.GROUND_RAY:{const t=this._ray.origin,r=this.view.elevationProvider.getElevation(t[0],t[1],t[2],this.view.renderCoordsHelper.spatialReference,"ground")??0,s=this.view.renderCoordsHelper.getAltitude(t);this._isWorldDown&&s<r&&i.negate(D.ray.direction,D.ray.direction),this._extensionType===e.ExtensionType.GROUND_RAY&&null!=r&&(D.c1=Math.abs(s-r));break}}if(!l.intersectClipRay(s.frustum,D))return this._updateLineSegmentFinite(r);const n=a.getStart(D,E),h=a.getEnd(D,O);return o.fromPoints(n,h,r)}_updateVertexAttributesObject3D(e,t){const i=e.geometries[0].getMutableAttribute(f.VertexAttribute.POSITION)?.data;if(!i)return;let r=0;for(const e of this._lineVertices(t))i[r++]=e[0],i[r++]=e[1],i[r++]=e[2];e.geometryVertexAttributeUpdated(e.geometries[0],f.VertexAttribute.POSITION)}_updateVertexAttributesDraped(e,t){const i=e.getMutableAttribute(f.VertexAttribute.POSITION)?.data;if(!i)return;let r=0;for(const e of this._lineVertices(t))i[r++]=e[0],i[r++]=e[1],i[r++]=_.drapedZ;e.invalidateBoundingInfo()}*_lineVertices(t){this.extensionType===e.ExtensionType.FADED?(yield o.pointAt(t,-this.fadedExtensions.start,E),yield o.pointAt(t,0,E),yield o.pointAt(t,1,E),yield o.pointAt(t,1+this.fadedExtensions.end,E)):(yield o.pointAt(t,0,E),yield o.pointAt(t,1,E))}}function b(e){e.geometries=[]}const D=a.create(),E=r.create(),O=r.create(),x=o.create();var w;e.ExtensionType=void 0,(w=e.ExtensionType||(e.ExtensionType={}))[w.LINE=0]="LINE",w[w.RAY=1]="RAY",w[w.GROUND_RAY=2]="GROUND_RAY",w[w.FADED=3]="FADED";const A=1/3,R={start:A,end:A};e.ExtendedLineVisualElement=g,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));