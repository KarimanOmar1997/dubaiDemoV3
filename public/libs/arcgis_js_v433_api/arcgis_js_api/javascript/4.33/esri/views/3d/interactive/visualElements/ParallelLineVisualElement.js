// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/reactiveUtils","../../../../core/screenUtils","../../../../core/libs/gl-matrix-2/math/vec2","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../chunks/vec42","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../layers/graphics/dehydratedPoint","./EngineVisualElement","../../terrain/OverlayRenderer","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/Material","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/RibbonLineMaterial"],(function(e,t,r,i,a,s,c,o,n,d,l,h,u,m,_,p,b){"use strict";class g extends l.EngineVisualElement{constructor(e){super(e),this._location=c.create(),this._direction=c.fromValues(1,0,0),this._width=1,this._offset=1,this._length=18,this._color=n.fromValues(1,0,1,1),this._renderOccluded=m.RenderOccludedFlag.OccludeAndTransparent,this.applyProperties(e)}createObject3DResourceFactory(e){return{view:e,createResources:e=>this._createObject3DResources(e),destroyResources:D,recreateGeometry:(e,t)=>this._recreateObject3DGeometry(e,t),cameraChanged:()=>this._updateGeometry(),forEachMaterial:(e,t)=>t(e.material)}}createDrapedResourceFactory(e){return{view:e,createResources:()=>this._createDrapedResources(),destroyResources:O,recreateGeometry:e=>this._recreateDrapedGeometry(e),forEachMaterial:(e,t)=>t(e.material)}}get location(){return this._location}set location(e){s.exactEquals(this._location,e)||(s.copy(this._location,e),this._updateGeometry())}get direction(){return this._direction}set direction(e){s.exactEquals(this._direction,e)||(s.copy(this._direction,e),this._updateGeometry())}setDirectionFromPoints(e,t){s.normalize(this._direction,s.subtract(this._direction,t,e)),this._updateGeometry()}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this._updateMaterial())}get offset(){return this._offset}set offset(e){e!==this._offset&&(this._offset=e,this._updateGeometry())}get length(){return this._length}set length(e){e!==this._length&&(this._length=e,this._updateGeometry())}get color(){return this._color}set color(e){o.exactEquals(e,this._color)||(o.copy(this._color,e),this._updateMaterial())}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get isDecoration(){return this._isDecoration}set isDecoration(e){this._isDecoration=e,this._updateMaterial()}_createObject3DResources(e){const t=new b.RibbonLineMaterial(this.materialParameters),r=new Array;return this._createObject3DGeometry(t,e,r),{material:t,geometries:r}}_recreateObject3DGeometry(e,t){e.geometries.length=0,this._createObject3DGeometry(e.material,t,e.geometries)}_createObject3DGeometry(e,t,r){const[i,a]=y(e);t.addGeometry(i),t.addGeometry(a),r.push(i),r.push(a),this._updateVerticesObject3D(t)}_createDrapedResources(){const e=new b.RibbonLineMaterial(this.materialParameters),r=t.watch((()=>this.view.state.contentPixelRatio),(()=>this.drapedResources.recreateGeometry()));return{material:e,geometries:this._createDrapedGeometry(e),pixelRatioHandle:r}}_recreateDrapedGeometry(e){e.geometries=this._createDrapedGeometry(e.material)}_createDrapedGeometry(e){const t=y(e);return this._updateVerticesDraped(t),t.map((e=>new _.RenderGeometry(e)))}_updateMaterial(){const{materialParameters:e}=this;this.object3dResources.resources?.material.setParameters(e),this.drapedResources.resources?.material.setParameters(e)}get materialParameters(){return{width:this._width,color:this._color,renderOccluded:this._renderOccluded,isDecoration:this.isDecoration}}_updateGeometry(){if(this.isDraped)this.drapedResources.recreateGeometry();else{const e=this.object3dResources.object;e&&this._updateVerticesObject3D(e)}}_updateVerticesObject3D(e){const t=this.view.state.camera;t.projectToScreen(this.location,P),s.add(G,this.location,this.direction),t.projectToScreen(G,j),i.normalize(j,i.subtract(j,j,P)),this._updateVertexAttributesObject3D(t,e,0,P,j,1),this._updateVertexAttributesObject3D(t,e,1,P,j,-1)}_updateVertexAttributesObject3D(e,t,i,a,s,c){const o=t.geometries[i],n=o.getMutableAttribute(p.VertexAttribute.POSITION)?.data;if(!n)return;const{start:d,end:l}=f(s,a,c,this.offset,this.width,this.length);e.unprojectFromScreen(r.castScreenPointArray(d),G),n[0]=G[0],n[1]=G[1],n[2]=G[2],e.unprojectFromScreen(r.castScreenPointArray(l),G),n[3]=G[0],n[4]=G[1],n[5]=G[2],t.geometryVertexAttributeUpdated(o,p.VertexAttribute.POSITION)}_updateVerticesDraped(e){const{view:{basemapTerrain:{overlayManager:t},state:{contentPixelRatio:r}}}=this,{location:i,width:a,length:s,offset:c}=this,o=V;o.spatialReference=t.renderer.spatialReference,o.x=i[0],o.y=i[1];const n=this.view.overlayPixelSizeInMapUnits(o)*r,d=a*n,l=s*n,h=c*n;this._updateVertexAttributesDraped(e[0],d,l,h,-1),this._updateVertexAttributesDraped(e[1],d,l,h,1)}_updateVertexAttributesDraped(e,t,r,i,a){const s=e.getMutableAttribute(p.VertexAttribute.POSITION)?.data;if(!s)return;const{location:c,direction:o}=this,{start:n,end:d}=f(o,c,a,i,t,r);s[0]=n[0],s[1]=n[1],s[2]=h.drapedZ,s[3]=d[0],s[4]=d[1],s[5]=h.drapedZ,e.invalidateBoundingInfo()}}function y(e){return[u.createPolylineGeometry(e,[c.create(),c.create()]),u.createPolylineGeometry(e,[c.create(),c.create()])]}function f(e,t,r,a,s,c){const o=i.scale(R,i.set(R,e[1]*r,e[0]*-r),a+s/2),n=i.add(w,i.add(w,i.add(w,t,i.scale(w,e,c/2)),o),o);return{start:n,end:i.add(x,n,i.scale(x,e,-c))}}function D(e){e.geometries.length=0}function O(e){e.pixelRatioHandle.remove(),e.geometries=[]}const G=c.create(),R=a.create(),w=a.create(),x=a.create(),P=r.createScreenPointArray(),j=r.createScreenPointArray(),V=d.makeDehydratedPoint(0,0,void 0,null);e.ParallelLineVisualElement=g,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));