// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../core/asyncUtils","../../../core/handleUtils","../../../core/Logger","../../../core/maybe","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/has","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../geometry/Extent","../../../geometry/support/aaBoundingRect","./interfaces","./SubView3D","./support/overlayImageUtils","../support/debugFlags","../terrain/interfaces","../webgl-engine/lib/ModelDirtyTypes","../webgl-engine/lib/RenderGeometry","../webgl-engine/lib/Texture","../webgl-engine/lib/UpdatePolicy","../webgl-engine/materials/ImageMaterial","../../webgl/enums"],(function(e,t,r,i,a,n,s,o,l,h,d,c,g,u,m,p,y,x,w,_,f,b,E,v,I){"use strict";e.default=class extends p{constructor(e){super(e),this.drapeSourceType=m.DrapeSourceType.RasterImage,this.updatePolicy=E.UpdatePolicy.SYNC,this.type="draped",this.maximumDataResolution=null,this._images=new Array,this._extents=new Array,this._overlays=new Array,this._drapeSourceRenderer=null}initialize(){this._drapeSourceRenderer=this.view.basemapTerrain.overlayManager.registerGeometryDrapeSource(this),this.addHandles(i.makeHandle((()=>this.view.basemapTerrain.overlayManager.unregisterDrapeSource(this))))}setDrapingExtent(e,t){this._spatialReference=t,e.forEach(((e,t)=>{this._overlays[t]=e,this._updateImageExtent(e,t)}))}destroy(){this.clear()}get spatialReference(){return this._spatialReference}_updateImageExtent(e,t){const r=this._clippedExtent(e.extent,R);if(null==r)return;const i=y.computeImageExportSize(e.extent,r,e.resolution);let n=e.pixelRatio*this.view.state.pixelRatio;const{layer:o}=this;if("imageMaxWidth"in o&&null!=o.imageMaxWidth||"imageMaxHeight"in o&&null!=o.imageMaxHeight){const e=o.imageMaxWidth,t=o.imageMaxHeight;if(i.width>e){const t=e/i.width;i.height=Math.floor(i.height*t),i.width=e,n*=t}if(i.height>t){const e=t/i.height;i.width=Math.floor(i.width*e),i.height=t,n*=e}}const l=this._extents[t];l&&u.equals(l.extent,r)&&this._imageSizeEquals(r,l.imageSize,i)||(this._extents[t]={extent:u.create(r),imageSize:i,pixelRatio:n},this.suspended||this._fetch(t).catch((e=>{s.isAbortError(e)||a.getLogger(this).error(e)})))}clear(){for(let e=0;e<this._images.length;e++)this._clearImage(e)}async doRefresh(e){const t=[];for(let r=0;r<this._extents.length;r++)this._extents[r]&&t.push(this._fetch(r,e));await Promise.allSettled(t)}async processResult(e,t,r){(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement)&&(e.image=t)}findExtentInfoAt(e){for(const t of this._extents){const r=t.extent;if(new g(r[0],r[1],r[2],r[3],this._spatialReference).contains(e))return t}return null}async redraw(e,t){await r.forEach(this._images,(async(r,i)=>{r&&(await e(r,t),await this._createStageObjects(i,r.image,t))}))}_imageSizeEquals(e,t,r){if(!this.maximumDataResolution)return!1;const i=u.width(e)/this.maximumDataResolution.x,a=u.height(e)/this.maximumDataResolution.y,n=i/t.width,s=a/t.height,o=i/r.width,l=a/r.height,h=Math.abs(n-o),d=Math.abs(s-l),c=x.debugFlags.TESTS_DISABLE_OPTIMIZATIONS?0:1.5;return h<=c&&d<=c}async _fetch(e,t){if(this.suspended)return;const r=this._extents[e],i=r.extent;this._images[e]||(this._images[e]={texture:null,material:null,renderGeometry:null,loadingPromise:null,loadingAbortController:null,image:null,pixelData:null,renderExtent:u.create(i)});const o=this._images[e];o.loadingAbortController=n.abortMaybe(o.loadingAbortController);const l=new g(i[0],i[1],i[2],i[3],this._spatialReference);if(0===l.width||0===l.height)return void this._clearImage(e);const h=new AbortController;o.loadingAbortController=h,s.onAbort(t,(()=>h.abort()));const d=h.signal,c=this._waitFetchReady(d).then((async()=>{s.throwIfAborted(d);const t={requestAsImageElement:!0,pixelRatio:this._overlays[e].pixelRatio,...this.layerView.getFetchOptions(),signal:d},{height:i,width:a}=r.imageSize;return this.layer?"imagery"===this.layer.type?this.layer.internalFetchImage(l,a,i,t):this.layer.fetchImage(l,a,i,t):null})).then((e=>{if(s.isAborted(d))throw a.getLogger(this).warnOnce("A call to fetchImage resolved even though the request was aborted. fetchImage should not resolve if options.signal.aborted is true."),s.createAbortError();return this.processResult(o,e)})).then((()=>{u.copy(o.renderExtent,i)}));o.loadingPromise=c,await this.updatingHandles.addPromise(c.then((async()=>{s.throwIfAborted(d),await this._createStageObjects(e,o.image,d)})).catch((e=>{throw e&&!s.isAbortError(e)&&a.getLogger(this).error(e),e})).finally((()=>{c===o.loadingPromise&&(o.loadingPromise=null,o.loadingAbortController=null)})))}_clearImage(e){const t=this._images[e];if(t){null!=t.renderGeometry&&(this._drapeSourceRenderer.removeGeometries([t.renderGeometry],_.DirtyOperation.UPDATE),t.renderGeometry=null);const e=this.view.stage,r=t.texture;r?.unload(),e.removeTexture(r),t.texture=null,t.material=null,t.loadingAbortController=n.abortMaybe(t.loadingAbortController),t.loadingPromise=null,t.image=null,t.pixelData=null}}async _createStageObjects(e,t,i){const a=this.view.stage,n=this._images[e],o=()=>{n.texture?.unload(),a.removeTexture(n.texture),n.texture=null,n.renderGeometry&&(this._drapeSourceRenderer.removeGeometries([n.renderGeometry],_.DirtyOperation.UPDATE),n.renderGeometry=null)};if(t){const l=new b.Texture(t,{width:t.width,height:t.height,preMultiplyAlpha:!0,wrap:{s:I.TextureWrapMode.CLAMP_TO_EDGE,t:I.TextureWrapMode.CLAMP_TO_EDGE}});if(await r.result(this._images[e===w.OverlayIndex.INNER?w.OverlayIndex.OUTER:w.OverlayIndex.INNER].loadingPromise),s.throwIfAborted(i),o(),await a.schedule((()=>l.load(a.renderView.renderingContext)),i),!l.loaded)return void o();let h;if(a.addTexture(l),n.texture=l,n.material??=new v.ImageMaterial({draped:!0,texture:l}),n.material.setParameters({texture:l}),e===w.OverlayIndex.INNER)h=y.createGeometryForExtent(n.material,n.renderExtent);else{const e=this._images[0].renderExtent;if(!e)return void o();h=y.createOuterImageGeometry(n.material,e,n.renderExtent)}n.renderGeometry=new f.RenderGeometry(h),n.renderGeometry.localOrigin=this._overlays[e].renderLocalOrigin,this._drapeSourceRenderer.addGeometries([n.renderGeometry],_.DirtyOperation.UPDATE)}else o(),n.material=null}_clippedExtent(e,t){if("local"!==this.view.viewingMode)return u.copy(t,e);const r=this.view.basemapTerrain;return r.ready?u.intersection(e,r.extent,t):u.copy(t,e)}async _waitFetchReady(e){await o.whenOnce((()=>this.view.stationary),e),s.throwIfAborted(e)}},t.__decorate([l.property()],e.default.prototype,"type",void 0),e.default=t.__decorate([c.subclass("esri.views.3d.layers.DrapedSubView3D")],e.default);const R=u.create();return e.default}));