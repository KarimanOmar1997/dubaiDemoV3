// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/tslib.es6","../../../Graphic","../../../core/Error","../../../core/has","../../../core/maybe","../../../core/accessorSupport/decorators/property","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../layers/graphics/hydratedFeatures","../../../layers/support/timeSupport","../../../rest/support/Query","../webgl-engine/lib/UpdatePolicy","../../support/HighlightDefaults","../../support/layerViewUtils","../../support/projectionUtils"],(function(e,t,r,i,s,a,n,p,o,l,u,h,y,c,d,g,m){"use strict";e.FeatureLikeLayerView3D=e=>{let p=class extends e{constructor(){super(...arguments),this.highlightOptions=null,this.updatePolicy=c.UpdatePolicy.SYNC,this.slicePlaneEnabled=!1,this.fullExtentInLocalViewSpatialReference=null,this.supportsHeightUnitConversion=!0}initialize(){const e=this.layer;"isTable"in e&&e.isTable?this.addResolvingPromise(Promise.reject(new i("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:e}))):(this.addResolvingPromise(this._validateGeometryType()),this.addResolvingPromise((async()=>{if(this.destroyed)return;this.fullExtentInLocalViewSpatialReference="local"===this.view.viewingMode?await m.projectWithZConversionSilent(this.layer.fullExtent,this.view.spatialReference):null;const e=await this.createGraphicsPipeline();this.destroyed?e.destroy():(this.graphicsPipeline=e,await e.when())})()),this.notifyChange("updating"))}destroy(){this.graphicsPipeline=a.destroyMaybe(this.graphicsPipeline)}get dataUpdating(){return!!this.graphicsPipeline?.dataUpdating}get legendEnabled(){return this.canResume()&&this.graphicsPipeline?.legendEnabled}get visibleAtCurrentScale(){return g.hasLayerBasedScaleVisibility()?g.isInEffectiveScaleRange(this.layer.effectiveScaleRange,this.view.scale):!this.graphicsPipeline?.scaleVisibilitySuspended}get symbologySnappingSupported(){return this.graphicsPipeline.symbologySnappingSupported}get hasAllFeatures(){return this.graphicsPipeline.hasAllFeatures}get hasAllFeaturesInView(){return this.graphicsPipeline.hasAllFeaturesInView}get hasFullGeometries(){return this.graphicsPipeline.hasFullGeometries}get timeExtent(){return h.combineTimeExtent(this.layer,this.view?.timeExtent,this._get("timeExtent"))}getHit(e){if(s("feature-pipeline-3d-test"))return this._getHitMock(e);const t=this.graphicsPipeline.findGraphic((t=>t.uid===e));if(null==t)return null;const r=u.hydrateGraphic(t,this.layer);return{type:"graphic",graphic:r,layer:r.layer}}_getHitMock(e){const t=this.layer,i={};i[this.layer.objectIdField]=e;const s=new r({layer:t,sourceLayer:t,visible:!0,symbol:null,attributes:i,geometry:null});return{type:"graphic",graphic:s,layer:s.layer}}whenGraphicBounds(e,t){return this.graphicsPipeline?.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.graphicsPipeline?.computeAttachmentOrigin(e,t)}async elevationAlignPointsInFeatures(e,t){return this.graphicsPipeline.elevationAlignPointsInFeatures(e,t)}async queryForSymbologySnapping(e,t){return this.graphicsPipeline.graphicsQuery.queryForSymbologySnapping(e,t)}queryFeatures(e,t){return this.graphicsPipeline.graphicsQuery.executeQuery(this._ensureQuery(e),t?.signal)}queryObjectIds(e,t){return this.graphicsPipeline.graphicsQuery.executeQueryForIds(this._ensureQuery(e),t?.signal)}queryFeatureCount(e,t){return this.graphicsPipeline.graphicsQuery.executeQueryForCount(this._ensureQuery(e),t?.signal)}queryExtent(e,t){return this.graphicsPipeline.graphicsQuery.executeQueryForExtent(this._ensureQuery(e),t?.signal)}_ensureQuery(e){return null==e?this.createQuery():y.from(e)}highlight(e,t){return this.graphicsPipeline.highlight(e,t?.name??d.defaultHighlightName)}maskOccludee(e){return this.graphicsPipeline.maskOccludee(e)}getSuspendInfo(){return{...super.getSuspendInfo(),...this.graphicsPipeline.suspendInfo}}isUpdating(){return!(!this.graphicsPipeline||this.graphicsPipeline.destroyed||!this.graphicsPipeline?.updating&&this.view?.basemapTerrain?.ready)}async _validateGeometryType(){switch(this.layer.geometryType){case"multipatch":case"multipoint":throw new i("featurelayerview3d:unsupported-geometry-type","Unsupported geometry type ${geometryType}",{geometryType:this.layer.geometryType})}}get performanceInfo(){return this.graphicsPipeline.performanceInfo}queryAttributeBins(){throw new Error("Not implemented")}queryAggregates(){throw new Error("Not implemented")}};return t.__decorate([n.property()],p.prototype,"graphicsPipeline",void 0),t.__decorate([n.property({readOnly:!0})],p.prototype,"dataUpdating",null),t.__decorate([n.property()],p.prototype,"highlightOptions",void 0),t.__decorate([n.property()],p.prototype,"suspended",void 0),t.__decorate([n.property({readOnly:!0})],p.prototype,"legendEnabled",null),t.__decorate([n.property({readOnly:!0})],p.prototype,"visibleAtCurrentScale",null),t.__decorate([n.property()],p.prototype,"updating",void 0),t.__decorate([n.property({readOnly:!0})],p.prototype,"updatePolicy",void 0),t.__decorate([n.property({type:Boolean})],p.prototype,"slicePlaneEnabled",void 0),t.__decorate([n.property({readOnly:!0})],p.prototype,"suspendInfo",void 0),t.__decorate([n.property()],p.prototype,"symbologySnappingSupported",null),t.__decorate([n.property({readOnly:!0})],p.prototype,"hasAllFeatures",null),t.__decorate([n.property({readOnly:!0})],p.prototype,"hasAllFeaturesInView",null),t.__decorate([n.property({readOnly:!0})],p.prototype,"hasFullGeometries",null),t.__decorate([n.property({readOnly:!0})],p.prototype,"timeExtent",null),p=t.__decorate([l.subclass("esri.views.3d.layers.FeatureLikeLayerView3D")],p),p},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));