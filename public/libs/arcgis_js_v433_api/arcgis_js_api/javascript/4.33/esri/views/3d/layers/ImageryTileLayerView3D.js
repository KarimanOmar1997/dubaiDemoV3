// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/Error","../../../core/has","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/Logger","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../layers/support/rasterFunctions/rasterProjectionHelper","./FlowSubView3D","./LayerView3D","./TiledLayerView3D","../terrain/RasterTile","../../layers/ImageryTileLayerView","../../layers/LayerView","../../layers/RefreshableLayerView","../../support/drapedUtils","../../webgl/capabilities"],(function(e,t,i,r,a,s,l,n,o,h,d,c,y,p,u,m,b,g){"use strict";let f=class extends(p(m(c.TiledLayerView3D(d.LayerView3D(u))))){constructor(){super(...arguments),this.type="imagery-tile-3d",this._isAlignedMapTile=!0,this._flowSubView=null}initialize(){this.layer.increaseRasterJobHandlerUsage(),null==this.fullExtent&&this.addResolvingPromise(Promise.reject(new t("layerview:spatial-reference-incompatible","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})));const e=r.whenOnce((()=>this.view?.basemapTerrain?.tilingSchemeLocked)).then((()=>{const e=this.view.basemapTerrain.tilingScheme,t=this.layer.tileInfo;this._isAlignedMapTile=["png","png24","png32","jpg","mixed"].includes(t.format)&&e.compatibleWith(t),this.tileInfo=this._isAlignedMapTile?t:e.toTileInfo(),this._updatingHandles.add((()=>[this.layer.renderer,this.layer.interpolation,this.layer.bandIds,this.layer.multidimensionalDefinition,this.layer.multidimensionalSubset,this.layer.rasterFunction,this.timeExtent]),(()=>this.refresh()))}));this.addResolvingPromise(e),this.addHandles(r.watch((()=>this.layer.renderer),(e=>this._setSubView(e)),r.initial))}destroy(){this.layer.decreaseRasterJobHandlerUsage(),this._flowSubView?.destroy()}_setSubView(e){if("wcs"===this.layer.type||!i("enable-feature:3d-flow"))return;const t="flow"===e?.type,r=this._flowSubView;t&&null!=r||(r?.destroy(),this._flowSubView=t?new h({layerView:this}):null)}get _blankTile(){const e=document.createElement("canvas"),t=e.getContext("2d"),[i,r]=this.tileInfo.size;return e.width=i,e.height=r,t.clearRect(0,0,i,r),t.getImageData(0,0,i,r)}get imageFormatIsOpaque(){return"jpg"===this.layer.tileInfo.format}get hasMixedImageFormats(){return"mixed"===this.layer.tileInfo.format}get dataLevelRange(){const e=this.layer.tileInfo,t=this.tileInfo.lodAt(0)?.scale,i=this.layer.tileInfo.lodAt(e.lods.length-1)?.scale;return this.levelRangeFromScaleRange(t,i)}_getFullExtent(){return o.projectDatasetExtent(this.layer.serviceRasterInfo,this.view.basemapTerrain?.spatialReference??this.view.spatialReference)}async fetchTile(e,t){const i=this.tileInfo,r=this._canSymbolizeInWebGL(),a={tileInfo:i,requestRawData:r,signal:t.signal,timeExtent:this.timeExtent,requestAsImageElement:this._isAlignedMapTile,noClip:!1},{layer:s}=this,[l,n,o]=e,h=await s.fetchTile(l,n,o,a);if(h instanceof HTMLImageElement)return h;let d=h?.pixelBlock;if(null==d)return this._blankTile;if(!r&&(d=await s.applyRenderer(h),null==d))return this._blankTile;const c=new y.RasterTile([l,n,o],d,i.size[0],i.size[1]);return r?(c.symbolizerRenderer=s.symbolizer.rendererJSON,c.symbolizerParameters=s.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(l)),c.transformGrid=h.transformGrid,c.bandIds=s.bandIds):(c.isRendereredSource=!0,c.bandIds=null),c.interpolation=s.interpolation,c}_getSymbolizerOptions(e){const t=this.tileInfo.lodAt(e).resolution;return{pixelBlock:null,isGCS:null!=this.view.basemapTerrain?.spatialReference?this.view.basemapTerrain.spatialReference.isGeographic:this.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(e){this._canSymbolizeInWebGL()&&JSON.stringify(e.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(e.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(e.lij[0])))}createFetchPopupFeaturesQueryGeometry(e,t){return b.createQueryGeometry(e,t,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||(await(this._flowSubView?.doRefresh()),this.emit("data-changed"))}isUpdating(){return this._flowSubView?.updating??!1}_canSymbolizeInWebGL(){const e=g.getWebGLCapabilities(),{symbolizer:t}=this.layer,i=t.lookup.colormapLut?.indexedColormap,r=!!this.layer.rasterFunction?.hasClipFunction,a=i&&i.length>4*(e.maxTextureSize||4096);return t.canRenderInWebGL&&!a&&!r}get test(){}};return e.__decorate([a.property({readOnly:!0})],f.prototype,"_blankTile",null),e.__decorate([a.property({readOnly:!0})],f.prototype,"imageFormatIsOpaque",null),e.__decorate([a.property({readOnly:!0})],f.prototype,"hasMixedImageFormats",null),e.__decorate([a.property({readOnly:!0})],f.prototype,"dataLevelRange",null),f=e.__decorate([n.subclass("esri.views.3d.layers.ImageryTileLayerView3D")],f),f}));