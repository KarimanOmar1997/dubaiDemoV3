// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["../../../chunks/tslib.es6","../../../core/Error","../../../core/has","../../../core/Logger","../../../core/maybe","../../../core/reactiveUtils","../../../core/scheduling","../../../core/accessorSupport/decorators/property","../../../core/RandomLCG","../../../core/accessorSupport/decorators/subclass","../../../core/libs/gl-matrix-2/math/mat3","../../../core/libs/gl-matrix-2/factories/mat3f64","../../../core/libs/gl-matrix-2/math/mat4","../../../core/libs/gl-matrix-2/factories/mat4f64","../../../core/libs/gl-matrix-2/factories/quatf64","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../core/libs/gl-matrix-2/factories/vec4f64","../../../geometry/ellipsoidUtils","../../../geometry/projection/computeTranslationToOriginAndRotation","../../../geometry/projection/localLinearScaleFactors","../../../geometry/projection/projectVectorToVector","../../../geometry/support/aaBoundingRect","../../../geometry/support/buffer/BufferView","../../../layers/ILyr3DWasmPerSceneView","../../../layers/support/SceneModification","../../../support/elevationInfoUtils","../../ViewingMode","./I3SMeshWorkerHandle","./IntegratedMesh3DTilesViewPerformanceInfo","./interfaces","./LayerView3D","./Lyr3DWasm","./i3s/LayerElevationProvider","./support/lyr3dTypeConversions","./support/Tiles3DIntersectionHandler","../support/ElevationRange","../support/extentUtils","../support/orientedBoundingBox","../webgl-engine/collections/Component/ObjectParameters","../webgl-engine/collections/Component/SourceGeometry","../webgl-engine/collections/Component/Transform","../webgl-engine/collections/Component/Material/ComponentMaterial","../webgl-engine/core/material/RenderTexture","../webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl","../webgl-engine/core/shaderLibrary/util/EllipsoidMode","../webgl-engine/lib/Attribute","../webgl-engine/lib/basicInterfaces","../webgl-engine/lib/Normals","../webgl-engine/lib/Texture","../webgl-engine/lib/VertexAttribute","../webgl-engine/materials/internal/bufferWriterUtils","../../layers/LayerView","../../support/layerViewUtils","../../support/TextureCompressionTracker","../../../webscene/support/AlphaCutoff"],(function(e,t,r,i,s,o,a,n,l,c,d,u,h,m,p,g,f,y,b,w,_,v,T,x,C,M,V,D,P,O,A,L,I,E,U,F,S,H,R,B,j,k,N,G,W,z,$,J,Y,q,K,X,Q,Z,ee,te){"use strict";var re;!function(e){e[e.API=1]="API",e[e.VerboseAPI=2]="VerboseAPI",e[e.Error=3]="Error"}(re||(re={}));class ie{constructor(){this.handle=0,this.isVisible=!1,this.components=[],this.textureMemoryUsage=0,this.vboMemoryUsage=0,this.cpuMemoryUsage=0,this.textures=[]}get usedMemory(){return this.textureMemoryUsage+this.vboMemoryUsage+this.cpuMemoryUsage}get cachedMemory(){return this.usedMemory}}function se(e){return Math.round(e/1048.576)/1e3}let oe=class extends(L.LayerView3D(Q)){constructor(){super(...arguments),this.type="integrated-mesh-3dtiles",this._compressionTracker=new ee.TextureCompressionTracker,this._modifications=new Array,this._visibleGeometryChangedSchedulerHandle=null,this._wasmLayerId=-1,this.ignoresMemoryFactor=!1,this.drapeTargetType=A.DrapeTargetType.WithoutRasterImage,this._applySSAO=!r("disable-feature:im-ssao"),this._shadeNormals=!!r("enable-feature:im-shading"),this._lyrHandleToObjects=new Map,this._initialCullFace=new Map,this._suspendedHandle=null,this._dbgFlags=new Set}get hasModifications(){return this._modifications&&this._modifications.length>0}initialize(){if(this._dbgFlags.add(re.Error),this._dbg(re.VerboseAPI,"Tiles3DLayerView3D initialize() called"),this._updatingHandles.add((()=>this.layer.modifications),(()=>this._loadModifications()),o.initial),!this._canProjectWithoutEngine())throw new t("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const e=I.addLayerViewToWasm(this).then((e=>{this._wasmLayerId=e,this._intersectionHandler=new F.Tiles3DIntersectionHandler(this),this.view.sceneIntersectionHelper.addIntersectionHandler(this._intersectionHandler),this._updatingHandles.add((()=>this.slicePlaneEnabled),(e=>this._slicePlaneEnabledChange(e))),this._updatingHandles.add((()=>this._modifications),(()=>this._modificationsChanged()),o.initial),this._updatingHandles.add((()=>this.view.clippingArea),(()=>this._clippingAreaChanged()),o.initial),this._elevationProvider=new E.LayerElevationProvider({view:this.view,layerElevationSource:this,intersectionHandler:this._intersectionHandler}),this.view.elevationProvider.register("im",this._elevationProvider),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this);const t=this.view.resourceController.memoryController.newCache(`t3d-${this.uid}`,(e=>this._onRemoveFromCache(e)));this._memCache=t,this.addHandles([o.watch((()=>this.layer.elevationInfo),(e=>this._elevationInfoChanged(e)))]),this._suspendedHandle=o.watch((()=>this.suspended),(e=>this._wasm?.setEnabled(this,!e)),o.initial)}));this.addResolvingPromise(e)}destroy(){this._dbg(re.VerboseAPI,"Tiles3DLayerView3D destroy() called"),I.removeLayerViewFromWasm(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null),this._intersectionHandler&&(this.view.sceneIntersectionHelper.removeIntersectionHandler(this._intersectionHandler),this._intersectionHandler=null),this._elevationProvider&&(this._elevationProvider.objectsChanged(this._obbs),this.view.elevationProvider.unregister(this._elevationProvider),this._elevationProvider=null),this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this),this._lyrHandleToObjects.forEach((e=>this.freeObject(e))),this._lyrHandleToObjects.clear(),this._initialCullFace.clear(),this._memCache=s.destroyMaybe(this._memCache),this._updatingHandles=s.destroyMaybe(this._updatingHandles),this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle&&(this._visibleGeometryChangedSchedulerHandle.remove(),this._visibleGeometryChangedSchedulerHandle=null)}_modificationsChanged(){const e=this.layer.spatialReference,t=P.toWasmModification(this._layerClippingArea,this._modifications,e);this._wasm?.setMeshModifications(this,t,e.wkid)}_clippingAreaChanged(){const e=this.layer.spatialReference,t=T.create();this._layerClippingArea=H.toBoundingRect(this.view.clippingArea,t,e)?t:null,this._modificationsChanged()}_visibleGeometryChanged(){this._visibleGeometryChangedSchedulerHandle??=a.schedule((()=>{this.emit("visible-geometry-changed"),this._visibleGeometryChangedSchedulerHandle=null}))}_slicePlaneEnabledChange(e){this._intersectionHandler&&(this._intersectionHandler.slicePlaneEnabled=e),this.objects.forEach((t=>{const r=this._collection.getMaterial(t);r.commonMaterialParameters.hasSlicePlane=e,r.commonMaterialParameters.cullFace=e?J.CullFaceOptions.None:this._initialCullFace.get(t)}))}_elevationInfoChanged(e){this._wasm?.setLayerOffset(this,V.getElevationOffsetInMeters(e))}get _obbs(){return this.objects.map((e=>this._collection.getComponentObb(e)))}get _wasm(){return I.getLyr3DWasm(this.view)}get wasmLayerId(){return this._wasmLayerId}get usedMemory(){let e=0;return this._lyrHandleToObjects.forEach((t=>{t.isVisible&&(e+=t.usedMemory)})),e}get unloadedMemory(){return 0}get cachedMemory(){let e=0;return this._lyrHandleToObjects.forEach((t=>{t.isVisible||(e+=t.usedMemory)})),e}get visibleAtCurrentScale(){return Z.isInEffectiveScaleRange(this.layer.effectiveScaleRange,this.view.scale)}get performanceInfo(){let e=0,t=0,r=0,i=0,s=0,o=0;return this._lyrHandleToObjects.forEach((a=>{a.isVisible?(e+=a.textureMemoryUsage,t+=a.vboMemoryUsage,s++):(r+=a.textureMemoryUsage,i+=a.vboMemoryUsage,o++)})),new O.IntegratedMesh3DTilesViewPerformanceInfo(this.usedMemory,s,o,se(t),se(e),se(i),se(r))}_canProjectWithoutEngine(){if(this.view.state.viewingMode===D.ViewingMode.Local){const e=this.view.renderSpatialReference?.isWebMercator?3857:this.view.renderSpatialReference?.wkid??-1;if(3857!==e&&32662!==e)return!1}return!0}get _stage(){return this.view.stage}get _collection(){return this._stage.renderView.componentObjectCollection}get elevationOffset(){return V.getElevationOffsetInMeters(this.layer.elevationInfo)}get elevationRange(){const e=this.fullExtent;return e?.zmin&&e?.zmax?new S.ElevationRange(e.zmin,e.zmax):null}getElevationRange(e){return null}get fullExtent(){return this.layer.fullExtent}get objects(){return Array.from(this._lyrHandleToObjects.values()).reduce(((e,t)=>e.concat(t.components)),new Array)}isUpdating(){const e=this._wasm;return!(this._wasmLayerId<0||null==e)&&(e.isUpdating(this._wasmLayerId)||this._compressionTracker.compressing)}updatingFlagChanged(){this.notifyChange("updating")}async createRenderable(e){const t=e.meshData;if(null==t.data)throw new Error("meshData.data undefined");if(t.desc=JSON.parse(t.desc),null==t.desc)throw new Error("meshData.desc undefined");const r=f.fromArray(t.desc.origin),i=new Array,s=new Map,o=new ie;o.handle=e.handle,this._lyrHandleToObjects.set(e.handle,o);const a=this.view.basemapTerrain.spatialReference;let n,l;if("global"===this.view.viewingMode){const e=m.create();w.computeTranslationToOriginAndRotation(b.SphericalECEFSpatialReferenceLike,r,e,a),n=d.fromMat4(u.create(),e),l=d.invert(u.create(),n)}else n=u.IDENTITY,l=u.IDENTITY;const c=m.create();h.translate(c,c,r);const T=h.getTranslation(f.create(),c);let M=null;const V=f.create();if(t.desc.obb){const e=t.desc.obb.quaternion;M=new R.Obb(t.desc.obb.center,t.desc.obb.halfSize,p.fromValues(e[0],e[1],e[2],e[3]))}for(let e=0;e<t.desc.prims.length;e++){const c=t.desc.prims[e];if(this._dbg(re.VerboseAPI,JSON.stringify(c)),null==U.primTypeConversion[c.ptype]||null==t.data){this._dbg(re.VerboseAPI,"[Unsupported Feature] Unsupported primitive mode ("+c.ptype+"). Skipping primitive.");continue}const d=t.desc?.materials&&null!=c.materialId?t.desc.materials[c.materialId]:null,h=null!=d?d.lightingModel:C.Lyr3DLightingModel.Unlit,{positionView:m,positionAttr:p,normalsView:b,normalsAttr:w,colorAttr:D,texCoord0Attr:P,indicesView:O}=this.getBufferViews(c,t.data.buffer,n);if(null==p||null==m||null==O)continue;const A=new j.GeometryParameters(null!=D,P?W.TextureCoordinateType.Default:W.TextureCoordinateType.None,null!=b,this._shadeNormals,this._applySSAO),L=p.data.length/p.size,I=(e,t)=>!e||e.data.length/e.size===L||(this._dbg(re.Error,`${t} !== numPos. Skipping primitive.`),!1);if(!I(P,"numTexcoord")||!I(D,"numColors")||!I(w,"normals"))continue;const E=j.createVertexBufferLayout(A);if(null!=M?M=M.clone():(M=R.compute(p),g.add(V,M.center,r),M.center=V),n!==u.IDENTITY)for(let e=0;e<m.count;e++)m.getVec(e,V),g.transformMat3(V,V,n),m.setVec(e,V);const F=E.createBuffer(p.data.length);if(X.writeDefaultAttribute(K.VertexAttribute.POSITION,p,null,null,F,0),null!=P){const e=F.getField(K.VertexAttribute.UV0,x.BufferViewVec2f);X.writeBufferVec2(P,e,0)}null!=D&&X.writeDefaultAttribute(K.VertexAttribute.COLOR,p,null,null,F,0),null!=w&&X.writeDefaultAttribute(K.VertexAttribute.NORMALCOMPRESSED,w,null,null,F,0);const S=new Uint32Array([0,O.typedBuffer.length]),H={vertices:{data:F.buffer,count:F.byteLength/E.stride,layoutParameters:A},positionData:{positions:m.typedBuffer,indices:O.typedBuffer},indices:O.typedBuffer,componentOffsets:S};o.cpuMemoryUsage+=m.count,o.cpuMemoryUsage+=O.count;const G=this.view.renderSpatialReference,$=f.create(),Y=[1,1,1];_.localLinearScaleFactors(T,G,Y,a)||this._dbg(re.Error,"Unsupported coordinate system for IM overlay"),v.projectVectorToVector(T,G,$,a);const q=this._collection.createObject(new B.ObjectParameters(y.fromValues($[0],$[1],Y[0],Y[1]),new k.Transform(T,l),M,H));d&&this._collection.updateMaterial(q,(e=>{e.baseColor=d.baseColorFactor,e.usePBR=h===C.Lyr3DLightingModel.Pbr,e.hasParametersFromSource=!1,e.baseColorTexture=this._getTexture(d.baseColorTex,t,s,o),e.usePBR&&(e.mrrFactors=[d.metallicFactor,d.roughnessFactor,0],e.emissiveBaseColor=d.emissiveFactor??[0,0,0],e.metallicRoughnessTexture=this._getTexture(d.metalTex,t,s,o),e.emissionTexture=this._getTexture(d.emissiveTex,t,s,o),e.occlusionTexture=this._getTexture(d.occlusionTex,t,s,o),e.normalTexture=this._getTexture(d.normalTex,t,s,o)),e.objectOpacity=0,e.alphaDiscardMode=J.AlphaDiscardMode.Mask;const r=[];e.baseColorTexture&&r.push(e.baseColorTexture.loadPromise),e.usePBR&&e.metallicRoughnessTexture&&r.push(e.metallicRoughnessTexture.loadPromise),e.usePBR&&e.emissionTexture&&r.push(e.emissionTexture.loadPromise),e.usePBR&&e.occlusionTexture&&r.push(e.occlusionTexture.loadPromise),e.usePBR&&e.normalTexture&&r.push(e.normalTexture.loadPromise);const a=Promise.all(r);i.push(a),a.then((()=>{e.alphaDiscardMode=U.alphaModeConversion[d.alphaMode],e.objectOpacity=1,o.textureMemoryUsage+=e.baseColorTexture?.glTexture?.usedMemory||0,e.usePBR&&(o.textureMemoryUsage+=e.metallicRoughnessTexture?.glTexture?.usedMemory||0,o.textureMemoryUsage+=e.emissionTexture?.glTexture?.usedMemory||0,o.textureMemoryUsage+=e.occlusionTexture?.glTexture?.usedMemory||0,o.textureMemoryUsage+=e.normalTexture?.glTexture?.usedMemory||0)})),e.commonMaterialParameters.doubleSided=d.isDoubleSided,e.commonMaterialParameters.cullFace=d.faceCulling?U.faceCullingConversion[d.faceCulling]:J.CullFaceOptions.Back,this._initialCullFace.set(q,e.commonMaterialParameters.cullFace),e.commonMaterialParameters.hasSlicePlane=this.slicePlaneEnabled,e.componentParameters.castShadows=N.ComponentParameterSummary.All,e.textureAlphaCutoff=d.alphaCutoff??te.alphaCutoff,e.alphaDiscardMode=U.alphaModeConversion[d.alphaMode],e.isIntegratedMesh=!0,e.polygonOffsetEnabled=!1,e.hasOccludees=!1,e.ellipsoidMode=z.getEllipsoidMode(this.view.spatialReference)})),o.components.push(q),o.vboMemoryUsage+=this._collection.getObjectGPUMemoryUsage(q)}if(await Promise.all(i),s.forEach((e=>{o.textures.push(e)})),!this._memCache)throw new Error("no memCache");return this._memCache.put(`${o.handle}`,o),{memUsageBytes:o.usedMemory}}freeRenderable(e){const t=this._lyrHandleToObjects.get(e);t&&(this.freeObject(t),this._lyrHandleToObjects.delete(e))}freeObject(e){this._memCache&&this._memCache.pop(`${e.handle}`),e.components.forEach((t=>{e.textures.forEach((e=>{this._stage.removeTexture(e)})),this._collection.destroyObject(t),this._initialCullFace.delete(t)}))}setRenderableVisibility(e,t,r){if(this._memCache){for(let i=0;i<r;++i){const r=e[i],s=t[i];if(!s)continue;const o=this._lyrHandleToObjects.get(r);o&&(this._visibleGeometryChanged(),o.isVisible=s,o.components.forEach((e=>{this._collection.setObjectVisibility(e,s),this._elevationProvider.objectChanged(this._collection.getComponentObb(e))})),this._memCache.pop(`${r}`))}for(let i=0;i<r;++i){const r=e[i],s=t[i];if(s)continue;const o=this._lyrHandleToObjects.get(r);o&&(this._visibleGeometryChanged(),o.isVisible=s,o.components.forEach((e=>{this._collection.setObjectVisibility(e,s),this._elevationProvider.objectChanged(this._collection.getComponentObb(e))})),this._memCache.put(`${r}`,o))}}}_getTexture(e,t,i,s){let o=null;if(e&&t.desc?.images&&t.data?.buffer){const a=t.desc.images[e?.imageId];if(o=i.get(a),!o&&a){const n=this._stage.renderView.renderingContext.parameters.maxMaxAnisotropy,l=!!a.mipCount||n>1,c=U.wrapModeConversion[e.wrapMode??C.Lyr3DUvWrapMode.None];let d=a.alpha?4:3;const u=new Uint8Array(t.data.buffer,a.data.byteOffset,a.data.byteCount);let h=null,m=null,p=null;switch(a.format){case C.Lyr3DImageFormat.Raw:a.pixelFormat===C.Lyr3DPixelFormat.R8?(h=u,d=1,m=""):a.pixelFormat===C.Lyr3DPixelFormat.Rgb8?(h=u,d=3,m=""):a.pixelFormat===C.Lyr3DPixelFormat.Rgba8&&(h=u,d=4,m="");break;case C.Lyr3DImageFormat.Dxt1:h=u,d=3,m=J.TextureEncodingMimeType.DDS_ENCODING;break;case C.Lyr3DImageFormat.Dxt5:h=u,d=4,m=J.TextureEncodingMimeType.DDS_ENCODING;break;case C.Lyr3DImageFormat.Basis:h=u,d=3,m=J.TextureEncodingMimeType.KTX2_ENCODING;break;case C.Lyr3DImageFormat.Png:m="image/png",p=document.createElement("img");break;case C.Lyr3DImageFormat.Jpeg:m="image/jpeg",p=document.createElement("img");break;case C.Lyr3DImageFormat.Etc2:m="image/ktx",p=document.createElement("img");break;case C.Lyr3DImageFormat.Astc:this._dbg(re.Error,"Astc texture not supported");break;case C.Lyr3DImageFormat.Pvrtc:this._dbg(re.Error,"Pvrtc texture not supported")}if(p&&m){const e=new Blob([u],{type:m});p.src=URL.createObjectURL(e),h=p}if(h&&null!=m){const e=r("enable-feature:esri-compress-IM-textures")?{compressionTracker:this._compressionTracker,compressionCallback:e=>{e&&e>0&&(s.textureMemoryUsage-=e)}}:void 0;o=new q.Texture(h,{mipmap:l,maxAnisotropy:n,encoding:m,wrap:c,components:d,compressionOptions:e,noUnpackFlip:!0,width:a.mip0Width,height:a.mip0Height}),this._stage.addTexture(o),i.set(a,o)}}}return o?new G.RenderTexture(this.view.stage.renderView.textures,o.id):null}getBufferViews(e,t,r){let i,s,o,a,n,l,c,d=null;for(let c=0;c<e.atrbs.length;c++){const u=e.atrbs[c],h=u.view,m=void 0,p=h.byteOffset+h.byteCount,g=h.byteCount/U.lyr3DTypeToByteSize[h.type],f=[...Array(g).keys()].map((e=>e));try{switch(u.sem){case C.Lyr3DVtxAtrbSemantic.Position:3!==h.ncomp||h.type!==C.Lyr3DType.F32?this._dbg(re.Error,"[Unsupported Feature] Unsupported view for Position ("+h+")"):(i=new x.BufferViewVec3f(t,h.byteOffset,m,p),s=new $.Attribute(i.typedBuffer,f,3));break;case C.Lyr3DVtxAtrbSemantic.Normal:if(3!==h.ncomp||h.type!==C.Lyr3DType.F32)this._dbg(re.Error,"[Unsupported Feature] Unsupported view for Normal ("+h+")");else{const e=new x.BufferViewVec3f(t,h.byteOffset,m,p),i=Y.compressAndTransformNormals(e.typedBuffer,r);n=new x.BufferViewInt16(i),l=new $.Attribute(n.typedBuffer,f,2)}break;case C.Lyr3DVtxAtrbSemantic.TexCoord:2!==h.ncomp||h.type!==C.Lyr3DType.F32?this._dbg(re.Error,"[Unsupported Feature] Unsupported view for Texcoord ("+h+")"):void 0===a&&(a=new $.Attribute(new x.BufferViewVec2f(t,h.byteOffset,m,p).typedBuffer,f,2));break;case C.Lyr3DVtxAtrbSemantic.Color:4===h.ncomp?(h.type===C.Lyr3DType.F32&&(d=new x.BufferViewVec4f(t,h.byteOffset,m,p)),h.type===C.Lyr3DType.U8&&(d=new x.BufferViewVec4u8(t,h.byteOffset,m,p)),h.type===C.Lyr3DType.U16&&(d=new x.BufferViewVec4u16(t,h.byteOffset,m,p))):3===h.ncomp&&(h.type===C.Lyr3DType.F32&&(d=new x.BufferViewVec3f(t,h.byteOffset,m,p)),h.type===C.Lyr3DType.U8&&(d=new x.BufferViewVec3u8(t,h.byteOffset,m,p)),h.type===C.Lyr3DType.U16&&(d=new x.BufferViewVec3u16(t,h.byteOffset,m,p))),null==d?this._dbg(re.VerboseAPI,"[Unsupported Feature] Unsupported view for Color ("+h+")"):o=new $.Attribute(d.typedBuffer,f,h.ncomp);break;case C.Lyr3DVtxAtrbSemantic.FeatureIndex:break;default:this._dbg(re.VerboseAPI,"[Unsupported Feature] Unsupported semantic ("+u.sem+"). Skipping vertex attribute.")}}catch(e){this._dbg(re.VerboseAPI,"Error Creating buffer ("+e+"). Skipping vertex attribute.")}}if(e.index){const r=e.index.view,i=void 0,s=r.byteOffset+r.byteCount;switch(e.index.view.type){case C.Lyr3DType.U16:c=new x.BufferViewUint16(t,r.byteOffset,i,s);break;case C.Lyr3DType.U32:c=new x.BufferViewUint32(t,r.byteOffset,i,s);break;case C.Lyr3DType.U8:default:this._dbg(re.Error,"[Unsupported Feature] index type not supported ("+r.type+").")}}if(null==c&&null!=i){const e=i.count;if(e<65535){const t=new Uint16Array(e);c=new x.BufferViewUint16(t)}else{const t=new Uint32Array(e);c=new x.BufferViewUint32(t)}for(let t=0;t<e;t++)c.set(t,t)}return{positionView:i,positionAttr:s,colorAttr:o,texCoord0Attr:a,indicesView:c,normalsView:n,normalsAttr:l}}_loadModifications(){if(this.removeHandles("modifications"),null==this.layer.modifications)return void(this._modifications=[]);const e=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange((()=>e),(()=>this._modifications=e.toArray()),o.initial),"modifications")}_onRemoveFromCache(e){this._wasm?.onRenderableEvicted(this,e.handle,e.usedMemory),this.freeRenderable(e.handle)}_dbg(e,t){this._dbgFlags.has(e)&&(e===re.Error?i.getLogger(this).error(t):i.getLogger(this).warn(t))}};return e.__decorate([n.property({type:[M]})],oe.prototype,"_modifications",void 0),e.__decorate([n.property()],oe.prototype,"_visibleGeometryChangedSchedulerHandle",void 0),e.__decorate([n.property()],oe.prototype,"layer",void 0),e.__decorate([n.property({readOnly:!0})],oe.prototype,"visibleAtCurrentScale",null),e.__decorate([n.property()],oe.prototype,"elevationOffset",null),oe=e.__decorate([c.subclass("esri.views.3d.layers.IntegratedMesh3DTilesLayerView3D")],oe),oe}));