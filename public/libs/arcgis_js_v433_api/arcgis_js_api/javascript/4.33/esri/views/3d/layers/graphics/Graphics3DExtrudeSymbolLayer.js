// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../Color","../../../../core/has","../../../../core/Error","../../../../core/lang","../../../../core/unitUtils","../../../../chunks/earcut","../../../../core/libs/gl-matrix-2/math/mat3","../../../../core/libs/gl-matrix-2/factories/mat3f64","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../geometry/projection/computeTranslationToOriginAndRotation","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/DoubleArray","../../../../geometry/support/Indices","../../../../chunks/vec3","../../../../layers/graphics/data/SnappingCandidate","../../../../renderers/support/renderingInfoUtils","../../../../symbols/support/materialUtils","../../../ViewingMode","./elevationAlignmentUtils","./Graphics3DObject3DGraphicLayer","./Graphics3DSymbolLayer","./graphicUtils","./interfaces","./polygonUtils","../support/edgeUtils","../../support/debugFlags","../../support/ElevationProvider","../../support/renderInfoUtils/polygon","../../webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl","../../webgl-engine/lib/Attribute","../../webgl-engine/lib/basicInterfaces","../../webgl-engine/lib/Geometry","../../webgl-engine/lib/GeometryWithMapPositions","../../webgl-engine/lib/Normals","../../webgl-engine/lib/Object3D","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/DefaultMaterial","../../webgl-engine/lib/IntersectableGeometry"],(function(e,t,r,n,i,a,o,s,l,c,u,h,d,g,p,m,y,b,f,x,S,A,_,w,O,P,E,M,C,v,I,D,V,R,L,z,G,U,B,T,F,N,k){"use strict";const j=["polygon","extent"];class H extends P.Graphics3DSymbolLayer{constructor(e,t,r,n){super(e,t,r,n,function(e){return 1===(e.material?.color?.a??1)}(t)),this.ensureDrapedStatus(!1)}async doLoad(){if(!this._drivenProperties.size){const e=E.validateSymbolLayerSize(this._getSymbolSize());if(e)throw new n("graphics3dextrudesymbollayer:invalid-size",e)}const e=this.symbolLayer,t=e?.material,r=t?.color,i=this._getCombinedOpacityAndColor(r),a=d.fromArray(i),o=i[3],s=this.needsDrivenTransparentPass,l=t?.emissive,c={usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0,diffuse:a,ambient:a,opacity:o,drivenOpacity:s,hasVertexColors:!0,hasSlicePlane:this._context.slicePlaneEnabled,castShadows:e.castShadows,emissiveStrength:l?.strength??0,emissiveSource:A.EmissiveSourceMode.Color,offsetTransparentBackfaces:!0,normalType:R.NormalType.Compressed},u=new N.DefaultMaterial(c,this._context);u.setParameters({cullFace:u.transparent?z.CullFaceOptions.None:z.CullFaceOptions.Back});const h=new N.DefaultMaterial({...c,cullFace:z.CullFaceOptions.Back},this._context);this._materials[pe.Main]=u,this._materials[pe.Bottom]=h}destroy(){super.destroy(),this._materials.length=0}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,j,this.symbolLayer.type))return null;const r=this._getVertexOpacityAndColor(e.renderingInfo,this._getFallbackOpacityAndColor(),255),n=this.setGraphicElevationContext(t);return this._createAs3DShape(t,e.renderingInfo,r,n,t.uid)}layerOpacityChanged(e,t){const r=this.symbolLayer?.material?.color,n=this._getCombinedOpacity(r);this._materials[pe.Main]?.setParameters({opacity:n}),this._materials[pe.Bottom]?.setParameters({opacity:n});const i=this._getLayerOpacity();e?.forEach((e=>t(e)?.layerOpacityChanged(i,this._context.isAsync)))}layerElevationInfoChanged(e,t){return this.updateGraphics3DGraphicElevationInfo(e,t,w.needsElevationUpdates3D)}slicePlaneEnabledChanged(e,t){return this._materials[pe.Main]?.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),this._materials[pe.Bottom]?.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),e?.forEach((e=>{const r=t(e);null!=r&&r.slicePlaneEnabledChanged(this._context.slicePlaneEnabled,this._context.isAsync)})),!0}physicalBasedRenderingChanged(){const e={usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0};return this._materials[pe.Main]?.setParameters(e),this._materials[pe.Bottom]?.setParameters(e),!0}_getExtrusionSize(e){let t;return t=e.size&&this._drivenProperties.size?S.getDriverAxisSizeValue(e.size,2)??0:this._getSymbolSize(),t/=this._context.renderCoordsHelper.unitInMeters,t}applyRendererDiff(e,t){return this._drivenPropertiesChanged(t)?M.ApplyRendererDiffResult.RecreateSymbol:M.ApplyRendererDiffResult.RecreateGraphics}async queryForSnapping(e,t,r,n){const o=this._getExtrusionSize(r)*this._context.renderCoordsHelper.unitInMeters/a.getMetersPerVerticalUnitForSR(t),{objectId:s,target:l}=e,c=i.clone(l);switch(c.z=(c.z??0)+o,e.type){case"edge":{const{start:t,end:r}=e,n=i.clone(t),a=i.clone(r);return n.z=(n.z??0)+o,a.z=(a.z??0)+o,[x.makeEdgeCandidate(s,c,1/0,n,a)]}case"vertex":return[x.makeVertexCandidate(s,c,1/0),x.makeEdgeCandidate(s,l,1/0,l,c)];default:return[]}}_getSymbolSize(){return this.symbolLayer.size??1}_createAs3DShape(e,t,r,n,i){const a=C.geometryAsPolygon(e.geometry);if(null==a)return null;if(0===a.rings.length||!a.rings.some((e=>e.length>0)))return this._logGeometryValidationWarnings(a.rings,"rings","ExtrudeSymbol3DLayer"),null;const g=V.geometryToRenderInfo(a,this._context.elevationProvider,this._context.renderCoordsHelper,n);this._logGeometryCreationWarnings(g,a.rings,"rings","ExtrudeSymbol3DLayer");const x=E.computeCentroid(a);if(null==x)return null;const S=new Array,A=new Array,P=m.create(),M=u.create(),R=d.create(),L=this._context.renderCoordsHelper.viewingMode===_.ViewingMode.Global;L||this._context.renderCoordsHelper.worldUpAtPosition(null,R),p.computeTranslationToOriginAndRotation(a.spatialReference,[x.x,x.y,0],M,this._context.renderCoordsHelper.spatialReference);const z=u.create();c.invert(z,M);const G=l.create();s.normalFromMat4(G,z);const{polygons:N,mapPositions:k,position:j}=g,H=new Map,q=this._materials[pe.Main];for(const e of N){const n=e.count;if(this._context.clippingExtent&&(m.fromBuffer(e.mapPositions,P),!m.intersectsClippingArea(P,this._context.clippingExtent)))continue;const a=o.earcut(e.mapPositions,e.holeIndices,3);if(0===a.length)continue;const s=a.length,l=6*n,c=l+s,u=b.newIndexArray(c),h=b.newIndexArray(s),d=y.newDoubleArray(3*l),g=y.newDoubleArray(3*l),p=y.newDoubleArray(3*l),x=y.newDoubleArray(l);Z(j,k,a,e,d,p,g,x,u,h,this._getExtrusionSize(t),R,L),f.transformMat4(d,d,z);const _=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:i,layerViewUid:this._context.layerViewUid}),w=new me(d,p,B.compressNormals(g),x),O=W(q,u,u.length-h.length,w,r,_),E=n,C=n,v=2*e.count,I=new ye(E,C,v,s/3);ne(O,I,M),H.set(O,I),S.push(O,W(this._materials[pe.Bottom],h,0,w,r,_)),A.push(w.heights)}if(0===S.length)return null;const J=new T.Object3D({geometries:S,layerViewUid:this._context.layerViewUid,graphicUid:i,isElevationSource:!0});J.transformation=M;const K=v.createMaterial(this.symbolLayer,{opacity:this._getLayerOpacity()}),Q=K?new O.Object3DEdgeState(this._materials[pe.Main],K,this._context.slicePlaneEnabled):null,X=new O.Graphics3DObject3DGraphicLayer(this,J,null,((e,t,r,n,i)=>function(e,t,r,n,i,a,o){const s=e.stageObject,l=s.geometries,d=l.length,g="absolute-height"!==t.mode;let p=0;const m=s.transformation,y=c.invertOrIdentity(u.create(),m);for(let e=0;e<d;e+=2){const t=l[e];if(!U.isGeometryWithMapPositions(t))continue;const c=t.getMutableAttribute(F.VertexAttribute.POSITION).data,u=a[e/2],d=new D.SamplePosition(t.mapPositions),b=c.length/3;let f=!1,x=0;{let e=0;for(let t=0;t<b;t++){re[0]=c[e],re[1]=c[e+1],re[2]=c[e+2],n(d,oe),g&&(x+=oe.sampledElevation),I.debugFlags.TESTS_DISABLE_OPTIMIZATIONS?(h.set(ie,d.array[d.offset],d.array[d.offset+1],oe.z+u[e/3]),null!=r&&i.toRenderCoords(ie,r,ie),h.transformMat4(ie,ie,y)):(h.set(ie,c[e],c[e+1],c[e+2]),h.transformMat4(ie,ie,m),i.setAltitude(ie,oe.z+u[e/3]),h.transformMat4(ie,ie,y)),c[e]=ie[0],c[e+1]=ie[1],c[e+2]=ie[2];const t=ce/i.unitInMeters;(Math.abs(re[0]-c[e])>=t||Math.abs(re[1]-c[e+1])>=t||Math.abs(re[2]-c[e+2])>=t)&&(f=!0),d.offset+=3,e+=3}}if(f){const r=o.get(t);r&&ne(t,r,m),s.geometryVertexAttributeUpdated(l[e],F.VertexAttribute.NORMALCOMPRESSED),t.invalidateBoundingInfo(),s.geometryVertexAttributeUpdated(l[e],F.VertexAttribute.POSITION),l[e+1].invalidateBoundingInfo(),s.geometryVertexAttributeUpdated(l[e+1],F.VertexAttribute.POSITION)}p+=x/b}return p/d}(e,t,r,n,i,A,H)),n,Q);return X.alignedSampledElevation=g.sampledElevation,X.needsElevationUpdates=w.needsElevationUpdates3D(n.mode),X}_getFallbackOpacityAndColor(){const e=this.symbolLayer?.material?.color;return t.toUnitRGBA(e)??g.ZEROS}}function W(e,t,r,n,i,a){const o=b.getZeroIndexArray(t.length),s=[[F.VertexAttribute.POSITION,new L.Attribute(n.positions,t,3,!0)],[F.VertexAttribute.NORMALCOMPRESSED,new L.Attribute(n.normals,t,2,!0)],[F.VertexAttribute.COLOR,new L.Attribute(i,o,4,!0)]];return new G.Geometry(e,s,n.elevation,k.GeometryType.Mesh,a,r)}function Z(e,t,r,n,i,a,o,s,l,c,u,d,g){const p=r.length/3;let m=2*n.count;!function(e,t,r,n,i,a,o,s,l,c,u,d,g,p,m,y,b){h.copy(ae,y),l??=[],c??=[],u??=[];const f=m>0?1:-1;let x=3*r,S=0,A=3*S,_=n,w=3*_;for(let r=0;r<n;++r){const r=e[x],n=e[x+1],i=e[x+2];b&&(ae[0]=r,ae[1]=n,ae[2]=i,h.normalize(ae,ae)),s[A+0]=r,s[A+1]=n,s[A+2]=i;const a=t[x+0],o=t[x+1],d=t[x+2];l[A+0]=a,l[A+1]=o,l[A+2]=d,c[A+0]=-f*ae[0],c[A+1]=-f*ae[1],c[A+2]=-f*ae[2],u[S]=0,s[w+0]=r+m*ae[0],s[w+1]=n+m*ae[1],s[w+2]=i+m*ae[2],l[w+0]=a,l[w+1]=o,l[w+2]=d,u[_]=m,A+=3,w+=3,x+=3,S+=1,_+=1}x=0,A=0,w=3*p;const O=m<0?le:se,P=m<0?se:le;for(let e=0;e<o;++e)g[A]=i[x+O[0]],g[A+1]=i[x+O[1]],g[A+2]=i[x+O[2]],d[w]=i[x+P[0]]+n,d[w+1]=i[x+P[1]]+n,d[w+2]=i[x+P[2]]+n,A+=3,w+=3,x+=3}(e,t,n.index,n.count,r,0,p,i,a,o,s,l,c,m,u,d,g);let y=0,b=2*n.count;m=0;const f=n.pathLengths[0];K(i,a,s,o,y,f,n.count,b,l,m,u),b+=4*f,m+=2*f,y+=f;for(let e=1;e<n.pathLengths.length;++e){const t=n.pathLengths[e];K(i,a,s,o,y,t,n.count,b,l,m,u),b+=4*t,m+=2*t,y+=t}}function q(e,t,r,n,i,a,o){n[a]=n[o],o*=3,e[a*=3]=e[o],e[a+1]=e[o+1],e[a+2]=e[o+2],t[a]=t[o],t[a+1]=t[o+1],t[a+2]=t[o+2],r[a]=i[0],r[a+1]=i[1],r[a+2]=i[2]}const J=d.create();function K(e,t,r,n,i,a,o,s,l,c,u){t??=[],r??=[],n??=[];let h=i,d=i+1,g=i+o,p=i+o+1,m=s,y=s+1,b=s+2*a,f=s+2*a+1;u<0&&(h=i+o+1,p=i);let x=3*c;for(let s=0;s<a;++s)s===a-1&&(d=i,u>0?p=i+o:h=i+o),te(e,h,d,g,J),q(e,t,n,r,J,m,h),q(e,t,n,r,J,y,d),q(e,t,n,r,J,b,g),q(e,t,n,r,J,f,p),l[x]=m,l[x+1]=b,l[x+2]=f,l[x+3]=m,l[x+4]=f,l[x+5]=y,x+=6,h++,d++,g++,p++,m+=2,y+=2,b+=2,f+=2}const Q=d.create(),X=d.create(),Y=d.create(),$=d.create(),ee=d.create();function te(e,t,r,n,i){t*=3,r*=3,n*=3,h.set(Q,e[t++],e[t++],e[t++]),h.set(X,e[r++],e[r++],e[r++]),h.set(Y,e[n++],e[n++],e[n++]),h.subtract($,X,Q),h.subtract(ee,Y,Q),h.cross(i,ee,$),h.normalize(i,i)}const re=d.create();function ne(e,t,r){const n=e.getMutableAttribute(F.VertexAttribute.POSITION),i=e.getMutableAttribute(F.VertexAttribute.NORMALCOMPRESSED).data,{topVertexStart:a,topVertexCount:o,topFaceStart:s,topFaceCount:l}=t,c=n.data,u=o,d=e.attributes.get(F.VertexAttribute.POSITION).indices,g=s+l,p=a+o,m=y.newDoubleArray(3*u);for(let e=0;e<u;++e){const t=3*e;m[t+0]=0,m[t+1]=0,m[t+2]=0}const b=ue,f=he,x=de,S=ge,A=ae;for(let e=s;e<g;++e){const t=3*e;for(let e=0;e<3;++e){const n=d[t+e];S[e]=n;const i=3*n;h.set(ie,c[i+0],c[i+1],c[i+2]),h.transformMat4(b[e],ie,r)}h.sub(f,b[1],b[0]),h.sub(x,b[2],b[0]),h.cross(A,f,x),h.normalize(A,A);for(let e=0;e<3;++e){const t=3*(S[e]-a);m[t+0]+=A[0],m[t+1]+=A[1],m[t+2]+=A[2]}}for(let e=a;e<p;++e){const t=3*(e-a),r=m[t+0],n=m[t+1],o=m[t+2],s=Math.sqrt(r*r+n*n+o*o);B.compressNormal(i,e,r/s,n/s,o/s)}}const ie=d.create(),ae=d.create(),oe=new w.SampleElevationInfo,se=[0,2,1],le=[0,1,2],ce=.01,ue=[d.create(),d.create(),d.create()],he=d.create(),de=d.create(),ge=[0,0,0];var pe;!function(e){e[e.Main=0]="Main",e[e.Bottom=1]="Bottom"}(pe||(pe={}));class me{constructor(e,t,r,n){this.positions=e,this.elevation=t,this.normals=r,this.heights=n}}class ye{constructor(e,t,r,n){this.topVertexStart=e,this.topVertexCount=t,this.topFaceStart=r,this.topFaceCount=n}}e.Graphics3DExtrudeSymbolLayer=H,e.extrudePolygon=Z,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));