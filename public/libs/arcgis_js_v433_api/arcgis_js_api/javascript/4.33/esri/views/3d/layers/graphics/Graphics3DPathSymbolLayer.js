// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../Color","../../../../core/has","../../../../core/Error","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../core/libs/gl-matrix-2/math/vec2","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../geometry/projection/projectBuffer","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/DoubleArray","../../../../geometry/support/FloatArray","../../../../symbols/support/materialUtils","./elevationAlignmentUtils","./Graphics3DObject3DGraphicLayer","./Graphics3DPathSymbolLayerConstants","./Graphics3DSymbolLayer","./graphicUtils","./interfaces","../support/FastSymbolUpdates","../../support/ElevationProvider","../../webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl","../../webgl-engine/lib/basicInterfaces","../../webgl-engine/lib/Object3D","../../webgl-engine/lib/Path","../../webgl-engine/lib/PathBuilder","../../webgl-engine/lib/PathCapBuilder","../../webgl-engine/lib/PathExtruder","../../webgl-engine/lib/PathGeometry","../../webgl-engine/lib/PathGeometryData","../../webgl-engine/lib/pathGeometryUtils","../../webgl-engine/lib/PathProfile","../../webgl-engine/lib/PathVertex","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/DefaultMaterial","../../webgl-engine/materials/PathMaterial"],(function(e,t,i,r,a,s,n,o,l,c,h,p,d,u,f,m,g,b,y,_,v,x,w,S,P,C,D,A,V,U,R,E,B,O,z,G,k,L,I){"use strict";const F=["polyline"];class M extends _.Graphics3DSymbolLayer{constructor(e,t,i,r){super(e,t,i,r,function(e){return 1===(e.material?.color?.a??1)}(t)),this._intrinsicSize=o.fromValues(1,1),this._upVectorAlignment=E.UpVectorAlignment.Path,this._stencilWidth=.1,this.ensureDrapedStatus(!1)}async doLoad(){const e=this.symbolLayer,t=null!=e.width?e.width:e.height,i=null!=e.height?e.height:t;this._vvConvertOptions=new w.ConvertOptions({supports:{size:!0,color:!0,rotation:!1,opacity:!0},modelSize:[1,1,1],symbolSize:[t,1,i],unitInMeters:this._context.renderCoordsHelper.unitInMeters,fallbackColor:this._getFallbackOpacityAndColor(),fallbackSize:[t,1,i]});const a=this._context.renderer?.visualVariables;this._fastUpdates=a?.length?w.initFastSymbolUpdatesState(this._context.renderer,this._vvConvertOptions):null;const s=e.anchor||"center";this._upVectorAlignment="heading"===e.profileRotation?E.UpVectorAlignment.World:E.UpVectorAlignment.Path;const l=e.profile||"circle";switch(l){default:case"circle":this._profile=z.circleProfiles[s];break;case"quad":this._profile=z.quadProfiles[s]}switch(e.join){case"round":this._extruder=new R.MiterExtruder(0,y.pathNumRoundJoinSubdivisions);break;case"bevel":this._extruder=new R.MiterExtruder(0,1);break;case"miter":this._extruder=new R.MiterExtruder(.8*Math.PI,1);break;default:this._extruder=new R.SimpleExtruder}const h=e.cap||"butt";switch(h){case"none":this._startCap=new U.NoCapBuilder,this._endCap=new U.NoCapBuilder;break;case"butt":default:this._startCap=new U.TriangulationCapBuilder(this._profile,0),this._endCap=new U.TriangulationCapBuilder(this._profile,0,!0);break;case"square":this._startCap=new U.TriangulationCapBuilder(this._profile,-.5),this._endCap=new U.TriangulationCapBuilder(this._profile,.5,!0);break;case"round":{const e="quad"===l;this._startCap=new U.RoundCapBuilder({profile:this._profile,flip:!1,breakNormals:e,subdivisions:y.pathNumRoundCapExtrusionSubdivisions}),this._endCap=new U.RoundCapBuilder({profile:this._profile,flip:!0,breakNormals:e,subdivisions:y.pathNumRoundCapExtrusionSubdivisions});break}}const p=this.symbolLayer?.material?.color,d=this._getCombinedOpacityAndColor(p),u=c.fromArray(d),f=d[3],g=this.needsDrivenTransparentPass,b=e.material?.emissive,_={diffuse:u,ambient:u,emissiveStrength:b?.strength??0,emissiveSource:m.EmissiveSourceMode.Color,opacity:f,drivenOpacity:g,hasVertexColors:!1,hasSlicePlane:this._context.slicePlaneEnabled,castShadows:this.symbolLayer.castShadows,offsetTransparentBackfaces:!0};if(!this._drivenProperties.size&&(n.set(this._intrinsicSize,t,i),!v.isValidSize(this._intrinsicSize[0])||!v.isValidSize(this._intrinsicSize[1])))throw new r("graphics3dpathsymbollayer:invalid-size","Symbol sizes may not be negative values");let x;this._fastUpdates?.visualVariables.size||n.scale(this._intrinsicSize,this._intrinsicSize,1/this._context.renderCoordsHelper.unitInMeters),this._fastUpdates?x=new I.PathMaterial({..._,...this._fastUpdates.materialParameters,size:o.fromArray(this._intrinsicSize)},this._context):(_.hasVertexColors=this._drivenProperties.color||this._drivenProperties.opacity,_.normalType=P.NormalType.Compressed,x=new L.DefaultMaterial(_,this._context)),x.setParameters({usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0,cullFace:x.transparent||"none"===h?C.CullFaceOptions.None:C.CullFaceOptions.Back}),this._materials[0]=x}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,F,this.symbolLayer.type))return null;const i=this.setGraphicElevationContext(t);return this._createAs3DShape(e,i)}layerOpacityChanged(){const e=this.symbolLayer?.material?.color,t=this._getCombinedOpacity(e);this._materials[0]?.setParameters({opacity:t})}layerElevationInfoChanged(e,t){return this.updateGraphics3DGraphicElevationInfo(e,t,g.needsElevationUpdates3D)}slicePlaneEnabledChanged(){return this._materials[0]?.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),!0}physicalBasedRenderingChanged(){return this._materials[0]?.setParameters({usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0}),!0}applyRendererDiff(e,t){for(const i in e.diff){if("visualVariables"!==i)return x.ApplyRendererDiffResult.RecreateSymbol;if(!w.updateFastSymbolUpdatesState(this._fastUpdates,t,this._vvConvertOptions))return x.ApplyRendererDiffResult.RecreateSymbol;this._materials[0]?.setParameters(this._fastUpdates.materialParameters)}return x.ApplyRendererDiffResult.FastUpdate}_getVertexData(e){let t=0;const i=e.paths,r=[],a=e.spatialReference,s=this._context.elevationProvider.spatialReference,n=this._context.renderCoordsHelper.spatialReference;for(const e of i)t+=e.length;const o=u.newDoubleArray(3*t);let l,c=0;for(const t of i){r.push({offset:c,numVertices:t.length});for(const i of t)o[c++]=i[0],o[c++]=i[1],o[c++]=e.hasZ?i[2]:0}return null==s||a.equals(s)||p.projectBuffer(o,a,0,o,s,0,t)?(null==s||s.equals(n)?l=u.doubleArrayFrom(o):(l=u.newDoubleArray(3*t),p.projectBuffer(o,s,0,l,n,0,t)),{pathVertexDataInfos:r,vertexDataES:o,vertexDataRS:l}):null}_createAs3DShape(e,t){const{graphic:i,renderingInfo:r}=e,n=i.geometry,c=this._getVertexData(n);if(null==c)return this.logger.warn("PathSymbol3DLayer geometry failed to be created (failed to project geometry to view spatial reference)"),null;if(0===c.pathVertexDataInfos.length)return 0!==n.paths.length&&n.paths.some((e=>e.length>0))||this.logger.warn("PathSymbol3DLayer geometry failed to be created (no paths were defined)"),null;const h=new Array,p=n.spatialReference,u=d.create(),m=this._context.renderCoordsHelper,y=new S.SamplePosition(c.vertexDataES),_=i.uid,v=f.newFloatArray(c.vertexDataRS.length);for(const e of c.pathVertexDataInfos){const n=e.numVertices;if(n<2)continue;const f=e.offset;if(null!=this._context.clippingExtent&&(d.fromSubBuffer(c.vertexDataES,f,n,u),!d.intersectsClippingArea(u,this._context.clippingExtent)))continue;const b=new Array,x=f+3*n;for(let e=f;e<x;e+=3){y.offset=e;const i=g.evaluateElevationAlignmentAtPoint(y,this._context.elevationProvider,t,m);l.set(q,c.vertexDataRS[e],c.vertexDataRS[e+1],c.vertexDataRS[e+2]),m.setAltitude(q,i),c.vertexDataRS[e]=q[0],c.vertexDataRS[e+1]=q[1],c.vertexDataRS[e+2]=q[2],b.push(G.newPathVertex(this._upVectorAlignment))}const S=new A.Path(b,c.vertexDataES,c.vertexDataRS,f,v);j(S,this._upVectorAlignment,this._context.renderCoordsHelper);const P=new V.PathBuilder(S,this._profile,this._extruder,this._startCap,this._endCap);let C=null;if(this._fastUpdates){const e=this._fastUpdates.visualVariables,t=w.getAttributeValue(e.size?.field,i)??0,r=w.getAttributeValue(e.color?.field,i)??0,a=w.getAttributeValue(e.opacity?.field,i)??0;C=new B.FastUpdatePathGeometry(P,t,r,a)}else{const e=o.clone(this._intrinsicSize);if(this._drivenProperties.size){const t=r.size??["symbol-value","symbol-value","symbol-value"];e[0]*=T(t[0],"symbol-value"===t[2]?this.symbolLayer.height||0:t[2],this.symbolLayer.width||0),e[1]*=T(t[2],"symbol-value"===t[0]?this.symbolLayer.width||0:t[0],this.symbolLayer.height||0)}let t;if(this._drivenProperties.color&&(t=r.color??this._getFallbackOpacityAndColor()),this._drivenProperties.opacity){const e=r.opacity??this._getFallbackOpacityAndColor()[3];t=t?[t[0],t[1],t[2],e]:[1,1,1,e]}const i=new B.StaticPathGeometry(P);i.bake(e),t&&i.bakeVertexColors(t),C=i}const D=C.createGeometryData(),U=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:_,layerViewUid:this._context.layerViewUid}),R=new E.PathGeometry(this._materials[0],D,C,p,this._stencilWidth,U);R.transformation=a.translate(s.create(),s.IDENTITY,P.path.origin),h.push(R)}if(0===h.length)return null;const x=new D.Object3D({geometries:h,layerViewUid:this._context.layerViewUid,graphicUid:_}),P=new b.Graphics3DObject3DGraphicLayer(this,x,null,((e,t,i,r,a)=>function(e,t,i,r,a){const s=e.stageObject,n=s.geometries;let o=0;for(const e of n){if(!E.isPathGeometry(e))continue;const t=e.path,n=t.builder.path;o+=N(n,0,i,r),a!==E.UpVectorAlignment.World&&j(n,a,r),t.onPathChanged(e),e.invalidateBoundingInfo(),s.geometryVertexAttributeUpdated(e,k.VertexAttribute.POSITION)}return o/n.length}(e,0,r,a,this._upVectorAlignment)),t,null);return P.alignedSampledElevation=0,P.needsElevationUpdates=g.needsElevationUpdates3D(t.mode),P}_getFallbackOpacityAndColor(){const e=this.symbolLayer?.material?.color;return t.toUnitRGBA(e)??h.ZEROS}}function j(e,t,i){const{origin:r,positions:a}=e;let s=e.offset;switch(t){default:case E.UpVectorAlignment.World:for(const t of e.vertices)q[0]=a[s++]+r[0],q[1]=a[s++]+r[1],q[2]=a[s++]+r[2],i.worldUpAtPosition(q,q),t.setFrameFromUpVector(q);break;case E.UpVectorAlignment.Path:q[0]=a[s]+r[0],q[1]=a[s+1]+r[1],q[2]=a[s+2]+r[2],i.worldUpAtPosition(q,q),O.computeMinimumRotationTangentFrame(e,q)}}function T(e,t,i){switch(e){case"symbol-value":return i;case"proportional":return t;default:return e}}function N(e,t,i,r){let a=0;const{origin:s,vertices:n,positions:o,positionsES:c}=e,h=e.offset+3*n.length;for(let t=e.offset;t<h;t+=3)l.set(q,c[t],c[t+1],c[t+2]),i(q,H),a+=H.sampledElevation,q[0]=o[t]+s[0],q[1]=o[t+1]+s[1],q[2]=o[t+2]+s[2],r.setAltitude(q,H.z),o[t]=q[0]-s[0],o[t+1]=q[1]-s[1],o[t+2]=q[2]-s[2];return e.updatePathVertexInformation(),a/n.length}const q=c.create(),H=new g.SampleElevationInfo;e.Graphics3DPathSymbolLayer=M,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));