// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../Color","../../../../core/screenUtils","../../../../chunks/earcut","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/DoubleArray","../../../../geometry/support/FloatArray","./elevationAlignmentUtils","./Graphics3DDrapedGraphicLayer","./Graphics3DObject3DGraphicLayer","./Graphics3DSymbolLayer","./graphicUtils","./interfaces","./lineUtils","./polygonUtils","../support/FastSymbolUpdates","../support/patternUtils","../support/uvUtils","../../support/engineContent/line","../../support/renderInfoUtils/polygon","../../webgl-engine/lib/Object3D","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/materials/lineStippleUtils","../../webgl-engine/materials/PatternMaterial","../../webgl-engine/materials/RibbonLineMaterial"],(function(e,t,r,i,a,n,o,s,l,c,p,d,u,h,y,m,g,_,f,b,v,O,A,C,D,S){"use strict";const x=["polyline","polygon","extent"];class U extends d.Graphics3DSymbolLayer{static{this.elevationModeChangeTypes={definedChanged:l.SymbolUpdateType.RECREATE,staysOnTheGround:l.SymbolUpdateType.NONE,onTheGroundChanged:l.SymbolUpdateType.RECREATE}}constructor(e,t,r,i){super(e,t,r,i,function(e){return 1===(e.material?.color?.a??1)}(t)),this._needsUV=!1,this._materials=[]}async doLoad(){this._fastUpdates=g.initFastSymbolUpdatesState(this._context.renderer,this._vvConvertOptions)}_createMaterials(){if(this._materials.length>0)return;const e=this.symbolLayer?.material?.color,t=this._getCombinedOpacityAndColor(e);this._materials[F.Fill]=_.createMaterial(this.symbolLayer,{color:t,forceTransparentMode:this.needsDrivenTransparentPass,discardInvisibleFragments:!0,polygonOffset:!1,hasVertexColors:!0,draped:this.draped,hasSlicePlane:this._context.slicePlaneEnabled,...this._fastUpdates?.materialParameters}),this._needsUV=this._materials[F.Fill]instanceof D.PatternMaterial;const i=this.symbolLayer.outline;if(function(e){return null!=e?.size&&e.size>0&&null!=e.color&&(null==e.pattern||"style"!==e.pattern.type||"none"!==e.pattern.style)}(i)){const e=C.getStipplePatternForLinePattern(i.pattern);this._materials[F.Outline]=new S.RibbonLineMaterial({width:r.pt2px(i.size),color:this._getOutlineColor(),hasPolygonOffset:!0,hasSlicePlane:this._context.slicePlaneEnabled,isClosed:!0,stipplePattern:e,cap:y.parseCapType(i.patternCap||"butt")})}}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,x,this.symbolLayer.type))return null;const r=this._getVertexOpacityAndColor(e.renderingInfo,this._getFallbackOpacityAndColor(),255),i=this.setGraphicElevationContext(t);return this.ensureDrapedStatus("on-the-ground"===i.mode),this._createMaterials(),this.draped?this._createAsOverlay(t,r):this._createAs3DShape(t,r,i)}applyRendererDiff(e,t){for(const r in e.diff){if("visualVariables"!==r)return h.ApplyRendererDiffResult.RecreateSymbol;if(!g.updateFastSymbolUpdatesState(this._fastUpdates,t,this._vvConvertOptions))return h.ApplyRendererDiffResult.RecreateSymbol;this._materials[F.Fill]?.setParameters(this._fastUpdates.materialParameters)}return h.ApplyRendererDiffResult.FastUpdate}layerOpacityChanged(){if(null!=this._materials[F.Fill]){const e=this._materials[F.Fill].parameters.color,t=this.symbolLayer?.material?.color,r=this._getCombinedOpacity(t);this._materials[F.Fill].setParameters({color:[e[0],e[1],e[2],r],forceTransparentMode:this.needsDrivenTransparentPass})}if(null!=this._materials[F.Outline]){const e=this._materials[F.Outline].parameters.color;this._materials[F.Outline].setParameters({color:[e[0],e[1],e[2],this._getOutlineOpacity()]})}}layerElevationInfoChanged(e,t,r){const i=this._elevationContext.mode,a=l.elevationModeChangeUpdateType(U.elevationModeChangeTypes,r,i);if(a!==l.SymbolUpdateType.UPDATE)return a;const n=l.needsElevationUpdates2D(i);return this.updateGraphics3DGraphicElevationInfo(e,t,(()=>n))}slicePlaneEnabledChanged(){if(this._materials[F.Fill]?.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),this._materials[F.Outline]){const e={hasSlicePlane:this._context.slicePlaneEnabled};this._materials[F.Outline].setParameters(e)}return!0}physicalBasedRenderingChanged(){return!0}_createAs3DShape(e,t,r){const i=m.geometryAsPolygon(e.geometry);if(!i)return null;const a=v.geometryToRenderInfo(i,this._context.elevationProvider,this._context.renderCoordsHelper,r),n=new G(a,t,this._context.layerViewUid,e.uid),c=n.renderData.position.length/3;if(this._needsUV&&(n.uvMapSpace=s.newFloatArray(4*c,!0),n.boundingRect=o.newDoubleArray(9*c,!0),f.createMapSpaceUVCoords(n.uvMapSpace,n.boundingRect,n.renderData.position,this._context.renderCoordsHelper)),n.objectAndLayerIdColor=this._context.stage.renderView?.getObjectAndLayerIdColor(n),this._createAs3DShapeFill(e,n),this._materials[F.Outline]&&this._createAs3DShapeOutline(n),this._logGeometryCreationWarnings(n.renderData,i.rings,"rings","FillSymbol3DLayer"),0===n.outGeometries.length)return null;const d=new O.Object3D({geometries:n.outGeometries,castShadow:!1,layerViewUid:this._context.layerViewUid,graphicUid:e.uid}),u=new p.Graphics3DObject3DGraphicLayer(this,d,null,_.uvElevationAligner,r);return u.alignedSampledElevation=n.renderData.sampledElevation,u.needsElevationUpdates=l.needsElevationUpdates2D(r.mode),u}_createAs3DShapeFill(e,t){const r=t.renderData.polygons;for(const{position:i,mapPositions:a,holeIndices:l,index:c,count:p}of r){if(null!=this._context.clippingExtent&&(n.fromBuffer(a,P),!n.intersectsClippingArea(P,this._context.clippingExtent)))continue;const r=m.createIndices3D(a,l,this._context.elevationProvider.spatialReference);if(0===r.length)continue;const d=this._fastUpdates?.visualVariables.color,u=m.createColorGeometry({material:this._materials[F.Fill],indices:r,mapPositions:a,attributeData:{position:i,color:d?null:t.color,colorFeature:d?g.getAttributeValue(d.field,e):null,uvMapSpace:this._needsUV?s.floatSubArray(t.uvMapSpace,4*c,4*p):null,boundingRect:this._needsUV?o.doubleSubArray(t.boundingRect,9*c,9*p):null,objectAndLayerIdColor:t.objectAndLayerIdColor}});t.outGeometries.push(u)}}_createAs3DShapeOutline(e){if(null==this._materials[F.Outline])return;const t=e.renderData.outlines;for(const{mapPositions:r,position:i}of t){if(null!=this._context.clippingExtent&&(n.fromBuffer(r,P),!n.intersectsClippingArea(P,this._context.clippingExtent)))continue;const t=b.createGeometry(this._materials[F.Outline],{overlayInfo:null,removeDuplicateStartEnd:!0,mapPositions:r,attributeData:{position:i}},e.objectAndLayerIdColor);e.outGeometries.push(t)}}_createAsOverlay(e,t){const r=m.geometryAsPolygon(e.geometry);if(null==r)return null;this._materials[F.Fill].renderPriority=this._renderPriority+this._renderPriorityStep/2,null!=this._materials[F.Outline]&&(this._materials[F.Outline].renderPriority=this._renderPriority);const i=v.geometryToRenderInfoDraped(r,this._context.overlaySR),a=new R(i,t,this._context.layerViewUid,e.uid),o=a.renderData.position.length/3;return this._needsUV&&(a.uvMapSpace=s.newFloatArray(4*o,!0),f.createMapSpaceUVCoordsDraped(a.uvMapSpace,a.renderData.position,this._context.overlaySR,this._context.graphicsCoreOwner.view.state.viewingMode)),a.outBoundingBox=n.empty(),a.objectAndLayerIdColor=this._context.stage.renderView?.getObjectAndLayerIdColor(a),this._createAsOverlayFill(e,a),this._materials[F.Outline]&&this._createAsOverlayOutline(a),this._logGeometryCreationWarnings(a.renderData,r.rings,"rings","FillSymbol3DLayer"),0===a.outGeometries.length?null:new c.Graphics3DDrapedGraphicLayer(this,a.outGeometries,a.outBoundingBox,this._context.drapeSourceRenderer)}_createAsOverlayFill(e,t){const r=t.renderData.polygons;for(const{position:a,holeIndices:o,index:l,count:c}of r){const r=n.fromBuffer(a,P);if(!n.intersectsClippingArea(r,this._context.clippingExtent))continue;const p=i.earcut(a,o,3);if(0===p.length)continue;n.expandWithAABB(t.outBoundingBox,r);const d=this._fastUpdates?.visualVariables.color,u=m.createColorGeometry({material:this._materials[F.Fill],indices:p,attributeData:{position:a,color:d?null:t.color,colorFeature:d?g.getAttributeValue(d.field,e):null,uvMapSpace:this._needsUV?s.floatSubArray(t.uvMapSpace,4*l,4*c):null,objectAndLayerIdColor:t.objectAndLayerIdColor}});t.outGeometries.push(new A.RenderGeometry(u,t))}}_createAsOverlayOutline(e){if(null==this._materials[F.Outline])return;const t=e.renderData.outlines;for(let r=0;r<t.length;++r){const{position:i}=t[r];if(n.fromBuffer(i,P),!n.intersectsClippingArea(P,this._context.clippingExtent))continue;n.expandWithAABB(e.outBoundingBox,P);const a=b.createGeometry(this._materials[F.Outline],{overlayInfo:{spatialReference:this._context.overlaySR,renderCoordsHelper:this._context.renderCoordsHelper},removeDuplicateStartEnd:!0,attributeData:{position:i}},e.objectAndLayerIdColor);e.outGeometries.push(new A.RenderGeometry(a,e))}}_getOutlineOpacity(){const e=this.symbolLayer?.outline?.color;return(this.draped?1:this._getLayerOpacity())*(null!=e?e.a:0)}_getOutlineColor(){const e=this.symbolLayer?.outline?.color,r=this._getOutlineOpacity();return u.mixinColorAndOpacity(null!=e?t.toUnitRGB(e):null,r)}test(){return{...super.test(),createAsOverlay:(e,t)=>this._createAsOverlay(e,t),createAs3DShape:(e,t,r)=>this._createAs3DShape(e,t,r)}}_getFallbackOpacityAndColor(){const e=this.symbolLayer?.material?.color;return t.toUnitRGBA(e)??a.ZEROS}get _vvConvertOptions(){return new g.ConvertOptions({supports:{size:!1,color:!0,rotation:!1,opacity:!1},fallbackColor:this._getFallbackOpacityAndColor()})}}const P=n.create();class G extends m.PolygonCreationDataBase{constructor(e,t,r,i){super(e,r,i),this.color=t}}class R extends m.PolygonCreationDataBase{constructor(e,t,r,i){super(e,r,i),this.color=t}}var F;!function(e){e[e.Fill=0]="Fill",e[e.Outline=1]="Outline"}(F||(F={})),e.Graphics3DPolygonFillSymbolLayer=U,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));