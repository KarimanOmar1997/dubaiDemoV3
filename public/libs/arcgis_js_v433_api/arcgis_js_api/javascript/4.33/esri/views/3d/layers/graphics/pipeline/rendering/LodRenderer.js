// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../chunks/tslib.es6","../../../../../../core/has","../../../../../../core/promiseUtils","../../../../../../core/Logger","../../../../../../core/RandomLCG","../../../../../../core/Error","../../../../../../core/accessorSupport/decorators/subclass","../../../../webgl-engine/lib/VertexAttribute","../../../../webgl-engine/lib/lodRendering/LodRenderer","../../../../webgl-engine/lib/lodRendering/LodResources"],(function(e,r,n,s,t,o,i,a,d,l,c){"use strict";function u(e){return null!=e&&"materialType"in e&&"default"===e.materialType}e.LodRenderer=class{constructor(e){this._optionalFields=new Array,this._instanceGroupToIndices=new Map,this._instanceIndexToFeatureId=new Map,this._disposeResourceHandles=new Array,this._lodRendererResources=null,this._numFeatures=0,this.layerViewUid=e.layerViewUid,this.view=e.view,this.sharedResources=this.view.sharedSymbolResources,this.scheduler=this.view.resourceController.scheduler}get numFeatures(){return this._numFeatures}get usedMemory(){const e=this._lodRendererResources?.lodRenderer,r=e?.symbol;return(r?.computeUsedMemory()??0)+16*this._instanceIndexToFeatureId.size}destroy(){this._disposeResourceHandles.forEach((e=>e()))}async doLoad(e,r,t){n("enable-feature:objectAndLayerId-rendering")&&this._optionalFields.push(d.VertexAttribute.OLIDCOLOR);const o=function(e,r){const n=r.levels.map((r=>{const n=r.components.map((r=>{const n=e(r.materialId);if(!u(n))throw new Error("LodRenderer only supports DefaultMaterial");const s=new c.LodComponentRenderGeometry(n,r.renderGeometryBuffer.data,r.renderGeometryBuffer.elementCount,r.boundingInfo);return new c.LodComponentResources(s)}));return new c.LodLevelResources(n,r.minScreenSpaceRadius)}));return new c.LodResources(n)}((e=>r(e)),e),i=this.view.stage,a=o.getMaterials(),l=o.getTextures();i.addTextures(l),this._addDisposeResource((()=>{l.forEach((e=>e.unload())),i.removeTextures(l)})),await Promise.all(l.map((e=>this.view.stage.schedule((()=>e.load(i.renderView.renderingContext)),t)))),s.throwIfAborted(t);const h=await this._createLodRenderer(o,t);this._lodRendererResources={lodRenderer:h,materials:a,textures:l}}addInstances(e,r){const n=this._lodRendererResources;if(null==n)return;const s=n.lodRenderer;if(null==s)return;const{featureIds:t,localTransforms:o,globalTransforms:i,visibility:a}=r,d=new Array,l=s.instanceData,c=t.length,u=this._instanceIndexToFeatureId;for(let e=0;e<c;++e){const r=t[e],n=l.addInstance(),s=l.view,c=16*e;s.localTransform.copyFromTypedBuffer(n,o,c),s.globalTransform.copyFromTypedBuffer(n,i,c),l.updateModelTransform(n),l.setVisible(n,Boolean(a[e])),d.push(n),u.set(n,r)}this._instanceGroupToIndices.set(e,d),this._numFeatures+=c}removeInstances(e){const r=this._instanceGroupToIndices.get(e);if(null==r)return;const n=this._lodRendererResources;if(null==n)return;const s=n.lodRenderer.instanceData,t=this._instanceIndexToFeatureId;for(const e of r)s.removeInstance(e),t.delete(e);this._numFeatures-=r.length,this._instanceGroupToIndices.delete(e)}updateVisibility(e,r){const n=this._instanceGroupToIndices.get(e);if(null==n)return;const s=this._lodRendererResources;if(null==s)return;const t=n.length;if(t!==r.length)throw new Error("Unexpected mismatch instance count and visibility flag buffer length.");const o=s.lodRenderer.instanceData;for(let e=0;e<t;++e)o.setVisible(n[e],Boolean(r[e]))}updateGlobalTransforms(e,r){const n=this._instanceGroupToIndices.get(e);if(null==n)return;const s=this._lodRendererResources;if(null==s)return;const t=n.length;if(16*t!==r.length)throw new Error("Unexpected mismatch instance count and visibility flag buffer length.");const o=s.lodRenderer.instanceData,i=o.view;for(let e=0;e<t;++e){const s=n[e],t=16*e;i.globalTransform.copyFromTypedBuffer(s,r,t),o.updateModelTransform(s)}}_addDisposeResource(e){this._disposeResourceHandles.push(e)}async _createLodRenderer(e,r){const n=this.view.stage,s={layerViewUid:this.layerViewUid,graphicUid:e=>this._instanceIndexToFeatureId.get(e)??-1,notifyGraphicGeometryChanged:e=>1,notifyGraphicVisibilityChanged:e=>1},t=new l.LodRenderer({symbol:e,optionalFields:this._optionalFields,metadata:s,shaderTransformation:null},this.scheduler);return t.slicePlaneEnabled=!1,this._addDisposeResource((()=>{n.removeRenderPlugin(t),t.destroy()})),await n.addRenderPlugin(t,r),t}},e.LodRenderer=r.__decorate([a.subclass("esri.views.3d.layers.graphics.pipeline.rendering.LodRenderer")],e.LodRenderer),e.isDefaultMaterial=u,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));