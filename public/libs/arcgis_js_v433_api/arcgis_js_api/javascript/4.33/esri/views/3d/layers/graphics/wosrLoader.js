// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../request","../../../../core/asyncUtils","../../../../core/Error","../../../../core/Logger","../../../../core/memoryEstimations","../../../../core/NestedMap","../../../../core/promiseUtils","../../../../core/Version","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/Indices","../../../../support/requestImageUtils","../../webgl-engine/lib/Attribute","../../webgl-engine/lib/basicInterfaces","../../webgl-engine/lib/Geometry","../../webgl-engine/lib/Texture","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/DefaultMaterial","../../../webgl/enums"],(function(e,t,r,n,a,s,o,i,l,u,c,d,p,f,m,g,y,b,x,h){"use strict";const w=()=>a.getLogger("esri.views.3d.layers.graphics.objectResourceUtils");class A{constructor(e,t,r){this.resource=e,this.textures=t,this.cachedMemory=r}}function v(e){throw new n("",`Request for object resource failed: ${e}`)}function M(e){const t=e.params,r=t.topology;let n=!0;switch(t.vertexAttributes||(w().warn("Geometry must specify vertex attributes"),n=!1),t.topology){case"PerAttributeArray":break;case"Indexed":case null:case void 0:{const e=t.faces;if(e){if(t.vertexAttributes)for(const r in t.vertexAttributes){const t=e[r];t?.values?(null!=t.valueType&&"UInt32"!==t.valueType&&(w().warn(`Unsupported indexed geometry indices type '${t.valueType}', only UInt32 is currently supported`),n=!1),null!=t.valuesPerElement&&1!==t.valuesPerElement&&(w().warn(`Unsupported indexed geometry values per element '${t.valuesPerElement}', only 1 is currently supported`),n=!1)):(w().warn(`Indexed geometry does not specify face indices for '${r}' attribute`),n=!1)}}else w().warn("Indexed geometries must specify faces"),n=!1;break}default:w().warn(`Unsupported topology '${r}'`),n=!1}e.params.material||(w().warn("Geometry requires material"),n=!1);const a=e.params.vertexAttributes;for(const e in a)a[e].values||(w().warn("Geometries with externally defined attributes are not yet supported"),n=!1);return n}function I(e){const t=c.empty();return e.forEach((e=>{const r=e.boundingInfo;null!=r&&(c.expandWithVec3(t,r.bbMin),c.expandWithVec3(t,r.bbMax))})),t}async function P(e,t){const r=new Array;for(const n in e){const a=e[n],s=a.images[0].data;if(!s){w().warn("Externally referenced texture data is not yet supported");continue}const o=a.encoding+";base64,"+s,i="/textureDefinitions/"+n,l="rgba"===a.channels?a.alphaChannelUsage||"transparency":"none",u={noUnpackFlip:!0,wrap:{s:h.TextureWrapMode.REPEAT,t:h.TextureWrapMode.REPEAT},preMultiplyAlpha:O(l)!==m.AlphaDiscardMode.Opaque},c=t?.disableTextures?Promise.resolve(null):p.requestImage(o,t);r.push(c.then((e=>({refId:i,image:e,parameters:u,alphaChannelUsage:l}))))}const n=await Promise.all(r),a={};for(const e of n)a[e.refId]=e;return a}function O(e){switch(e){case"mask":return m.AlphaDiscardMode.Mask;case"maskAndTransparency":return m.AlphaDiscardMode.MaskBlend;case"none":return m.AlphaDiscardMode.Opaque;default:return m.AlphaDiscardMode.Blend}}function T(e){const t=e.params;return{id:1,material:t.material,texture:t.texture,region:t.texture}}const E=new l.Version(1,2,"wosr");e.LoaderResultWOSR=A,e.createTextureResources=P,e.load=async function(e,n){const a=await async function(e,n){const a=n?.streamDataRequester;if(a)return async function(e,t,n){const a=await r.result(t.request(e,"json",n));return!0===a.ok?a.value:(i.throwIfAbortError(a.error),void v(a.error.details.url))}(e,a,n);const s=await r.result(t(e,n));return!0===s.ok?s.value.data:(i.throwIfAbortError(s.error),void v(s.error))}(e,n),o=await P(a.textureDefinitions??{},n);let l=0;for(const e in o)if(o.hasOwnProperty(e)){const t=o[e];l+=t?.image?t.image.width*t.image.height*4:0}return new A(a,o,l+s.estimateNestedObjectMemory(a))},e.processLoadResult=function(e,t){const r=new Array,n=new Array,a=new Array,s=new o.NestedMap,i=e.resource,c=l.Version.parse(i.version||"1.0","wosr");E.validate(c);const p=i.model.name,h=i.model.geometries,w=i.materialDefinitions??{},A=e.textures;let v=0;const P=new Map;for(let e=0;e<h.length;e++){const o=h[e];if(!M(o))continue;const i=T(o),l=o.params.vertexAttributes,c=[],p=e=>{if("PerAttributeArray"===o.params.topology)return null;const t=o.params.faces;for(const r in t)if(r===e)return t[r].values;return null},I=l[b.VertexAttribute.POSITION],E=I.values.length/I.valuesPerElement;for(const e in l){const t=l[e],r=t.values,n=p(e)??d.getContinuousIndexArray(E);c.push([e,new f.Attribute(r,n,t.valuesPerElement,!0)])}const U=i.texture,D=A&&A[U];if(D&&!P.has(U)){const{image:e,parameters:t}=D,r=new y.Texture(e,t);n.push(r),P.set(U,r)}const R=P.get(U),k=R?R.id:void 0,q=i.material;let V=s.get(q,U);if(null==V){const e=w[q.slice(q.lastIndexOf("/")+1)].params;1===e.transparency&&(e.transparency=0);const r=D?O(D.alphaChannelUsage):void 0,n={ambient:u.fromArray(e.diffuse),diffuse:u.fromArray(e.diffuse),opacity:1-(e.transparency||0),textureAlphaMode:r,textureAlphaCutoff:.33,textureId:k,doubleSided:!0,cullFace:m.CullFaceOptions.None,colorMixMode:e.externalColorMixMode||"tint",textureAlphaPremultiplied:D?.parameters.preMultiplyAlpha??!1};t?.materialParameters&&Object.assign(n,t.materialParameters),V=new x.DefaultMaterial(n,t),s.set(q,U,V)}a.push(V);const C=new g.Geometry(V,c);v+=c.find((e=>e[0]===b.VertexAttribute.POSITION))?.[1]?.indices.length??0,r.push(C)}return{engineResources:[{name:p,stageResources:{textures:n,materials:a,geometries:r},pivotOffset:i.model.pivotOffset,numberOfVertices:v,lodThreshold:null}],referenceBoundingBox:I(r)}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));