// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/Evented","../../../../core/Logger","../../../../core/unitUtils","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/support/aaBoundingBox","../../../../symbols/support/unitConversionUtils","../../support/ElevationUpdateEvent","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/IntersectorInterfaces","../../webgl-engine/lib/VertexAttribute"],(function(e,t,r,o,n,s,i,a,l,c,d,p,h,u,g,v,y,m){"use strict";const _=Symbol("layerHandles");e.StageLayerElevationProvider=class extends(o.EventedMixin(r)){get spatialReference(){return this.view?.spatialReference}constructor(e){super(e),this._elevationOffset=0}initialize(){this._renderCoordsHelper=this.view.renderCoordsHelper,this._intersectLayers=[this.stageLayer],this._intersector=new v.Intersector(this.view.state.viewingMode),this._intersector.options.store=y.StoreResults.MIN;const e=this._computeLayerExtent(this.spatialReference,this.stageLayer);this._zmin=e[2],this._zmax=e[5];const t=this.stageLayer.events;this.addHandles([t.on(["layerObjectAdded","layerObjectRemoved","transformationChanged","shaderTransformationChanged"],(e=>this._objectChanged(e))),t.on(["geometryAdded","geometryRemoved"],(({object:e})=>this._objectChanged(e))),t.on("attributesChanged",(({attribute:e,object:t})=>m.affectsGeometry(e)&&this._objectChanged(t)))],_)}dispose(){this.removeHandles(_)}elevationInfoChanged(){const e=null!=this.layer?this.layer.elevationInfo:null;if(null!=e&&"on-the-ground"!==e.mode){const t=s.getMetersPerVerticalUnitForSR(this.layer.spatialReference),r=u.getMetersPerUnit(e.unit??"meters");this._elevationOffset=(e.offset??0)*r/t}else this._elevationOffset=0}getElevation(e,t,r,o){if(x[0]=e,x[1]=t,x[2]=r,!this._renderCoordsHelper.toRenderCoords(x,o,x))return n.getLogger(this).error("could not project point for elevation alignment"),null;const s=this._elevationOffset,i=this._zmin+s,a=this._zmax+s;return this._renderCoordsHelper.setAltitude(E,a,x),this._renderCoordsHelper.setAltitude(C,i,x),this._intersector.reset(E,C,null),this._intersector.intersect(this._intersectLayers,null,1,null,(e=>!!e.lastValidElevationBB)),this._intersector.results.min.getIntersectionPoint(x)?this._renderCoordsHelper.getAltitude(x):null}_objectChanged(e){const t=this.spatialReference;if(!e.lastValidElevationBB||!t)return;h.empty(f);const r=e.lastValidElevationBB;r.isEmpty()||this._expandExtent(t,r.min,r.max,f);const{min:o,max:n}=e.boundingVolumeWorldSpace;this._expandExtent(t,o,n,f),h.toRect(f,b.extent),this._zmin=Math.min(this._zmin,f[2]),this._zmax=Math.max(this._zmax,f[5]),b.spatialReference=t,this.emit("elevation-change",b),d.copy(r.min,o),d.copy(r.max,n)}_computeLayerExtent(e,t){return h.empty(f),null!=e&&t.objects.forEach((t=>this._expandExtent(e,t.boundingVolumeWorldSpace.min,t.boundingVolumeWorldSpace.max,f))),f}_expandExtent(e,t,r,o){for(let n=0;n<8;++n)x[0]=1&n?t[0]:r[0],x[1]=2&n?t[1]:r[1],x[2]=4&n?t[2]:r[2],this._renderCoordsHelper.fromRenderCoords(x,x,e),h.expandWithVec3(o,x);return o}},t.__decorate([i.property({constructOnly:!0})],e.StageLayerElevationProvider.prototype,"layer",void 0),t.__decorate([i.property({constructOnly:!0})],e.StageLayerElevationProvider.prototype,"stageLayer",void 0),t.__decorate([i.property({constructOnly:!0})],e.StageLayerElevationProvider.prototype,"view",void 0),t.__decorate([i.property()],e.StageLayerElevationProvider.prototype,"spatialReference",null),e.StageLayerElevationProvider=t.__decorate([c.subclass("esri.views.3d.layers.support.StageLayerElevationProvider")],e.StageLayerElevationProvider);const f=h.empty(),b=new g.ElevationUpdateEvent,x=p.create(),E=p.create(),C=p.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));