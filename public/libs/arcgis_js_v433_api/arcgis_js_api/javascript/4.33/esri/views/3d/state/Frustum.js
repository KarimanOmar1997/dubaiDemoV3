// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../chunks/vec32","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../geometry/support/frustum"],(function(t,e,i,n){"use strict";class s{get planes(){return this.frustum}get points(){return this._points}get mutablePoints(){return this._points}get direction(){return this._direction}get origin(){return this._origin}constructor(t){this.renderCoordsHelper=t,this.frustum=n.create(),this._points=n.createPoints(),this.lines=new Array(12),this._origin=i.create(),this._direction=i.create(),this._altitude=null;for(let t=0;t<12;t++)this.lines[t]={origin:null,direction:i.create(),endpoint:null}}update(t){n.fromMatrix(t.viewMatrix,t.projectionMatrix,this.frustum,this._points),e.copy(this._origin,t.eye),e.copy(this._direction,t.viewForward),this._altitude=this.renderCoordsHelper.getAltitude(this._origin),this._updateLines()}updatePoints(t){for(let i=0;i<this._points.length;i++)e.copy(this._points[i],t[i]);n.computePlanes(this.frustum,this._points),this._updateLines()}get altitude(){return this._altitude}intersectsSphere(t){return n.intersectsSphere(this.frustum,t)}intersectsRay(t){return n.intersectsRay(this.frustum,t)}intersectsLineSegment(t,e){return n.intersectsLineSegment(this.frustum,t,e)}intersectsPoint(t){return n.intersectsPoint(this.frustum,t)}_updateLines(){const t=this._points;for(let e=0;e<4;e++){const i=e+4;_(this.lines[e],t[e],t[i]),_(this.lines[e+4],t[e],3===e?t[0]:t[e+1]),_(this.lines[e+8],t[i],3===e?t[4]:t[i+1])}}static{this.planePointIndices=n.planePointIndices}static{this.nearFarLineIndices=[[n.PointIndex.NEAR_BOTTOM_LEFT,n.PointIndex.FAR_BOTTOM_LEFT],[n.PointIndex.NEAR_BOTTOM_RIGHT,n.PointIndex.FAR_BOTTOM_RIGHT],[n.PointIndex.NEAR_TOP_RIGHT,n.PointIndex.FAR_TOP_RIGHT],[n.PointIndex.NEAR_TOP_LEFT,n.PointIndex.FAR_TOP_LEFT]]}}var r;function _(t,i,n){t.origin=i,t.endpoint=n,e.direction(t.direction,i,n)}t.LineIndex=void 0,(r=t.LineIndex||(t.LineIndex={}))[r.NEAR_FAR_BOTTOM_LEFT=0]="NEAR_FAR_BOTTOM_LEFT",r[r.NEAR_FAR_BOTTOM_RIGHT=1]="NEAR_FAR_BOTTOM_RIGHT",r[r.NEAR_FAR_TOP_RIGHT=2]="NEAR_FAR_TOP_RIGHT",r[r.NEAR_FAR_TOP_LEFT=3]="NEAR_FAR_TOP_LEFT",r[r.NEAR_BOTTOM=4]="NEAR_BOTTOM",r[r.NEAR_RIGHT=5]="NEAR_RIGHT",r[r.NEAR_TOP=6]="NEAR_TOP",r[r.NEAR_LEFT=7]="NEAR_LEFT",r[r.FAR_BOTTOM=8]="FAR_BOTTOM",r[r.FAR_RIGHT=9]="FAR_RIGHT",r[r.FAR_TOP=10]="FAR_TOP",r[r.FAR_LEFT=11]="FAR_LEFT",t.Frustum=s,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));