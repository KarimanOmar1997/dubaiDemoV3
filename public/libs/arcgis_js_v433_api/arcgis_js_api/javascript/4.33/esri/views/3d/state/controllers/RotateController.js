// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../core/mathUtils","../../../../core/screenUtils","../../../../core/accessorSupport/decorators/property","../../../../core/has","../../../../core/Logger","../../../../core/RandomLCG","../../../../core/accessorSupport/decorators/subclass","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../core/libs/gl-matrix-2/math/vec2","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../camera/constraintUtils","../../camera/constraintUtils/ConstraintOptions","../../camera/constraintUtils/ConstraintTypes","../../camera/constraintUtils/InteractionType","../../camera/constraintUtils/TiltMode","../../layers/VoxelWasm","../Constraints","./InteractiveController","../utils/navigationUtils"],(function(t,i,e,o,r,s,a,n,c,h,l,p,m,_,v,P,C,d,u,T,y,w,R,g){"use strict";var E;t.PivotPoint=void 0,(E=t.PivotPoint||(t.PivotPoint={}))[E.CENTER=0]="CENTER",E[E.EYE=1]="EYE",t.RotateController=class extends R.InteractiveController{get _intersectionHelper(){return this.view.sceneIntersectionHelper}constructor(i){super(i),this.pivot=t.PivotPoint.CENTER,this._rotScale=0,this._lastPoint=m.create(),this._tmpWorldUp=v.create(),this._tmpViewDir=v.create(),this._tmpRotCurPoint=m.create(),this._tmpTransf=l.create(),this._tmpAxis=v.create(),this._tmpPivotPoint=v.create(),this._pivotPos=v.create(),this._constraintOptions=new C.ConstraintOptions(d.ConstraintTypes.ALL,u.InteractionType.TUMBLE,0,this.startCamera)}initialize(){this._rotScale=this.pivot===t.PivotPoint.CENTER?3:1.5}begin(i){if(this.running){switch(this.pivot){case t.PivotPoint.EYE:_.copy(this._pivotPos,this.startCamera.eye),this._constraintOptions.interactionType=u.InteractionType.LOOK_AROUND,this._constraintOptions.tiltMode=T.TiltMode.LOOK_AROUND,this._constraintOptions.selection=d.ConstraintTypes.NONE;break;case t.PivotPoint.CENTER:{const t=this._intersectionHelper.intersectRayFreePointFallback(this.startCamera.ray,this._pivotPos,this.view.basemapTerrain.invisible?g.excludeTerrain:{});t||_.copy(this._pivotPos,this.startCamera.center),this._constrainPivotPoint(i,t),this.startCamera.center=this._pivotPos,this._constraintOptions.interactionType=u.InteractionType.TUMBLE,this._constraintOptions.tiltMode=T.TiltMode.TUMBLE,this._constraintOptions.selection=d.ConstraintTypes.ALL&~d.ConstraintTypes.DISTANCE;break}}g.normalizeCoordinate(this.startCamera,i,this._lastPoint)}}_constrainPivotPoint(t,i){const e=this.startCamera,r=v.create();_.subtract(r,this._pivotPos,e.eye);const s=_.length(r),a=Math.abs(this.view.camera.position.z);this.view.renderCoordsHelper.worldUpAtPosition(e.eye,f);let n=Math.max(Math.min(g.rotatePivotDistanceModifier,1/Math.abs(_.dot(f,e.viewForward)))*a,g.rotatePivotMinDistanceModifier);i&&(n=Math.min(s,n));const c=o.createScreenPointArray(e.width/e.pixelRatio*.5,e.height/e.pixelRatio*.5),h=g.navigationMode(this.startCamera,c,this.view.renderCoordsHelper,this.view.viewingMode);let l=this.view.stage.renderView.getMinimalDepthForArea(y.getVoxelWasm(this.view),e.fullWidth/e.pixelRatio*.5,e.fullHeight/e.pixelRatio*.5,e,2.5*g.rotateScreenPixelArea,g.rotateScreenPixelArea),p=this.view.stage.renderView.getMinimalDepthForArea(y.getVoxelWasm(this.view),t[0],t[1],e,g.rotateScreenPixelArea);null==l&&null==p||(l=l??p??0,p=null==p||h===g.NavigationMode.Horizontal?l:p,n=l>p?p:l,n=i?Math.min(n,s):n),_.normalize(r,r),_.copy(this._pivotPos,_.add(this._tmpPivotPoint,e.eye,_.scale(this._tmpPivotPoint,r,n)))}update(i){if(this.running){switch(this.pivot){case t.PivotPoint.EYE:this.currentCamera.center=this._applyRotation(this.currentCamera,i,this.currentCamera.center,this._pivotPos);break;case t.PivotPoint.CENTER:this.currentCamera.center=this._pivotPos,this.currentCamera.eye=this._applyRotation(this.currentCamera,i,this.currentCamera.eye,this._pivotPos)}P.applyAll(this.view,this.currentCamera,this._constraintOptions),this.commitCamera()}}end(){this.running&&this.finishController()}_applyRotation(i,o,r,s){this.view.renderCoordsHelper.worldUpAtPosition(s,this._tmpWorldUp),g.normalizeCoordinate(i,o,this._tmpRotCurPoint);let a=(this._lastPoint[1]-this._tmpRotCurPoint[1])*this._rotScale,n=(this._tmpRotCurPoint[0]-this._lastPoint[0])*this._rotScale;_.subtract(this._tmpViewDir,r,s);const c=_.length(this._tmpViewDir),l=e.acosClamped(_.dot(this._tmpViewDir,this._tmpWorldUp)/c);if(this.pivot===t.PivotPoint.EYE){a*=-.5;const t=.5*Math.PI-l,i=.5*Math.PI*.99;a=t-Math.max(-i,Math.min(i,t+a))}return a=e.clamp(a+l,w.TiltRange.min,w.TiltRange.max)-l,_.cross(this._tmpAxis,i.up,this._tmpViewDir),this.pivot===t.PivotPoint.CENTER&&(n=-n),h.fromRotation(this._tmpTransf,n,this._tmpWorldUp),h.rotate(this._tmpTransf,this._tmpTransf,a,this._tmpAxis),_.transformMat4(this._tmpViewDir,this._tmpViewDir,this._tmpTransf),i.up=_.transformMat4(M,i.up,this._tmpTransf),_.add(M,s,this._tmpViewDir),p.copy(this._lastPoint,this._tmpRotCurPoint),M}},i.__decorate([r.property()],t.RotateController.prototype,"pivot",void 0),t.RotateController=i.__decorate([c.subclass("esri.views.3d.state.controllers.RotateController")],t.RotateController);const M=v.create(),f=v.create();Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));