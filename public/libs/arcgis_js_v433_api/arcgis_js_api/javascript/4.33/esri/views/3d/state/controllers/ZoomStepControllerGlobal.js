// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../chunks/tslib.es6","../../../../core/mathUtils","../../../../core/time","../../../../core/Logger","../../../../core/has","../../../../core/RandomLCG","../../../../core/Error","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/support/ray","../../../../chunks/sphere","../../camera/constraintUtils","../../camera/constraintUtils/ConstraintOptions","../../camera/constraintUtils/ConstraintTypes","../../camera/constraintUtils/InteractionType","../../camera/constraintUtils/surfaceCollision","./PointToPointAnimationController","../utils/navigationUtils","../../support/geometryUtils/ray","../../support/geometryUtils/sphere","../../webgl/RenderCamera","../../webgl-engine/lib/Intersector","../../../animation/easing"],(function(t,e,i,r,s,a,n,o,c,h,m,p,l,_,d,y,g,C,u,w,D,b,M,v,f){"use strict";t.ZoomStepControllerGlobal=class extends u.PointToPointAnimationController{constructor(){super(...arguments),this._zoomLocation=m.create(),this._tmpCamera=new M,this._tmpViewDir=m.create(),this._tmpRayDir=p.create(),this._targetOnSphere=m.create(),this._tmpCenter=m.create(),this._beginCamera=new M,this._constraintOptions=new d.ConstraintOptions(y.ConstraintTypes.ALL_EXCEPT_COLLISION,g.InteractionType.ZOOM,null,this._beginCamera),this._sphere=l.create()}initialize(){this._intersector=new v.Intersector(this.view.state.viewingMode)}step(t,e){if(!this.running)return;const i=this.view.state;this.animation.finished?this._beginCamera.copyFrom(i.camera):this.animation.cameraAt(1,this._beginCamera);let r=!1,s=!1;this._intersectionHelper.intersectScreen(e,this._zoomLocation,0===this.view.map.ground.opacity?w.excludeTerrain:{})&&(r=t>0,s=!0),this._tmpCamera.copyFrom(i.camera),r?this._intersectionHelper.intersectRay(this._tmpCamera.ray,this._intersector,this._tmpCenter)&&(this._tmpCamera.center=this._tmpCenter):this._intersectionHelper.intersectRay(this._tmpCamera.ray,this._intersector,this._zoomLocation)?this._tmpCamera.center=this._zoomLocation:h.copy(this._zoomLocation,this._tmpCamera.center),this._updateCamera(this._tmpCamera,t,e,s),this.begin(this._tmpCamera)}animationSettings(){return{duration:r.Milliseconds(600),easing:f.outExpo}}_updateCamera(t,e,r,s){const a=w.navigationMode(t,r,this.view.renderCoordsHelper,this.view.viewingMode),n=Math.abs(this.view.camera.position.z),o=this._zoomLocation;h.normalize(S,t.eye),h.scale(S,S,-1),D.fromScreenAtEye(t,r,this._tmpRayDir),h.normalize(this._tmpRayDir.direction,this._tmpRayDir.direction);const c=i.clamp(Math.min(w.zoomDistanceModifier,1/Math.abs(h.dot(S,this._tmpRayDir.direction)))*n,w.zoomMinDistanceModifier,w.zoomMaxDistanceModifier);if(a===w.NavigationMode.Horizontal){let i=.6**e;this._sphere[3]=h.length(o),h.subtract(this._tmpViewDir,t.center,t.eye);const s=Math.min(h.length(this._tmpViewDir),c);let a=s*i;if(i<=1&&a<4&&(a=4,i=a/s),Math.abs(s-a)<1e-6)return;const n=h.length(t.center);if(this._sphere[3]!==n){const e=this._sphere[3]+i*(n-this._sphere[3]);t.center=h.scale(R,t.center,e/n)}h.scale(this._tmpViewDir,this._tmpViewDir,-i),t.eye=h.add(R,t.center,this._tmpViewDir),_.applyAll(this.view,t,this._constraintOptions),h.squaredDistance(o,t.center)>1e-12&&b.intersectScreen(this._sphere,t,r,this._targetOnSphere)&&w.panToPosition(this._sphere,t,o,this._targetOnSphere,this.view.camera.heading,this.view.camera.tilt,!0)}else{let i=.6**Math.abs(e);const a=e>0?1:-1;h.subtract(this._tmpViewDir,o,t.eye);const n=h.length(this._tmpViewDir),m=this.view.stage.renderView.getMinimalDepthForArea(null,r[0],r[1],this.view.state.camera,60);let p=null!=m?m:c;p=s&&e>0?Math.min(p,n):p,h.scale(this._tmpRayDir.direction,this._tmpRayDir.direction,p),h.add(o,this._tmpRayDir.origin,this._tmpRayDir.direction);let l=p*i;const _=Math.max(4,1.01*t.nearFar[0]);if(e>0&&l<_&&(l=_,i=l/p),Math.abs(p-l)<1e-6)return;h.scale(this._tmpRayDir.direction,this._tmpRayDir.direction,a*(1-i)),t.eye=h.add(R,t.eye,this._tmpRayDir.direction),t.center=h.add(R,t.center,this._tmpRayDir.direction)}C.applySurfaceCollisionConstraint(this.view,t)}},t.ZoomStepControllerGlobal=e.__decorate([c.subclass("esri.views.3d.state.controllers.ZoomStepControllerGlobal")],t.ZoomStepControllerGlobal);const R=m.create(),S=m.create();Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));