// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/has","../../../../core/PooledArray","../../../../core/screenUtils","../../../../core/unitUtils","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../geometry/support/aaBoundingRect","../../../../geometry/support/ray","../../../../geometry/support/vectorStacks","../../../../support/elevationInfoUtils","../../../ViewingMode","../../support/hitTest","../../support/geometryUtils/ray","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/IntersectorInterfaces","../../webgl-engine/lib/IntersectorResult","../../webgl-engine/lib/IntersectorType","../../webgl-engine/lib/intersectorUtils","../../webgl-engine/materials/HUDMaterial"],(function(e,t,r,n,i,s,o,l,c,a,u,d,h,p,y,g,f,m,R,I){"use strict";const w=(()=>{const e=[];for(let t=-1;t<=1;t++)for(let r=-1;r<=1;r++)e.push([r+1,t+1]);return e})();class _{constructor(e){this.result=e,this.screenPoint=n.createRenderScreenPointArray3()}}let v;function b(e){return v&&v.viewingMode===e||(v=new y.Intersector(e)),v}class P{constructor(e,t){this.layers=new Array,this.sliceableLayers=new Array,this.include=e?.include,this.exclude=e?.exclude,t((e=>{e.pickable&&this.filterLayerViewUid(e.apiLayerViewUid)&&(e.sliceable?this.sliceableLayers:this.layers).push(e)}))}filterLayerViewUid(e){const{include:t,exclude:r}=this;return null==e?null==t&&null==r:(null==t||t.has(e))&&(null==r||!r.has(e))}filterRenderGeometry(e){return this.filterLayerViewUid(e.layerViewUid)}}const T=o.create(),M=o.create(),U=n.createRenderScreenPointArray3();e.SceneIntersectionHelper=class{constructor(e,t,n){this.viewingMode=e,this._forEachLayer=t,this._view=n,this._externalIntersectionHandlers=new r,this._tolerance=y.defaultTolerance,this._tmpRay=c.create(),this._tmpRegion=l.create(),this._validateHUDIntersector=new y.Intersector(this.viewingMode),this._validateHUDIntersector.options.hud=!1}intersectScreen(e,t,r){return this.intersectRay(this._getPickRay(e,this._tmpRay),b(this.viewingMode),t,r)}intersectScreenFreePointFallback(e,t,r){return this.intersectRayFreePointFallback(this._getPickRay(e,this._tmpRay),t,r)}intersectRayFreePointFallback(e,t,r){return this.intersectRay(e,b(this.viewingMode),t,r)||this._intersectRayFreePointLocal(e,t)}intersectRay(e,t,r,n){return t.options.selectionMode=!1,t.options.store=g.StoreResults.MIN,this.computeIntersection(e,t,!1,n),!!t.results.min&&t.results.min.getIntersectionPoint(r)}getCenterRayWithSubpixelOffset(e,t,r=.5,n=.5){return e.getRenderCenter(U,r,n),U[0]+=.0466,U[1]-=.0123,p.fromRenderAtEye(e,U,t)}intersectIntersectorScreen(e,t,r){this.computeIntersection(this._getPickRay(e,this._tmpRay),t,!1,r)}intersectToolIntersectorScreen(e,t,r){const n=this._getPickRay(e,this._tmpRay);this.intersectToolIntersectorRay(n,t,r)}intersectToolIntersectorRay(e,t,r){t.options.selectionMode=!0,this.computeIntersection(e,t,!1,r);const n=t.results.min;this._view.basemapTerrain&&this._view.basemapTerrain.opaque||f.isValidIntersectorResult(n)&&n.intersector!==m.IntersectorType.TERRAIN||(t.options.selectionMode=!1,this.computeIntersection(e,t,!1,r))}setTolerance(e=y.defaultTolerance){this._tolerance=e}addIntersectionHandler(e){this._externalIntersectionHandlers.push(e),this._externalIntersectionHandlers.sort(((e,t)=>e.type===m.IntersectorType.TERRAIN?1:t.type===m.IntersectorType.TERRAIN?-1:0))}removeIntersectionHandler(e){null!=this._externalIntersectionHandlers.removeUnordered(e)&&this._externalIntersectionHandlers.sort(((e,t)=>e.type===m.IntersectorType.TERRAIN?1:t.type===m.IntersectorType.TERRAIN?-1:0))}_getPickRay(e,t){const r=this._view.state.camera;return p.fromScreen(r,e,t)}_intersectRayFreePointLocal(e,t){return this.viewingMode!==d.ViewingMode.Local||null==e||s.add(t,e.origin,s.normalize(a.sv3d.get(),e.direction)),!1}intersectElevationFromScreen(e,t,r=0,n=null){return this._intersectElevation(this._getPickRay(e,this._tmpRay),t,r,n)}_intersectElevation(e,t,r=0,o=null){if(null==e)return null;const l=this._view,{renderCoordsHelper:c}=l,d=i.getMetersPerVerticalUnitForSR(l.spatialReference),p=null!=t?t.mode:"absolute-height",f=u.getElevationOffsetInMeters(t)/d,I=("on-the-ground"!==p?f+r:0)*d/c.unitInMeters,{camera:w}=l.state;if("absolute-height"===p){const t=c?.getAltitude(w.eye),r=s.dot(s.normalize(T,e.direction),c.worldUpAtPosition(w.eye,M));if(t<I&&r<0||t>=I&&r>0)return null;if(c.intersectInfiniteManifold(e,I,T)){const e=h.computeMapPointFromVec3d(l,T);return e.z??=0,e.z-=f,e}return null}const _=n.castRenderScreenPointArray3(a.sv3d.get());w.projectToRenderScreen(e.origin,_);const v=new P(null,this._forEachLayer),{slice:{plane:b}}=l,U=null!=b?R.sliceFilterPredicate(b):null,x=new y.Intersector(this.viewingMode);x.options.store=g.StoreResults.MIN,x.options.verticalOffset=I,x.options.normalRequired=!1;const S=e.origin,A=s.add(a.sv3d.get(),S,e.direction);x.reset(S,A,w),x.point=_;let H=null;if(o&&"type"in o&&"graphics"===o.type){const e=l.allLayerViews.find((e=>e.layer===o))?.uid;H=e?t=>t.layerViewUid===e:null}else o&&(H=e=>e.graphicUid!==o.uid);switch(p){case"relative-to-scene":{const e=e=>(!H||H(e))&&!!e.lastValidElevationBB;x.intersect(v.layers,_,this._tolerance,null,e),this._externalIntersectionHandlers.forAll((e=>{if(e.type===m.IntersectorType.I3S||e.type===m.IntersectorType.TERRAIN||e.type===m.IntersectorType.TILES3D){const t=e.slicePlaneEnabled?U:null;e.intersect(x,t,x.rayBegin,x.rayEnd,_,!1)}}));break}case"on-the-ground":case"relative-to-ground":this._externalIntersectionHandlers.forAll((e=>{if(e.isGround){const t=e.slicePlaneEnabled?U:null;e.intersect(x,t,x.rayBegin,x.rayEnd,_,!1)}}))}if(x.results.min.getIntersectionPoint(T)){const e=h.computeMapPointFromVec3d(l,T);return e.z=r,e}return null}computeIntersection(e,t,r,i){if(null==e)return;const o=this._view.state.camera,l=n.castRenderScreenPointArray3(a.sv3d.get());o.projectToRenderScreen(e.origin,l);const c=new P(i,this._forEachLayer);t.options.selectOpaqueTerrainOnly=!i||!("include"in i||"exclude"in i);const u=e.origin,d=s.add(a.sv3d.get(),e.origin,e.direction);t.reset(u,d,o),t.intersect(c.layers,l,this._tolerance);const h=this._view.slice.plane,p=null!=h?R.sliceFilterPredicate(h):null;t.intersect(c.sliceableLayers,l,this._tolerance,p);const y=i&&(i.requiresGroundFeedback||i.enableDraped);this._externalIntersectionHandlers.forAll((e=>{const n=e.layerViewUid,i=Array.isArray(n),s=i?n:[n];i&&(t.options.filteredLayerViewUids=[]);let o=!1;for(const e of s)c.filterLayerViewUid(e)?o=!0:i&&t.options.filteredLayerViewUids.push(e);if(t.options.isFiltered=!o,e.isGround&&y||!t.options.isFiltered){const n=e.slicePlaneEnabled?p:null;e.intersect(t,n,u,d,l,r)}}));const g=a.sv3d.get(),f=this._view.basemapTerrain;if(i&&i.enableDraped&&null!=f.spatialReference&&t.results.ground.getIntersectionPoint(g)){const e=f.overlayManager.renderer,r=this._view.renderCoordsHelper.spatialReference,n=a.sv3d.get();this._view.renderCoordsHelper.fromRenderCoords(g,n,f.spatialReference),n[2]=this._view.elevationProvider?.getElevation(g[0],g[1],g[2],r,"ground")??0,e.intersect(t,n,t.results.ground,(e=>c.filterRenderGeometry(e)))}t.sortResults(),this._processHUDResults(t)}_processHUDResults(e){const t=e.results.hud;l.copy(this._tmpRegion,l.negativeInfinity);const r=this._view.state.camera,n=[],i=this._tmpRegion,s=e=>{const t=new _(e),s=t.result.target.object.geometries.every((e=>e.material instanceof I.HUDMaterial&&e.material.parameters.occlusionTest));n.push({item:t,occlusionTest:s}),s&&(r.projectToRenderScreen(e.target.center,t.screenPoint),t.screenPoint[0]=Math.floor(t.screenPoint[0]),t.screenPoint[1]=Math.floor(t.screenPoint[1]),l.expandPointInPlace(i,t.screenPoint))};e.sortResults(t.all),null!=t.min.distance&&s(t.min);for(const e of t.all)t.min.target.object!==e.target.object&&t.max.target.object!==e.target.object&&s(e);if(null!=t.max.distance&&t.max.target.object!==t.min.target.object&&s(t.max),!n.length)return;i[0]===i[2]&&(i[2]+=1),i[1]===i[3]&&(i[3]+=1);const o=r.fullWidth,c=r.fullHeight,a=Math.max(0,i[0]-1),u=Math.max(0,i[1]-1),d=Math.min(l.width(i)+2,o-a),h=Math.min(l.height(i)+2,c-u),p=d>0&&h>0?new Uint8Array(d*h*4):null;p&&this._view.stage.renderer.readHUDVisibility(a,u,d,h,p);let y=!0;const f=null==e.results.max.distance;let m=0;for(const{item:t,occlusionTest:r}of n){let n=!r;if(r&&p)for(const e of w){const r=4*(Math.min(t.screenPoint[0]+e[0],o)-i[0]+(Math.min(t.screenPoint[1]+e[1],c)-i[1])*d);if(r>=0&&r<p.length&&p[r]){n=!0;break}}n&&(y&&(e.results.min.copy(t.result),y=!1),f&&e.results.max.copy(t.result),e.options.store===g.StoreResults.ALL&&e.results.all.splice(m++,0,t.result))}}},e.isIntersectionHandler=function(e){return"object"==typeof e&&"intersect"in e},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));