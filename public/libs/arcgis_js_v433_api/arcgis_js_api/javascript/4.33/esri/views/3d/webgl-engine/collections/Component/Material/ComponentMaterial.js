// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../chunks/tslib.es6","../../../../../../core/libs/gl-matrix-2/math/mat3","../../../../../../core/libs/gl-matrix-2/factories/mat3f64","../../../../../../chunks/vec32","../../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../../chunks/vec42","../../../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../../../symbols/support/materialUtils","../../../../layers/support/symbolColorUtils","../../../../terrain/OverlayContent","./ComponentTechnique","./ComponentTechniqueConfiguration","./shader/ComponentData.glsl","./shader/VertexDiscardMode","../../../core/material/MaterialBase","../../../core/renderPasses/RenderPassIdentifier","../../../core/shaderLibrary/ShaderOutput","../../../core/shaderLibrary/attributes/NormalAttribute.glsl","../../../core/shaderLibrary/output/Emissions.glsl","../../../core/shaderLibrary/shading/Normals.glsl","../../../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl","../../../core/shaderLibrary/util/EllipsoidMode","../../../core/util/TwoVectorPosition","../../../lib/basicInterfaces","../../../lib/OITPass","../../../lib/RenderSlot","../../../materials/pbrUtils","../../../../../support/HighlightDefaults","../../../../../../webscene/support/AlphaCutoff"],(function(e,t,r,a,o,s,i,n,l,d,u,c,p,m,h,M,g,y,x,v,C,S,T,b,f,P,O,_,D,w){"use strict";class N extends M.MaterialBase{constructor(e,t){super(),this.toMapSpace=t,this.baseColor=n.freeze(1,1,1,1),this.usePBR=!1,this.hasParametersFromSource=!1,this.mrrFactors=_.advancedMRRFactors,this.baseColorTexture=null,this.metallicRoughnessTexture=null,this.normalTexture=null,this.occlusionTexture=null,this.emissionTexture=null,this.emissiveBaseColor=s.freeze(0,0,0),this.emissiveStrength=1,this.emissiveSource=l.EmissiveSourceMode.Emissive,this.commonMaterialParameters=new A,this.componentParameters=new q,this.objectOpacity=1,this.textureAlphaCutoff=w.alphaCutoff,this.alphaDiscardMode=f.AlphaDiscardMode.Opaque,this.isIntegratedMesh=!1,this.polygonOffsetEnabled=!1,this.ellipsoidMode=T.EllipsoidMode.Earth,this.hasOccludees=!1;const o=new b.TwoVectorPosition(e.position),i=a.clone(e.rotationScale);r.invert(i,i),r.transpose(i,i),this.transformNormalGlobalFromModel=i,this.transformWorldFromModelTL=o.low,this.transformWorldFromModelTH=o.high,this.transformWorldFromModelRS=e.rotationScale}dispose(){this.baseColorTexture=null,this.metallicRoughnessTexture=null,this.emissionTexture=null,this.occlusionTexture=null,this.normalTexture=null}get hasEmissions(){return null!=this.emissionTexture||!o.exactEquals(this.emissiveBaseColor,s.ZEROS)}get texture(){return this.baseColorTexture?.glTexture}get textureMetallicRoughness(){return this.metallicRoughnessTexture?.glTexture}get textureEmissive(){return this.emissionTexture?.glTexture}get textureOcclusion(){return this.occlusionTexture?.glTexture}get textureNormal(){return this.normalTexture?.glTexture}acquireTechnique(e,t,r,a){const o=new p.ComponentTechniqueConfiguration(e.context.spherical);o.renderOccluded=r.slot===O.RenderSlot.OCCLUDED_GROUND,o.hasVertexColors=a.colors,o.hasNormals=a.hasNormals,o.textureCoordinateType=a.textureCoordinates,o.hasMetallicRoughnessTexture=null!=this.metallicRoughnessTexture,o.hasOcclusionTexture=null!=this.occlusionTexture,o.hasNormalTexture=null!=this.normalTexture,o.oitPass=t.identifier===g.RenderPassIdentifier.Material&&null!=r.oitPass?r.oitPass:P.OITPass.NONE,o.terrainDepthTest=t.identifier===g.RenderPassIdentifier.Material&&r.terrainDepthTest,o.cullAboveTerrain=t.identifier===g.RenderPassIdentifier.Material&&r.cullAboveTerrain,o.ellipsoidMode=this.ellipsoidMode,o.componentData=this.componentParameters.type,o.cullFace=this.commonMaterialParameters.cullFace,o.doubleSidedMode=this.commonMaterialParameters.doubleSided?C.NormalsDoubleSidedMode.View:C.NormalsDoubleSidedMode.None,o.hasColorTexture=null!=this.baseColorTexture;const s=this._computeWhichMaterialPass();if(o.blendingEnabled=s===R.Transparent||s===R.OpaqueAndTransparent,o.alphaDiscardMode=this.alphaDiscardMode,o.integratedMeshMode=this.isIntegratedMesh?function(e){return null!=e.overlay?.getTexture(u.OverlayContent.ColorNoRasterImage)}(r)?function(e){return null!=e.overlay?.getTexture(u.OverlayContent.WaterNormal)}(r)?p.IntegratedMeshMode.ColorOverlayWithWater:p.IntegratedMeshMode.ColorOverlay:p.IntegratedMeshMode.NoOverlay:p.IntegratedMeshMode.None,o.hasPolygonOffset=this.polygonOffsetEnabled,o.pbrMode=o.integratedMeshMode===p.IntegratedMeshMode.ColorOverlayWithWater?S.PBRMode.WaterOnIntegratedMesh:this.usePBR?this.hasParametersFromSource?a.shadeNormals&&this.isIntegratedMesh?S.PBRMode.Disabled:S.PBRMode.Schematic:S.PBRMode.Normal:S.PBRMode.Disabled,o.emissionSource=this.hasEmissions?null!=this.emissionTexture?v.EmissionSource.Texture:o.pbrMode===S.PBRMode.Normal?v.EmissionSource.SymbolColor:v.EmissionSource.None:v.EmissionSource.None,o.shadeNormals=a.shadeNormals,o.normalType=o.hasNormals?x.NormalType.Compressed:x.NormalType.ScreenDerivative,o.hasSlicePlane=null!=r.slicePlane&&this.commonMaterialParameters.hasSlicePlane,o.receiveAmbientOcclusion=o.hasOccludees=o.receiveShadows=o.screenSpaceReflections=o.cloudReflections=o.hasHighlightMixTexture=!1,t.identifier===g.RenderPassIdentifier.ShadowMap)o.output=y.ShaderOutput.Shadow,o.vertexDiscardMode=h.VertexDiscardMode.None;else if(t.identifier===g.RenderPassIdentifier.ViewshedShadowMap)o.output=y.ShaderOutput.ViewshedShadow,o.vertexDiscardMode=h.VertexDiscardMode.None;else if(t.identifier===g.RenderPassIdentifier.Highlight)o.output=y.ShaderOutput.Highlight,o.vertexDiscardMode=h.VertexDiscardMode.None,o.hasHighlightMixTexture=null!=r.highlightMixTexture;else{switch(s===R.OpaqueAndTransparent?o.vertexDiscardMode=t.transparent?h.VertexDiscardMode.Opaque:h.VertexDiscardMode.Transparent:o.vertexDiscardMode=h.VertexDiscardMode.None,o.hasBloom=y.isColorEmission(t.output),o.output=t.output,t.output){case y.ShaderOutput.Color:case y.ShaderOutput.ColorEmission:o.receiveAmbientOcclusion=a.applySSAO&&null!=r.ssao?.getTexture(),o.hasOccludees=r.hasOccludees,o.receiveShadows=r.shadowMap.ready,o.screenSpaceReflections=null!=r.ssr.lastFrameColor,o.cloudReflections=null!=r.clouds.data?.cubeMap?.colorTexture;break;case y.ShaderOutput.ObjectAndLayerIdColor:o.objectAndLayerIdColor=!0}o.snowCover=r.snowCover}const i=e.get(c.ComponentTechnique,o);return this._setClean(),i}submit(t,r,a){if(this.objectOpacity<=0)return;const{componentData:o,renderable:s}=a,{geometry:i}=s,n=s.meta.cameraDepthSquared;o.updateHighlights(r.highlights);const{geometryRanges:l,highlightRangesMap:d,shadowmapRanges:c}=o;switch(this._computeWhichMaterialPass()){case R.Opaque:t.opaque.submitDraw(this,i,l,n);break;case R.Transparent:t.transparent.submitDraw(this,i,l,n);break;case R.OpaqueAndTransparent:t.opaque.submitDraw(this,i,l,n),t.transparent.submitDraw(this,i,l,n);break;case R.IntegratedMesh:t.integratedMesh.submitDraw(this,i,l,n),function(e){return null!=e.overlay?.getTexture(u.OverlayContent.Occluded)}(r)&&t.occludedGround.submitDraw(this,i,l,n),function(e){return null!=e.overlay?.getTexture(u.OverlayContent.Highlight)}(r)&&t.highlightIntegratedMesh.submitDraw(this,i,l,n)}if(this.componentParameters.castShadows!==e.ComponentParameterSummary.None){if(null!=d)for(const e of d)e[0]===D.defaultHighlightName&&t.highlightShadowMap.submitDraw(this,i,e[1],n,e[0]);null!=c&&t.defaultShadowMap.submitDraw(this,i,c,n),t.shadowMap.submitDraw(this,i,l,n)}if(null!=d)for(const e of d)t.highlight.submitDraw(this,i,e[1],n,e[0]);r.viewshedEnabled&&t.viewshedShadowMap.submitDraw(this,i,l,n)}_computeWhichMaterialPass(){if(this.isIntegratedMesh)return R.IntegratedMesh;if(this.objectOpacity<1)return R.Transparent;if(this.componentParameters.opaqueOverride===e.ComponentParameterSummary.All)return R.Opaque;if(this.baseColor[3]<1||this.alphaDiscardMode===f.AlphaDiscardMode.Blend||this.alphaDiscardMode===f.AlphaDiscardMode.MaskBlend)return R.Transparent;switch(this.componentParameters.transparent){case e.ComponentParameterSummary.None:return R.Opaque;case e.ComponentParameterSummary.All:return R.Transparent;case e.ComponentParameterSummary.Some:return R.OpaqueAndTransparent}}}var R,I;t.__decorate([M.parameter({vectorOps:i.vec4})],N.prototype,"baseColor",void 0),t.__decorate([M.parameter()],N.prototype,"usePBR",void 0),t.__decorate([M.parameter()],N.prototype,"hasParametersFromSource",void 0),t.__decorate([M.parameter({vectorOps:o.vec3})],N.prototype,"mrrFactors",void 0),t.__decorate([M.parameter({dispose:!0})],N.prototype,"baseColorTexture",void 0),t.__decorate([M.parameter({dispose:!0})],N.prototype,"metallicRoughnessTexture",void 0),t.__decorate([M.parameter({dispose:!0})],N.prototype,"normalTexture",void 0),t.__decorate([M.parameter({dispose:!0})],N.prototype,"occlusionTexture",void 0),t.__decorate([M.parameter({dispose:!0})],N.prototype,"emissionTexture",void 0),t.__decorate([M.parameter({vectorOps:o.vec3})],N.prototype,"emissiveBaseColor",void 0),t.__decorate([M.parameter()],N.prototype,"emissiveStrength",void 0),t.__decorate([M.parameter()],N.prototype,"emissiveSource",void 0),t.__decorate([M.parameterBlock()],N.prototype,"commonMaterialParameters",void 0),t.__decorate([M.parameterBlock()],N.prototype,"componentParameters",void 0),t.__decorate([M.parameter()],N.prototype,"objectOpacity",void 0),t.__decorate([M.parameter()],N.prototype,"textureAlphaCutoff",void 0),t.__decorate([M.parameter()],N.prototype,"alphaDiscardMode",void 0),t.__decorate([M.parameter()],N.prototype,"isIntegratedMesh",void 0),t.__decorate([M.parameter()],N.prototype,"polygonOffsetEnabled",void 0),t.__decorate([M.parameter()],N.prototype,"ellipsoidMode",void 0),t.__decorate([M.parameter()],N.prototype,"hasOccludees",void 0),function(e){e[e.Opaque=0]="Opaque",e[e.Transparent=1]="Transparent",e[e.OpaqueAndTransparent=2]="OpaqueAndTransparent",e[e.IntegratedMesh=3]="IntegratedMesh"}(R||(R={}));class A extends M.MaterialParameterBlock{constructor(){super(...arguments),this.doubleSided=!1,this.cullFace=f.CullFaceOptions.Back,this.hasSlicePlane=!0}}t.__decorate([M.parameter()],A.prototype,"doubleSided",void 0),t.__decorate([M.parameter()],A.prototype,"cullFace",void 0),t.__decorate([M.parameter()],A.prototype,"hasSlicePlane",void 0);class q extends M.MaterialParameterBlock{constructor(){super(...arguments),this.externalColor=n.fromValues(1,1,1,1),this.externalColorMixMode=d.ColorMixModeEnum.Multiply,this.castShadows=e.ComponentParameterSummary.All}get transparent(){return this.externalColor[3]<1?e.ComponentParameterSummary.All:e.ComponentParameterSummary.None}get opaqueOverride(){return this.externalColorMixMode===d.ColorMixModeEnum.Replace&&1===this.externalColor[3]?e.ComponentParameterSummary.All:e.ComponentParameterSummary.None}get visible(){return this.externalColor[3]>0?e.ComponentParameterSummary.All:e.ComponentParameterSummary.None}get type(){return m.ComponentDataType.Uniform}}t.__decorate([M.parameter({vectorOps:i.vec4})],q.prototype,"externalColor",void 0),t.__decorate([M.parameter()],q.prototype,"externalColorMixMode",void 0),t.__decorate([M.parameter()],q.prototype,"castShadows",void 0),e.ComponentParameterSummary=void 0,(I=e.ComponentParameterSummary||(e.ComponentParameterSummary={}))[I.All=0]="All",I[I.Some=1]="Some",I[I.None=2]="None";class E extends M.MaterialParameterBlock{constructor(){super(...arguments),this.texture=null,this.transparent=e.ComponentParameterSummary.None,this.opaqueOverride=e.ComponentParameterSummary.None,this.castShadows=e.ComponentParameterSummary.None}get type(){return m.ComponentDataType.Varying}}t.__decorate([M.parameter()],E.prototype,"texture",void 0),t.__decorate([M.parameter()],E.prototype,"transparent",void 0),t.__decorate([M.parameter()],E.prototype,"opaqueOverride",void 0),t.__decorate([M.parameter()],E.prototype,"castShadows",void 0),e.CommonMaterialParameters=A,e.ComponentMaterial=N,e.ComponentParametersUniform=q,e.ComponentParametersVarying=E,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));