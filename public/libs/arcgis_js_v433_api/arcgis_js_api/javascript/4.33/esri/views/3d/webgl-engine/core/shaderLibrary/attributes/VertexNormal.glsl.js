// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../core/compilerUtils","../../../../../../core/libs/gl-matrix-2/factories/mat3f64","../../../../../../core/libs/gl-matrix-2/factories/vec4f64","./NormalAttribute.glsl","./VertexPosition.glsl","../../shaderModules/glsl","../../shaderModules/Matrix3DrawUniform","../../shaderModules/Matrix3PassUniform"],(function(r,e,a,o,l,t,s,m,i){"use strict";class d extends t.VertexPositionPassParameters{constructor(){super(...arguments),this.transformNormalViewFromGlobal=a.create()}}class n extends t.VertexPositionDrawParameters{constructor(){super(...arguments),this.transformNormalGlobalFromModel=a.create(),this.toMapSpace=o.create()}}r.VertexNormal=function(r,a){switch(a.normalType){case l.NormalType.Attribute:case l.NormalType.Compressed:r.include(l.NormalAttribute,a),r.varyings.add("vNormalWorld","vec3"),r.varyings.add("vNormalView","vec3"),r.vertex.uniforms.add(new m.Matrix3DrawUniform("transformNormalGlobalFromModel",(r=>r.transformNormalGlobalFromModel)),new i.Matrix3PassUniform("transformNormalViewFromGlobal",(r=>r.transformNormalViewFromGlobal))),r.vertex.code.add(s.glsl`void forwardNormal() {
vNormalWorld = transformNormalGlobalFromModel * normalModel();
vNormalView = transformNormalViewFromGlobal * vNormalWorld;
}`);break;case l.NormalType.ScreenDerivative:r.vertex.code.add(s.glsl`void forwardNormal() {}`);break;default:e.neverReached(a.normalType);case l.NormalType.COUNT:}},r.VertexNormalDrawParameters=n,r.VertexNormalPassParameters=d,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})}));