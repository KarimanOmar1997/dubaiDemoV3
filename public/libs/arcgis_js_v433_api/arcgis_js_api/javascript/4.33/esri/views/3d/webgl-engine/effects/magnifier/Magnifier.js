// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/asyncUtils","../../../../../core/mathUtils","../../../../../core/maybe","../../../../../core/reactiveUtils","../../../../../core/screenUtils","../../../../../core/urlUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/has","../../../../../core/Logger","../../../../../core/RandomLCG","../../../../../core/accessorSupport/decorators/subclass","../../../../../support/requestImageUtils","../../../webgl","../../../webgl/RenderNode","./MagnifierTechnique","../../lib/basicInterfaces","../../lib/DefaultVertexAttributeLocations","../../lib/glUtil3D","../../../../../chunks/Magnifier.glsl","../../../../magnifier/resources","../../../../webgl/enums","../../../../webgl/Texture","../../../../webgl/TextureDescriptor"],(function(e,s,r,i,t,a,o,n,l,c,u,h,m,p,_,d,g,f,y,T,P,v,M,b,R){"use strict";e.Magnifier=class extends d{constructor(){super(...arguments),this.produces=_.InternalRenderCategory.MAGNIFIER,this.consumes={required:[_.InternalRenderCategory.MAGNIFIER]},this._imageSources=null,this._imageLoadTask=null,this._passParameters=new P.MagnifierPassParameters,this._vao=null,this._magnifier=null,this._tmpScreenPoint=o.createScreenPointArray(),this._tmpRenderPoint=o.createRenderScreenPointArray()}initialize(){this.addHandles([a.watch((()=>this.view.magnifier),(e=>this._update(e)),a.syncAndInitial)])}_update(e){if(e===this._magnifier)return;this.removeAllHandles(),this._magnifier=e;const s=()=>{const e=this._validMagnifier;e?(this._loadResources(e),this.produces=_.InternalRenderCategory.MAGNIFIER):this.produces="disabled",this.requestRender()};this._magnifier&&this.addHandles(a.watch((()=>this._magnifier?.version),s)),s()}get _validMagnifier(){return this._magnifier?.visible&&this._magnifier?.position&&this._magnifier?.size>0?this._magnifier:null}get _factor(){return this._magnifier?.factor||1}destroy(){this._magnifier=null,null!=this._imageLoadTask&&(this._imageLoadTask.task.abort(),this._imageLoadTask=null),this._disposeTextures(),this._vao=t.disposeMaybe(this._vao)}_disposeTextures(){this._passParameters.mask=t.disposeMaybe(this._passParameters.mask),this._passParameters.overlay=t.disposeMaybe(this._passParameters.overlay),this._passParameters.input=t.disposeMaybe(this._passParameters.input)}precompile(){this._imageSources&&this.techniques.precompile(g.MagnifierTechnique)}render(e){const s=this._validMagnifier,r=e.find((({name:e})=>e===_.InternalRenderCategory.MAGNIFIER));if(null==s)return r;if(null==this._imageSources)return this.requestRender(f.RenderRequestType.UPDATE),r;const t=this.renderingContext,a=this.camera.pixelRatio,n=Math.ceil(a*s.size);this._vao??=T.createQuadVAO(t,T.Layout.Pos2,y.Default3D,0,1);const l=this.techniques.get(g.MagnifierTechnique);if(this._ensureTextureResources(t,n),!l.compiled||!this._passParameters.input)return this.requestRender(f.RenderRequestType.UPDATE),r;const c=Math.ceil(1/this._factor*n),u=this._passParameters.input;u.resize(c,c),o.screenPointObjectToArray(s.position,this._tmpScreenPoint);const h=this.camera.screenToRender(this._tmpScreenPoint,this._tmpRenderPoint),m=this.camera.fullWidth,p=this.camera.fullHeight,d=.5*c,P=.5*c;h[0]=i.clamp(h[0],d,m-d-1),h[1]=i.clamp(h[1],P,p-P-1);const v=Math.floor(h[0]-d),b=Math.floor(h[1]-P);return t.bindFramebuffer(r.fbo),l.program.bindTexture("textureInput",u),t.gl.copyTexImage2D(u.descriptor.target,0,u.descriptor.pixelFormat,v,b,c,c,0),this._passParameters.magnifier=s,t.bindTechnique(l,this.bindParameters,this._passParameters),t.bindVAO(this._vao),t.drawArrays(M.PrimitiveType.TRIANGLE_STRIP,0,4),r}_loadResources(e){const{maskUrl:s,overlayUrl:i}=e;this._imageLoadTask?.maskUrl===s&&this._imageLoadTask?.overlayUrl===i||(this._imageLoadTask?.task.abort(),this._imageLoadTask=this._imageSources=null),this._imageSources||this._imageLoadTask||(this._imageLoadTask={maskUrl:s,overlayUrl:i,task:r.createTask((async e=>{const r=null==s||null==i?v.loadMagnifierResources(e):null,t=null!=s?p.requestImage(s,{signal:e}):r.then((e=>e.mask)),a=null!=i?p.requestImage(i,{signal:e}):r.then((e=>e.overlay));this._imageSources={mask:await t,overlay:await a}}))})}_ensureTextureResources(e,s){null==this._imageSources||this._passParameters.size===s&&this._passParameters.input&&this._passParameters.mask&&this._passParameters.overlay||(this._disposeTextures(),this._imageSources.overlay.width=this._imageSources.mask.width=s,this._imageSources.overlay.height=this._imageSources.mask.height=s,this._passParameters.overlay=new b.Texture(e,this._createTextureDescriptor(s,M.PixelFormat.RGBA,this._imageSources.overlay),this._imageSources.overlay),this._passParameters.mask=new b.Texture(e,this._createTextureDescriptor(s,M.PixelFormat.ALPHA,this._imageSources.mask),this._imageSources.mask),this._passParameters.input=new b.Texture(e,this._createTextureDescriptor(s,M.PixelFormat.RGBA,null)))}_createTextureDescriptor(e,s,r){const i=this.renderingContext,t=new R.TextureDescriptor(e,e);return t.pixelFormat=t.internalFormat=s,t.wrapMode=M.TextureWrapMode.CLAMP_TO_EDGE,t.flipped=!!r,t.preMultiplyAlpha=!(s!==M.PixelFormat.RGBA||!r||n.isSVG(r.src)&&i.driverTest.svgPremultipliesAlpha.result),t}},s.__decorate([l.property()],e.Magnifier.prototype,"produces",void 0),s.__decorate([l.property()],e.Magnifier.prototype,"consumes",void 0),s.__decorate([l.property()],e.Magnifier.prototype,"_imageSources",void 0),s.__decorate([l.property()],e.Magnifier.prototype,"_imageLoadTask",void 0),e.Magnifier=s.__decorate([m.subclass("esri.views.3d.webgl-engine.effects.magnifier.Magnifier")],e.Magnifier),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));