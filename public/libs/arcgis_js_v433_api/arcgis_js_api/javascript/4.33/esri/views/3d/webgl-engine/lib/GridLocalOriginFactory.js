// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/has","../../../../core/uid","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../geometry/projection/projectBuffer","./Attribute","./Geometry","./LocalOriginFactory","./Object3D","./testUtils","./VertexAttribute","./WebGLLayer","../materials/RibbonLineMaterial","./IntersectableGeometry"],(function(t,e,i,r,o,s,n,a,c,h,g,l,u,b,d,_){"use strict";const f=o.create();t.GridLocalOriginFactory=class{constructor(t){this._originSR=t,this._rootOriginId="root/"+i.generateUID(),this._origins=new Map,this._objects=new Map,this._gridSize=5e5}getOrigin(t){const e=this._origins.get(this._rootOriginId);if(null==e){const e=l.gridLocalOriginFactory.rootOrigin;if(null!=e)return this._origins.set(this._rootOriginId,h.fromValues(e[0],e[1],e[2],this._rootOriginId)),this.getOrigin(t);const i=h.fromValues(t[0]+Math.random()-.5,t[1]+Math.random()-.5,t[2]+Math.random()-.5,this._rootOriginId);return this._origins.set(this._rootOriginId,i),i}const i=this._gridSize,o=Math.round(t[0]/i),s=Math.round(t[1]/i),n=Math.round(t[2]/i),a=`${o}/${s}/${n}`;let c=this._origins.get(a);const g=.5*i;if(r.subtract(f,t,e.vec3),f[0]=Math.abs(f[0]),f[1]=Math.abs(f[1]),f[2]=Math.abs(f[2]),f[0]<g&&f[1]<g&&f[2]<g){if(c){const e=Math.max(...f);if(r.subtract(f,t,c.vec3),f[0]=Math.abs(f[0]),f[1]=Math.abs(f[1]),f[2]=Math.abs(f[2]),Math.max(...f)<e)return c}return e}return c||(c=h.fromValues(o*i,s*i,n*i,a),this._origins.set(a,c)),c}_drawOriginBox(t,e=s.fromValues(1,1,0,1)){const i=window.view,r=i.stage,o=e.toString();if(!this._objects.has(o)){this._material=new d.RibbonLineMaterial({width:2,color:e});const t=new b.WebGLLayer(r,{pickable:!1}),i=new g.Object3D({castShadow:!1});t.add(i),this._objects.set(o,i)}const h=this._objects.get(o),l=[0,1,5,4,0,2,1,7,6,2,0,1,3,7,5,4,6,2,0],f=l.length,m=new Array(3*f),M=new Array,O=.5*this._gridSize;for(let e=0;e<f;e++)m[3*e]=t[0]+(1&l[e]?O:-O),m[3*e+1]=t[1]+(2&l[e]?O:-O),m[3*e+2]=t[2]+(4&l[e]?O:-O),e>0&&M.push(e-1,e);n.projectBuffer(m,this._originSR,0,m,i.renderSpatialReference,0,f);const y=new c.Geometry(this._material,[[u.VertexAttribute.POSITION,new a.Attribute(m,M,3,!0)]],null,_.GeometryType.Line);h.addGeometry(y)}get test(){}},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));