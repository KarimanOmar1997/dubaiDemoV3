// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/memoryEstimations","../../../../core/typedArrayUtil","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64"],(function(t,e,i,s,o){"use strict";t.Path=class{constructor(t,e,i,s,r){this.vertices=t,this.positionsES=e,this.offset=s,this.positions=r;const h=t.length,n=Math.floor(h/2),g=this.offset+3*n,f=i[g],c=i[g+1],l=i[g+2];this.origin=o.fromValues(f,c,l);const v=this.offset+3*h;for(let t=this.offset;t<v;t+=3)r[t]=i[t]-f,r[t+1]=i[t+1]-c,r[t+2]=i[t+2]-l;this.updatePathVertexInformation()}get usedMemory(){return this._getSharedBufferSliceMemory(this.positions)}_getSharedBufferSliceMemory(t){return i.isTypedArray(t)?(0===this.offset?e.baseTypedArrayMemory:0)+3*this.vertices.length*t.BYTES_PER_ELEMENT:(0===this.offset?e.baseArrayMemory:0)+3*this.vertices.length*e.estimateNumberMemory}updatePathVertexInformation(){const t=this.vertices.length,e=this.vertices[0];let i=this.offset;const o=this.positions;e.vRight[0]=o[i+3]-o[i],e.vRight[1]=o[i+4]-o[i+1],e.vRight[2]=o[i+5]-o[i+2],i+=3;let r=s.length(e.vRight);e.vMinSiblingLength=r,s.normalize(e.vRight,e.vRight);let h=e;for(let e=1;e<t;++e){const n=this.vertices[e];if(n.vLeft=h.vRight,e<t-1){n.vRight[0]=o[i+3]-o[i],n.vRight[1]=o[i+4]-o[i+1],n.vRight[2]=o[i+5]-o[i+2];const t=s.length(n.vRight);n.vMinSiblingLength=Math.min(r,t),r=t,s.normalize(n.vRight,n.vRight)}else s.copy(n.vRight,n.vLeft),n.vMinSiblingLength=r;h=n,i+=3}}},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));