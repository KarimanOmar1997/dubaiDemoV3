// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/libs/gl-matrix-2/math/vec2","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../geometry/support/FloatArray","../../../../geometry/support/HalfFloatArray","../../../../geometry/support/Indices","./Attribute","./Normals","./RayIntersections","./VertexAttribute"],(function(t,e,r,i,s,o,a,n,l,c,h,u,A){"use strict";class b{constructor(t){this.builder=t}onPathChanged(t){this.builder.onPathChanged()}}class p extends b{constructor(t){super(t),this.color=o.fromValues(255,255,255,255),this._size=r.create(),this.positions=a.newFloatArray(3*this.builder.numVerticesTotal),this.normals=new Int16Array(2*this.builder.numVerticesTotal)}bakeVertexColors(t){this.color[0]=255*t[0],this.color[1]=255*t[1],this.color[2]=255*t[2],this.color[3]=255*(t.length>3?t[3]:1)}bake(t){e.copy(this._size,t);const{numVerticesTotal:r,pathVertexData:s,positions:o,profileRightAxes:a,profileUpAxes:n,profileVertexAndNormals:l,profileAuxData:c}=this.builder;for(let u=0;u<r;++u){let r=s[u];r*=3;const A=g;let b=0,p=0;const v=h.decompressNormal(f,a,u),I=h.decompressNormal(V,n,u),T=4*u,y=e.set(d,l[T]*t[0],l[T+1]*t[1]),O=3*u;if(1===c[O+2])i.cross(A,I,v),b=c[O]*t[0],p=c[O+1];else{const t=x,r=m;e.set(t,c[O],c[O+1]);const s=e.length(t);e.normalize(t,t);const o=e.dot(y,t);if(Math.abs(o)>s){e.set(r,-t[1],t[0]);const i=e.dot(y,r);e.scale(t,t,s*Math.sign(o)),e.scale(r,r,i),e.add(y,t,r)}i.set(A,0,0,0)}const P=v[0]*y[0]+I[0]*y[1],R=v[1]*y[0]+I[1]*y[1],w=v[2]*y[0]+I[2]*y[1];this.positions[O]=o[r]+P+A[0]*b,this.positions[O+1]=o[r+1]+R+A[1]*b,this.positions[O+2]=o[r+2]+w+A[2]*b;const E=l[T+2],F=l[T+3];h.compressNormal(this.normals,u,v[0]*E+I[0]*F+A[0]*p,v[1]*E+I[1]*F+A[1]*p,v[2]*E+I[2]*F+A[2]*p)}}createGeometryData(){const t=this.builder.vertexIndices;return[[A.VertexAttribute.POSITION,new c.Attribute(this.positions,t,3,!0)],[A.VertexAttribute.NORMALCOMPRESSED,new c.Attribute(this.normals,t,2,!0)],[A.VertexAttribute.COLOR,new c.Attribute(this.color,l.getZeroIndexArray(t.length),4,!0)]]}onPathChanged(t){super.onPathChanged(t),this.bake(this.size)}intersect(t,e,r,i){const s=this.builder.vertexIndices,o=new c.Vertices(this.positions,3),a=s.length/3;u.intersectTriangles(t,e,0,a,s,o,void 0,r,((t,e,r)=>i(t,r,e)))}get size(){return this._size}}const d=r.create(),x=r.create(),m=r.create(),g=s.create(),f=s.create(),V=s.create();t.FastUpdatePathGeometry=class extends b{constructor(t,e,r,i){super(t),this.sizeAttributeValue=e,this.colorAttributeValue=r,this.opacityAttributeValue=i,this.baked=new p(t),this._vvSize=a.newFloatArray(this.builder.path.vertices.length).fill(e),this._vvColor=n.newHalfFloatArray(this.builder.path.vertices.length).fill(r),this._vvOpacity=n.newHalfFloatArray(this.builder.path.vertices.length).fill(i)}createGeometryData(){const t=this.builder,{pathVertexIndices:e,vertexIndices:r}=t;return[[A.VertexAttribute.POSITION,new c.Attribute(t.positions,e,3,!0)],[A.VertexAttribute.PROFILEVERTEXANDNORMAL,new c.Attribute(t.profileVertexAndNormals,r,4,!0)],[A.VertexAttribute.PROFILEAUXDATA,new c.Attribute(t.profileAuxData,r,3,!0)],[A.VertexAttribute.PROFILERIGHT,new c.Attribute(t.profileRightAxes,r,2,!0)],[A.VertexAttribute.PROFILEUP,new c.Attribute(t.profileUpAxes,r,2,!0)],[A.VertexAttribute.SIZEFEATUREATTRIBUTE,new c.Attribute(this._vvSize,e,1,!0)],[A.VertexAttribute.COLORFEATUREATTRIBUTE,new c.Attribute(this._vvColor,e,1,!0)],[A.VertexAttribute.OPACITYFEATUREATTRIBUTE,new c.Attribute(this._vvOpacity,e,1,!0)]]}onPathChanged(t){super.onPathChanged(t);const e=t.getMutableAttribute(A.VertexAttribute.POSITION);e&&(e.data=this.builder.positions)}},t.PathGeometryData=b,t.StaticPathGeometry=p,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));