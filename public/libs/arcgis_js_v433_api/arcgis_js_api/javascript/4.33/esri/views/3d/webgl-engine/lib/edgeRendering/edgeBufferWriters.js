// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/RandomLCG","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../support/buffer/glUtil","../Normals","./bufferLayouts"],(function(t,e,o,s,n,r,i){"use strict";class a{updateSettings(t){this.settings=t,this._edgeHashFunction=t.reducedPrecision?m:f}write(t,e,o){S.seed=this._edgeHashFunction(o);const s=S.getIntRange(0,255),n=S.getIntRange(0,this.settings.variants-1),r=S.getFloat();var i;const a=255*(.5*(i=-(1-Math.min(r/.7,1))+Math.max(0,r-.7)/(1-.7),Math.abs(i)**1.2*Math.sign(i))+.5);t.position0.setVec(e,o.position0),t.position1.setVec(e,o.position1),t.componentIndex.set(e,o.componentIndex),t.variantOffset.set(e,s),t.variantStroke.set(e,n),t.variantExtension.set(e,a)}}const c=new Float32Array(6),u=new Uint32Array(c.buffer),l=new Uint32Array(1);function f(t){return c[0]=t.position0[0],c[1]=t.position0[1],c[2]=t.position0[2],c[3]=t.position1[0],c[4]=t.position1[1],c[5]=t.position1[2],l[0]=31*(31*(31*(31*(31*(166811+u[0])+u[1])+u[2])+u[3])+u[4])+u[5],l[0]}function m(t){const e=c;e[0]=p(t.position0[0]),e[1]=p(t.position0[1]),e[2]=p(t.position0[2]),e[3]=p(t.position1[0]),e[4]=p(t.position1[1]),e[5]=p(t.position1[2]),l[0]=5381;for(let t=0;t<u.length;t++)l[0]=31*l[0]+u[t];return l[0]}const d=1e4;function p(t){return Math.round(t*d)/d}class g{constructor(){this._commonWriter=new a}updateSettings(t){this._commonWriter.updateSettings(t)}allocate(t){return i.RegularEdgeInstancesLayout.createBuffer(t)}write(t,e,s){this._commonWriter.write(t,e,s),o.add(y,s.faceNormal0,s.faceNormal1),o.normalize(y,y);const{typedBuffer:n,typedBufferStride:i}=t.normalCompressed;r.compressNormal(n,e,y[0],y[1],y[2],i)}static{this.Layout=i.RegularEdgeInstancesLayout}static{this.glLayout=n.glLayout(i.RegularEdgeInstancesLayout,1)}}class h{constructor(){this._commonWriter=new a}updateSettings(t){this._commonWriter.updateSettings(t)}allocate(t){return i.SilhouetteEdgeInstancesLayout.createBuffer(t)}write(t,e,o){this._commonWriter.write(t,e,o);{const{typedBuffer:s,typedBufferStride:n}=t.normalCompressed;r.compressNormal(s,e,o.faceNormal0[0],o.faceNormal0[1],o.faceNormal0[2],n)}{const{typedBuffer:s,typedBufferStride:n}=t.normal2Compressed;r.compressNormal(s,e,o.faceNormal1[0],o.faceNormal1[1],o.faceNormal1[2],n)}}static{this.Layout=i.SilhouetteEdgeInstancesLayout}static{this.glLayout=n.glLayout(i.SilhouetteEdgeInstancesLayout,1)}}const y=s.create(),S=new e;t.RegularEdgeBufferWriter=g,t.SilhouetteEdgeBufferWriter=h,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));