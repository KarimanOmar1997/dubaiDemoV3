// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../chunks/tslib.es6","../../../../../core/Accessor","../../../../../core/arrayUtils","../../../../../core/Evented","../../../../../core/accessorSupport/decorators/property","../../../../../core/has","../../../../../core/Logger","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/libs/gl-matrix-2/math/mat3","../../../../../core/libs/gl-matrix-2/factories/mat3f64","../../../../../core/libs/gl-matrix-2/math/mat4","../../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../../geometry/support/buffer/BufferView","../../../support/mathUtils","../../../support/buffer/InterleavedLayout","../Util","../VertexAttribute","./RenderInstanceData"],(function(t,e,i,a,s,r,o,n,l,h,c,g,u,f,d,_,m,A,T,p,L){"use strict";var V;t.StateFlags=void 0,(V=t.StateFlags||(t.StateFlags={}))[V.ALLOCATED=1]="ALLOCATED",V[V.DEFAULT_ACTIVE=2]="DEFAULT_ACTIVE",V[V.VISIBLE=4]="VISIBLE",V[V.HIGHLIGHT=8]="HIGHLIGHT",V[V.HIGHLIGHT_ACTIVE=16]="HIGHLIGHT_ACTIVE",V[V.REMOVE=32]="REMOVE",V[V.TRANSFORM_CHANGED=64]="TRANSFORM_CHANGED",V[V.ACTIVE=18]="ACTIVE";class F{constructor(t){this.localTransform=t.getField(p.VertexAttribute.LOCALTRANSFORM,_.BufferViewMat4f64),this.globalTransform=t.getField(p.VertexAttribute.GLOBALTRANSFORM,_.BufferViewMat4f64),this.modelOrigin=t.getField(p.VertexAttribute.MODELORIGIN,_.BufferViewVec3f64),this.model=t.getField(p.VertexAttribute.INSTANCEMODEL,_.BufferViewMat3f),this.modelNormal=t.getField(p.VertexAttribute.INSTANCEMODELNORMAL,_.BufferViewMat3f),this.modelScaleFactors=t.getField(p.VertexAttribute.MODELSCALEFACTORS,_.BufferViewVec2f),this.boundingSphere=t.getField(p.VertexAttribute.BOUNDINGSPHERE,_.BufferViewVec4f64),this.featureAttribute=t.getField(p.VertexAttribute.FEATUREATTRIBUTE,_.BufferViewVec4f),this.color=t.getField(p.VertexAttribute.COLOR,_.BufferViewVec4u8),this.objectAndLayerIdColor=t.getField(p.VertexAttribute.OLIDCOLOR,_.BufferViewVec4u8),this.state=t.getField(p.VertexAttribute.STATE,_.BufferViewUint8),this.lodLevel=t.getField(p.VertexAttribute.LODLEVEL,_.BufferViewUint8)}}t.InstanceData=class extends i{constructor(t,e){super(t),this.events=new s,this._capacity=0,this._size=0,this._next=0,this._highlightOptionsMap=new Map,this._highlightOptionsMapPrev=new Map,this._layout=function(t){let e=A.newLayout().mat4f64(p.VertexAttribute.LOCALTRANSFORM).mat4f64(p.VertexAttribute.GLOBALTRANSFORM).vec4f64(p.VertexAttribute.BOUNDINGSPHERE).vec3f64(p.VertexAttribute.MODELORIGIN).mat3f(p.VertexAttribute.INSTANCEMODEL).mat3f(p.VertexAttribute.INSTANCEMODELNORMAL).vec2f(p.VertexAttribute.MODELSCALEFACTORS);return t.includes(p.VertexAttribute.FEATUREATTRIBUTE)&&(e=e.vec4f(p.VertexAttribute.FEATUREATTRIBUTE)),t.includes(p.VertexAttribute.COLOR)&&(e=e.vec4u8(p.VertexAttribute.COLOR)),t.includes(p.VertexAttribute.OLIDCOLOR)&&(e=e.vec4u8(p.VertexAttribute.OLIDCOLOR)),e=e.u8(p.VertexAttribute.STATE).u8(p.VertexAttribute.LODLEVEL),e}(e),this._capacity=L.initialCapacity,this._buffer=this._layout.createBuffer(this._capacity),this._view=new F(this._buffer)}get capacity(){return this._capacity}get size(){return this._size}get view(){return this._view}addInstance(){this._size+1>this._capacity&&this._grow();const e=this._findSlot();return this._view.state.set(e,t.StateFlags.ALLOCATED),this._size++,this.events.emit("instances-changed"),e}removeInstance(e){const i=this._view.state;T.assert(e>=0&&e<this._capacity&&0!==(i.get(e)&t.StateFlags.ALLOCATED),"invalid instance handle"),this._getStateFlag(e,t.StateFlags.ACTIVE)?this._setStateFlags(e,t.StateFlags.REMOVE):this.freeInstance(e),this.events.emit("instances-changed")}freeInstance(e){const i=this._view.state;T.assert(e>=0&&e<this._capacity&&0!==(i.get(e)&t.StateFlags.ALLOCATED),"invalid instance handle"),i.set(e,0),this._size--}setLocalTransform(t,e,i=!0){this._view.localTransform.setMat(t,e),i&&this.updateModelTransform(t)}getLocalTransform(t,e){this._view.localTransform.getMat(t,e)}setGlobalTransform(t,e,i=!0){this._view.globalTransform.setMat(t,e),i&&this.updateModelTransform(t)}getGlobalTransform(t,e){this._view.globalTransform.getMat(t,e)}updateModelTransform(e){const i=this._view,a=O,s=b;i.localTransform.getMat(e,S),i.globalTransform.getMat(e,M);const r=g.multiply(M,M,S);f.set(a,r[12],r[13],r[14]),i.modelOrigin.setVec(e,a),h.fromMat4(s,r),i.model.setMat(e,s);const o=m.scaleFromMatrix(O,r);o.sort(),i.modelScaleFactors.set(e,0,o[1]),i.modelScaleFactors.set(e,1,o[2]),h.invert(s,s),h.transpose(s,s),i.modelNormal.setMat(e,s),this._setStateFlags(e,t.StateFlags.TRANSFORM_CHANGED),this.events.emit("instance-transform-changed",{index:e})}getModelTransform(t,e){const i=this._view;i.model.getMat(t,b),i.modelOrigin.getVec(t,O),e[0]=b[0],e[1]=b[1],e[2]=b[2],e[3]=0,e[4]=b[3],e[5]=b[4],e[6]=b[5],e[7]=0,e[8]=b[6],e[9]=b[7],e[10]=b[8],e[11]=0,e[12]=O[0],e[13]=O[1],e[14]=O[2],e[15]=1}applyShaderTransformation(t,e){null!=this.shaderTransformation&&this.shaderTransformation.applyTransform(this,t,e)}getCombinedModelTransform(t,e){return this.getModelTransform(t,e),null!=this.shaderTransformation&&this.shaderTransformation.applyTransform(this,t,e),e}getCombinedLocalTransform(t,e){this._view.localTransform.getMat(t,e),null!=this.shaderTransformation&&this.shaderTransformation.applyTransform(this,t,e)}getCombinedMaxScaleFactor(t){let e=this._view.modelScaleFactors.get(t,1);return null!=this.shaderTransformation&&(this.shaderTransformation.scaleFactor(O,this,t),e*=Math.max(O[0],O[1],O[2])),e}getCombinedMedianScaleFactor(t){let e=this._view.modelScaleFactors.get(t,0);var i,a,s;return null!=this.shaderTransformation&&(this.shaderTransformation.scaleFactor(O,this,t),e*=(i=O[0],a=O[1],s=O[2],Math.max(Math.min(i,a),Math.min(Math.max(i,a),s)))),e}getModel(t,e){this._view.model.getMat(t,e)}setFeatureAttribute(t,e){this._view.featureAttribute.setVec(t,e)}getFeatureAttribute(t,e){this._view.featureAttribute.getVec(t,e)}setColor(t,e){this._view.color.setVec(t,e)}setObjectAndLayerIdColor(t,e){this._view.objectAndLayerIdColor.setVec(t,e)}setVisible(e,i){i!==this.getVisible(e)&&(this._setStateFlag(e,t.StateFlags.VISIBLE,i),this.events.emit("instance-visibility-changed",{index:e}))}getVisible(e){return this._getStateFlag(e,t.StateFlags.VISIBLE)}setHighlight(e,i){const{_highlightOptionsMap:a}=this,s=a.get(e);i?i!==s&&(a.set(e,i),this._setStateFlag(e,t.StateFlags.HIGHLIGHT,!0),this.events.emit("instance-highlight-changed")):s&&(a.delete(e),this._setStateFlag(e,t.StateFlags.HIGHLIGHT,!1),this.events.emit("instance-highlight-changed"))}get highlightOptionsMap(){return this._highlightOptionsMap}getHighlightStateFlag(e){return this._getStateFlag(e,t.StateFlags.HIGHLIGHT)}geHighlightOptionsPrev(t){const e=this._highlightOptionsMapPrev.get(t)??null;return this._highlightOptionsMapPrev.delete(t),e}getHighlightName(t){const e=this.highlightOptionsMap.get(t)??null;return e?this._highlightOptionsMapPrev.set(t,e):this._highlightOptionsMapPrev.delete(t),e}getState(t){return this._view.state.get(t)}getLodLevel(t){return this._view.lodLevel.get(t)}countFlags(t){let e=0;for(let i=0;i<this._capacity;++i)this.getState(i)&t&&++e;return e}_setStateFlags(t,e){const i=this._view.state;e=i.get(t)|e,i.set(t,e)}_clearStateFlags(t,e){const i=this._view.state;e=i.get(t)&~e,i.set(t,e)}_setStateFlag(t,e,i){i?this._setStateFlags(t,e):this._clearStateFlags(t,e)}_getStateFlag(t,e){return!!(this._view.state.get(t)&e)}_grow(){this._capacity=Math.max(L.initialCapacity,Math.floor(this._capacity*a.reallocGrowthFactor)),this._buffer=this._layout.createBuffer(this._capacity).copyFrom(this._buffer),this._view=new F(this._buffer)}_findSlot(){const e=this._view.state;let i=this._next;for(;e.get(i)&t.StateFlags.ALLOCATED;)i=i+1===this._capacity?0:i+1;return this._next=i+1===this._capacity?0:i+1,i}},e.__decorate([r.property({constructOnly:!0})],t.InstanceData.prototype,"shaderTransformation",void 0),e.__decorate([r.property()],t.InstanceData.prototype,"_size",void 0),e.__decorate([r.property({readOnly:!0})],t.InstanceData.prototype,"size",null),t.InstanceData=e.__decorate([l.subclass("esri.views.3d.webgl-engine.lib.lodRendering.InstanceData")],t.InstanceData);const O=d.create(),b=c.create(),S=u.create(),M=u.create();t.InstanceDataView=F,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));