// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/mathUtils","../../../../core/libs/gl-matrix-2/math/mat3","../../../../core/libs/gl-matrix-2/factories/mat3f64","../../../../core/libs/gl-matrix-2/math/mat4","../../../../core/libs/gl-matrix-2/factories/mat4f64","../../../../core/libs/gl-matrix-2/math/vec2","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../../../chunks/vec32","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../core/libs/gl-matrix-2/types/mat4","../../../../geometry/support/aaBoundingRect","../../../../geometry/support/buffer/BufferView","../../layers/support/FastSymbolUpdates","../../support/debugFlags","../../support/buffer/InterleavedLayout","../core/shaderLibrary/ShaderOutput","../core/shaderLibrary/hud/HUD.glsl","../effects/geometry/olidUtils","../lib/GLTextureMaterial","../lib/Material","../lib/RenderSlot","../lib/screenSizePerspectiveUtils","../lib/Util","../lib/VertexAttribute","./ScaleInfo","./internal/bufferWriterUtils","./internal/MaterialUtil","../../../../chunks/HUDMaterial.glsl","../shaders/HUDMaterialTechnique","../shaders/HUDMaterialTechniqueConfiguration","../../../../webscene/support/AlphaCutoff"],(function(e,t,r,i,a,s,n,o,l,c,u,f,h,d,p,g,m,b,A,O,S,x,T,V,v,E,R,I,F,y,P,C,M){"use strict";class D extends x.Material{constructor(e,t){super(e,ie),this.produces=new Map([[T.RenderSlot.HUD_MATERIAL,e=>b.isColorEmissionHighlightOrOID(e)&&!this.parameters.drawAsLabel],[T.RenderSlot.LABEL_MATERIAL,e=>b.isColorEmissionHighlightOrOID(e)&&this.parameters.drawAsLabel],[T.RenderSlot.OCCLUSION_PIXELS,()=>this.parameters.occlusionTest],[T.RenderSlot.DRAPED_MATERIAL,e=>this.parameters.draped&&b.isColorEmissionHighlightOrOID(e)]]),this._visible=!0,this._configuration=new C.HUDMaterialTechniqueConfiguration(t)}getConfiguration(e,t){const r=this.parameters.draped;return super.getConfiguration(e,t,this._configuration),this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasVerticalOffset=!!this.parameters.verticalOffset,this._configuration.hasScreenSizePerspective=!!this.parameters.screenSizePerspective,this._configuration.screenCenterOffsetUnitsEnabled="screen"===this.parameters.centerOffsetUnits,this._configuration.hasPolygonOffset=this.parameters.polygonOffset,this._configuration.draped=r,this._configuration.occlusionTestEnabled=this.parameters.occlusionTest,this._configuration.pixelSnappingEnabled=this.parameters.pixelSnappingEnabled,this._configuration.signedDistanceFieldEnabled=this.parameters.textureIsSignedDistanceField,this._configuration.sampleSignedDistanceFieldTexelCenter=this.parameters.sampleSignedDistanceFieldTexelCenter,this._configuration.hasRotation=this.parameters.hasRotation,this._configuration.vvSize=!!this.parameters.vvSize,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration.occlusionPass=t.slot===T.RenderSlot.OCCLUSION_PIXELS,this._configuration.occludedFragmentFade=!r&&this.parameters.occludedFragmentFade,this._configuration.horizonCullingEnabled=this.parameters.horizonCullingEnabled,this._configuration.isFocused=this.parameters.isFocused,this._configuration.depthTestEnabled=this.parameters.depthEnabled||t.slot===T.RenderSlot.OCCLUSION_PIXELS,b.isColorOrColorEmission(e)&&(this._configuration.debugDrawLabelBorder=!!g.debugFlags.LABELS_SHOW_BORDER),this._configuration.oitPass=t.oitPass,this._configuration.terrainDepthTest=t.terrainDepthTest,this._configuration.cullAboveTerrain=t.cullAboveTerrain,this._configuration}intersect(e,t,i,s,n,o){const{options:{selectionMode:f,hud:h,excludeLabels:d},point:p,camera:g}=i,{parameters:m}=this;if(!f||!h||d&&m.isLabel||!e.visible||!p||!g)return;const b=e.attributes.get(E.VertexAttribute.FEATUREATTRIBUTE),A=null==b?null:u.fromArray(b.data,K),{scaleX:O,scaleY:S}=oe(A,m,g.pixelRatio);r.fromMat4(j,t),e.attributes.has(E.VertexAttribute.FEATUREATTRIBUTE)&&function(e){const t=e[0],r=e[1],i=e[2],a=e[3],s=e[4],n=e[5],o=e[6],l=e[7],c=e[8],u=1/Math.sqrt(t*t+r*r+i*i),f=1/Math.sqrt(a*a+s*s+n*n),h=1/Math.sqrt(o*o+l*l+c*c);e[0]=t*u,e[1]=r*u,e[2]=i*u,e[3]=a*f,e[4]=s*f,e[5]=n*f,e[6]=o*h,e[7]=l*h,e[8]=c*h}(j);const x=e.attributes.get(E.VertexAttribute.POSITION),T=e.attributes.get(E.VertexAttribute.SIZE),R=e.attributes.get(E.VertexAttribute.NORMAL),I=e.attributes.get(E.VertexAttribute.ROTATION),F=e.attributes.get(E.VertexAttribute.CENTEROFFSETANDDISTANCE);v.assert(x.size>=3);const P=y.calculateAnchorPosition(m),C="screen"===this.parameters.centerOffsetUnits;for(let e=0;e<x.data.length/x.size;e++){const r=e*x.size;l.set(z,x.data[r],x.data[r+1],x.data[r+2]),l.transformMat4(z,z,t),l.transformMat4(z,z,g.viewMatrix);const s=e*F.size;if(l.set(k,F.data[s],F.data[s+1],F.data[s+2]),!C&&(z[0]+=k[0],z[1]+=k[1],0!==k[2])){const e=k[2];l.normalize(k,z),l.subtract(z,z,l.scale(k,k,e))}const n=e*R.size;if(l.set(N,R.data[n],R.data[n+1],R.data[n+2]),w(N,j,g,Q),le(this.parameters,z,Q,g,L),g.applyProjection(z,B),B[0]>-1){C&&(k[0]||k[1])&&(B[0]+=k[0]*g.pixelRatio,0!==k[1]&&(B[1]+=V.applyScaleFactor(k[1],L.factorAlignment)*g.pixelRatio),g.unapplyProjection(B,z)),B[0]+=this.parameters.screenOffset[0]*g.pixelRatio,B[1]+=this.parameters.screenOffset[1]*g.pixelRatio,B[0]=Math.floor(B[0]),B[1]=Math.floor(B[1]);const t=e*T.size;te[0]=T.data[t],te[1]=T.data[t+1],V.applyPrecomputedScaleFactor(te,L.factor,te);const r=$*g.pixelRatio;let s=0;m.textureIsSignedDistanceField&&(s=Math.min(m.outlineSize,.5*te[0])*g.pixelRatio/2),te[0]*=O,te[1]*=S;const n=e*I.size,u=m.rotation+I.data[n];if(U(p,B[0],B[1],te,r,s,u,m,P)){const e=i.ray;if(l.transformMat4(q,z,a.invert(Z,g.viewMatrix)),B[0]=p[0],B[1]=p[1],g.unprojectFromRenderScreen(B,z)){const t=c.create();l.copy(t,e.direction);const r=1/l.length(t);l.scale(t,t,r),o(l.distance(e.origin,z)*r,t,-1,q)}}}}}intersectDraped(e,t,r,i,a){const s=e.attributes.get(E.VertexAttribute.POSITION),n=e.attributes.get(E.VertexAttribute.SIZE),o=e.attributes.get(E.VertexAttribute.ROTATION),l=this.parameters,c=y.calculateAnchorPosition(l),f=e.attributes.get(E.VertexAttribute.FEATUREATTRIBUTE),h=null==f?null:u.fromArray(f.data,K),{scaleX:d,scaleY:p}=oe(h,l,e.screenToWorldRatio),g=ee*e.screenToWorldRatio;for(let t=0;t<s.data.length/s.size;t++){const u=t*s.size,f=s.data[u],h=s.data[u+1],m=t*n.size;te[0]=n.data[m],te[1]=n.data[m+1];let b=0;l.textureIsSignedDistanceField&&(b=Math.min(l.outlineSize,.5*te[0])*e.screenToWorldRatio/2),te[0]*=d,te[1]*=p;const A=t*o.size,O=l.rotation+o.data[A];U(r,f,h,te,g,b,O,l,c)&&i(a.distance,a.normal,-1)}}createBufferWriter(){return new ne}applyShaderOffsetsView(e,t,r,i,a,s,n){const o=w(t,r,a,Q);return this._applyVerticalGroundOffsetView(e,o,a,n),le(this.parameters,n,o,a,s),this._applyPolygonOffsetView(n,o,i[3],a,n),this._applyCenterOffsetView(n,i,n),n}applyShaderOffsetsNDC(e,t,r,i,a){return this._applyCenterOffsetNDC(e,t,r,i),null!=a&&l.copy(a,i),this._applyPolygonOffsetNDC(i,t,r,i),i}_applyPolygonOffsetView(e,r,i,a,s){const n=a.aboveGround?1:-1;let o=Math.sign(i);0===o&&(o=n);const c=n*o;if(this.parameters.shaderPolygonOffset<=0)return l.copy(s,e);const u=t.clamp(Math.abs(r.cosAngle),.01,1),f=1-Math.sqrt(1-u*u)/u/a.viewport[2];return c>0?l.scale(s,e,f):l.scale(s,e,1/f),s}_applyVerticalGroundOffsetView(e,t,r,i){const a=l.length(e),s=r.aboveGround?1:-1,n=r.computeRenderPixelSizeAtDist(a)*A.HUDVerticalPixelOffset,o=l.scale(z,t.normal,s*n);return l.add(i,e,o),i}_applyCenterOffsetView(e,t,r){const i="screen"!==this.parameters.centerOffsetUnits;return r!==e&&l.copy(r,e),i&&(r[0]+=t[0],r[1]+=t[1],t[2]&&(l.normalize(N,r),l.sub(r,r,l.scale(N,N,t[2])))),r}_applyCenterOffsetNDC(e,t,r,i){const a="screen"!==this.parameters.centerOffsetUnits;return i!==e&&l.copy(i,e),a||(i[0]+=t[0]/r.fullWidth*2,i[1]+=t[1]/r.fullHeight*2),i}_applyPolygonOffsetNDC(e,t,r,i){const a=this.parameters.shaderPolygonOffset;if(e!==i&&l.copy(i,e),a){const e=r.aboveGround?1:-1,s=e*Math.sign(t[3]);i[2]-=(s||e)*a}return i}set visible(e){this._visible=e}get visible(){const{color:e,outlineSize:t,outlineColor:r}=this.parameters,i=e[3]>=M.alphaCutoff||t>=M.alphaCutoff&&r[3]>=M.alphaCutoff;return this._visible&&i}createGLMaterial(e){return new _(e)}calculateRelativeScreenBounds(e,t,r=h.create()){return function(e,t,r,i){i[0]=e.anchorPosition[0]*-t[0]+e.screenOffset[0]*r,i[1]=e.anchorPosition[1]*-t[1]+e.screenOffset[1]*r}(this.parameters,e,t,r),r[2]=r[0]+e[0],r[3]=r[1]+e[1],r}}class _ extends S.GLTextureMaterial{constructor(e){super({...e,...e.material.parameters})}beginSlot(e){return this.updateTexture(this._material.parameters.textureId),this._material.setParameters(this.textureBindParameters),this.getTechnique(P.HUDMaterialTechnique,e)}}function w(e,t,i,a){return f.isMat4(t)&&(t=r.fromMat4(W,t)),l.transformMat3(a.normal,e,t),l.transformMat4(a.normal,a.normal,i.viewInverseTransposeMatrix),a.cosAngle=l.dot(H,re),a}function U(e,r,i,a,s,o,l,c,u){let f=r-s-a[0]*u[0],h=f+a[0]+2*s,d=i-s-a[1]*u[1],p=d+a[1]+2*s;const g=c.distanceFieldBoundingBox;return c.textureIsSignedDistanceField&&null!=g&&(f+=a[0]*g[0],d+=a[1]*g[1],h-=a[0]*(1-g[2]),p-=a[1]*(1-g[3]),f-=o,h+=o,d-=o,p+=o),n.set(X,r,i),n.rotate(G,e,X,t.deg2rad(l)),G[0]>f&&G[0]<h&&G[1]>d&&G[1]<p}const L=new R.ScaleInfo,z=c.create(),N=c.create(),B=u.create(),H=c.create(),q=c.create(),G=o.create(),X=o.create(),j=i.create(),W=i.create(),Z=s.create(),Y=u.create(),k=c.create(),J=c.create(),K=u.create(),Q={normal:H,cosAngle:0},$=1,ee=2,te=o.fromValues(0,0),re=c.fromValues(0,0,1);class ie extends S.GLTextureMaterialBindParameters{constructor(){super(...arguments),this.renderOccluded=x.RenderOccludedFlag.Occlude,this.isDecoration=!1,this.color=u.freeze(1,1,1,1),this.polygonOffset=!1,this.anchorPosition=o.fromValues(.5,.5),this.screenOffset=[0,0],this.shaderPolygonOffset=1e-5,this.textureIsSignedDistanceField=!1,this.sampleSignedDistanceFieldTexelCenter=!1,this.outlineColor=u.freeze(1,1,1,1),this.outlineSize=0,this.distanceFieldBoundingBox=u.create(),this.rotation=0,this.hasRotation=!1,this.vvSizeEnabled=!1,this.vvSize=null,this.vvColor=null,this.vvOpacity=null,this.vvSymbolAnchor=null,this.vvSymbolRotationMatrix=null,this.hasSlicePlane=!1,this.pixelSnappingEnabled=!0,this.occlusionTest=!0,this.occludedFragmentFade=!1,this.horizonCullingEnabled=!1,this.centerOffsetUnits="world",this.drawAsLabel=!1,this.depthEnabled=!0,this.isFocused=!0,this.focusStyle="bright",this.draped=!1,this.isLabel=!1}}const ae=m.newLayout().vec3f(E.VertexAttribute.POSITION).vec3f(E.VertexAttribute.NORMAL).vec2i16(E.VertexAttribute.UVI).vec4u8(E.VertexAttribute.COLOR).vec2f(E.VertexAttribute.SIZE).f32(E.VertexAttribute.ROTATION).vec4f(E.VertexAttribute.CENTEROFFSETANDDISTANCE).vec4f(E.VertexAttribute.FEATUREATTRIBUTE),se=ae.clone().vec4u8(E.VertexAttribute.OLIDCOLOR);class ne{constructor(){this.vertexBufferLayout=O.olidEnabled()?se:ae}elementCount(e){return 6*e.get(E.VertexAttribute.POSITION).indices.length}write(e,t,r,i,a,s){const{position:n,normal:o,uvi:l,color:c,size:u,rotation:f,centerOffsetAndDistance:h,featureAttribute:p}=a;I.writePosition(r.get(E.VertexAttribute.POSITION),e,n,s,6),I.writeNormal(r.get(E.VertexAttribute.NORMAL),t,o,s,6);const g=r.get(E.VertexAttribute.UVI)?.data;let m=0,b=0,A=-1-y.fullUV,O=-1-y.fullUV;g&&g.length>=4&&(m=g[0],b=g[1],A=-1-g[2],O=-1-g[3]);let S=r.get(E.VertexAttribute.POSITION).indices.length,x=s;for(let e=0;e<S;++e)l.set(x,0,m),l.set(x,1,b),x++,l.set(x,0,A),l.set(x,1,b),x++,l.set(x,0,A),l.set(x,1,O),x++,l.set(x,0,A),l.set(x,1,O),x++,l.set(x,0,m),l.set(x,1,O),x++,l.set(x,0,m),l.set(x,1,b),x++;I.writeColor(r.get(E.VertexAttribute.COLOR),4,c,s,6);const{data:T,indices:V}=r.get(E.VertexAttribute.SIZE);S=V.length,x=s;for(let e=0;e<S;++e){const t=T[2*V[e]],r=T[2*V[e]+1];for(let e=0;e<6;++e)u.set(x,0,t),u.set(x,1,r),x++}if(I.writeBufferFloat(r.get(E.VertexAttribute.ROTATION),f,s,6),r.get(E.VertexAttribute.CENTEROFFSETANDDISTANCE)?I.writeBufferVec4(r.get(E.VertexAttribute.CENTEROFFSETANDDISTANCE),h,s,6):I.writeBufferVec4Zeros(h,s,6*S),r.get(E.VertexAttribute.FEATUREATTRIBUTE)?I.writeBufferVec4(r.get(E.VertexAttribute.FEATUREATTRIBUTE),p,s,6):I.writeBufferVec4Zeros(p,s,6*S),null!=i){const e=r.get(E.VertexAttribute.POSITION)?.indices;if(e){const t=e.length,r=a.getField(E.VertexAttribute.OLIDCOLOR,d.BufferViewVec4u8);I.writeOlidColor(i,r,t,s,6)}}return{numVerticesPerItem:6,numItems:S}}intersect(e,t,r,i,s,n,o){const{options:{selectionMode:u,hud:f,excludeLabels:h},point:p,camera:g}=i;if(!u||!f||h&&t.isLabel||!p)return;const m=this.vertexBufferLayout.createView(e),b=m.getField(E.VertexAttribute.POSITION,d.BufferViewVec3f),A=m.getField(E.VertexAttribute.NORMAL,d.BufferViewVec3f),O=m.getField(E.VertexAttribute.ROTATION,d.BufferViewFloat),S=m.getField(E.VertexAttribute.SIZE,d.BufferViewVec2f),x=m.getField(E.VertexAttribute.FEATUREATTRIBUTE,d.BufferViewVec4f),T=m.getField(E.VertexAttribute.CENTEROFFSETANDDISTANCE,d.BufferViewVec4f),v="screen"===t.centerOffsetUnits,R=y.calculateAnchorPosition(t);if(null==b||null==A||null==O||null==S||null==T||null==g)return;const I=null==x?null:x.getVec(0,K),{scaleX:F,scaleY:P}=oe(I,t,g.pixelRatio),C=b.count/6;for(let e=0;e<C;e++){const s=6*e;if(b.getVec(s,z),null!=r&&l.add(z,z,r),l.transformMat4(z,z,g.viewMatrix),T.getVec(s,Y),l.set(k,Y[0],Y[1],Y[2]),!v&&(z[0]+=k[0],z[1]+=k[1],0!==k[2])){const e=k[2];l.normalize(k,z),l.subtract(z,z,l.scale(k,k,e))}if(A.getVec(s,N),w(N,j,g,Q),le(t,z,Q,g,L),g.applyProjection(z,B),B[0]>-1){v&&(k[0]||k[1])&&(B[0]+=k[0]*g.pixelRatio,0!==k[1]&&(B[1]+=V.applyScaleFactor(k[1],L.factorAlignment)*g.pixelRatio),g.unapplyProjection(B,z)),B[0]+=t.screenOffset[0]*g.pixelRatio,B[1]+=t.screenOffset[1]*g.pixelRatio,B[0]=Math.floor(B[0]),B[1]=Math.floor(B[1]),S.getVec(s,te),V.applyPrecomputedScaleFactor(te,L.factor,te);const r=$*g.pixelRatio;let n=0;t.textureIsSignedDistanceField&&(n=Math.min(t.outlineSize,.5*te[0])*g.pixelRatio/2),te[0]*=F,te[1]*=P;const u=O.get(s),f=t.rotation+u;if(U(p,B[0],B[1],te,r,n,f,t,R)){const t=i.ray;if(l.transformMat4(q,z,a.invert(Z,g.viewMatrix)),B[0]=p[0],B[1]=p[1],g.unprojectFromRenderScreen(B,z)){const r=c.create();l.copy(r,t.direction);const i=1/l.length(r);l.scale(r,r,i),o(l.distance(t.origin,z)*i,r,e,q)}}}}}}function oe(e,t,r){return null==e||null==t.vvSize?{scaleX:r,scaleY:r}:(p.evaluateModelTransformScale(J,t,e),{scaleX:J[0]*r,scaleY:J[1]*r})}function le(e,t,r,i,a){if(!e.verticalOffset?.screenLength)return e.screenSizePerspective||e.screenSizePerspectiveAlignment?ce(e,a,l.length(t),r.cosAngle):(a.factor.scale=1,a.factorAlignment.scale=1),t;const s=l.length(t),n=e.screenSizePerspectiveAlignment??e.screenSizePerspective,o=F.verticalOffsetAtDistance(i,s,e.verticalOffset,r.cosAngle,n);return ce(e,a,s,r.cosAngle),l.scale(r.normal,r.normal,o),l.add(t,t,r.normal)}function ce(e,t,r,i){null!=e.screenSizePerspective?V.precomputeScaleFactor(i,r,e.screenSizePerspective,t.factor):(t.factor.scale=1,t.factor.factor=0,t.factor.minScaleFactor=0),null!=e.screenSizePerspectiveAlignment?V.precomputeScaleFactor(i,r,e.screenSizePerspectiveAlignment,t.factorAlignment):(t.factorAlignment.factor=t.factor.factor,t.factorAlignment.scale=t.factor.scale,t.factorAlignment.minScaleFactor=t.factor.minScaleFactor)}e.HUDMaterial=D,e.Parameters=ie,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));