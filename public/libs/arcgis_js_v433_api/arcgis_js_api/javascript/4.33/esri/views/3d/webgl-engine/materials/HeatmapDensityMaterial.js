// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/libs/gl-matrix-2/math/vec2","../../../../core/libs/gl-matrix-2/factories/vec2f64","../../support/buffer/InterleavedLayout","../core/shaderLibrary/ShaderOutput","../lib/GLMaterial","../lib/Material","../lib/RenderSlot","../lib/VertexAttribute","./internal/bufferWriterUtils","../shaders/HeatmapDensityTechnique","../shaders/HeatmapDensityTechniqueConfiguration"],(function(e,t,r,i,s,a,n,u,o,l,c,f){"use strict";class b extends c.HeatmapDensityPassParameters{constructor(){super(...arguments),this.isAttributeDriven=!1,this.usesHalfFloats=!1}}class h extends n.Material{constructor(e){super(e,b),this.produces=new Map([[u.RenderSlot.DRAPED_MATERIAL,e=>e===s.ShaderOutput.Color]]),this._configuration=new f.HeatmapDensityTechniqueConfiguration}getConfiguration(e,t){return super.getConfiguration(e,t,this._configuration),this._configuration.isAttributeDriven=this.parameters.isAttributeDriven,this._configuration.usesHalfFloat=this.parameters.usesHalfFloats,this._configuration}get visible(){return!0}createGLMaterial(e){return new g(e)}intersect(){}intersectDraped(e,r,i,s,a){const n=e.attributes.get(o.VertexAttribute.POSITION),{parameters:u}=this,{searchRadius:l}=u,{screenToWorldRatio:c}=e,f=l*c+2*c,b=f*f,h=n.data.length/n.size;for(let e=0;e<h;e++){const r=e*n.size,u=t.set(m,n.data[r],n.data[r+1]);t.squaredDistance(u,i)<b&&s(a.distance,a.normal,-1)}}createBufferWriter(){return new d(this.parameters.isAttributeDriven?A:T)}}class g extends a{beginSlot(e){return this.getTechnique(c.HeatmapDensityTechnique,e)}}class d{constructor(e){this.vertexBufferLayout=e}elementCount(e){return e.get(o.VertexAttribute.POSITION).indices.length*p}write(e,t,r,i,s,a){l.writePosition(r.get(o.VertexAttribute.POSITION),e,s.position,a,p);const n=r.get(o.VertexAttribute.POSITION).indices.length,u=s.uv0;let c=a;for(let e=0;e<n;++e)u.setValues(c++,-1,-1),u.setValues(c++,1,-1),u.setValues(c++,1,1),u.setValues(c++,1,1),u.setValues(c++,-1,1),u.setValues(c++,-1,-1);const f=o.VertexAttribute.FEATUREATTRIBUTE in s?s.featureAttribute:null;return f?(l.writeBufferFloat(r.get(o.VertexAttribute.FEATUREATTRIBUTE),f,a,p),null):null}}const T=i.newLayout().vec3f(o.VertexAttribute.POSITION).vec2f16(o.VertexAttribute.UV0),A=T.clone().f32(o.VertexAttribute.FEATUREATTRIBUTE),p=6,m=r.create();e.HeatmapDensityMaterial=h,e.Parameters=b,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));