// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../geometry/support/buffer/BufferView","../core/shaderLibrary/ShaderOutput","../lib/basicInterfaces","../lib/GLMaterial","../lib/ITexture","../lib/Material","../lib/OrderIndependentTransparency","../lib/RenderSlot","../lib/Util","../lib/VertexAttribute","./DefaultBufferWriter","./DefaultLayouts","./TriangleMaterial","./internal/bufferWriterUtils","../shaders/ImageMaterialTechnique","../shaders/ImageMaterialTechniqueConfiguration"],(function(e,t,r,i,a,s,n,o,l,u,c,h,p,f,g,d,T){"use strict";class m extends f.TriangleMaterial{constructor(e){super(e,x),this.vertexAttributeLocations=d.vertexAttributeLocations,this.supportsEdges=!0,this.produces=new Map([[l.RenderSlot.OPAQUE_MATERIAL,e=>r.isHighlightOrOID(e)],[l.RenderSlot.TRANSPARENT_MATERIAL,e=>r.isColor(e)&&this.parameters.writeDepth],[l.RenderSlot.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,e=>r.isColor(e)&&!this.parameters.writeDepth],[l.RenderSlot.DRAPED_MATERIAL,e=>r.isColor(e)||r.isHighlightOrOID(e)]]),this._configuration=new T.ImageMaterialTechniqueConfiguration(e.draped)}dispose(){this.setParameters({texture:void 0})}getConfiguration(e,t){return super.getConfiguration(e,t,this._configuration),this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasOccludees=t.hasOccludees,this._configuration.oitPass=t.oitPass,this._configuration.enableOffset=t.camera.relativeElevation<o.OITPolygonOffsetLimit,this._configuration.terrainDepthTest=t.terrainDepthTest,this._configuration.cullAboveTerrain=t.cullAboveTerrain,this._configuration.perspectiveInterpolation=this.parameters.perspectiveInterpolation,this._configuration}get visible(){return!0}createGLMaterial(e){return new b(e)}createBufferWriter(){let e=p.PositionUvLayout;return this.parameters.perspectiveInterpolation&&(e=e.clone().f32(c.VertexAttribute.PERSPECTIVEDIVIDE)),new I(e)}}class b extends a{constructor(e){super({...e,...e.material.parameters}),this.parameters=e;const t=this._material.parameters.texture;s.isUpdatableTexture(t)&&e.textures.updater.add(t)}dispose(){this.parameters.textures.updater.remove(this._material.parameters.texture)}beginSlot(e){return this.getTechnique(d.ImageMaterialTechnique,e)}}class I extends h.DefaultBufferWriter{write(e,r,i,a,s,n){for(const a of this.vertexBufferLayout.fields.keys()){const o=i.get(a);if(o)if(a===c.VertexAttribute.PERSPECTIVEDIVIDE){u.assert(1===o.size);const e=s.getField(a,t.BufferViewFloat);e&&g.writeBufferFloat(o,e,n)}else g.writeDefaultAttribute(a,o,e,r,s,n)}return null}}class x extends n.MaterialParameters{constructor(e,t){super(),this.texture=e,this.draped=t,this.writeDepth=!0,this.hasSlicePlane=!1,this.cullFace=i.CullFaceOptions.None,this.opacity=1,this.perspectiveInterpolation=!1}get glTexture(){return this.texture.glTexture}}e.ImageMaterial=m,e.Parameters=x,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));