// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/string","../../../../core/libs/gl-matrix-2/factories/vec2f32","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../support/buffer/InterleavedLayout","../core/shaderLibrary/ShaderOutput","../lib/GLMaterial","../lib/Material","../lib/RenderSlot","../lib/VertexAttribute","./internal/bufferWriterUtils","../shaders/LineCalloutTechnique","../shaders/LineCalloutTechniqueConfiguration","../../../../webscene/support/AlphaCutoff"],(function(e,t,r,i,s,n,a,o,l,u,c,f,h,d){"use strict";class g extends o.Material{constructor(e,t){super(e,m),this.intersectDraped=void 0,this.produces=new Map([[l.RenderSlot.LINE_CALLOUTS,e=>n.isColorOrColorEmission(e)],[l.RenderSlot.LINE_CALLOUTS_HUD_DEPTH,e=>n.isColorOrColorEmission(e)]]),this._configuration=new h.LineCalloutTechniqueConfiguration(t),this._uniqueMaterialIdentifier=p(this.parameters)}passParameters(){return this.parameters}getConfiguration(e,t){return super.getConfiguration(e,t,this._configuration),this._configuration.occlusionTestEnabled=this.parameters.occlusionTest,this._configuration.hasVerticalOffset=null!=this.parameters.verticalOffset,this._configuration.hasScreenSizePerspective=null!=this.parameters.screenSizePerspective,this._configuration.hudDepth=t.slot===l.RenderSlot.LINE_CALLOUTS_HUD_DEPTH,this._configuration.hudDepthAlignStart=!!this.parameters.hudDepthAlignStart,this._configuration.screenCenterOffsetUnitsEnabled="screen"===this.parameters.centerOffsetUnits,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.terrainDepthTest=t.terrainDepthTest,this._configuration}get visible(){return this.parameters.color[3]>=d.alphaCutoff||(this.parameters.borderColor?.[3]??0)>=d.alphaCutoff}intersect(){}createGLMaterial(e){return new S(e)}createBufferWriter(){return new C}validateParameters(e){this._uniqueMaterialIdentifier=p(e)}get uniqueMaterialIdentifier(){return this._uniqueMaterialIdentifier}}function p({renderOccluded:e,isDecoration:r,horizontalScreenOffset:i,color:s,size:n,occlusionTest:a,shaderPolygonOffset:o,hudDepthAlignStart:l,centerOffsetUnits:u,hasSlicePlane:c,screenSizePerspective:f,verticalOffset:h,borderColor:d}){return t.safeToString`${e}:${r}:${i}:[${s}]:${n}:${a}:${o}:${l}:${u}:${c}:${null!=f}:{${h.screenLength}:${h.minWorldLength}:${h.maxWorldLength}}:[${d}]`}class S extends a{beginSlot(e){return this.getTechnique(f.LineCalloutTechnique,e)}}class m extends o.MaterialParameters{constructor(){super(...arguments),this.horizontalScreenOffset=0,this.color=i.fromValues(0,0,0,1),this.size=1,this.occlusionTest=!1,this.shaderPolygonOffset=1e-5,this.hudDepthAlignStart=!1,this.centerOffsetUnits="world",this.hasSlicePlane=!1}}const O=s.newLayout().vec3f(u.VertexAttribute.POSITION).vec3f(u.VertexAttribute.NORMAL).vec2f16(u.VertexAttribute.UV0).vec4f(u.VertexAttribute.CENTEROFFSETANDDISTANCE),b=[r.fromValues(0,0),r.fromValues(1,0),r.fromValues(0,1),r.fromValues(1,0),r.fromValues(1,1),r.fromValues(0,1)];class C{constructor(){this.vertexBufferLayout=O}elementCount(e){return 6*e.get(u.VertexAttribute.POSITION).indices.length}write(e,t,r,i,s,n){c.writePosition(r.get(u.VertexAttribute.POSITION),e,s.position,n,6),c.writeNormal(r.get(u.VertexAttribute.NORMAL),t,s.normal,n,6),c.writeBufferVec4(r.get(u.VertexAttribute.CENTEROFFSETANDDISTANCE),s.centerOffsetAndDistance,n,6);for(let e=0;e<b.length;++e)s.uv0.setVec(n+e,b[e]);return null}}e.LineCalloutMaterial=g,e.Parameters=m,e.uniqueMaterialIdentifier=p,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));