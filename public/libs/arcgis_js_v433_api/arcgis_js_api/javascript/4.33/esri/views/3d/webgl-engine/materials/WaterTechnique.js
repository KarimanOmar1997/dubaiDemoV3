// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["require","exports","../core/shaderLibrary/ShaderOutput","../core/shaderLibrary/shading/WaterDistortion.glsl","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/OrderIndependentTransparency","../../../../chunks/WaterSurface.glsl","../../../webgl/renderState"],(function(e,r,t,a,n,s,i,d,l){"use strict";class o extends a.WaterDistortionPassParameters{}class u extends s.ShaderTechnique{constructor(r,t){super(r,t,new n.ReloadableShaderModule(d.WaterSurface,(()=>new Promise(((r,t)=>e(["../shaders/WaterSurface.glsl"],r,t))))))}initializePipeline(e){const{oitPass:r,output:a,transparent:n,draped:s}=e;return l.makePipelineState({blending:a!==t.ShaderOutput.Normal&&a!==t.ShaderOutput.Highlight&&a!==t.ShaderOutput.ObjectAndLayerIdColor&&n?i.blending(r):null,depthTest:s?null:{func:i.oitDepthTest(r)},depthWrite:i.depthWrite(e),drawBuffers:i.getDrawBuffers(r,a),colorWrite:l.defaultColorWrite,polygonOffset:i.oitPolygonOffset(e)})}}r.WaterMaterialPassParameters=o,r.WaterTechnique=u,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})}));