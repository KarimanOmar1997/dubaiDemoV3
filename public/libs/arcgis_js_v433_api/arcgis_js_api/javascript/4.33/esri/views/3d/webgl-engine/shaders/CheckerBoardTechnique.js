// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["require","exports","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/OITPass","../lib/OrderIndependentTransparency","../../../../chunks/CheckerBoard.glsl","../../../webgl/renderState"],(function(e,r,t,n,a,o,s,i){"use strict";class l extends n.ShaderTechnique{constructor(r,n){super(r,n,new t.ReloadableShaderModule(s.CheckerBoard,(()=>new Promise(((r,t)=>e(["./CheckerBoard.glsl"],r,t))))))}initializePipeline(e){const{oitPass:r,transparent:t,polygonOffset:n,output:s}=e,l=r===a.OITPass.NONE,c=r===a.OITPass.FrontFace;return i.makePipelineState({blending:t?o.blending(r):null,depthTest:{func:o.oitDepthTest(r)},depthWrite:o.depthWrite(e),drawBuffers:o.getDrawBuffers(r,s),colorWrite:i.defaultColorWrite,polygonOffset:l||c?n?d:null:{factor:-1,units:-25}})}}const d={factor:0,units:-25};r.CheckerBoardTechnique=l,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})}));