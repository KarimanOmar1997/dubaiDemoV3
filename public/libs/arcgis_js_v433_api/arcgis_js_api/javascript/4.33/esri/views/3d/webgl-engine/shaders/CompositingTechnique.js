// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../../core/compilerUtils","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../../../../chunks/Compositing.glsl","./CompositingTechniqueConfiguration","../../../webgl/renderState"],(function(e,i,l,t,o,r,n,a){"use strict";class d extends o.ShaderTechnique{constructor(i,l){super(i,l,new t.ReloadableShaderModule(r.Compositing,(()=>new Promise(((i,l)=>e(["./Compositing.glsl"],i,l))))))}initializePipeline(e){switch(e.blitMode){case n.BlitMode.None:case n.BlitMode.Depth:return a.makePipelineState({colorWrite:a.defaultColorWrite});case n.BlitMode.Alpha:return a.makePipelineState({blending:a.unpremultipliedAlphaToPremultipliedAlpha,colorWrite:a.defaultColorWrite});default:l.neverReached(e.blitMode);case n.BlitMode.PremultipliedAlpha:case n.BlitMode.COUNT:return a.makePipelineState({blending:a.premultipliedAlpha,colorWrite:a.defaultColorWrite})}}}i.CompositingTechnique=d,Object.defineProperty(i,Symbol.toStringTag,{value:"Module"})}));