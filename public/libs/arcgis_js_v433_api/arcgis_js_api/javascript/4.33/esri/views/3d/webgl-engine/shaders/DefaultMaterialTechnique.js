// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../../core/libs/gl-matrix-2/factories/vec3f64","../../../../core/libs/gl-matrix-2/factories/vec4f64","../../../../symbols/support/materialUtils","../core/shaderLibrary/ShaderOutput","../core/shaderLibrary/attributes/NormalAttribute.glsl","../core/shaderLibrary/attributes/VertexNormal.glsl","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/basicInterfaces","../lib/Material","../lib/OrderIndependentTransparency","../lib/StencilUtils","../materials/pbrUtils","../../../../chunks/DefaultMaterial.glsl","../../../webgl/enums","../../../webgl/renderState","../../../../webscene/support/AlphaCutoff"],(function(e,t,i,s,r,l,a,o,n,c,u,h,d,p,m,f,b,S,P){"use strict";class g extends o.VertexNormalPassParameters{constructor(){super(...arguments),this.isSchematic=!1,this.usePBR=!1,this.mrrFactors=m.advancedMRRFactors,this.hasVertexColors=!1,this.hasSymbolColors=!1,this.doubleSided=!1,this.doubleSidedType="normal",this.cullFace=u.CullFaceOptions.Back,this.isInstanced=!1,this.hasInstancedColor=!1,this.emissiveStrength=0,this.emissiveSource=r.EmissiveSourceMode.Color,this.emissiveBaseColor=i.ZEROS,this.instancedDoublePrecision=!1,this.normalType=a.NormalType.Attribute,this.receiveShadows=!0,this.receiveAmbientOcclusion=!0,this.castShadows=!0,this.ambient=i.freeze(.2,.2,.2),this.diffuse=i.freeze(.8,.8,.8),this.externalColor=s.fromValues(1,1,1,1),this.colorMixMode="multiply",this.opacity=1,this.layerOpacity=1,this.origin=i.create(),this.hasSlicePlane=!1,this.offsetTransparentBackfaces=!1,this.vvSize=null,this.vvColor=null,this.vvOpacity=null,this.vvSymbolAnchor=null,this.vvSymbolRotationMatrix=null,this.modelTransformation=null,this.drivenOpacity=!1,this.writeDepth=!0,this.customDepthTest=u.DepthTestFunction.Less,this.textureAlphaMode=u.AlphaDiscardMode.Blend,this.textureAlphaCutoff=P.alphaCutoff,this.textureAlphaPremultiplied=!1,this.renderOccluded=h.RenderOccludedFlag.Occlude,this.isDecoration=!1}}class y extends o.VertexNormalDrawParameters{constructor(){super(...arguments),this.origin=i.create(),this.slicePlaneLocalOrigin=this.origin}}class v extends c.ShaderTechnique{constructor(t,i,s=new n.ReloadableShaderModule(f.DefaultMaterial,(()=>new Promise(((t,i)=>e(["./DefaultMaterial.glsl"],t,i)))))){super(t,i,s),this.type="DefaultMaterialTechnique"}_makePipeline(e,t){const{oitPass:i,output:s,transparent:r,cullFace:a,customDepthTest:o,hasOccludees:n}=e;return S.makePipelineState({blending:l.isColorOrColorEmission(s)&&r?d.blending(i):null,culling:(h=e,h.cullFace===u.CullFaceOptions.None&&(h.hasSlicePlane||h.transparent||h.doubleSidedMode)?null:S.cullingParams(a)),depthTest:{func:d.oitDepthTest(i,(m=o,m===u.DepthTestFunction.Lequal?b.CompareFunction.LEQUAL:b.CompareFunction.LESS))},depthWrite:d.depthWrite(e),drawBuffers:c.depthOnlyOutputBuffersOr(s,d.getDrawBuffers(i,s)),colorWrite:S.defaultColorWrite,stencilWrite:n?p.stencilWriteMaskOn:null,stencilTest:n?t?p.stencilToolMaskBaseParams:p.stencilBaseAllZerosParams:null,polygonOffset:d.oitPolygonOffset(e)});var h,m}initializePipeline(e){return this._occludeePipelineState=this._makePipeline(e,!0),this._makePipeline(e,!1)}getPipeline(e){return e?this._occludeePipelineState:super.getPipeline()}}t.DefaultMaterialDrawParameters=y,t.DefaultMaterialPassParameters=g,t.DefaultMaterialTechnique=v,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));