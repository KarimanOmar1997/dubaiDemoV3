// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../../core/has","../core/shaderLibrary/ShaderOutput","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/OITPass","../lib/OrderIndependentTransparency","../lib/RenderSlot","../lib/StencilUtils","../lib/VertexAttribute","../../../../chunks/RibbonLine.glsl","../../../webgl/enums","../../../webgl/renderState"],(function(e,t,i,r,l,n,s,u,a,o,p,c,d,T){"use strict";class h extends n.ShaderTechnique{constructor(t,i){super(t,i,new l.ReloadableShaderModule(c.RibbonLine,(()=>new Promise(((t,i)=>e(["./RibbonLine.glsl"],t,i))))),f),this.primitiveType=i.wireframe?d.PrimitiveType.LINES:d.PrimitiveType.TRIANGLE_STRIP}_makePipelineState(e,t){const{oitPass:i,output:l,hasOccludees:a,hasPolygonOffset:p}=e,c=i===s.OITPass.NONE,d=i===s.OITPass.FrontFace;return T.makePipelineState({blending:r.isColorOrColorEmission(l)?u.blending(i):null,depthTest:{func:u.oitDepthTest(i)},depthWrite:u.depthWrite(e),drawBuffers:n.depthOnlyOutputBuffersOr(l,u.getDrawBuffers(i,l)),colorWrite:T.defaultColorWrite,stencilWrite:a?o.stencilWriteMaskOn:null,stencilTest:a?t?o.stencilToolMaskBaseParams:o.stencilBaseAllZerosParams:null,polygonOffset:c||d?p?O:null:u.OITPolygonOffset})}initializePipeline(e){if(e.occluder){const t=e.hasPolygonOffset?O:null,{output:i,hasOccludees:r}=e;this._occluderPipelineTransparent=T.makePipelineState({blending:T.unpremultipliedAlphaToPremultipliedAlpha,polygonOffset:t,depthTest:o.depthCompareAlways,depthWrite:null,colorWrite:T.defaultColorWrite,stencilWrite:null,stencilTest:r?o.stencilToolTransparentOccluderParams:null,drawBuffers:n.depthOnlyOutputBuffersOr(i)}),this._occluderPipelineOpaque=T.makePipelineState({blending:T.unpremultipliedAlphaToPremultipliedAlpha,polygonOffset:t,depthTest:r?o.depthCompareAlways:o.depthCompareLess,depthWrite:null,colorWrite:T.defaultColorWrite,stencilWrite:r?o.stencilWriteMaskOff:null,stencilTest:r?o.stencilToolMaskOccluderParams:null,drawBuffers:n.depthOnlyOutputBuffersOr(i)}),this._occluderPipelineMaskWrite=T.makePipelineState({blending:null,polygonOffset:t,depthTest:o.depthCompareLess,depthWrite:null,colorWrite:null,stencilWrite:r?o.stencilWriteMaskOn:null,stencilTest:r?o.stencilToolMaskBaseParams:null,drawBuffers:n.depthOnlyOutputBuffersOr(i)})}return this._occludeePipeline=this._makePipelineState(e,!0),this._makePipelineState(e,!1)}getPipeline(e,t){if(e)return this._occludeePipeline;switch(t){case a.RenderSlot.TRANSPARENT_OCCLUDER_MATERIAL:return this._occluderPipelineTransparent??super.getPipeline();case a.RenderSlot.OCCLUDER_MATERIAL:return this._occluderPipelineOpaque??super.getPipeline();default:return this._occluderPipelineMaskWrite??super.getPipeline()}}}const O={factor:0,units:-4},f=new Map([[p.VertexAttribute.POSITION,0],[p.VertexAttribute.PREVIOUSDELTA,1],[p.VertexAttribute.NEXTDELTA,2],[p.VertexAttribute.U0,3],[p.VertexAttribute.LINEPARAMETERS,4],[p.VertexAttribute.COLOR,5],[p.VertexAttribute.COLORFEATUREATTRIBUTE,5],[p.VertexAttribute.SIZE,6],[p.VertexAttribute.SIZEFEATUREATTRIBUTE,6],[p.VertexAttribute.OPACITYFEATUREATTRIBUTE,7],[p.VertexAttribute.OLIDCOLOR,8]]);t.RibbonLineTechnique=h,t.vertexAttributeLocations=f,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));