// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["require","exports","../core/shaderLibrary/ShaderOutput","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/OITPass","../lib/OrderIndependentTransparency","../lib/VertexAttribute","../../../../chunks/ShadedColorMaterial.glsl","../../../webgl/enums","../../../webgl/renderState"],(function(e,r,t,a,n,i,l,o,s,u,d){"use strict";class c extends n.ShaderTechnique{constructor(r,t){super(r,t,new a.ReloadableShaderModule(s.ShadedColorMaterial,(()=>new Promise(((r,t)=>e(["./ShadedColorMaterial.glsl"],r,t))))),h)}initializePipeline(e){const{oitPass:r,output:a,transparent:n,cullFace:o,shadingEnabled:s}=e,c=r===i.OITPass.NONE,h=r===i.OITPass.FrontFace;return d.makePipelineState({blending:t.isColorOrColorEmission(a)&&n?l.blending(r):null,culling:d.cullingParams(o),depthTest:{func:h?u.CompareFunction.LESS:s?u.CompareFunction.LEQUAL:u.CompareFunction.LESS},depthWrite:l.depthWrite(e),drawBuffers:l.getDrawBuffers(r,a),colorWrite:d.defaultColorWrite,polygonOffset:c||h?null:l.OITPolygonOffset})}}const h=new Map([[o.VertexAttribute.POSITION,0],[o.VertexAttribute.NORMAL,1],[o.VertexAttribute.OFFSET,2]]);r.ShadedColorMaterialTechnique=c,r.vertexAttributeLocations=h,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})}));