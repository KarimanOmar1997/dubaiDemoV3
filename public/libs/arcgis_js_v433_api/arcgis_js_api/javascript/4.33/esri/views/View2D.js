// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["require","../chunks/tslib.es6","../Viewpoint","../core/Collection","../core/CollectionFlattener","../core/Error","../core/has","../core/Logger","../core/maybe","../core/reactiveUtils","../core/workers/workers","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/cast","../core/RandomLCG","../core/accessorSupport/decorators/subclass","../core/accessorSupport/ensureType","../geometry/Polygon","../geometry/projectionUtils","../layers/support/TileInfo","./BreakpointsOwner","./DOMContainer","./PopupView","./View","./Viewport2DBaseMixin","./Viewport2DMixin","./2d/AnimationManager","./2d/layerViewModuleImportUtils","./2d/tiling/TileInfoView","./2d/tiling/TileKey","./2d/tiling/TileQueue","./2d/tiling/TileStrategy","./2d/viewpointUtils","./2d/engine/ManagedCanvas","./2d/layers/features/support/TileStore","./2d/layers/support/util","./2d/support/clippingUtils","./2d/support/highlightOptionsUtils","./2d/support/hitTestUtils","./2d/support/screenshotUtils","./2d/support/Timeline","./navigation/Navigation","./navigation/NavigationActionMap","./support/HighlightOptions","./support/WebGLRequirements","./ui/DefaultUI","./ui/2d/DefaultUI2D","../webmap/utils","../webmap/background/ColorBackground"],(function(e,t,i,r,a,s,n,o,l,p,h,d,c,g,u,y,w,m,f,_,V,M,b,v,S,O,L,T,R,C,k,D,x,P,A,E,I,G,q,z,U,W,N,H,$,F,B,j){"use strict";let Z,J,K,Q,X,Y,ee,te=class extends(S.Viewport2DMixin(v.Viewport2DBaseMixin(_.BreakpointsOwner(M.PopupView(V.DOMContainer(b)))))){constructor(e){super(e),this._magnifierView=null,this._gridView=null,this.stage=null,this._resolveWhenReady=[],this.rootLayerViews=new a({getCollections:()=>[this.basemapView?.baseLayerViews,this.layerViews,this.basemapView?.referenceLayerViews],getChildrenFunction:()=>null}),this.featuresTilingScheme=null,this.graphicsView=null,this.labelManager=null,this.navigation=new U({actionMap:new W({dragTertiary:"none"})}),this.renderingOptions={samplingMode:"dynamic",edgeLabelsVisible:!0,labelsAnimationTime:125,labelCollisionsEnabled:!0},this.supersampleScreenshotsEnabled=!0,this.supportsGround=!1,this.floors=new r,this.grid=null,this.map=null,this.spatialReferenceLocked=!1,this.timeline=new z.Timeline,this.type="2d",this.view2dType=null,this.ui=new F,this.test={takeScreenshot:async e=>q.takeRawScreenshot(this._getScreenshotView(e),e)},this.padding={top:0,right:0,bottom:0,left:0},h.initialize()}destroy(){this.layerViewManager.clear(),this._set("preconditionsReady",!1),this.frameTask=l.destroyMaybe(this.frameTask),this.goToManager.destroy(),this.rootLayerViews.destroy(),this.inputManager.destroy(),this._set("inputManager",null)}get graphicsTileStore(){return new P(this.featuresTilingScheme)}get constraintsInfo(){const e=this.defaultsFromMap?.tileInfo,t=this.spatialReference;return{lods:e?.spatialReference?.equals(t)?e.lods:null,spatialReference:t}}get initialExtentRequired(){if(!this.stateManager)return!1;const{scale:e,constraints:t,center:i,viewpoint:r,extent:a}=this;let s=this.zoom;return!(this.map&&"initialViewProperties"in this.map&&this.map.initialViewProperties?.viewpoint||a||(t?.effectiveLODs||(s=-1),i&&(0!==e||-1!==s)||null!=r?.targetGeometry&&("extent"===r.targetGeometry.type||r.scale)))}get defaultsFromMapSettings(){return{required:{extent:!1,heightModelInfo:!1,tileInfo:!0},requiresExtentInSpatialReference:this.spatialReferenceLocked}}get scheduler(){return this.frameTask.scheduler}get typeSpecificPreconditionsReady(){const e=this._getDefaultViewpoint();if(!e)return!1;const t=e.targetGeometry,i=this.spatialReference;return m.isLoadedOrLoadFor(t.spatialReference,i)}get background(){return B.isWebMap(this.map)?this.map.initialViewProperties.background:null}set background(e){this._override("background",e)}get center(){return this.stateManager?.center??null}set center(e){this.stateManager.center=e}get highlightOptions(){return I.getDefaultHighlightOptions(this)}set highlightOptions(e){I.setDefaultHighlightOptions(this,e)}get padding(){return this.stateManager?.padding}set padding(e){this.stateManager&&(this.stateManager.padding=e)}get rendering(){return this.stage?.renderRequested??!1}get resolution(){return this.stateManager.resolution??0}get scale(){return this.stateManager?.scale??0}set scale(e){this.stateManager&&(this.stateManager.scale=e)}get tileInfo(){return this.featuresTilingScheme?.tileInfo}get updating(){const e=!(!this.magnifier.visible||null===this.magnifier.position||!this._magnifierView?.updatingHandles.updating),t=!this.destroyed&&(!this.layerViewManager||!this.labelManager||!this.graphicsView||!0===this.layerViewManager.updating||!0===this.labelManager.updating||!0===this.graphicsView.updating||this.allLayerViews.some((e=>!e.destroyed&&!("layerViews"in e)&&!0===e.updating))||e);if(n("esri-2d-log-updating")){const i=this.allLayerViews.reduce(((e,t)=>({...e,[`${t.layer.id}(${t.layer.type})`]:!t.destroyed&&!("layerViews"in t)&&t.updating})),{});console.log(`Updating MapView: ${t}\n-> Null LayerViewManager: ${!this.layerViewManager}\n-> Null LabelManager: ${!this.labelManager}\n-> Null GraphicsView: ${!this.graphicsView}\n-> layerViewManager.updating: ${this.layerViewManager?.updating}\n-> labelManager.updating: ${this.labelManager?.updating}\n-> graphicsView.updating: ${this.graphicsView?.updating}\n-> allLayerViews: ${JSON.stringify(i)}\n-> updatingMagnifier: ${e}\n`)}return t}get visibleArea(){const e=this.stateManager.visibleArea;return e?new w({rings:[e.map((e=>[e[0],e[1]]))],spatialReference:this.spatialReference}):e}get zoom(){return this.stateManager.zoom??-1}set zoom(e){this.stateManager.zoom=e}get navigating(){return this.mapViewNavigation?.interacting??!1}async hitTest(e,t){return G.hitTest(this,e,t)}async takeScreenshot(e){return q.takeScreenshot(this._getScreenshotView(e),e)}toScreen(e,t){return this.stateManager.toScreen(e,t)}whenLayerView(e){return super.whenLayerView(e)}graphicChanged(e){this.graphicsView&&this.graphicsView.graphicUpdateHandler(e)}whenReady(){return new Promise((e=>{this.ready?e(this):this._resolveWhenReady.push(e)}))}forceDOMReadyCycle(){this.forceReadyCycle()}getDefaultSpatialReference(){return this.map&&"initialViewProperties"in this.map&&this.map.initialViewProperties.spatialReference||this.defaultsFromMap?.spatialReference||null}getDefaultTimeZone(){return B.isWebMap(this.map)?this.map.initialViewProperties.timeZone:null}getDefaultTimeExtent(){return B.isWebMap(this.map)?this.map.initialViewProperties.timeExtent:null}hasLayerViewModule(e){return L.layerView2DImporter.hasLayerViewModule(e)}importLayerView(e){return L.layerView2DImporter.importLayerView(e)}pixelSizeAt(){return this.ready?this.resolution:(o.getLogger(this).error("#pixelSizeAt()","Map view cannot be used before it is ready"),null)}async popupHitTest(e){const t=this.toMap(e),i=await this.hitTest(e),r=this.allLayerViews.toArray().filter((i=>i.clips.every((i=>E.clipContainsPoint(this,i,e,t))))).reverse(),a=new globalThis.Map(r.map((e=>[e.layer.uid,e]))),s=[];let n=0,o=0;for(;n<i.results.length||o<r.length;){const e=i.results.at(n);if(e&&"graphic"!==e.type){++n;continue}const l=a.get((e?.layer??e?.graphic.layer)?.uid);if((!e||l)&&o<r.length&&r.at(o)!==l){const e=r.at(o);"fetchPopupFeaturesAtLocation"in e&&s.push({mapPoint:t,layerView:e}),++o}else e&&(s.push({graphic:e.graphic,layerView:l}),++n)}return{hits:s,location:t}}requestUpdate(){this.ready&&this.frameTask.requestUpdate()}async validate(){let e=H.check(this.type);if(n("safari")&&n("safari")<9&&(e=new s("mapview:browser-not-supported","This browser is not supported by MapView (Safari < 9)",{type:"safari",requiredVersion:9,detectedVersion:n("safari")})),null!=e){o.getLogger(this).warn("#validate()",e.message);const t=document.createElement("div");t.setAttribute("style","display: flex; flex-direction: column; gap: 8px; padding: 20px; height: 100%; justify-content: center; color: black; background: white; font-family: sans-serif;");const i=document.createElement("div");i.innerHTML="Unable to display map. WebGL2 support is required.",i.setAttribute("style","font-size: 24px; font-weight: bold;");const r=document.createElement("div");r.innerHTML="Ensure that your browser and hardware meet the minimum requirements.",r.setAttribute("style","font-size: 18px;");const a=document.createElement("a");throw a.innerHTML="https://esriurl.com/systemRequirements",a.target="_blank",a.setAttribute("style","font-size: 18px;"),a.href="https://esriurl.com/systemRequirements",t.appendChild(i),t.appendChild(r),t.appendChild(a),this.surface.appendChild(t),e}}loadAsyncDependencies(){return async function(){const[,{GraphicsView2D:t,GraphicContainer:i,LabelManager:r,MapViewNavigation:a,MagnifierView2D:s,GridView2D:n,Stage:o}]=await Promise.all([new Promise(((t,i)=>e(["./2d/webglDeps"],t,i))),new Promise(((t,i)=>e(["./2d/mapViewDeps"],t,i)))]);J=t,K=i,Q=r,X=a,Y=s,ee=n,Z=o}()}_getDefaultViewpoint(){const{constraints:e,initialExtent:t,map:r,padding:a,size:s}=this;if(!e)return null;const n=r&&"initialViewProperties"in r?r.initialViewProperties:void 0,o=this.stateManager.getUserStartupOptions(this.size),l=n?.viewpoint,p=l?.targetGeometry?.extent??t,h=p?.center,d=l?.rotation??0,c=l?.scale||p&&D.extentToScale(p,[s[0]-a.left-a.right,s[1]-a.top-a.bottom]),g=o.center??h,u=o.rotation??d,y=o.scale??c;return g&&y?new i({targetGeometry:g,scale:y,rotation:u}):null}_startup(){this.timeline.begin("MapView Startup");const e=this._getDefaultViewpoint();this.stateManager.startup(e,this.size,this.spatialReference,this.defaultsFromMap.extent?.center),this.graphics.owner=this;const t=new x.ManagedCanvas(this.surface),i=new Z(this.surface,{canvas:this.renderCanvas,contextOptions:{disabledExtensions:this.deactivatedWebGLExtensions,debugWebGLExtensions:this.debugWebGLExtensions},renderingOptions:this.renderingOptions,timeline:this.timeline},t);this.stage=i,this._magnifierView=new Y,this._magnifierView.magnifier=this.magnifier,this._gridView=new ee;const r=new Q({view:this});this._set("labelManager",r);const a=new O({view:this});this._set("animationManager",a);const s=new X({view:this,animationManager:a});this._set("mapViewNavigation",s),this._setupSpatialReferenceDependentProperties(),this.addHandles([this.rootLayerViews.on("change",(()=>this._updateStageChildren())),i.on("webgl-error",(e=>this.fatalError=e.error)),p.watch((()=>this.stationary),(e=>i.stationary=e),p.syncAndInitial),p.watch((()=>this.background),(e=>{i.backgroundColor=e?.color,this._magnifierView.backgroundColor=e?.color}),p.syncAndInitial),p.watch((()=>this.magnifier),(e=>this._magnifierView.magnifier=e),p.syncAndInitial),p.watch((()=>this.grid),(e=>this._gridView.grid=e),p.syncAndInitial),p.watch((()=>this.renderingOptions),(e=>i.renderingOptions=e),p.syncAndInitial),p.watch((()=>this.highlights.items.map((e=>({name:e.name,options:{fillColor:e.color,haloColor:e.haloColor,fillOpacity:e.fillOpacity,haloOpacity:e.haloOpacity,haloWidth:e.haloWidth,haloBlur:e.haloBlur}})))),(()=>{i.highlightGradient=A.createOrReuseHighlightGradient(i.highlightGradient,this.highlights.items)}),p.syncAndInitial),p.watch((()=>this.state.id),(()=>i.state=this.state),p.syncAndInitial)],"map-view"),this._updateStageChildren();const n=this._resolveWhenReady;this._resolveWhenReady=[],n.forEach((e=>e(this))),this.timeline.end("MapView Startup"),this.frameTask.start(),this._set("ready",!0)}_teardown(){this._destroySpatialReferenceDependentProperties(),this.removeHandles("map-view"),this.mapViewNavigation.destroy(),this._set("mapViewNavigation",null),this.animation=null,this.animationManager.destroy(),this._set("animationManager",null),this.layerViewManager.clear(),this.labelManager.destroy(),this._magnifierView.destroy(),this._gridView.destroy(),this.stage.destroy(),this.stage=null,this._set("graphicsView",null),this._magnifierView=null,this._gridView=null,this._set("labelManager",null),this._set("mapViewNavigation",null),this.graphics.owner=null,this.frameTask.stop(),this.stationaryManager.clear(),this._set("ready",!1),this.stateManager.teardown()}_updateStageChildren(){this.stage.removeAllChildren(),this.rootLayerViews.forEach((e=>{this.stage.addChild(e.container)}));const e=this.graphicsView;this.stage.addChild(e.container),this.stage.addChild(this._magnifierView),this.stage.addChild(this._gridView)}_setupSpatialReferenceDependentProperties(){const e=new T(f.create({spatialReference:this.spatialReference,size:512,numLODs:36}));this._set("featuresTilingScheme",e);const t=new J({view:this,graphics:this.graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new K(e)});this._set("graphicsView",t)}_destroySpatialReferenceDependentProperties(){const e=this.graphicsView;this._set("graphicsView",null),e.destroy(),this._set("featuresTilingScheme",null)}_getScreenshotView(e){const{allLayerViews:t,padding:i,size:r,stage:a}=this;return{allLayerViews:t,backgroundColor:e?.ignoreBackground?null:this.background?.color,padding:i,size:r,stage:a}}_spatialReferenceChanged(e){if(this.ready){this.frameTask.stop();for(const e of this.allLayerViews)e.processDetach();this._destroySpatialReferenceDependentProperties(),this.stateManager.changeSpatialReference(e),this.stage.state=this.state,this._setupSpatialReferenceDependentProperties();for(const e of this.allLayerViews)e.processAttach();this.frameTask.requestFrame(),this.frameTask.start(),this._updateStageChildren()}}static{this.type="2d"}};return t.__decorate([d.property({constructOnly:!0})],te.prototype,"deactivatedWebGLExtensions",void 0),t.__decorate([d.property({constructOnly:!0})],te.prototype,"debugWebGLExtensions",void 0),t.__decorate([d.property({readOnly:!0})],te.prototype,"featuresTilingScheme",void 0),t.__decorate([d.property({readOnly:!0})],te.prototype,"graphicsTileStore",null),t.__decorate([d.property()],te.prototype,"graphicsView",void 0),t.__decorate([d.property()],te.prototype,"constraintsInfo",null),t.__decorate([d.property()],te.prototype,"initialExtentRequired",null),t.__decorate([d.property()],te.prototype,"labelManager",void 0),t.__decorate([d.property({type:U,nonNullable:!0})],te.prototype,"navigation",void 0),t.__decorate([d.property({constructOnly:!0})],te.prototype,"renderCanvas",void 0),t.__decorate([d.property()],te.prototype,"renderingOptions",void 0),t.__decorate([d.property({constructOnly:!0})],te.prototype,"supersampleScreenshotsEnabled",void 0),t.__decorate([d.property({readOnly:!0})],te.prototype,"supportsGround",void 0),t.__decorate([d.property()],te.prototype,"defaultsFromMapSettings",null),t.__decorate([d.property({readOnly:!0})],te.prototype,"typeSpecificPreconditionsReady",null),t.__decorate([d.property({type:j})],te.prototype,"background",null),t.__decorate([d.property()],te.prototype,"center",null),t.__decorate([d.property({type:r})],te.prototype,"floors",void 0),t.__decorate([d.property()],te.prototype,"grid",void 0),t.__decorate([d.property({type:N})],te.prototype,"highlightOptions",null),t.__decorate([d.property()],te.prototype,"map",void 0),t.__decorate([d.property()],te.prototype,"padding",null),t.__decorate([d.property({readOnly:!0})],te.prototype,"rendering",null),t.__decorate([d.property({readOnly:!0})],te.prototype,"resolution",null),t.__decorate([d.property()],te.prototype,"scale",null),t.__decorate([d.property({constructOnly:!0})],te.prototype,"spatialReferenceLocked",void 0),t.__decorate([d.property({readOnly:!0})],te.prototype,"tileInfo",null),t.__decorate([d.property({type:z.Timeline,readOnly:!0})],te.prototype,"timeline",void 0),t.__decorate([d.property({readOnly:!0})],te.prototype,"type",void 0),t.__decorate([d.property({readOnly:!0})],te.prototype,"updating",null),t.__decorate([d.property({readOnly:!0})],te.prototype,"view2dType",void 0),t.__decorate([d.property({readOnly:!0})],te.prototype,"visibleArea",null),t.__decorate([d.property()],te.prototype,"zoom",null),t.__decorate([d.property({readOnly:!0})],te.prototype,"navigating",null),t.__decorate([d.property(),c.cast((e=>e instanceof $?e:y.ensureClass(F,e)))],te.prototype,"ui",void 0),te=t.__decorate([u.subclass("esri.views.View2D")],te),te}));