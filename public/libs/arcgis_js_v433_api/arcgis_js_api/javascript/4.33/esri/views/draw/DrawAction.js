// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../core/Evented","../../core/lang","../../core/maybe","../../core/Promise","../../core/promiseUtils","../../core/screenUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/accessorSupport/decorators/subclass","../../layers/GraphicsLayer","../../layers/graphics/dehydratedPoint","../ViewingMode","../2d/interactive/SnappingVisualizer2D","../interactive/coordinateHelper","../interactive/editGeometry/EditGeometry","../interactive/editGeometry/EditGeometryOperations","../interactive/snapping/SnappingContext","../interactive/snapping/SnappingOperation"],(function(e,t,i,r,n,o,s,a,p,d,c,h,l,_,y,u,g,v,m,x){"use strict";var G;let V=class extends(n.EsriPromiseMixin(t.EventedAccessor)){static{G=this}constructor(e){super(e),this._hasZ=null,this._cursorScreenPoint=null,this._activePointerId=null,this._stagedVertexUnsnapped=null,this._lastVertexUnsnapped=null,this.interactiveUndoDisabled=!1,this.history=[],this.redoHistory=[],this.snapToScene=!1,this.view=null,this.elevationInfo=null,this.defaultZ=0,this._coordinateHelper=u.createCoordinateHelper(!!e.hasZ,!1,e.view.spatialReference),this._snappingManager=e.snappingManager,this._editGeometryOperations=new v.EditGeometryOperations(new g.EditGeometry(e.editGeometryType??"polygon",this._coordinateHelper),_.ViewingMode.Local),this._snappingGraphicsLayer=new h({id:G.SNAPPING_GRAPHICS_LAYER_ID,listMode:"hide",internal:!0}),this._snappingContext=new m.SnappingContext({editGeometryOperations:this._editGeometryOperations,elevationInfo:{mode:"on-the-ground",offset:0},pointer:"mouse",visualizer:new y.SnappingVisualizer2D(this._snappingGraphicsLayer)}),this._activeComponent=new g.Component(e.view.spatialReference,_.ViewingMode.Local),this._editGeometryOperations.data.components.push(this._activeComponent)}normalizeCtorArgs(e){const t={...e};return delete t.editGeometryType,delete t.snappingManager,t}initialize(){this._snappingOperation=new x.SnappingOperation({view:this.view}),"2d"===this.view.type&&this.view.map.layers.add(this._snappingGraphicsLayer)}destroy(){this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy(),null!=this._snappingManager&&this._snappingManager.doneSnapping(),this._snappingOperation=r.destroyMaybe(this._snappingOperation),this._editGeometryOperations.destroy()}get _committedVertices(){return this._editGeometryOperations.data.components[0].vertices.map((e=>e.pos))}get vertices(){return null!=this._stagedVertex?[...this._committedVertices,this._coordinateHelper.pointToArray(this._stagedVertex)]:this._committedVertices}get hasZ(){return null!=this._hasZ?this._hasZ:"3d"===this.view.type}set hasZ(e){this._hasZ=e,this.notifyChange("hasZ")}get _stagedVertex(){return this._snappingOperation?.stagedPoint}set _stagedVertex(e){this._snappingOperation&&(this._snappingOperation.stagedPoint=i.clone(e))}canUndo(){return this._editGeometryOperations.canUndo}canRedo(){return this._editGeometryOperations.canRedo}undo(){this.canUndo&&this._editGeometryOperations.undo()}redo(){this.canRedo&&this._editGeometryOperations.redo()}getCoordsFromScreenPoint(e){const t=e&&this.screenToMap(e);return null==t?null:t.hasZ?[t.x,t.y,t.z]:[t.x,t.y]}getCoordsAndPointFromScreenPoint(e){const t=this.screenToMap(e);return null==t?null:t.hasZ?{vertex:[t.x,t.y,t.z],mapPoint:t}:{vertex:[t.x,t.y],mapPoint:t}}screenToMap(e){let t=null;if("3d"===this.view.type)if(this.hasZ){const i=this.elevationInfo??w;t=this.view.sceneIntersectionHelper.intersectElevationFromScreen(s.createScreenPointArray(e.x,e.y),i,this._getGeometryZValue())}else{const i=this.elevationInfo??O;t=this.view.sceneIntersectionHelper.intersectElevationFromScreen(s.createScreenPointArray(e.x,e.y),i,0),null!=t&&(t.z=void 0)}else t=this.view.toMap(e),null!=t&&(t.z=this.hasZ?this._getGeometryZValue():void 0);return t}_pushCursorVertex(e,t){const i=l.makeDehydratedPoint(e[0],e[1],void 0,this.view.spatialReference);this._stagedVertexUnsnapped=i;const r=this._snappingManager;if(null==r)return this._stagedVertex=i,void t();o.ignoreAbortErrors(this._snappingOperation.snap({point:i},r,this._snappingContext)).then((()=>{t()}))}_popCursorVertex(){this._stagedVertexUnsnapped=null,this._stagedVertex=null}_getGeometryZValue(){return this.defaultZ}_abortSnapping(){this._snappingOperation.abort()}_isDuplicateOfLastVertex(e){const t=this._editGeometryOperations.data.components[0].getLastVertex()?.pos;if(t&&e[0]===t[0]&&e[1]===t[1])return!0;const{x:i,y:r}=this._coordinateHelper.vectorToDehydratedPoint(e);return null!=this._lastVertexUnsnapped&&i===this._lastVertexUnsnapped.x&&r===this._lastVertexUnsnapped.y}_shouldHandlePointerEvent(e){return function(e){return"mouse"!==e.pointerType||0===e.button}(e)&&(null==this._activePointerId||this._activePointerId===e.pointerId)}_vertexAddHandler(e){const t=null!=this._stagedVertex?this._coordinateHelper.pointToArray(this._stagedVertex):this.getCoordsFromScreenPoint(this._cursorScreenPoint);null!=t&&this._addVertex(t,e.native)}_drawCompleteHandler(e){this._completeDrawing(e.native)}static{this.SNAPPING_GRAPHICS_LAYER_ID="DrawAction-snapping-graphics-layer"}};e.__decorate([a.property({readOnly:!0})],V.prototype,"vertices",null),e.__decorate([a.property({type:Boolean,nonNullable:!0})],V.prototype,"interactiveUndoDisabled",void 0),e.__decorate([a.property({readOnly:!0})],V.prototype,"history",void 0),e.__decorate([a.property({readOnly:!0})],V.prototype,"redoHistory",void 0),e.__decorate([a.property()],V.prototype,"snapToScene",void 0),e.__decorate([a.property()],V.prototype,"view",void 0),e.__decorate([a.property()],V.prototype,"elevationInfo",void 0),e.__decorate([a.property({nonNullable:!0})],V.prototype,"defaultZ",void 0),e.__decorate([a.property()],V.prototype,"hasZ",null),e.__decorate([a.property()],V.prototype,"_snappingOperation",void 0),e.__decorate([a.property()],V.prototype,"_stagedVertex",null),V=G=e.__decorate([c.subclass("esri.views.draw.DrawAction")],V);const w={mode:"absolute-height",offset:0},O={mode:"on-the-ground",offset:0};return V}));