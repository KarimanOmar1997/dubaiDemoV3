// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../Color","../../intl","../../core/Accessor","../../core/asyncUtils","../../core/colorUtils","../../core/handleUtils","../../core/has","../../core/mathUtils","../../core/quantityFormatUtils","../../core/reactiveUtils","../../core/screenUtils","../../core/unitUtils","../../core/accessorSupport/decorators/property","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../core/libs/gl-matrix-2/math/vec2","../../core/libs/gl-matrix-2/factories/vec2f64","../../chunks/vec32","../../geometry/support/coordsUtils","../../geometry/support/vectorStacks","../../intl/messages","../../support/elevationInfoUtils","../../support/getDefaultUnitForView","../overlay/TextOverlayItem","../../intl/locale"],(function(e,t,s,o,r,n,a,i,l,c,d,h,g,p,u,_,b,m,y,f,x,v,L,U,S,C,I,k){"use strict";const w={default:15,far:25};function D(e,t,s,o,r){const n=[];if(t.data.components[r].iterateVertices((e=>{n.push(o.toXYZ(e.pos,L.sv3d.get()))})),0===r&&null!=s&&n.push(o.toXYZ(s,L.sv3d.get())),n.length<2)return n;const a=n[0],i=n[n.length-1];return"polygon"===e.type&&n.length>2&&!x.equals(a,i)&&n.push(a),n}function M(e,t,s,o){if("2d"===t.type)return!0;const r=p.getMetersPerUnit(o)??1,n=p.getMetersPerVerticalUnitForSR(o),a=e=>S.getConvertedElevationFromVector(t,e,o,s,S.absoluteHeightElevationInfo)??0;for(let t=1;t<e.length;++t){const s=e[t-1],o=e[t],i=(o[0]-s[0])*r,l=(o[1]-s[1])*r,c=(a(o)-a(s))*n;if(Math.abs(c)/Math.sqrt(i*i+l*l)>P)return!1}return!0}e.SegmentLabels=class extends r{constructor(e){super(e),this.context=null,this.stagedVertex=null,this.visible=!0,this.edgeDistance="default",this._messageUnitsTask=null,this._labelInfos=[],this._nextLabelIndex=0}initialize(){this.addHandles([h.watch((()=>[null!=this.context&&this.getCameraOrExtent(this.context),this.visible,this._edgeDistancePixels,this.stagedVertex,this._messagesUnits]),(()=>this._update())),...["vertex-add","vertex-update","vertex-remove"].map((e=>h.on((()=>this.context?.editGeometryOperations),e,(()=>this._update())))),h.watch((()=>this._colors),(e=>this._updateStyle(e))),k.onLocaleChange((()=>this._refreshMessages())),i.makeHandle((()=>this._messageUnitsTask?.abort()))]),this._refreshMessages()}destroy(){for(this._nextLabelIndex=0;this._labelInfos.length;)this._destroyLabel(this._labelInfos.pop())}get updating(){return null==this._messagesUnits}get test(){}get _messagesUnits(){return this._messageUnitsTask?.value}get _edgeDistancePixels(){return w[this.edgeDistance]}get _colors(){const e=this.context?.view.effectiveTheme.textColor??s.fromArray([255,255,255]);return{textColor:e,backgroundColor:a.multiplyOpacity(a.getContrast(e,a.BrightnessThreshold.Low),.6)}}_update(){if(this.destroyed)return;this._nextLabelIndex=0;const{context:e,stagedVertex:t}=this;if(!e)return this._destroyUnusedLabels();const{editGeometryOperations:s}=e,{components:o,geometry:r,coordinateHelper:n}=s.data;if(!r)return this._destroyUnusedLabels();const a=o.length;for(let o=0;o<a;++o){const i=D(r,s,t,n,o);if(i.length<2||!M(i,e.view,e.elevationInfo,n.spatialReference))continue;const l=1===a&&!v.isClockwise(i);let c=V,d=A;this.toScreenPointArray(e,i[0],c);for(let t=1;t<i.length;++t){const s=i[t-1],o=i[t];this.toScreenPointArray(e,o,d),this._addLabel(e,s,c,o,d,l),[c,d]=[d,c]}}this._destroyUnusedLabels()}_updateStyle({textColor:e,backgroundColor:t}){const s=this._nextLabelIndex,o=this._labelInfos;for(let r=0;r<s;++r){const{label:s}=o[r];s.textColor=e,s.backgroundColor=t}}_addLabel(e,t,s,o,r,n){const{label:a}=this._getOrCreateLabel(e);if(!this.visible||y.squaredDistance(s,r)<3025)return void(a.visible=!1);const{spatialReference:i}=e.editGeometryOperations.data,l=e.automaticLengthMeasurementUtils.autoDistance2D(t,o,i),c=this._messagesUnits,h=C.getDefaultUnitForView(e.view);a.text=null!=c&&null!=l?d.formatLength(c,l,h):"",a.visible=!0;const g=r[0]-s[0],p=r[1]-s[1];n?y.set(T,-p,g):y.set(T,p,-g),y.normalize(T,T),y.scale(T,T,this._edgeDistancePixels),y.lerp(O,s,r,.5),y.add(O,O,T),a.position=[O[0],O[1]],Math.abs(T[0])>Math.abs(T[1])?a.anchor=T[0]>0?"left":"right":a.anchor=-T[1]<0?"top":"bottom"}_getOrCreateLabel(e){const t=this._labelInfos.length>this._nextLabelIndex,{textColor:s,backgroundColor:o}=this._colors;if(t){const e=this._labelInfos[this._nextLabelIndex++],{label:t}=e;return t.textColor=s,t.backgroundColor=o,e}const r=new I({anchor:"center",fontSize:8,textColor:s,backgroundColor:o});e.view.overlay?.items.add(r);const n={label:r};return this._labelInfos.push(n),this._nextLabelIndex=this._labelInfos.length,n}_destroyUnusedLabels(){for(;this._labelInfos.length>this._nextLabelIndex;)this._destroyLabel(this._labelInfos.pop())}_destroyLabel({label:e}){this.context?.view.overlay?.items.remove(e),e.destroy()}_refreshMessages(){this._messageUnitsTask?.abort(),this._messageUnitsTask=n.createTask((()=>U.fetchMessageBundle("esri/core/t9n/Units")))}},t.__decorate([u.property()],e.SegmentLabels.prototype,"context",void 0),t.__decorate([u.property()],e.SegmentLabels.prototype,"stagedVertex",void 0),t.__decorate([u.property()],e.SegmentLabels.prototype,"visible",void 0),t.__decorate([u.property()],e.SegmentLabels.prototype,"edgeDistance",void 0),t.__decorate([u.property()],e.SegmentLabels.prototype,"updating",null),t.__decorate([u.property()],e.SegmentLabels.prototype,"_messageUnitsTask",void 0),t.__decorate([u.property()],e.SegmentLabels.prototype,"_messagesUnits",null),t.__decorate([u.property()],e.SegmentLabels.prototype,"_edgeDistancePixels",null),t.__decorate([u.property()],e.SegmentLabels.prototype,"_colors",null),e.SegmentLabels=t.__decorate([m.subclass("esri.views.interactive.SegmentLabels")],e.SegmentLabels);const P=c.deg2rad(5),T=f.create(),O=f.create(),V=g.createScreenPointArray(),A=g.createScreenPointArray();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));