// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Evented","../../../core/handleUtils","../../../core/libs/gl-matrix-2/factories/vec3f64","../../../geometry/support/coordsUtils","./EditGeometry","./interfaces","./operations/AppendVertex","./operations/UpdateVertices","./operations/RemoveVertices","./operations/SplitEdge","./operations/SetVertexPosition","./operations/CloseComponent","./operations/MoveMesh","./operations/MoveVertex","./operations/OffsetEdgeVertex","./operations/RotateVertex","./operations/ScaleVertex","./operations/SetAllVertexPositions","./operations/UndoGroup"],(function(e,t,r,i,o,a,s,n,c,u,h,p,d,l,m,S,V,y,A,v){"use strict";class _ extends t{constructor(e,t){super(),this.data=e,this.viewingMode=t,this._undoStack=[],this._redoStack=[],this._listener=this.data.on("change",(e=>{e.addedVertices&&this.emit("vertex-add",{type:"vertex-add",vertices:e.addedVertices,operation:e.operation}),e.removedVertices&&this.emit("vertex-remove",{type:"vertex-remove",vertices:e.removedVertices,operation:e.operation}),e.updatedVertices&&this.emit("vertex-update",{type:"vertex-update",vertices:e.updatedVertices,operation:e.operation})}))}destroy(){this._listener.remove()}splitEdge(e,t){return this._apply(new h.SplitEdge(this.data,e,t))}updateVertices(e,t,r=s.AccumulationBehavior.ACCUMULATE_STEPS){return this._apply(new c.UpdateVertices(this.data,e,t),r)}move(e,t,r,i=s.AccumulationBehavior.ACCUMULATE_STEPS){return a.isMeshEditGeometry(this.data)?this._apply(new l.MoveMesh(this.data,e,t,r),i):this.moveVertices(this.data.allVertices,e,t,r,i)}moveVertices(e,t,r,i,o=s.AccumulationBehavior.ACCUMULATE_STEPS){return a.isMeshEditGeometry(this.data)?this._apply(new l.MoveMesh(this.data,t,r,i),o):this.updateVertices(e,new m.MoveVertex(this.data.coordinateHelper,t,r,i),o)}scale(e,t,r,i,o=s.AccumulationBehavior.ACCUMULATE_STEPS,a=c.AccumulationType.CUMULATIVE){return this.scaleVertices(this.data.allVertices,e,t,r,i,o,a)}scaleVertices(e,t,r,i,o,a=s.AccumulationBehavior.ACCUMULATE_STEPS,n=c.AccumulationType.CUMULATIVE){return this.updateVertices(e,new y.ScaleVertex(t,r,i,o,n),a)}rotate(e,t,r=s.AccumulationBehavior.ACCUMULATE_STEPS,i=c.AccumulationType.CUMULATIVE){return this.rotateVertices(this.data.allVertices,e,t,r,i)}rotateVertices(e,t,r,i=s.AccumulationBehavior.ACCUMULATE_STEPS,o=c.AccumulationType.CUMULATIVE){return this.updateVertices(e,new V.RotateVertex(t,r,o),i)}removeVertices(e){return this._apply(new u.RemoveVertices(this.data,e,this._minNumVerticesPerType))}appendVertex(e){return 0===this.data.components.length?null:this._apply(new n.AppendVertex(this.data,this.data.components[0],e))}setVertexPosition(e,t){return this._apply(new p.SetVertexPosition(this.data,e,t))}offsetEdge(e,t,r,i=s.AccumulationBehavior.ACCUMULATE_STEPS){return this.updateVertices([t.leftVertex,t.rightVertex],new S.OffsetEdgeVertex(this.data.coordinateHelper,e,t,r),i)}trySetGeometry(e,t=s.AccumulationBehavior.ACCUMULATE_STEPS){const{data:r}=this,{coordinateHelper:i}=r;if(r.type!==e.type||!r.spatialReference.equals(e.spatialReference)||i.hasZ()!==e.hasZ||i.hasM()!==e.hasM||!o.hasCompatibleTopology(r.geometry,e)||a.isMeshEditGeometry(r))return;const n=Array.from(a.EditGeometry.fromGeometry(e,this.viewingMode).iterateVertices(),(e=>e.pos));return this.setVertexPositions(n,t)}setVertexPositions(e,t=s.AccumulationBehavior.ACCUMULATE_STEPS){return this._apply(new A.SetAllVertexPositions(this.data,e),t)}createResetState(){if(a.isMeshEditGeometry(this.data))return this._createResetStateMesh();const e=this.data.geometry.clone();return r.makeHandle((()=>this.trySetGeometry(e)))}closeComponent(e){return this.data.components.includes(e)?this._apply(new d.CloseComponent(this.data,e)):null}canRemoveVertex(e){return e.vertices.length>this._minNumVerticesPerType}createUndoGroup(){const e=new v.UndoGroup;return this._apply(e),r.makeHandle((()=>e.close()))}undo(){if(this._undoStack.length>0){const e=this._undoStack.pop();return e.undo(),this._redoStack.push(e),e}return null}redo(){if(this._redoStack.length>0){const e=this._redoStack.pop();return e.apply(),this._undoStack.push(e),e}return null}get canUndo(){return this._undoStack.length>0}get canRedo(){return this._redoStack.length>0}get lastOperation(){return this._undoStack.length>0?this._undoStack[this._undoStack.length-1]:null}get _minNumVerticesPerType(){switch(this.data.type){case"point":return 1;case"polyline":return 2;case"polygon":return 3;default:return 0}}_apply(e,t=s.AccumulationBehavior.ACCUMULATE_STEPS){return t!==s.AccumulationBehavior.NEW_STEP&&null!=this.lastOperation&&this.lastOperation.accumulate(e)||(e.apply(),this._undoStack.push(e),this._redoStack=[]),e}_createResetStateMesh(){if(!a.isMeshEditGeometry(this.data))return r.makeHandle();const e=this.data.geometry,{vertexSpace:t}=e;if(t.origin){const o=i.clone(t.origin);return r.makeHandle((()=>{e.vertexSpace.origin=o}))}const o=e.vertexAttributes.clonePositional();return r.makeHandle((()=>{e.vertexAttributes=o,e.vertexAttributesChanged()}))}static fromGeometry(e,t){return new _(a.EditGeometry.fromGeometry(e,t),t)}}e.EditGeometryOperations=_,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));