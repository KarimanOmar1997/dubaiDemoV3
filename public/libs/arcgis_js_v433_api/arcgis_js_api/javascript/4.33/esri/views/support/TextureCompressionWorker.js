// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../libs/basisu/BasisUEncoder","../../libs/basisu/TextureFormat","../../libs/dxtEncoder/DXTEncoder","../webgl/enums"],(function(e,t,r,n,a){"use strict";let s,l,i=null,o=null;class u{constructor(e,t){this.internalFormat=e,this.compressedTexture=t}}async function c(){i||(i=await(s??=t.getBasisEncoder()))}async function d(){o||(o=await(l??=n.getDXTEncoder()))}async function m(e,t,r,n,a=255,s=0,l=!1,o=!1){if(!i)return null;const u=new i.BasisEncoder;u.setPerceptual(!o),u.setCheckForAlpha(!0),u.setForceAlpha(!1),u.setRenormalize(o),u.setMipGen(n),u.setMipSRGB(!o),u.setCreateKTX2File(!0),u.setKTX2SRGBTransferFunc(!o),u.setQualityLevel(a),u.setCompressionLevel(s);const c=new Uint8Array(e.byteLength);u.setSliceSourceImage(0,new Uint8Array(e),t,r,l);const d=u.encode(c),m=new Uint8Array(c.buffer,0,d),p=new i.KTX2File(new Uint8Array(m));return p.isValid()?(u.delete(),m):(p.close(),p.delete(),u.delete(),null)}async function p(e){if(!i)return new u(null,null);const t=new i.KTX2File(new Uint8Array(e));t.startTranscoding();const[n,s]=t.getHasAlpha()?[r.TextureFormat.ETC2_RGBA,a.CompressedTextureFormat.COMPRESSED_RGBA8_ETC2_EAC]:[r.TextureFormat.ETC1_RGB,a.CompressedTextureFormat.COMPRESSED_RGB8_ETC2],l=t.getLevels(),o=[];for(let e=0;e<l;e++)o.push(new Uint8Array(t.getImageTranscodedSizeInBytes(e,0,0,n))),t.transcodeImage(o[e],e,0,0,n,0,-1,-1);return t.close(),t.delete(),{internalFormat:s,compressedTexture:{type:"compressed",levels:o}}}function h(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}const T=h("DXT1"),f=h("DXT3"),w=h("DXT5");e.TextureCompressionWorkerOutput=u,e.compress=async function(e){let t;if(t=e.data instanceof ImageBitmap?function(e){const t=new OffscreenCanvas(e.width,e.height),r=t.getContext("2d");return r.drawImage(e,0,0),r.getImageData(0,0,t.width,t.height).data}(e.data):function(e,t,r,n,a){const s=new Uint8ClampedArray(e).subarray(0,t*r*n);if(!a)return s;const l=new Uint8ClampedArray(s.length),i=t*n;for(let e=0;e<r;e++){const t=e*i,n=(r-e-1)*i;l.set(s.subarray(t,t+i),n)}return l}(e.data,e.width,e.height,e.components,e.needsFlip),e.hasS3TC){o||await d();const r=new Uint8Array(t.length);if(o?.encode(t,e.width,e.height,e.preMultiplyAlpha,r)){const e=function(e){const t=new Int32Array(e.buffer,e.byteOffset,31);let r,n;switch(t[21]){case T:r=8,n=a.CompressedTextureFormat.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case f:r=16,n=a.CompressedTextureFormat.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case w:r=16,n=a.CompressedTextureFormat.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}let s=1,l=t[4],i=t[3];(3&l||3&i)&&(l=l+3&-4,i=i+3&-4);const o=l,u=i;131072&t[2]&&(s=Math.max(1,t[7]));let c,d,m=e.byteOffset+t[1]+4;const p=[];for(let t=0;t<s;++t)d=(l+3>>2)*(i+3>>2)*r,c=new Uint8Array(e.buffer,m,d),p.push(c),m+=d,l=Math.max(1,l>>1),i=Math.max(1,i>>1);return{textureData:{type:"compressed",levels:p},internalFormat:n,width:o,height:u}}(r),t=[r.buffer];return{result:new u(e?.internalFormat??null,e?.textureData??null),transferList:t}}return{result:new u(null,null)}}if(e.hasETC){if(i||await c(),e.preMultiplyAlpha&&!o&&await d(),e.preMultiplyAlpha){const r=new Uint8ClampedArray(t.length);o?.premultiply(new Uint8Array(t),e.width,e.height,r),t=r}const r=await m(t,e.width,e.height,e.hasMipmap),n=r?await p(r):null,a=n?.compressedTexture?.levels.map((e=>e.buffer))||[];return{result:new u(n?.internalFormat??null,n?.compressedTexture??null),transferList:a}}return{result:new u(null,null)}},e.compressRGBADataToKTX2=m,e.createTextureDataKTX2=p,e.initializeBasisEncoder=c,e.initializeDXTEncoder=d,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));