// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../core/mathUtils","../../core/libs/gl-matrix-2/math/vec2","../../core/libs/gl-matrix-2/factories/vec2f64"],(function(t,e,n,r){"use strict";function c(t,e){return t[0]*e[1]-t[1]*e[0]}function s(t,e,r){const c=n.dot(r,e)/n.squaredLength(r);return n.scale(t,r,c)}function o(t,e,r,c,o=r){return n.subtract(u,c,r),n.subtract(l,e,o),s(L,l,u),n.add(t,o,L)}function a(t,e,r,c){n.subtract(u,e,r);const s=c/n.length(u);return n.scaleAndAdd(t,r,u,s)}var i;t.LineType=void 0,(i=t.LineType||(t.LineType={}))[i.RAY=0]="RAY",i[i.LINE=1]="LINE";const u=r.create(),d=r.create(),l=r.create(),L=r.create();t.cross=c,t.intersectCircleAndPoint=function(t,n,c){return a(l,c,t,n),e.floatEqualAbsolute(l[0],c[0])&&e.floatEqualAbsolute(l[1],c[1])?[r.clone(c)]:[]},t.intersectLineAndPoint=function(t,n){return o(l,n,t.start,t.end),e.floatEqualAbsolute(l[0],n[0])&&e.floatEqualAbsolute(l[1],n[1])?[r.clone(n)]:[]},t.intersectLineAndRay=function(e,r){const s=e.start,o=e.end,a=r.start,i=r.end,p=n.subtract(u,o,s),f=n.subtract(d,i,a),A=c(p,f);if(Math.abs(A)<=1e-6)return[];const b=n.subtract(l,s,a),y=c(f,b)/A,T=c(p,b)/A;if(y>=0){if(T>=0||r.type===t.LineType.LINE)return[n.scaleAndAdd(L,s,p,y)]}else if(e.type===t.LineType.LINE&&(T>=0||r.type===t.LineType.LINE))return[n.scaleAndAdd(L,s,p,y)];return[]},t.intersectLineLikeAndCircle=function(e,r,c){const s=[],o=n.subtract(u,e.end,e.start),a=n.subtract(d,e.start,r),i=n.squaredLength(o),p=2*n.dot(o,a),f=p*p-4*i*(n.squaredLength(a)-c*c);if(0===f){const r=-p/(2*i);(e.type===t.LineType.LINE||r>=0)&&s.push(n.scaleAndAdd(L,e.start,o,r))}else if(f>0){const r=Math.sqrt(f),c=(-p+r)/(2*i);(e.type===t.LineType.LINE||c>=0)&&s.push(n.scaleAndAdd(L,e.start,o,c));const a=(-p-r)/(2*i);(e.type===t.LineType.LINE||a>=0)&&s.push(n.scaleAndAdd(l,e.start,o,a))}return s},t.pointToLineDistance=function(t,e,r){const c=(e[0]-t[0])*(r[1]-t[1])-(e[1]-t[1])*(r[0]-t[0]);return Math.abs(c)/n.distance(e,r)},t.projectPoint=s,t.projectPointToCircle=a,t.projectPointToLine=o,t.projectPointToRay=function(t,e,r,c){n.subtract(u,c,r),n.subtract(l,e,r);const s=n.dot(u,l)/n.squaredLength(u);return s>0?n.scaleAndAdd(t,r,u,s):n.copy(t,r)},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));