// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../core/Error","../../core/Logger","./enums"],(function(e,t,r,i){"use strict";const n=()=>r.getLogger("esri/views/webgl/textureUtils");function o(e){return e in i.SizedDepthFormat}function a(e){return e in i.SizedDepthStencilFormat}function l(e){return null!=e&&e in i.CompressedTextureFormat}function u(e){return null!=e&&"type"in e&&"compressed"===e.type}function s(e){return null!=e&&"byteLength"in e}e.calcMipmapLevels=function(e,t,r,n=1){let o=Math.max(t,r);return e===i.TextureType.TEXTURE_3D&&(o=Math.max(o,n)),Math.floor(Math.log2(o))+1},e.deriveInternalFormat=function(e){if(null!=e.internalFormat)return e.internalFormat;switch(e.dataType){case i.PixelType.FLOAT:switch(e.pixelFormat){case i.PixelFormat.RGBA:return i.SizedPixelFormat.RGBA32F;case i.PixelFormat.RGB:return i.SizedPixelFormat.RGB32F;default:throw new t("texture:unknown-format","Unable to derive format")}case i.PixelType.UNSIGNED_BYTE:switch(e.pixelFormat){case i.PixelFormat.RGBA:return i.SizedPixelFormat.RGBA8;case i.PixelFormat.RGB:return i.SizedPixelFormat.RGB8}}const{pixelFormat:r}=e;return e.internalFormat=r===i.UnsizedDepthFormat.DEPTH_STENCIL?i.SizedDepthStencilFormat.DEPTH24_STENCIL8:r===i.UnsizedDepthFormat.DEPTH_COMPONENT?i.SizedDepthFormat.DEPTH_COMPONENT24:r,e.internalFormat},e.getDimensions=function(e){let t="width"in e?e.width:e.codedWidth,r="height"in e?e.height:e.codedHeight;return e instanceof HTMLVideoElement&&(t=e.videoWidth,r=e.videoHeight),{width:t,height:r,depth:1}},e.is3DTarget=function(e){return e===i.TextureType.TEXTURE_3D||e===i.TextureType.TEXTURE_2D_ARRAY},e.isArrayBufferView=s,e.isCompressedData=u,e.isCompressedFormat=l,e.isCompressedTexture=function(e){return l(e.descriptor.internalFormat)},e.isSizedDepthFormat=o,e.isSizedDepthStencilFormat=a,e.isSizedPixelFormat=function(e){return e in i.SizedPixelFormat},e.isTexImageSource=function(e){return null!=e&&!u(e)&&!s(e)},e.validateTexture=function(e){const{width:t,height:r,depth:l}=e;(null!=t&&t<0||null!=r&&r<0||null!=l&&l<0)&&n().error("Negative dimension parameters are not allowed!");const{internalFormat:u}=e;if(u&&(o(u)||a(u))){const{linearFilterDepth:t,compareEnabled:r,samplingMode:o,hasMipmap:a}=e;a&&n().error("Depth textures cannot have mipmaps"),t?o!==i.TextureSamplingMode.LINEAR&&o!==i.TextureSamplingMode.NEAREST&&n().error("Depth textures cannot sample mipmaps"):(o!==i.TextureSamplingMode.NEAREST&&n().error("Depth textures without filtering must use NEAREST filtering"),r&&n().error("Depth textures without filtering cannot use compare function"))}},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));