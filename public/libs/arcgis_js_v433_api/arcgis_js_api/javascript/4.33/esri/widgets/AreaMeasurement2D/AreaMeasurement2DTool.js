// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["exports","../../chunks/tslib.es6","../../Graphic","../../intl","../../core/colorUtils","../../core/maybe","../../core/reactiveUtils","../../core/unitFormatUtils","../../core/unitUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/Logger","../../core/RandomLCG","../../core/accessorSupport/decorators/subclass","../../core/support/UpdatingHandles","../../geometry/Point","../../geometry/Polygon","../../geometry/Polyline","../../chunks/areaOperator","../../chunks/geodeticAreaOperator","../../chunks/geodeticDensifyOperator","../../chunks/geodeticLengthOperator","../../chunks/lengthOperator","../../chunks/simplifyOperator","../../geometry/support/geodesicUtils","../../layers/GraphicsLayer","../../symbols/Font","../../symbols/SimpleFillSymbol","../../symbols/SimpleLineSymbol","../../symbols/SimpleMarkerSymbol","../../symbols/TextSymbol","../../views/ViewingMode","../../views/2d/interactive/SnappingVisualizer2D","../../views/draw/Draw","../../views/interactive/coordinateHelper","../../views/interactive/dragEventPipeline","../../views/interactive/GraphicManipulator","../../views/interactive/InteractiveToolBase","../../views/interactive/editGeometry/EditGeometry","../../views/interactive/editGeometry/EditGeometryOperations","../../views/interactive/snapping/SnappingContext","../../views/interactive/snapping/SnappingDragPipelineStep","../../views/interactive/snapping/snappingUtils","../../intl/messages","../../intl/locale"],(function(e,t,r,i,s,a,n,o,l,c,p,u,m,h,d,y,g,v,_,w,f,b,M,L,A,S,x,G,D,T,k,O,q,C,H,U,E,P,R,z,V,I,B,F,W){"use strict";const j=1e5;function J(e,t,i){const a={style:"circle",color:s.multiplyOpacity(t.effectiveTheme.accentColor,.5),outline:{type:"simple-line",width:0}},n=new T({...a,size:8}),o=new T({...a,size:12}),l=new r({geometry:e,symbol:n});return new E.GraphicManipulator({view:t,layer:i,graphic:l,focusedSymbol:o})}function K(e,t){if(2===e.length){const r=new v({paths:[e],spatialReference:t});let i;return i=t.isGeographic?A.isSupported(t)?A.geodesicDensify(r,j):f.execute(r,j,{unit:"meters"}):t.isWebMercator?f.execute(r,j,{unit:"meters"}):r,{measurement:null,fillGeometry:null,outlineGeometry:i}}e.push(e[0]);const r=new v({paths:[e],spatialReference:t}),i=new g({rings:[e],spatialReference:t});let s,a,n=null,o=null;if(t.isGeographic)if(A.isSupported(t)){if(n=A.geodesicDensify(r,j),o=A.geodesicDensify(i,j),o=L.execute(o),!o)return null;s=A.geodesicLengths([r],"meters")[0],a=A.geodesicAreas([o],"square-meters")[0]}else{if(n=f.execute(r,j,{unit:"meters"}),o=f.execute(i,j,{unit:"meters"}),o=L.execute(o),!o)return null;s=b.execute(r,{unit:"meters"}),a=w.execute(o,{unit:"square-meters"})}else if(t.isWebMercator){if(n=f.execute(r,j,{unit:"meters"}),o=f.execute(i,j,{unit:"meters"}),o=L.execute(o),!o)return null;s=b.execute(r,{unit:"meters"}),a=w.execute(o,{unit:"square-meters"})}else{if(n=r,o=L.execute(i),!o)return null;s=M.execute(r,{unit:"meters"}),a=_.execute(o,{unit:"square-meters"})}return{measurement:{geometry:o,area:a,perimeter:s},fillGeometry:o,outlineGeometry:n}}function N(e,t,r){if(!t||!e)return null;const i={area:null,perimeter:null},{area:s,perimeter:a}=t;switch(r){case"metric":i.area=o.formatMetricArea(e,s,"square-meters");break;case"imperial":i.area=o.formatImperialArea(e,s,"square-meters");break;default:{const t=l.convertUnit(s,"square-meters",r);i.area=o.formatDecimal(e,t,r);break}}const n=function(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-nautical-miles":return"nautical-miles";case"square-us-feet":return"us-feet";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";default:return null}}(r);if(n)switch(n){case"metric":i.perimeter=o.formatMetricLength(e,a,"meters");break;case"imperial":i.perimeter=o.formatImperialLength(e,a,"meters");break;default:{const t=l.convertUnit(a,"meters",n);i.perimeter=o.formatDecimal(e,t,n);break}}else i.perimeter="";return i}e.AreaMeasurement2DTool=class extends P.InteractiveToolBase{constructor(e){super(e),this._measurementLayer=new S({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new S({internal:!0,listMode:"hide",visible:!1}),this._snappingLayer=new S({internal:!0,listMode:"hide",visible:!1}),this._updatingHandles=new d.UpdatingHandles,this._vertices=[],this._drawActive=!1,this.measurement=null,this.measurementLabel=null}initialize(){F.fetchMessageBundle("esri/core/t9n/Units").then((e=>{this.messages=e}));const e=this.view;this._draw=new C({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),e.focus(),this.addHandles([W.onLocaleChange((async()=>{this.messages=await F.fetchMessageBundle("esri/core/t9n/Units")})),n.watch((()=>[this.unit,this.messages]),(()=>{this._updateGraphics()}),n.initial),n.watch((()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor]),(()=>{if(!this._vertices.length)return;const e=this._vertices.map((({coord:e})=>e));for(const{handle:e}of this._vertices)e.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(e)}))]),B.setupSnappingToggleHandles(this)}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=a.destroyMaybe(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer,this._snappingLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._snappingLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=a.destroyMaybe(this._measurementLayer),this._manipulatorLayer=a.destroyMaybe(this._manipulatorLayer),this._snappingLayer=a.destroyMaybe(this._snappingLayer),this._updatingHandles=a.destroyMaybe(this._updatingHandles),this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}get snappingOptions(){return this.snappingManager.options}get updating(){return this._updatingHandles.updating||this.snappingManager.updating}onActivate(){this._drawActive||0!==this._vertices.length||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0,this._snappingLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1,this._snappingLayer.visible=!1}reset(){this.manipulators.removeAll(),this._resetVertices(),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._draw.reset(),this._drawActive=!1}_getSnappingContext(e){return new V.SnappingContext({elevationInfo:{mode:"on-the-ground",offset:0},pointer:e,editGeometryOperations:new z.EditGeometryOperations(new R.EditGeometry("point",H.createCoordinateHelper(!1,!1,this.view.spatialReference)),O.ViewingMode.Local),visualizer:new q.SnappingVisualizer2D(this._snappingLayer)})}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const{snappingManager:e}=this,t=this._draw.create("polyline",{mode:"click",snappingManager:e});t.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],(e=>this._updateSketch(e.vertices))),t.on("draw-complete",(()=>this._stopSketch()))}_stopSketch(){if(this._vertices.length<3)return this.reset(),void this._startSketch();this.manipulators.forEach((({manipulator:e})=>{e.interactive=!0})),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const{spatialReference:t}=this.view;for(;this._vertices.length>e.length;){const{handle:e,manipulator:t}=this._vertices.pop();e.remove(),this.manipulators.remove(t)}for(let r=this._vertices.length;r<e.length;r++){const[i,s]=e[r],a=new y({x:i,y:s,spatialReference:t}),n=J(a,this.view,this._manipulatorLayer);this.manipulators.add(n);const o=z.EditGeometryOperations.fromGeometry(a,O.ViewingMode.Local);o.on("vertex-update",(e=>{const t=e.vertices.at(0);t&&(this._vertices[r].coord=[t.pos[0],t.pos[1]],this._updateGraphics())}));const l=U.createManipulatorDragEventPipeline(n,((e,t,r,i)=>{const s=this._getSnappingContext(i),{snappingManager:a}=this,n=this._updatingHandles,{snappingStep:l}=I.createSnapDragEventPipelineStep({snappingContext:s,snappingManager:a,updatingHandles:n});t.next(U.screenToMap(this.view)).next((t=>{if("start"===t.action){const r=new y(t.mapStart);e.graphic.geometry=r,o.trySetGeometry(r)}return t})).next(...l).next(U.dragManipulatedObject({operations:o})).next((()=>{e.graphic.geometry=o.data.geometry}))}));this._vertices.push({manipulator:n,coord:[i,s],handle:l})}if(this._vertices.length){const r=this._vertices.length-1,i=this._vertices[r],[s,a]=e[r];i.coord[0]===s&&i.coord[1]===a||(i.coord=[s,a],i.manipulator.graphic.geometry=new y({x:s,y:a,spatialReference:t}));const n=this._drawActive?this._vertices[r].manipulator:null;this.manipulators.forEach((({manipulator:e})=>{e.interactive=null==n||e!==n}))}this._updateGraphics()}_updateGraphics(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=K(this._vertices.map((({coord:e})=>e)),this.view.spatialReference);if(!e)return;const{measurement:t,fillGeometry:i,outlineGeometry:a}=e;this._set("measurement",t);const n=t?N(this.messages,t,this.unit):null;if(this._set("measurementLabel",n),!i&&!a)return;let o,l,c;const{graphics:p}=this._measurementLayer,u=3===p.length,{effectiveTheme:m}=this.view;u?(o=p.at(0),l=p.at(1),c=p.at(2)):(o=new r({symbol:new G({color:s.multiplyOpacity(m.accentColor,.3),outline:null})}),l=new r({symbol:new D({color:m.accentColor,width:2})}),c=new r({symbol:new k({color:m.textColor,font:new x({size:14,family:"sans-serif"}),haloColor:s.multiplyOpacity(s.getContrast(m.textColor,s.BrightnessThreshold.Low),.5),haloSize:2})}),p.removeAll(),p.addMany([o,l,c])),o.geometry=i,l.geometry=a,c.geometry=i?.centroid,c.symbol.text=n?.area??""}},t.__decorate([c.property()],e.AreaMeasurement2DTool.prototype,"_drawActive",void 0),t.__decorate([c.property({readOnly:!0})],e.AreaMeasurement2DTool.prototype,"cursor",null),t.__decorate([c.property({value:!0})],e.AreaMeasurement2DTool.prototype,"editable",null),t.__decorate([c.property({readOnly:!0})],e.AreaMeasurement2DTool.prototype,"measurement",void 0),t.__decorate([c.property({readOnly:!0})],e.AreaMeasurement2DTool.prototype,"measurementLabel",void 0),t.__decorate([c.property()],e.AreaMeasurement2DTool.prototype,"messages",void 0),t.__decorate([c.property({constructOnly:!0})],e.AreaMeasurement2DTool.prototype,"snappingManager",void 0),t.__decorate([c.property()],e.AreaMeasurement2DTool.prototype,"unit",void 0),t.__decorate([c.property()],e.AreaMeasurement2DTool.prototype,"updating",null),t.__decorate([c.property({constructOnly:!0})],e.AreaMeasurement2DTool.prototype,"view",void 0),e.AreaMeasurement2DTool=t.__decorate([h.subclass("esri.widgets.AreaMeasurement2D.AreaMeasurement2DTool")],e.AreaMeasurement2DTool),e.createAreaMeasurementInfo2D=K,e.createAreaMeasurementLabel=N,e.isSupported=function(e){return null!=e},e.loadGeometryOperators=async function(e){(e?.isGeographic&&!A.isSupported(e)||e?.isWebMercator)&&await Promise.all([w.load(),f.load(),b.load()])},Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));