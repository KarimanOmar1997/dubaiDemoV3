// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.33/esri/copyright.txt for details.
//>>built
define(["../../chunks/tslib.es6","../../Graphic","../../core/Accessor","../../core/arrayUtils","../../core/ByteSizeUnit","../../core/Collection","../../core/collectionUtils","../../core/Logger","../../core/LRUCache","../../core/maybe","../../core/memoize","../../core/reactiveUtils","../../core/unitUtils","../../core/accessorSupport/decorators/property","../../core/has","../../core/accessorSupport/decorators/subclass","../../layers/support/ElevationQueryTileCache","../../properties/defaultUnit","./ElevationProfileController","./ElevationProfileLineGround","./elevationProfileLineTypes","./ElevationProfileTool","./support/constants","./support/geometryUtils","./support/ProfileGenerationError","./support/profileUtils","./support/statisticsUtils"],(function(e,t,r,i,o,l,n,s,a,p,u,c,h,d,y,f,_,v,g,m,E,b,P,U,S,C,w){"use strict";let O=class extends r{constructor(e){super(e),this.view=null,this.input=null,this._getEffectiveUnitsMemoized=u.memoize(((e,t)=>({distance:e,elevation:t}))),this.hoveredChartPosition=null,this.uniformChartScaling=!1,this.defaultUnit=null,this.queue=null,this._currentTileCache=null,this.error=null,this._defaultProfileLineGround=new m,this._userUnitOptions=null,this._userUnit=null,e?.profiles||(this.profiles=new l([this._defaultProfileLineGround]))}initialize(){this.addHandles(c.watch((()=>this.view),(e=>{if(null==e)return void s.getLogger(this).warnOnce("no view. Widget will be disabled until a view is provided.");this.removeHandles(T);const t="3d"===e.type?e.resourceController:void 0;this.queue?.destroy(),this.queue=C.createProfileQueue(t?.scheduler);const r=t?.addUpdatingObject(this);r&&this.addHandles(r,T)}),c.syncAndInitial)),this.tool=new b.ElevationProfileTool({viewModel:this}),this._controller=new g.ElevationProfileController({viewModel:this})}destroy(){this._defaultProfileLineGround=p.destroyMaybe(this._defaultProfileLineGround),this._controller=p.destroyMaybe(this._controller),this._currentTileCache=p.destroyMaybe(this._currentTileCache),this.tool=p.destroyMaybe(this.tool),this.queue=p.destroyMaybe(this.queue)}get profiles(){return this._get("profiles")}set profiles(e){const t=this._get("profiles"),r=e??new l;this._set("profiles",n.referenceSetter(r,t))}get state(){const e=this.view;return null!=e&&e.ready?this.tool.state:P.ElevationProfileState.Disabled}get progress(){let e=0,t=0;for(const r of this.visibleProfiles)e++,t+=r.progress;return e>0?t/e:0}set unitOptions(e){this._userUnitOptions=e,this._set("unitOptions",this._filteredOrAllUnits(this._userUnitOptions))}get unitOptions(){return this._filteredOrAllUnits(this._userUnitOptions)}set unit(e){this._userUnit=e?this._findSelectableUnit(e,this._userUnit):null,this.notifyChange("unit")}get unit(){return this._userUnit?(this._userUnit=this._findSelectableUnit(this._userUnit,this.defaultUnit),this._userUnit):this._findSelectableUnit(this.defaultUnit)}get effectiveUnits(){const e=w.getBoundsInMeters(this.visibleProfiles.map((e=>e.result))),t=h.adaptiveLengthUnit(e.maxDistance,"meters",this.unit),r=h.adaptiveVerticalLengthUnit(e.maxElevation,"meters",this.unit);return this._getEffectiveUnitsMemoized(t,r)}get highlightEnabled(){return this.tool.highlightEnabled}set highlightEnabled(e){this.tool.highlightEnabled=e}get hasVertices(){const e=this.input?.geometry;return U.isPolyline(e)&&e.paths.reduce(((e,t)=>e+t.length),0)>0}get hoveredPoints(){return null!=this.input&&this.visible&&this.tool.editable?this.visibleProfiles.map((e=>{const t=e.hoveredPoint;return null!=t?{hoveredPoint:t,color:e.color}:null})).filter(i.isSome):[]}get statistics(){return w.mergeStatistics(this.visibleProfiles.map((e=>e.statistics)))}get chartData(){if(null==this.input)return null;const{effectiveUnits:e,progress:t,statistics:r,visibleProfiles:i,uniformChartScaling:o}=this,l=i.filter((e=>e.hasZ)).map((e=>({id:e.id,type:e.type,title:e.title,color:e.color,samples:e.samples,progress:e.progress,chartFillEnabled:e.chartFillEnabled,chartStrokeWidth:e.chartStrokeWidth,chartStrokeOffsetY:e.chartStrokeOffsetY,viewVisualizationEnabled:e.viewVisualizationEnabled})));return 0===l.length?null:{lines:l,effectiveUnits:e,statistics:r,refined:1===t,dynamicElevationRange:i.some((e=>"view"===e.type)),uniformScaling:o}}get visibleProfiles(){return this.profiles.toArray().filter((e=>e.available&&e.visible))}get minDemResolutions(){const e=[];for(const{minDemResolution:t}of this.visibleProfiles)null!=t&&e.push(t);return e}get minDemResolution(){return i.min(this.minDemResolutions)}get errorState(){const e=this.input?.geometry;if(!U.isValidInputPath(e))return P.ElevationProfileErrorState.NoValidInput;if(null!=this.error){if(S.isProfileGenerationError(this.error))switch(this.error.cause){case S.ProfileGenerationErrorCause.TooComplex:return P.ElevationProfileErrorState.TooComplex;case S.ProfileGenerationErrorCause.InvalidGeometry:return P.ElevationProfileErrorState.InvalidGeometry;case S.ProfileGenerationErrorCause.InvalidElevationInfo:return P.ElevationProfileErrorState.InvalidElevationInfo;case S.ProfileGenerationErrorCause.ElevationQueryError:return P.ElevationProfileErrorState.NoValidInput}return P.ElevationProfileErrorState.UnknownError}return 0===this.visibleProfiles.length?P.ElevationProfileErrorState.NoVisibleProfiles:null==this.chartData&&1===this.progress?P.ElevationProfileErrorState.RefinedButNoChartData:P.ElevationProfileErrorState.None}get tileCache(){this._currentTileCache=p.destroyMaybe(this._currentTileCache);const e=this.view;if(null!=e&&"3d"===e?.type){const t=e.basemapTerrain?.elevationQueryCache;if(null!=t)return t}return null==this._currentTileCache&&(this._currentTileCache=new _.ElevationQueryTileCache(new a.LRUCache(20*o.ByteSizeUnit.MEGABYTES))),this._currentTileCache}get visible(){return this.tool.visible}set visible(e){this.tool.visible=e}get selectAvailable(){for(const e of this.view?.map?.allLayers??[]){if("graphics"===e.type&&!e.internal&&e.graphics.some((e=>"polyline"===e.geometry?.type)))return!0;if("geometryType"in e&&"polyline"===e.geometryType)return!0}return!!this.view?.graphics?.some((e=>"polyline"===e.geometry?.type))}get inputIsSketched(){return this.tool.interaction.isSketchedGraphic(this.input)}get elevationProvider(){const e=this.view;return null!=e&&"3d"===e.type?e.elevationProvider:null}get updating(){const{progress:e}=this,t=!!this.queue?.updating;return e>0&&e<1||t}start(e){this.tool.interaction.start(e)}stop(){this.tool.interaction.stop()}cancel(){this.tool.interaction.cancel()}clear(){this.tool.interaction.clear()}_findSelectableUnit(e,t){const r=this.unitOptions;return null!=e&&r.includes(e)?e:t?this._findSelectableUnit(t):r[0]}_filteredOrAllUnits(e){const t=(null!=e?e:[]).filter((e=>h.measurementLengthUnits.includes(e)));return 0===t.length?h.measurementLengthUnits.slice():t}};e.__decorate([d.property()],O.prototype,"view",void 0),e.__decorate([d.property({type:t})],O.prototype,"input",void 0),e.__decorate([d.property({type:E.ElevationProfileLineCollection,nonNullable:!0})],O.prototype,"profiles",null),e.__decorate([d.property({readOnly:!0})],O.prototype,"state",null),e.__decorate([d.property({readOnly:!0})],O.prototype,"progress",null),e.__decorate([d.property()],O.prototype,"unitOptions",null),e.__decorate([d.property()],O.prototype,"unit",null),e.__decorate([d.property({readOnly:!0})],O.prototype,"effectiveUnits",null),e.__decorate([d.property()],O.prototype,"hoveredChartPosition",void 0),e.__decorate([d.property()],O.prototype,"uniformChartScaling",void 0),e.__decorate([d.property()],O.prototype,"highlightEnabled",null),e.__decorate([d.property({readOnly:!0})],O.prototype,"hoveredPoints",null),e.__decorate([d.property({readOnly:!0})],O.prototype,"statistics",null),e.__decorate([d.property()],O.prototype,"chartData",null),e.__decorate([d.property()],O.prototype,"visibleProfiles",null),e.__decorate([d.property()],O.prototype,"minDemResolutions",null),e.__decorate([d.property({readOnly:!0})],O.prototype,"minDemResolution",null),e.__decorate([d.property({readOnly:!0})],O.prototype,"errorState",null),e.__decorate([d.property(v.defaultUnitPropertyMetadata)],O.prototype,"defaultUnit",void 0),e.__decorate([d.property()],O.prototype,"queue",void 0),e.__decorate([d.property()],O.prototype,"tileCache",null),e.__decorate([d.property()],O.prototype,"tool",void 0),e.__decorate([d.property()],O.prototype,"visible",null),e.__decorate([d.property()],O.prototype,"error",void 0),e.__decorate([d.property()],O.prototype,"selectAvailable",null),e.__decorate([d.property()],O.prototype,"inputIsSketched",null),e.__decorate([d.property()],O.prototype,"elevationProvider",null),e.__decorate([d.property()],O.prototype,"updating",null),e.__decorate([d.property()],O.prototype,"_defaultProfileLineGround",void 0),e.__decorate([d.property()],O.prototype,"_userUnitOptions",void 0),e.__decorate([d.property()],O.prototype,"_controller",void 0),e.__decorate([d.property()],O.prototype,"_userUnit",void 0),O=e.__decorate([f.subclass("esri.widgets.ElevationProfile.ElevationProfileViewModel")],O);const T=Symbol("updating-object");return O}));